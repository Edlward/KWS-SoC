-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity kws is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    data_in_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    data_in_TVALID : IN STD_LOGIC;
    data_in_TREADY : OUT STD_LOGIC;
    data_in_TLAST : IN STD_LOGIC;
    weight_in_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    weight_in_TVALID : IN STD_LOGIC;
    weight_in_TREADY : OUT STD_LOGIC;
    weight_in_TLAST : IN STD_LOGIC;
    control_in_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    control_in_TVALID : IN STD_LOGIC;
    control_in_TREADY : OUT STD_LOGIC;
    control_in_TLAST : IN STD_LOGIC;
    data_out_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    data_out_TVALID : OUT STD_LOGIC;
    data_out_TREADY : IN STD_LOGIC;
    data_out_TLAST : OUT STD_LOGIC );
end;


architecture behav of kws is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "kws,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a200t-fbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=30.606000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=146,HLS_SYN_DSP=326,HLS_SYN_FF=53486,HLS_SYN_LUT=75205,HLS_VERSION=2019_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp3_stage0 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state78 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state79 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state80 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state81 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state82 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state83 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state84 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state85 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state86 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state87 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state88 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state89 : STD_LOGIC_VECTOR (85 downto 0) := "00000000001000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state90 : STD_LOGIC_VECTOR (85 downto 0) := "00000000010000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state91 : STD_LOGIC_VECTOR (85 downto 0) := "00000000100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state92 : STD_LOGIC_VECTOR (85 downto 0) := "00000001000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state93 : STD_LOGIC_VECTOR (85 downto 0) := "00000010000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state94 : STD_LOGIC_VECTOR (85 downto 0) := "00000100000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state95 : STD_LOGIC_VECTOR (85 downto 0) := "00001000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state96 : STD_LOGIC_VECTOR (85 downto 0) := "00010000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage0 : STD_LOGIC_VECTOR (85 downto 0) := "00100000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state99 : STD_LOGIC_VECTOR (85 downto 0) := "01000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state100 : STD_LOGIC_VECTOR (85 downto 0) := "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_4D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001101";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_52 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010010";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_53 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv12_6E0 : STD_LOGIC_VECTOR (11 downto 0) := "011011100000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv5_A : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv13_D20 : STD_LOGIC_VECTOR (12 downto 0) := "0110100100000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv6_14 : STD_LOGIC_VECTOR (5 downto 0) := "010100";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv32_38000000 : STD_LOGIC_VECTOR (31 downto 0) := "00111000000000000000000000000000";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_4A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv11_6E0 : STD_LOGIC_VECTOR (10 downto 0) := "11011100000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv12_C80 : STD_LOGIC_VECTOR (11 downto 0) := "110010000000";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv9_140 : STD_LOGIC_VECTOR (8 downto 0) := "101000000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv12_D20 : STD_LOGIC_VECTOR (11 downto 0) := "110100100000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv13_1F40 : STD_LOGIC_VECTOR (12 downto 0) := "1111101000000";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv14_2440 : STD_LOGIC_VECTOR (13 downto 0) := "10010001000000";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_31 : STD_LOGIC_VECTOR (5 downto 0) := "110001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv14_3D40 : STD_LOGIC_VECTOR (13 downto 0) := "11110101000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_lv32_4C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001100";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv32_55 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010101";

    signal ap_rst_n_inv : STD_LOGIC;
    signal threshold : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal cosines_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal cosines_0_ce0 : STD_LOGIC;
    signal cosines_0_we0 : STD_LOGIC;
    signal cosines_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal cosines_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal cosines_1_ce0 : STD_LOGIC;
    signal cosines_1_we0 : STD_LOGIC;
    signal cosines_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal cosines_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal cosines_2_ce0 : STD_LOGIC;
    signal cosines_2_we0 : STD_LOGIC;
    signal cosines_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal cosines_3_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal cosines_3_ce0 : STD_LOGIC;
    signal cosines_3_we0 : STD_LOGIC;
    signal cosines_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal cosines_4_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal cosines_4_ce0 : STD_LOGIC;
    signal cosines_4_we0 : STD_LOGIC;
    signal cosines_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal cosines_5_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal cosines_5_ce0 : STD_LOGIC;
    signal cosines_5_we0 : STD_LOGIC;
    signal cosines_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal cosines_6_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal cosines_6_ce0 : STD_LOGIC;
    signal cosines_6_we0 : STD_LOGIC;
    signal cosines_6_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal cosines_7_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal cosines_7_ce0 : STD_LOGIC;
    signal cosines_7_we0 : STD_LOGIC;
    signal cosines_7_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal cosines_8_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal cosines_8_ce0 : STD_LOGIC;
    signal cosines_8_we0 : STD_LOGIC;
    signal cosines_8_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal cosines_9_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal cosines_9_ce0 : STD_LOGIC;
    signal cosines_9_we0 : STD_LOGIC;
    signal cosines_9_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal cosines_10_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal cosines_10_ce0 : STD_LOGIC;
    signal cosines_10_we0 : STD_LOGIC;
    signal cosines_10_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal cosines_11_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal cosines_11_ce0 : STD_LOGIC;
    signal cosines_11_we0 : STD_LOGIC;
    signal cosines_11_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal cosines_12_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal cosines_12_ce0 : STD_LOGIC;
    signal cosines_12_we0 : STD_LOGIC;
    signal cosines_12_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal cosines_13_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal cosines_13_ce0 : STD_LOGIC;
    signal cosines_13_we0 : STD_LOGIC;
    signal cosines_13_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal cosines_14_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal cosines_14_ce0 : STD_LOGIC;
    signal cosines_14_we0 : STD_LOGIC;
    signal cosines_14_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal cosines_15_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal cosines_15_ce0 : STD_LOGIC;
    signal cosines_15_we0 : STD_LOGIC;
    signal cosines_15_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal cosines_16_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal cosines_16_ce0 : STD_LOGIC;
    signal cosines_16_we0 : STD_LOGIC;
    signal cosines_16_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal cosines_17_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal cosines_17_ce0 : STD_LOGIC;
    signal cosines_17_we0 : STD_LOGIC;
    signal cosines_17_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal cosines_18_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal cosines_18_ce0 : STD_LOGIC;
    signal cosines_18_we0 : STD_LOGIC;
    signal cosines_18_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal cosines_19_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal cosines_19_ce0 : STD_LOGIC;
    signal cosines_19_we0 : STD_LOGIC;
    signal cosines_19_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_bias_scale_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_bias_scale_ce0 : STD_LOGIC;
    signal weight_bias_scale_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_bias_scale_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_bias_scale_ce1 : STD_LOGIC;
    signal weight_bias_scale_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_scale_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_scale_ce0 : STD_LOGIC;
    signal tmp_scale_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_scale_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_scale_ce1 : STD_LOGIC;
    signal tmp_scale_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal pw_weight1_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal pw_weight1_V_ce0 : STD_LOGIC;
    signal pw_weight1_V_we0 : STD_LOGIC;
    signal pw_weight1_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal pw_weight1_V_ce1 : STD_LOGIC;
    signal pw_weight1_V_we1 : STD_LOGIC;
    signal bn_bias1_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal bn_bias1_V_ce0 : STD_LOGIC;
    signal bn_bias1_V_we0 : STD_LOGIC;
    signal bn_bias1_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal bn_bias1_V_ce1 : STD_LOGIC;
    signal bn_bias1_V_we1 : STD_LOGIC;
    signal weights_ru_V_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal weights_ru_V_ce0 : STD_LOGIC;
    signal weights_ru_V_we0 : STD_LOGIC;
    signal weights_ru_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal weights_rw_V_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal weights_rw_V_ce0 : STD_LOGIC;
    signal weights_rw_V_we0 : STD_LOGIC;
    signal weights_rw_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal bias_r_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal bias_r_V_ce0 : STD_LOGIC;
    signal bias_r_V_we0 : STD_LOGIC;
    signal bias_r_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal weights_zu_V_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal weights_zu_V_ce0 : STD_LOGIC;
    signal weights_zu_V_we0 : STD_LOGIC;
    signal weights_zu_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal weights_zw_V_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal weights_zw_V_ce0 : STD_LOGIC;
    signal weights_zw_V_we0 : STD_LOGIC;
    signal weights_zw_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal bias_z_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal bias_z_V_ce0 : STD_LOGIC;
    signal bias_z_V_we0 : STD_LOGIC;
    signal bias_z_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal bias_z_V_ce1 : STD_LOGIC;
    signal bias_z_V_we1 : STD_LOGIC;
    signal weights_hu_V_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal weights_hu_V_ce0 : STD_LOGIC;
    signal weights_hu_V_we0 : STD_LOGIC;
    signal weights_hu_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal weights_hw_V_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal weights_hw_V_ce0 : STD_LOGIC;
    signal weights_hw_V_we0 : STD_LOGIC;
    signal weights_hw_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal bias_h_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal bias_h_V_ce0 : STD_LOGIC;
    signal bias_h_V_we0 : STD_LOGIC;
    signal bias_h_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal bias_h_V_ce1 : STD_LOGIC;
    signal bias_h_V_we1 : STD_LOGIC;
    signal fc_weights1_V_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal fc_weights1_V_ce0 : STD_LOGIC;
    signal fc_weights1_V_we0 : STD_LOGIC;
    signal fc_weights1_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal fc_bias1_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal fc_bias1_V_ce0 : STD_LOGIC;
    signal fc_bias1_V_we0 : STD_LOGIC;
    signal fc_bias1_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal fc_bias1_V_ce1 : STD_LOGIC;
    signal fc_bias1_V_we1 : STD_LOGIC;
    signal fc_weights2_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fc_weights2_V_ce0 : STD_LOGIC;
    signal fc_weights2_V_we0 : STD_LOGIC;
    signal fc_weights2_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal fc_bias2_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal fc_bias2_V_ce0 : STD_LOGIC;
    signal fc_bias2_V_we0 : STD_LOGIC;
    signal fc_bias2_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal fc_bias2_V_ce1 : STD_LOGIC;
    signal fc_bias2_V_we1 : STD_LOGIC;
    signal dw_weight1_V_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal dw_weight1_V_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal dw_weight1_V_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal indices_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal indices_ce0 : STD_LOGIC;
    signal indices_we0 : STD_LOGIC;
    signal indices_d0 : STD_LOGIC_VECTOR (12 downto 0);
    signal indices_q0 : STD_LOGIC_VECTOR (12 downto 0);
    signal signal_in_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal signal_in_0_ce0 : STD_LOGIC;
    signal signal_in_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal signal_in_0_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal signal_in_0_ce1 : STD_LOGIC;
    signal signal_in_0_we1 : STD_LOGIC;
    signal signal_in_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal signal_in_1_ce0 : STD_LOGIC;
    signal signal_in_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal signal_in_1_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal signal_in_1_ce1 : STD_LOGIC;
    signal signal_in_1_we1 : STD_LOGIC;
    signal signal_in_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal signal_in_2_ce0 : STD_LOGIC;
    signal signal_in_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal signal_in_2_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal signal_in_2_ce1 : STD_LOGIC;
    signal signal_in_2_we1 : STD_LOGIC;
    signal signal_in_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal signal_in_3_ce0 : STD_LOGIC;
    signal signal_in_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal signal_in_3_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal signal_in_3_ce1 : STD_LOGIC;
    signal signal_in_3_we1 : STD_LOGIC;
    signal signal_in_4_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal signal_in_4_ce0 : STD_LOGIC;
    signal signal_in_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal signal_in_4_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal signal_in_4_ce1 : STD_LOGIC;
    signal signal_in_4_we1 : STD_LOGIC;
    signal signal_in_5_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal signal_in_5_ce0 : STD_LOGIC;
    signal signal_in_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal signal_in_5_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal signal_in_5_ce1 : STD_LOGIC;
    signal signal_in_5_we1 : STD_LOGIC;
    signal signal_in_6_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal signal_in_6_ce0 : STD_LOGIC;
    signal signal_in_6_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal signal_in_6_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal signal_in_6_ce1 : STD_LOGIC;
    signal signal_in_6_we1 : STD_LOGIC;
    signal signal_in_7_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal signal_in_7_ce0 : STD_LOGIC;
    signal signal_in_7_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal signal_in_7_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal signal_in_7_ce1 : STD_LOGIC;
    signal signal_in_7_we1 : STD_LOGIC;
    signal frames_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal frames_ce0 : STD_LOGIC;
    signal frames_we0 : STD_LOGIC;
    signal frames_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal frames_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal frames_ce1 : STD_LOGIC;
    signal frames_we1 : STD_LOGIC;
    signal spectrogram_0_ce0 : STD_LOGIC;
    signal spectrogram_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal spectrogram_0_ce1 : STD_LOGIC;
    signal spectrogram_0_we1 : STD_LOGIC;
    signal spectrogram_1_ce0 : STD_LOGIC;
    signal spectrogram_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal spectrogram_1_ce1 : STD_LOGIC;
    signal spectrogram_1_we1 : STD_LOGIC;
    signal spectrogram_2_ce0 : STD_LOGIC;
    signal spectrogram_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal spectrogram_2_ce1 : STD_LOGIC;
    signal spectrogram_2_we1 : STD_LOGIC;
    signal spectrogram_3_ce0 : STD_LOGIC;
    signal spectrogram_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal spectrogram_3_ce1 : STD_LOGIC;
    signal spectrogram_3_we1 : STD_LOGIC;
    signal fbank_out_0_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal fbank_out_0_ce0 : STD_LOGIC;
    signal fbank_out_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal fbank_out_0_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal fbank_out_0_ce1 : STD_LOGIC;
    signal fbank_out_0_we1 : STD_LOGIC;
    signal fbank_out_0_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal fbank_out_0_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal fbank_out_1_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal fbank_out_1_ce0 : STD_LOGIC;
    signal fbank_out_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal fbank_out_1_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal fbank_out_1_ce1 : STD_LOGIC;
    signal fbank_out_1_we1 : STD_LOGIC;
    signal fbank_out_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal fbank_out_1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal fbank_out_2_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal fbank_out_2_ce0 : STD_LOGIC;
    signal fbank_out_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal fbank_out_2_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal fbank_out_2_ce1 : STD_LOGIC;
    signal fbank_out_2_we1 : STD_LOGIC;
    signal fbank_out_2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal fbank_out_2_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal fbank_out_3_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal fbank_out_3_ce0 : STD_LOGIC;
    signal fbank_out_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal fbank_out_3_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal fbank_out_3_ce1 : STD_LOGIC;
    signal fbank_out_3_we1 : STD_LOGIC;
    signal fbank_out_3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal fbank_out_3_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dct_out_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal dct_out_0_ce0 : STD_LOGIC;
    signal dct_out_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dct_out_0_ce1 : STD_LOGIC;
    signal dct_out_0_we1 : STD_LOGIC;
    signal dct_out_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal dct_out_1_ce0 : STD_LOGIC;
    signal dct_out_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dct_out_1_ce1 : STD_LOGIC;
    signal dct_out_1_we1 : STD_LOGIC;
    signal dct_out_2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal dct_out_2_ce0 : STD_LOGIC;
    signal dct_out_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dct_out_2_ce1 : STD_LOGIC;
    signal dct_out_2_we1 : STD_LOGIC;
    signal dct_out_3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal dct_out_3_ce0 : STD_LOGIC;
    signal dct_out_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dct_out_3_ce1 : STD_LOGIC;
    signal dct_out_3_we1 : STD_LOGIC;
    signal data_in_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state83 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state83 : signal is "none";
    signal icmp_ln167_fu_3215_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln194_fu_2289_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal icmp_ln212_fu_2491_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal icmp_ln241_fu_2894_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal control_in_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten6_reg_1501 : STD_LOGIC_VECTOR (11 downto 0);
    signal i4_0_reg_1512 : STD_LOGIC_VECTOR (3 downto 0);
    signal j5_0_reg_1523 : STD_LOGIC_VECTOR (8 downto 0);
    signal indvar_flatten13_reg_1546 : STD_LOGIC_VECTOR (11 downto 0);
    signal i8_0_reg_1557 : STD_LOGIC_VECTOR (4 downto 0);
    signal j9_0_reg_1568 : STD_LOGIC_VECTOR (8 downto 0);
    signal indvar_flatten20_reg_1660 : STD_LOGIC_VECTOR (13 downto 0);
    signal i14_0_reg_1671 : STD_LOGIC_VECTOR (5 downto 0);
    signal j15_0_reg_1682 : STD_LOGIC_VECTOR (8 downto 0);
    signal j19_0_reg_1705 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten_reg_1767 : STD_LOGIC_VECTOR (13 downto 0);
    signal i1_0_reg_1778 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_0_reg_1789 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_state2 : BOOLEAN;
    signal ap_block_state15 : BOOLEAN;
    signal ap_block_state43 : BOOLEAN;
    signal ap_block_state83 : BOOLEAN;
    signal grp_fu_2202_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_2235 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal ap_CS_fsm_state86 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state86 : signal is "none";
    signal ap_CS_fsm_state91 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state91 : signal is "none";
    signal grp_fu_2196_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal ap_CS_fsm_state96 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state96 : signal is "none";
    signal reg_2256 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state69 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state69 : signal is "none";
    signal ap_CS_fsm_state71 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state71 : signal is "none";
    signal ap_CS_fsm_state73 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state73 : signal is "none";
    signal keepout_V_full_n : STD_LOGIC;
    signal keepout_V_write : STD_LOGIC;
    signal ap_CS_fsm_state76 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state76 : signal is "none";
    signal ap_CS_fsm_state78 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state78 : signal is "none";
    signal reg_2266 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state72 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state72 : signal is "none";
    signal grp_pw_layer1_fu_1999_ap_ready : STD_LOGIC;
    signal grp_pw_layer1_fu_1999_ap_done : STD_LOGIC;
    signal threshold_load_reg_3474 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_29_fu_2295_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_29_reg_3485 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln198_fu_2301_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln198_reg_3490 : STD_LOGIC_VECTOR (2 downto 0);
    signal signal_in_0_addr_reg_3494 : STD_LOGIC_VECTOR (9 downto 0);
    signal signal_in_1_addr_reg_3499 : STD_LOGIC_VECTOR (9 downto 0);
    signal signal_in_2_addr_reg_3504 : STD_LOGIC_VECTOR (9 downto 0);
    signal signal_in_3_addr_reg_3509 : STD_LOGIC_VECTOR (9 downto 0);
    signal signal_in_4_addr_reg_3514 : STD_LOGIC_VECTOR (9 downto 0);
    signal signal_in_5_addr_reg_3519 : STD_LOGIC_VECTOR (9 downto 0);
    signal signal_in_6_addr_reg_3524 : STD_LOGIC_VECTOR (9 downto 0);
    signal signal_in_7_addr_reg_3529 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln200_fu_2327_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln200_reg_3534 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state8_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln200_reg_3534_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln200_reg_3534_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln200_reg_3534_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln200_fu_2333_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal select_ln205_fu_2351_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln205_reg_3543 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln205_1_fu_2359_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln205_1_reg_3548 : STD_LOGIC_VECTOR (3 downto 0);
    signal j_9_fu_2367_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln205_5_fu_2410_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln205_5_reg_3560 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln205_5_reg_3560_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln205_5_reg_3560_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln205_fu_2415_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln205_reg_3570 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_280_fu_2434_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_280_reg_3615 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln238_1_fu_2485_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln238_1_reg_3620 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal trunc_ln216_fu_2497_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln216_reg_3629 : STD_LOGIC_VECTOR (2 downto 0);
    signal signal_in_0_addr_2_reg_3633 : STD_LOGIC_VECTOR (9 downto 0);
    signal signal_in_1_addr_2_reg_3638 : STD_LOGIC_VECTOR (9 downto 0);
    signal signal_in_2_addr_2_reg_3643 : STD_LOGIC_VECTOR (9 downto 0);
    signal signal_in_3_addr_2_reg_3648 : STD_LOGIC_VECTOR (9 downto 0);
    signal signal_in_4_addr_2_reg_3653 : STD_LOGIC_VECTOR (9 downto 0);
    signal signal_in_5_addr_2_reg_3658 : STD_LOGIC_VECTOR (9 downto 0);
    signal signal_in_6_addr_2_reg_3663 : STD_LOGIC_VECTOR (9 downto 0);
    signal signal_in_7_addr_2_reg_3668 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_32_fu_2523_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal icmp_ln218_fu_2529_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln218_reg_3678 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state21_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state22_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state23_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state24_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_state25_pp1_stage0_iter4 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal icmp_ln218_reg_3678_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln218_reg_3678_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln218_reg_3678_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln218_fu_2535_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal select_ln223_fu_2553_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln223_reg_3687 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln223_1_fu_2561_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln223_1_reg_3692 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_10_fu_2569_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln223_5_fu_2612_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln223_5_reg_3704 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln223_5_reg_3704_pp1_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln223_5_reg_3704_pp1_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln223_fu_2617_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln223_reg_3714 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_281_fu_2636_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_281_reg_3759 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln233_fu_2688_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln233_reg_3767 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal icmp_ln229_fu_2658_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_11_fu_2700_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_11_reg_3775 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal icmp_ln231_fu_2694_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_34_fu_2720_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal frames_load_reg_3790 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal i_33_fu_2779_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_33_reg_3802 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal add_ln265_1_fu_2819_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln265_1_reg_3807 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln261_fu_2773_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln265_2_fu_2849_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln265_2_reg_3812 : STD_LOGIC_VECTOR (12 downto 0);
    signal j_13_fu_2861_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_13_reg_3820 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal icmp_ln263_fu_2855_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln265_4_fu_2885_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln265_4_reg_3830 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln245_fu_2900_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln245_reg_3839 : STD_LOGIC_VECTOR (2 downto 0);
    signal signal_in_0_addr_3_reg_3843 : STD_LOGIC_VECTOR (9 downto 0);
    signal signal_in_1_addr_3_reg_3848 : STD_LOGIC_VECTOR (9 downto 0);
    signal signal_in_2_addr_3_reg_3853 : STD_LOGIC_VECTOR (9 downto 0);
    signal signal_in_3_addr_3_reg_3858 : STD_LOGIC_VECTOR (9 downto 0);
    signal signal_in_4_addr_3_reg_3863 : STD_LOGIC_VECTOR (9 downto 0);
    signal signal_in_5_addr_3_reg_3868 : STD_LOGIC_VECTOR (9 downto 0);
    signal signal_in_6_addr_3_reg_3873 : STD_LOGIC_VECTOR (9 downto 0);
    signal signal_in_7_addr_3_reg_3878 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_37_fu_2926_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal icmp_ln247_fu_2932_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln247_reg_3888 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_block_state49_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state50_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_state51_pp2_stage0_iter2 : BOOLEAN;
    signal ap_block_state52_pp2_stage0_iter3 : BOOLEAN;
    signal ap_block_state53_pp2_stage0_iter4 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal icmp_ln247_reg_3888_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln247_reg_3888_pp2_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln247_reg_3888_pp2_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln247_fu_2938_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal select_ln252_fu_2956_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln252_reg_3897 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln252_1_fu_2964_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln252_1_reg_3902 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_12_fu_2972_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln252_5_fu_3015_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln252_5_reg_3914 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln252_5_reg_3914_pp2_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln252_5_reg_3914_pp2_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln252_fu_3020_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln252_reg_3924 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_284_fu_3039_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_284_reg_3969 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln282_fu_3061_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state62 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state62 : signal is "none";
    signal i_38_fu_3067_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_38_reg_3978 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln288_fu_3089_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln288_reg_3983 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln285_fu_3103_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln285_reg_3988 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln285_fu_3107_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln285_reg_3993 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp3_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage0 : signal is "none";
    signal ap_block_state63_pp3_stage0_iter0 : BOOLEAN;
    signal pre_out_V_full_n : STD_LOGIC;
    signal pre_out_V_write : STD_LOGIC;
    signal ap_block_state64_pp3_stage0_iter1 : BOOLEAN;
    signal ap_enable_reg_pp3_iter1 : STD_LOGIC := '0';
    signal ap_block_pp3_stage0_11001 : BOOLEAN;
    signal j_14_fu_3113_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_enable_reg_pp3_iter0 : STD_LOGIC := '0';
    signal trunc_ln288_fu_3119_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln288_reg_4002 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_39_fu_3175_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state66 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state66 : signal is "none";
    signal pre_out_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal pre_out_V_empty_n : STD_LOGIC;
    signal pre_out_V_read : STD_LOGIC;
    signal icmp_ln22_fu_3169_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal data2dw1_V_full_n : STD_LOGIC;
    signal data2dw1_V_write : STD_LOGIC;
    signal keep_in_V_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal keep_in_V_empty_n : STD_LOGIC;
    signal keep_in_V_read : STD_LOGIC;
    signal ap_block_state66 : BOOLEAN;
    signal tmp_103_reg_4037 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state67 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state67 : signal is "none";
    signal tmp_scale_load_3_reg_4047 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2207_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp2_reg_4052 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_scale_load_5_reg_4057 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_scale_load_6_reg_4062 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_scale_load_7_reg_4067 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_bias_scale_lo_3_reg_4072 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state74 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state74 : signal is "none";
    signal weight_bias_scale_lo_4_reg_4077 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_scale_load_8_reg_4082 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_scale_load_9_reg_4087 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_27_fu_3221_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal i_27_reg_4096 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln171_fu_3227_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln171_reg_4101 : STD_LOGIC_VECTOR (2 downto 0);
    signal signal_in_0_addr_1_reg_4105 : STD_LOGIC_VECTOR (9 downto 0);
    signal signal_in_1_addr_1_reg_4110 : STD_LOGIC_VECTOR (9 downto 0);
    signal signal_in_2_addr_1_reg_4115 : STD_LOGIC_VECTOR (9 downto 0);
    signal signal_in_3_addr_1_reg_4120 : STD_LOGIC_VECTOR (9 downto 0);
    signal signal_in_4_addr_1_reg_4125 : STD_LOGIC_VECTOR (9 downto 0);
    signal signal_in_5_addr_1_reg_4130 : STD_LOGIC_VECTOR (9 downto 0);
    signal signal_in_6_addr_1_reg_4135 : STD_LOGIC_VECTOR (9 downto 0);
    signal signal_in_7_addr_1_reg_4140 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln178_fu_3259_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln178_reg_4145 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp4_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp4_stage0 : signal is "none";
    signal ap_block_state97_pp4_stage0_iter0 : BOOLEAN;
    signal ap_block_state98_pp4_stage0_iter1 : BOOLEAN;
    signal ap_block_pp4_stage0_11001 : BOOLEAN;
    signal add_ln178_fu_3265_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_enable_reg_pp4_iter0 : STD_LOGIC := '0';
    signal select_ln178_fu_3283_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln178_reg_4154 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln178_1_fu_3291_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln178_1_reg_4160 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_fu_3299_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state8 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state21 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state49 : STD_LOGIC;
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter4 : STD_LOGIC := '0';
    signal ap_block_pp3_stage0_subdone : BOOLEAN;
    signal ap_condition_pp3_exit_iter0_state63 : STD_LOGIC;
    signal ap_block_pp4_stage0_subdone : BOOLEAN;
    signal ap_condition_pp4_exit_iter0_state97 : STD_LOGIC;
    signal ap_enable_reg_pp4_iter1 : STD_LOGIC := '0';
    signal grp_grucell_fu_1800_ap_start : STD_LOGIC;
    signal grp_grucell_fu_1800_ap_done : STD_LOGIC;
    signal grp_grucell_fu_1800_ap_idle : STD_LOGIC;
    signal grp_grucell_fu_1800_ap_ready : STD_LOGIC;
    signal grp_grucell_fu_1800_in_stream_V_V_read : STD_LOGIC;
    signal grp_grucell_fu_1800_out_stream_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_grucell_fu_1800_out_stream_V_V_write : STD_LOGIC;
    signal grp_grucell_fu_1800_keep_stream_V_read : STD_LOGIC;
    signal grp_grucell_fu_1800_pw12gru_scale_V_read : STD_LOGIC;
    signal grp_grucell_fu_1800_gru2fc_scale_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_grucell_fu_1800_gru2fc_scale_V_write : STD_LOGIC;
    signal grp_grucell_fu_1800_weights_zu_V_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_grucell_fu_1800_weights_zu_V_ce0 : STD_LOGIC;
    signal grp_grucell_fu_1800_weights_ru_V_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_grucell_fu_1800_weights_ru_V_ce0 : STD_LOGIC;
    signal grp_grucell_fu_1800_weights_zw_V_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_grucell_fu_1800_weights_zw_V_ce0 : STD_LOGIC;
    signal grp_grucell_fu_1800_weights_rw_V_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_grucell_fu_1800_weights_rw_V_ce0 : STD_LOGIC;
    signal grp_grucell_fu_1800_bias_z_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_grucell_fu_1800_bias_z_V_ce0 : STD_LOGIC;
    signal grp_grucell_fu_1800_bias_r_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_grucell_fu_1800_bias_r_V_ce0 : STD_LOGIC;
    signal grp_grucell_fu_1800_weights_hw_V_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_grucell_fu_1800_weights_hw_V_ce0 : STD_LOGIC;
    signal grp_grucell_fu_1800_weights_hu_V_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_grucell_fu_1800_weights_hu_V_ce0 : STD_LOGIC;
    signal grp_grucell_fu_1800_bias_h_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_grucell_fu_1800_bias_h_V_ce0 : STD_LOGIC;
    signal grp_mfcc_dct_fu_1859_ap_start : STD_LOGIC;
    signal grp_mfcc_dct_fu_1859_ap_done : STD_LOGIC;
    signal grp_mfcc_dct_fu_1859_ap_idle : STD_LOGIC;
    signal grp_mfcc_dct_fu_1859_ap_ready : STD_LOGIC;
    signal grp_mfcc_dct_fu_1859_dct_out_0_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_mfcc_dct_fu_1859_dct_out_0_ce1 : STD_LOGIC;
    signal grp_mfcc_dct_fu_1859_dct_out_0_we1 : STD_LOGIC;
    signal grp_mfcc_dct_fu_1859_dct_out_0_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mfcc_dct_fu_1859_dct_out_1_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_mfcc_dct_fu_1859_dct_out_1_ce1 : STD_LOGIC;
    signal grp_mfcc_dct_fu_1859_dct_out_1_we1 : STD_LOGIC;
    signal grp_mfcc_dct_fu_1859_dct_out_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mfcc_dct_fu_1859_dct_out_2_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mfcc_dct_fu_1859_dct_out_2_ce1 : STD_LOGIC;
    signal grp_mfcc_dct_fu_1859_dct_out_2_we1 : STD_LOGIC;
    signal grp_mfcc_dct_fu_1859_dct_out_2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mfcc_dct_fu_1859_dct_out_3_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mfcc_dct_fu_1859_dct_out_3_ce1 : STD_LOGIC;
    signal grp_mfcc_dct_fu_1859_dct_out_3_we1 : STD_LOGIC;
    signal grp_mfcc_dct_fu_1859_dct_out_3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mfcc_dct_fu_1859_cosines_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_mfcc_dct_fu_1859_cosines_0_ce0 : STD_LOGIC;
    signal grp_mfcc_dct_fu_1859_fbank_out_0_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_mfcc_dct_fu_1859_fbank_out_0_ce0 : STD_LOGIC;
    signal grp_mfcc_dct_fu_1859_fbank_out_0_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_mfcc_dct_fu_1859_fbank_out_0_ce1 : STD_LOGIC;
    signal grp_mfcc_dct_fu_1859_cosines_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_mfcc_dct_fu_1859_cosines_1_ce0 : STD_LOGIC;
    signal grp_mfcc_dct_fu_1859_fbank_out_1_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_mfcc_dct_fu_1859_fbank_out_1_ce0 : STD_LOGIC;
    signal grp_mfcc_dct_fu_1859_fbank_out_1_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_mfcc_dct_fu_1859_fbank_out_1_ce1 : STD_LOGIC;
    signal grp_mfcc_dct_fu_1859_cosines_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_mfcc_dct_fu_1859_cosines_2_ce0 : STD_LOGIC;
    signal grp_mfcc_dct_fu_1859_fbank_out_2_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_mfcc_dct_fu_1859_fbank_out_2_ce0 : STD_LOGIC;
    signal grp_mfcc_dct_fu_1859_fbank_out_2_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_mfcc_dct_fu_1859_fbank_out_2_ce1 : STD_LOGIC;
    signal grp_mfcc_dct_fu_1859_cosines_3_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_mfcc_dct_fu_1859_cosines_3_ce0 : STD_LOGIC;
    signal grp_mfcc_dct_fu_1859_fbank_out_3_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_mfcc_dct_fu_1859_fbank_out_3_ce0 : STD_LOGIC;
    signal grp_mfcc_dct_fu_1859_fbank_out_3_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_mfcc_dct_fu_1859_fbank_out_3_ce1 : STD_LOGIC;
    signal grp_mfcc_dct_fu_1859_cosines_4_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_mfcc_dct_fu_1859_cosines_4_ce0 : STD_LOGIC;
    signal grp_mfcc_dct_fu_1859_cosines_5_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_mfcc_dct_fu_1859_cosines_5_ce0 : STD_LOGIC;
    signal grp_mfcc_dct_fu_1859_cosines_6_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_mfcc_dct_fu_1859_cosines_6_ce0 : STD_LOGIC;
    signal grp_mfcc_dct_fu_1859_cosines_7_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_mfcc_dct_fu_1859_cosines_7_ce0 : STD_LOGIC;
    signal grp_mfcc_dct_fu_1859_cosines_8_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_mfcc_dct_fu_1859_cosines_8_ce0 : STD_LOGIC;
    signal grp_mfcc_dct_fu_1859_cosines_9_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_mfcc_dct_fu_1859_cosines_9_ce0 : STD_LOGIC;
    signal grp_mfcc_dct_fu_1859_cosines_10_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_mfcc_dct_fu_1859_cosines_10_ce0 : STD_LOGIC;
    signal grp_mfcc_dct_fu_1859_cosines_11_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_mfcc_dct_fu_1859_cosines_11_ce0 : STD_LOGIC;
    signal grp_mfcc_dct_fu_1859_cosines_12_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_mfcc_dct_fu_1859_cosines_12_ce0 : STD_LOGIC;
    signal grp_mfcc_dct_fu_1859_cosines_13_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_mfcc_dct_fu_1859_cosines_13_ce0 : STD_LOGIC;
    signal grp_mfcc_dct_fu_1859_cosines_14_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_mfcc_dct_fu_1859_cosines_14_ce0 : STD_LOGIC;
    signal grp_mfcc_dct_fu_1859_cosines_15_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_mfcc_dct_fu_1859_cosines_15_ce0 : STD_LOGIC;
    signal grp_mfcc_dct_fu_1859_cosines_16_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_mfcc_dct_fu_1859_cosines_16_ce0 : STD_LOGIC;
    signal grp_mfcc_dct_fu_1859_cosines_17_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_mfcc_dct_fu_1859_cosines_17_ce0 : STD_LOGIC;
    signal grp_mfcc_dct_fu_1859_cosines_18_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_mfcc_dct_fu_1859_cosines_18_ce0 : STD_LOGIC;
    signal grp_mfcc_dct_fu_1859_cosines_19_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_mfcc_dct_fu_1859_cosines_19_ce0 : STD_LOGIC;
    signal grp_calc_stft_fu_1919_ap_start : STD_LOGIC;
    signal grp_calc_stft_fu_1919_ap_done : STD_LOGIC;
    signal grp_calc_stft_fu_1919_ap_idle : STD_LOGIC;
    signal grp_calc_stft_fu_1919_ap_ready : STD_LOGIC;
    signal grp_calc_stft_fu_1919_frames_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_calc_stft_fu_1919_frames_ce0 : STD_LOGIC;
    signal grp_calc_stft_fu_1919_frames_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_calc_stft_fu_1919_frames_ce1 : STD_LOGIC;
    signal grp_calc_stft_fu_1919_frames_we1 : STD_LOGIC;
    signal grp_calc_stft_fu_1919_frames_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_calc_stft_fu_1919_spectrogram_0_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calc_stft_fu_1919_spectrogram_0_ce1 : STD_LOGIC;
    signal grp_calc_stft_fu_1919_spectrogram_0_we1 : STD_LOGIC;
    signal grp_calc_stft_fu_1919_spectrogram_0_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_calc_stft_fu_1919_spectrogram_1_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calc_stft_fu_1919_spectrogram_1_ce1 : STD_LOGIC;
    signal grp_calc_stft_fu_1919_spectrogram_1_we1 : STD_LOGIC;
    signal grp_calc_stft_fu_1919_spectrogram_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_calc_stft_fu_1919_spectrogram_2_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calc_stft_fu_1919_spectrogram_2_ce1 : STD_LOGIC;
    signal grp_calc_stft_fu_1919_spectrogram_2_we1 : STD_LOGIC;
    signal grp_calc_stft_fu_1919_spectrogram_2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_calc_stft_fu_1919_spectrogram_3_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_calc_stft_fu_1919_spectrogram_3_ce1 : STD_LOGIC;
    signal grp_calc_stft_fu_1919_spectrogram_3_we1 : STD_LOGIC;
    signal grp_calc_stft_fu_1919_spectrogram_3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_calc_stft_fu_1919_cosines_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_calc_stft_fu_1919_cosines_0_ce0 : STD_LOGIC;
    signal grp_calc_stft_fu_1919_cosines_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_calc_stft_fu_1919_cosines_1_ce0 : STD_LOGIC;
    signal grp_calc_stft_fu_1919_cosines_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_calc_stft_fu_1919_cosines_2_ce0 : STD_LOGIC;
    signal grp_calc_stft_fu_1919_cosines_3_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_calc_stft_fu_1919_cosines_3_ce0 : STD_LOGIC;
    signal grp_calc_stft_fu_1919_cosines_4_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_calc_stft_fu_1919_cosines_4_ce0 : STD_LOGIC;
    signal grp_calc_stft_fu_1919_cosines_5_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_calc_stft_fu_1919_cosines_5_ce0 : STD_LOGIC;
    signal grp_calc_stft_fu_1919_cosines_6_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_calc_stft_fu_1919_cosines_6_ce0 : STD_LOGIC;
    signal grp_calc_stft_fu_1919_cosines_7_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_calc_stft_fu_1919_cosines_7_ce0 : STD_LOGIC;
    signal grp_calc_stft_fu_1919_cosines_8_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_calc_stft_fu_1919_cosines_8_ce0 : STD_LOGIC;
    signal grp_calc_stft_fu_1919_cosines_9_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_calc_stft_fu_1919_cosines_9_ce0 : STD_LOGIC;
    signal grp_calc_stft_fu_1919_cosines_10_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_calc_stft_fu_1919_cosines_10_ce0 : STD_LOGIC;
    signal grp_calc_stft_fu_1919_cosines_11_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_calc_stft_fu_1919_cosines_11_ce0 : STD_LOGIC;
    signal grp_calc_stft_fu_1919_cosines_12_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_calc_stft_fu_1919_cosines_12_ce0 : STD_LOGIC;
    signal grp_calc_stft_fu_1919_cosines_13_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_calc_stft_fu_1919_cosines_13_ce0 : STD_LOGIC;
    signal grp_calc_stft_fu_1919_cosines_14_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_calc_stft_fu_1919_cosines_14_ce0 : STD_LOGIC;
    signal grp_calc_stft_fu_1919_cosines_15_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_calc_stft_fu_1919_cosines_15_ce0 : STD_LOGIC;
    signal grp_calc_stft_fu_1919_cosines_16_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_calc_stft_fu_1919_cosines_16_ce0 : STD_LOGIC;
    signal grp_calc_stft_fu_1919_cosines_17_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_calc_stft_fu_1919_cosines_17_ce0 : STD_LOGIC;
    signal grp_calc_stft_fu_1919_cosines_18_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_calc_stft_fu_1919_cosines_18_ce0 : STD_LOGIC;
    signal grp_calc_stft_fu_1919_cosines_19_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_calc_stft_fu_1919_cosines_19_ce0 : STD_LOGIC;
    signal grp_fc_relu6_fu_1973_ap_start : STD_LOGIC;
    signal grp_fc_relu6_fu_1973_ap_done : STD_LOGIC;
    signal grp_fc_relu6_fu_1973_ap_idle : STD_LOGIC;
    signal grp_fc_relu6_fu_1973_ap_ready : STD_LOGIC;
    signal grp_fc_relu6_fu_1973_in_stream_V_V_read : STD_LOGIC;
    signal grp_fc_relu6_fu_1973_out_stream_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fc_relu6_fu_1973_out_stream_V_V_write : STD_LOGIC;
    signal grp_fc_relu6_fu_1973_gru2fc_scale_V_read : STD_LOGIC;
    signal grp_fc_relu6_fu_1973_fc2final_scale_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fc_relu6_fu_1973_fc2final_scale_V_write : STD_LOGIC;
    signal grp_fc_relu6_fu_1973_fc_weights1_V_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fc_relu6_fu_1973_fc_weights1_V_ce0 : STD_LOGIC;
    signal grp_fc_relu6_fu_1973_fc_bias1_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fc_relu6_fu_1973_fc_bias1_V_ce0 : STD_LOGIC;
    signal grp_pw_layer1_fu_1999_ap_start : STD_LOGIC;
    signal grp_pw_layer1_fu_1999_ap_idle : STD_LOGIC;
    signal grp_pw_layer1_fu_1999_in_stream_V_V_read : STD_LOGIC;
    signal grp_pw_layer1_fu_1999_out_stream_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_pw_layer1_fu_1999_out_stream_V_V_write : STD_LOGIC;
    signal grp_pw_layer1_fu_1999_dw12pw1_scale_V_read : STD_LOGIC;
    signal grp_pw_layer1_fu_1999_pw12gru_scale_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pw_layer1_fu_1999_pw12gru_scale_V_write : STD_LOGIC;
    signal grp_pw_layer1_fu_1999_pw_weight1_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_pw_layer1_fu_1999_pw_weight1_V_ce0 : STD_LOGIC;
    signal grp_pw_layer1_fu_1999_bn_bias1_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_pw_layer1_fu_1999_bn_bias1_V_ce0 : STD_LOGIC;
    signal grp_dw_layer1_fu_2019_ap_start : STD_LOGIC;
    signal grp_dw_layer1_fu_2019_ap_done : STD_LOGIC;
    signal grp_dw_layer1_fu_2019_ap_idle : STD_LOGIC;
    signal grp_dw_layer1_fu_2019_ap_ready : STD_LOGIC;
    signal grp_dw_layer1_fu_2019_in_stream_V_V_read : STD_LOGIC;
    signal grp_dw_layer1_fu_2019_out_stream_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dw_layer1_fu_2019_out_stream_V_V_write : STD_LOGIC;
    signal grp_dw_layer1_fu_2019_data2dw1_scale_V_read : STD_LOGIC;
    signal grp_dw_layer1_fu_2019_dw12pw1_scale_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dw_layer1_fu_2019_dw12pw1_scale_V_write : STD_LOGIC;
    signal grp_fc_64u_12u_1u_s_fu_2039_ap_start : STD_LOGIC;
    signal grp_fc_64u_12u_1u_s_fu_2039_ap_done : STD_LOGIC;
    signal grp_fc_64u_12u_1u_s_fu_2039_ap_idle : STD_LOGIC;
    signal grp_fc_64u_12u_1u_s_fu_2039_ap_ready : STD_LOGIC;
    signal grp_fc_64u_12u_1u_s_fu_2039_in_stream_V_V_read : STD_LOGIC;
    signal grp_fc_64u_12u_1u_s_fu_2039_out_stream_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fc_64u_12u_1u_s_fu_2039_out_stream_V_write : STD_LOGIC;
    signal grp_fc_64u_12u_1u_s_fu_2039_fc2final_scale_V_read : STD_LOGIC;
    signal grp_fc_64u_12u_1u_s_fu_2039_fc_bias2_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fc_64u_12u_1u_s_fu_2039_fc_bias2_V_ce0 : STD_LOGIC;
    signal grp_fc_64u_12u_1u_s_fu_2039_fc_weights2_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fc_64u_12u_1u_s_fu_2039_fc_weights2_V_ce0 : STD_LOGIC;
    signal grp_mfcc_log_fu_2058_ap_start : STD_LOGIC;
    signal grp_mfcc_log_fu_2058_ap_done : STD_LOGIC;
    signal grp_mfcc_log_fu_2058_ap_idle : STD_LOGIC;
    signal grp_mfcc_log_fu_2058_ap_ready : STD_LOGIC;
    signal grp_mfcc_log_fu_2058_fbank_out_0_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_mfcc_log_fu_2058_fbank_out_0_ce0 : STD_LOGIC;
    signal grp_mfcc_log_fu_2058_fbank_out_0_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_mfcc_log_fu_2058_fbank_out_0_ce1 : STD_LOGIC;
    signal grp_mfcc_log_fu_2058_fbank_out_0_we1 : STD_LOGIC;
    signal grp_mfcc_log_fu_2058_fbank_out_0_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mfcc_log_fu_2058_fbank_out_1_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_mfcc_log_fu_2058_fbank_out_1_ce0 : STD_LOGIC;
    signal grp_mfcc_log_fu_2058_fbank_out_1_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_mfcc_log_fu_2058_fbank_out_1_ce1 : STD_LOGIC;
    signal grp_mfcc_log_fu_2058_fbank_out_1_we1 : STD_LOGIC;
    signal grp_mfcc_log_fu_2058_fbank_out_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mfcc_log_fu_2058_fbank_out_2_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_mfcc_log_fu_2058_fbank_out_2_ce0 : STD_LOGIC;
    signal grp_mfcc_log_fu_2058_fbank_out_2_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_mfcc_log_fu_2058_fbank_out_2_ce1 : STD_LOGIC;
    signal grp_mfcc_log_fu_2058_fbank_out_2_we1 : STD_LOGIC;
    signal grp_mfcc_log_fu_2058_fbank_out_2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mfcc_log_fu_2058_fbank_out_3_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_mfcc_log_fu_2058_fbank_out_3_ce0 : STD_LOGIC;
    signal grp_mfcc_log_fu_2058_fbank_out_3_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_mfcc_log_fu_2058_fbank_out_3_ce1 : STD_LOGIC;
    signal grp_mfcc_log_fu_2058_fbank_out_3_we1 : STD_LOGIC;
    signal grp_mfcc_log_fu_2058_fbank_out_3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_quant_layer_10u_s_fu_2070_ap_start : STD_LOGIC;
    signal grp_quant_layer_10u_s_fu_2070_ap_done : STD_LOGIC;
    signal grp_quant_layer_10u_s_fu_2070_ap_idle : STD_LOGIC;
    signal grp_quant_layer_10u_s_fu_2070_ap_ready : STD_LOGIC;
    signal grp_quant_layer_10u_s_fu_2070_data2dw1_V_read : STD_LOGIC;
    signal grp_quant_layer_10u_s_fu_2070_data2dw1_quant_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_quant_layer_10u_s_fu_2070_data2dw1_quant_V_V_write : STD_LOGIC;
    signal grp_quant_layer_10u_s_fu_2070_data2dw1_scale_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_quant_layer_10u_s_fu_2070_data2dw1_scale_V_write : STD_LOGIC;
    signal grp_fbank_fu_2077_ap_start : STD_LOGIC;
    signal grp_fbank_fu_2077_ap_done : STD_LOGIC;
    signal grp_fbank_fu_2077_ap_idle : STD_LOGIC;
    signal grp_fbank_fu_2077_ap_ready : STD_LOGIC;
    signal grp_fbank_fu_2077_output_0_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fbank_fu_2077_output_0_ce0 : STD_LOGIC;
    signal grp_fbank_fu_2077_output_0_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fbank_fu_2077_output_0_ce1 : STD_LOGIC;
    signal grp_fbank_fu_2077_output_0_we1 : STD_LOGIC;
    signal grp_fbank_fu_2077_output_0_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fbank_fu_2077_output_1_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fbank_fu_2077_output_1_ce0 : STD_LOGIC;
    signal grp_fbank_fu_2077_output_1_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fbank_fu_2077_output_1_ce1 : STD_LOGIC;
    signal grp_fbank_fu_2077_output_1_we1 : STD_LOGIC;
    signal grp_fbank_fu_2077_output_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fbank_fu_2077_output_2_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fbank_fu_2077_output_2_ce0 : STD_LOGIC;
    signal grp_fbank_fu_2077_output_2_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fbank_fu_2077_output_2_ce1 : STD_LOGIC;
    signal grp_fbank_fu_2077_output_2_we1 : STD_LOGIC;
    signal grp_fbank_fu_2077_output_2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fbank_fu_2077_output_3_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fbank_fu_2077_output_3_ce0 : STD_LOGIC;
    signal grp_fbank_fu_2077_output_3_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fbank_fu_2077_output_3_ce1 : STD_LOGIC;
    signal grp_fbank_fu_2077_output_3_we1 : STD_LOGIC;
    signal grp_fbank_fu_2077_output_3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fbank_fu_2077_spectrogram_3_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fbank_fu_2077_spectrogram_3_ce0 : STD_LOGIC;
    signal grp_fbank_fu_2077_spectrogram_0_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fbank_fu_2077_spectrogram_0_ce0 : STD_LOGIC;
    signal grp_fbank_fu_2077_spectrogram_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fbank_fu_2077_spectrogram_1_ce0 : STD_LOGIC;
    signal grp_fbank_fu_2077_spectrogram_2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fbank_fu_2077_spectrogram_2_ce0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_ap_start : STD_LOGIC;
    signal grp_weight_loader_fu_2101_ap_done : STD_LOGIC;
    signal grp_weight_loader_fu_2101_ap_idle : STD_LOGIC;
    signal grp_weight_loader_fu_2101_ap_ready : STD_LOGIC;
    signal grp_weight_loader_fu_2101_weight_in_TREADY : STD_LOGIC;
    signal grp_weight_loader_fu_2101_data_in_TREADY : STD_LOGIC;
    signal grp_weight_loader_fu_2101_cosines_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_weight_loader_fu_2101_cosines_0_ce0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_cosines_0_we0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_cosines_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_weight_loader_fu_2101_cosines_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_weight_loader_fu_2101_cosines_1_ce0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_cosines_1_we0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_cosines_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_weight_loader_fu_2101_cosines_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_weight_loader_fu_2101_cosines_2_ce0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_cosines_2_we0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_cosines_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_weight_loader_fu_2101_cosines_3_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_weight_loader_fu_2101_cosines_3_ce0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_cosines_3_we0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_cosines_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_weight_loader_fu_2101_cosines_4_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_weight_loader_fu_2101_cosines_4_ce0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_cosines_4_we0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_cosines_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_weight_loader_fu_2101_cosines_5_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_weight_loader_fu_2101_cosines_5_ce0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_cosines_5_we0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_cosines_5_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_weight_loader_fu_2101_cosines_6_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_weight_loader_fu_2101_cosines_6_ce0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_cosines_6_we0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_cosines_6_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_weight_loader_fu_2101_cosines_7_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_weight_loader_fu_2101_cosines_7_ce0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_cosines_7_we0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_cosines_7_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_weight_loader_fu_2101_cosines_8_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_weight_loader_fu_2101_cosines_8_ce0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_cosines_8_we0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_cosines_8_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_weight_loader_fu_2101_cosines_9_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_weight_loader_fu_2101_cosines_9_ce0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_cosines_9_we0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_cosines_9_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_weight_loader_fu_2101_cosines_10_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_weight_loader_fu_2101_cosines_10_ce0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_cosines_10_we0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_cosines_10_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_weight_loader_fu_2101_cosines_11_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_weight_loader_fu_2101_cosines_11_ce0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_cosines_11_we0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_cosines_11_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_weight_loader_fu_2101_cosines_12_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_weight_loader_fu_2101_cosines_12_ce0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_cosines_12_we0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_cosines_12_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_weight_loader_fu_2101_cosines_13_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_weight_loader_fu_2101_cosines_13_ce0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_cosines_13_we0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_cosines_13_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_weight_loader_fu_2101_cosines_14_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_weight_loader_fu_2101_cosines_14_ce0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_cosines_14_we0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_cosines_14_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_weight_loader_fu_2101_cosines_15_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_weight_loader_fu_2101_cosines_15_ce0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_cosines_15_we0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_cosines_15_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_weight_loader_fu_2101_cosines_16_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_weight_loader_fu_2101_cosines_16_ce0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_cosines_16_we0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_cosines_16_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_weight_loader_fu_2101_cosines_17_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_weight_loader_fu_2101_cosines_17_ce0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_cosines_17_we0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_cosines_17_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_weight_loader_fu_2101_cosines_18_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_weight_loader_fu_2101_cosines_18_ce0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_cosines_18_we0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_cosines_18_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_weight_loader_fu_2101_cosines_19_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_weight_loader_fu_2101_cosines_19_ce0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_cosines_19_we0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_cosines_19_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_weight_loader_fu_2101_weight_bias_scale_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_weight_loader_fu_2101_weight_bias_scale_ce0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_weight_bias_scale_we0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_weight_bias_scale_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_weight_loader_fu_2101_tmp_scale_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_weight_loader_fu_2101_tmp_scale_ce0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_tmp_scale_we0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_tmp_scale_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_weight_loader_fu_2101_pw_weight1_V_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_weight_loader_fu_2101_pw_weight1_V_2_ce0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_pw_weight1_V_2_we0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_pw_weight1_V_2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_weight_loader_fu_2101_pw_weight1_V_2_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_weight_loader_fu_2101_pw_weight1_V_2_ce1 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_pw_weight1_V_2_we1 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_pw_weight1_V_2_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_weight_loader_fu_2101_bn_bias1_V_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_weight_loader_fu_2101_bn_bias1_V_2_ce0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_bn_bias1_V_2_we0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_bn_bias1_V_2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_weight_loader_fu_2101_bn_bias1_V_2_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_weight_loader_fu_2101_bn_bias1_V_2_ce1 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_bn_bias1_V_2_we1 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_bn_bias1_V_2_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_weight_loader_fu_2101_weights_ru_V_2_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_weight_loader_fu_2101_weights_ru_V_2_ce0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_weights_ru_V_2_we0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_weights_ru_V_2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_weight_loader_fu_2101_weights_rw_V_2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_weight_loader_fu_2101_weights_rw_V_2_ce0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_weights_rw_V_2_we0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_weights_rw_V_2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_weight_loader_fu_2101_bias_r_V_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_weight_loader_fu_2101_bias_r_V_2_ce0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_bias_r_V_2_we0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_bias_r_V_2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_weight_loader_fu_2101_weights_zu_V_2_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_weight_loader_fu_2101_weights_zu_V_2_ce0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_weights_zu_V_2_we0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_weights_zu_V_2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_weight_loader_fu_2101_weights_zw_V_2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_weight_loader_fu_2101_weights_zw_V_2_ce0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_weights_zw_V_2_we0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_weights_zw_V_2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_weight_loader_fu_2101_bias_z_V_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_weight_loader_fu_2101_bias_z_V_2_ce0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_bias_z_V_2_we0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_bias_z_V_2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_weight_loader_fu_2101_bias_z_V_2_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_weight_loader_fu_2101_bias_z_V_2_ce1 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_bias_z_V_2_we1 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_bias_z_V_2_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_weight_loader_fu_2101_weights_hu_V_2_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_weight_loader_fu_2101_weights_hu_V_2_ce0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_weights_hu_V_2_we0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_weights_hu_V_2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_weight_loader_fu_2101_weights_hw_V_2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_weight_loader_fu_2101_weights_hw_V_2_ce0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_weights_hw_V_2_we0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_weights_hw_V_2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_weight_loader_fu_2101_bias_h_V_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_weight_loader_fu_2101_bias_h_V_2_ce0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_bias_h_V_2_we0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_bias_h_V_2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_weight_loader_fu_2101_bias_h_V_2_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_weight_loader_fu_2101_bias_h_V_2_ce1 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_bias_h_V_2_we1 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_bias_h_V_2_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_weight_loader_fu_2101_fc_weights1_V_2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_weight_loader_fu_2101_fc_weights1_V_2_ce0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_fc_weights1_V_2_we0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_fc_weights1_V_2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_weight_loader_fu_2101_fc_bias1_V_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_weight_loader_fu_2101_fc_bias1_V_2_ce0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_fc_bias1_V_2_we0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_fc_bias1_V_2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_weight_loader_fu_2101_fc_bias1_V_2_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_weight_loader_fu_2101_fc_bias1_V_2_ce1 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_fc_bias1_V_2_we1 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_fc_bias1_V_2_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_weight_loader_fu_2101_fc_weights2_V_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_weight_loader_fu_2101_fc_weights2_V_2_ce0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_fc_weights2_V_2_we0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_fc_weights2_V_2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_weight_loader_fu_2101_fc_bias2_V_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_weight_loader_fu_2101_fc_bias2_V_2_ce0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_fc_bias2_V_2_we0 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_fc_bias2_V_2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_weight_loader_fu_2101_fc_bias2_V_2_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_weight_loader_fu_2101_fc_bias2_V_2_ce1 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_fc_bias2_V_2_we1 : STD_LOGIC;
    signal grp_weight_loader_fu_2101_fc_bias2_V_2_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_weight_loader_fu_2101_ap_return_0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_weight_loader_fu_2101_ap_return_1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_weight_loader_fu_2101_ap_return_2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_datastream_out_12u_s_fu_2187_ap_start : STD_LOGIC;
    signal grp_datastream_out_12u_s_fu_2187_ap_done : STD_LOGIC;
    signal grp_datastream_out_12u_s_fu_2187_ap_idle : STD_LOGIC;
    signal grp_datastream_out_12u_s_fu_2187_ap_ready : STD_LOGIC;
    signal grp_datastream_out_12u_s_fu_2187_output_V_read : STD_LOGIC;
    signal grp_datastream_out_12u_s_fu_2187_data_out_TDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_datastream_out_12u_s_fu_2187_data_out_TVALID : STD_LOGIC;
    signal grp_datastream_out_12u_s_fu_2187_data_out_TREADY : STD_LOGIC;
    signal grp_datastream_out_12u_s_fu_2187_data_out_TLAST : STD_LOGIC;
    signal i2_0_reg_1489 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal icmp_ln137_fu_2279_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_i4_0_phi_fu_1516_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal i6_0_reg_1534 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_phi_mux_i8_0_phi_fu_1561_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal shorttime_energy_0_reg_1579 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal i10_0_reg_1591 : STD_LOGIC_VECTOR (4 downto 0);
    signal shorttime_energy_1_reg_1603 : STD_LOGIC_VECTOR (31 downto 0);
    signal j11_0_reg_1615 : STD_LOGIC_VECTOR (8 downto 0);
    signal i16_0_reg_1626 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal and_ln238_1_fu_2767_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j17_0_reg_1637 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal i12_0_reg_1648 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_mux_i14_0_phi_fu_1675_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal i18_0_reg_1693 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state61 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state61 : signal is "none";
    signal ap_CS_fsm_state75 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state75 : signal is "none";
    signal ap_phi_mux_tmp_98_phi_fu_1719_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp3_iter1_tmp_98_reg_1716 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_0_i_reg_1734 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state65 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state65 : signal is "none";
    signal keep_in_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal keep_in_V_full_n : STD_LOGIC;
    signal keep_in_V_write : STD_LOGIC;
    signal icmp_ln290_fu_3163_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state65 : BOOLEAN;
    signal threshold_loc_0_reg_1745 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state82 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state82 : signal is "none";
    signal i_0_reg_1755 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_phi_mux_i1_0_phi_fu_1782_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp4_stage0 : BOOLEAN;
    signal grp_grucell_fu_1800_ap_start_reg : STD_LOGIC := '0';
    signal pw12gru_quant_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal pw12gru_quant_V_V_empty_n : STD_LOGIC;
    signal pw12gru_quant_V_V_read : STD_LOGIC;
    signal gru2fc_quant_V_V_full_n : STD_LOGIC;
    signal gru2fc_quant_V_V_write : STD_LOGIC;
    signal keepout_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal keepout_V_empty_n : STD_LOGIC;
    signal keepout_V_read : STD_LOGIC;
    signal pw12gru_scale_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal pw12gru_scale_V_empty_n : STD_LOGIC;
    signal pw12gru_scale_V_read : STD_LOGIC;
    signal gru2fc_scale_V_full_n : STD_LOGIC;
    signal gru2fc_scale_V_write : STD_LOGIC;
    signal grp_mfcc_dct_fu_1859_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state60 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state60 : signal is "none";
    signal grp_calc_stft_fu_1919_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal grp_fc_relu6_fu_1973_ap_start_reg : STD_LOGIC := '0';
    signal gru2fc_quant_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal gru2fc_quant_V_V_empty_n : STD_LOGIC;
    signal gru2fc_quant_V_V_read : STD_LOGIC;
    signal ap_CS_fsm_state77 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state77 : signal is "none";
    signal fc2final_quant_V_V_full_n : STD_LOGIC;
    signal fc2final_quant_V_V_write : STD_LOGIC;
    signal gru2fc_scale_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal gru2fc_scale_V_empty_n : STD_LOGIC;
    signal gru2fc_scale_V_read : STD_LOGIC;
    signal fc2final_scale_V_full_n : STD_LOGIC;
    signal fc2final_scale_V_write : STD_LOGIC;
    signal grp_pw_layer1_fu_1999_ap_start_reg : STD_LOGIC := '0';
    signal dw12pw1_quant_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal dw12pw1_quant_V_V_empty_n : STD_LOGIC;
    signal dw12pw1_quant_V_V_read : STD_LOGIC;
    signal pw12gru_quant_V_V_full_n : STD_LOGIC;
    signal pw12gru_quant_V_V_write : STD_LOGIC;
    signal dw12pw1_scale_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal dw12pw1_scale_V_empty_n : STD_LOGIC;
    signal dw12pw1_scale_V_read : STD_LOGIC;
    signal pw12gru_scale_V_full_n : STD_LOGIC;
    signal pw12gru_scale_V_write : STD_LOGIC;
    signal grp_dw_layer1_fu_2019_ap_start_reg : STD_LOGIC := '0';
    signal data2dw1_quant_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal data2dw1_quant_V_V_empty_n : STD_LOGIC;
    signal data2dw1_quant_V_V_read : STD_LOGIC;
    signal ap_CS_fsm_state70 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state70 : signal is "none";
    signal dw12pw1_quant_V_V_full_n : STD_LOGIC;
    signal dw12pw1_quant_V_V_write : STD_LOGIC;
    signal data2dw1_scale_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal data2dw1_scale_V_empty_n : STD_LOGIC;
    signal data2dw1_scale_V_read : STD_LOGIC;
    signal dw12pw1_scale_V_full_n : STD_LOGIC;
    signal dw12pw1_scale_V_write : STD_LOGIC;
    signal grp_fc_64u_12u_1u_s_fu_2039_ap_start_reg : STD_LOGIC := '0';
    signal fc2final_quant_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal fc2final_quant_V_V_empty_n : STD_LOGIC;
    signal fc2final_quant_V_V_read : STD_LOGIC;
    signal ap_CS_fsm_state79 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state79 : signal is "none";
    signal output_V_full_n : STD_LOGIC;
    signal output_V_write : STD_LOGIC;
    signal fc2final_scale_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal fc2final_scale_V_empty_n : STD_LOGIC;
    signal fc2final_scale_V_read : STD_LOGIC;
    signal grp_mfcc_log_fu_2058_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state58 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state58 : signal is "none";
    signal ap_CS_fsm_state59 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state59 : signal is "none";
    signal grp_quant_layer_10u_s_fu_2070_ap_start_reg : STD_LOGIC := '0';
    signal data2dw1_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal data2dw1_V_empty_n : STD_LOGIC;
    signal data2dw1_V_read : STD_LOGIC;
    signal ap_CS_fsm_state68 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state68 : signal is "none";
    signal data2dw1_quant_V_V_full_n : STD_LOGIC;
    signal data2dw1_quant_V_V_write : STD_LOGIC;
    signal data2dw1_scale_V_full_n : STD_LOGIC;
    signal data2dw1_scale_V_write : STD_LOGIC;
    signal grp_fbank_fu_2077_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state56 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal ap_CS_fsm_state57 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal grp_weight_loader_fu_2101_ap_start_reg : STD_LOGIC := '0';
    signal grp_datastream_out_12u_s_fu_2187_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state80 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state80 : signal is "none";
    signal output_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal output_V_empty_n : STD_LOGIC;
    signal output_V_read : STD_LOGIC;
    signal ap_CS_fsm_state81 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state81 : signal is "none";
    signal zext_ln198_fu_2315_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln205_3_fu_2419_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln216_fu_2511_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln223_3_fu_2621_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln233_3_fu_2715_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln265_7_fu_2880_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln265_8_fu_2890_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln245_fu_2914_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln252_3_fu_3024_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln288_fu_3146_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp3_stage0 : BOOLEAN;
    signal zext_ln288_4_fu_3157_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln171_fu_3241_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln183_4_fu_3376_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp3_stage0_01001 : BOOLEAN;
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal ap_CS_fsm_state87 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state87 : signal is "none";
    signal grp_fu_2196_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal ap_CS_fsm_state92 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state92 : signal is "none";
    signal grp_fu_2202_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2202_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal ap_CS_fsm_state88 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state88 : signal is "none";
    signal grp_fu_2207_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln1_fu_2305_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln202_fu_2345_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_28_fu_2339_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_80_fu_2373_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_81_fu_2384_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln205_fu_2380_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln205_1_fu_2391_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln205_4_fu_2401_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln205_fu_2395_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln205_1_fu_2404_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_2220_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_280_fu_2434_p9 : STD_LOGIC_VECTOR (15 downto 0);
    signal bitcast_ln238_1_fu_2456_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_279_fu_2459_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln238_fu_2469_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln238_3_fu_2479_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln238_2_fu_2473_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lshr_ln3_fu_2501_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln220_fu_2547_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_31_fu_2541_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_82_fu_2575_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_83_fu_2586_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln223_fu_2582_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln223_1_fu_2593_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln223_4_fu_2603_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln223_fu_2597_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln223_1_fu_2606_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_281_fu_2636_p9 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_84_fu_2664_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_85_fu_2676_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln233_1_fu_2684_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln233_fu_2672_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln233_2_fu_2706_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln233_1_fu_2710_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal bitcast_ln238_fu_2726_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_282_fu_2730_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln238_1_fu_2740_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln238_1_fu_2750_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln238_fu_2744_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln238_fu_2756_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln238_fu_2762_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_2210_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln265_fu_2785_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln265_fu_2789_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_86_fu_2795_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_87_fu_2807_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln265_2_fu_2815_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln265_1_fu_2803_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_88_fu_2825_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_89_fu_2837_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln265_4_fu_2845_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln265_3_fu_2833_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln265_6_fu_2871_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln265_3_fu_2875_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln265_5_fu_2867_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal lshr_ln5_fu_2904_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln249_fu_2950_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_36_fu_2944_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_90_fu_2978_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_91_fu_2989_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln252_fu_2985_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln252_1_fu_2996_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln252_4_fu_3006_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln252_fu_3000_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln252_1_fu_3009_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_284_fu_3039_p9 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_92_fu_3077_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln288_1_fu_3085_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln288_fu_3073_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_93_fu_3095_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_97_fu_3123_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln288_3_fu_3137_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln288_fu_3141_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln288_2_fu_3133_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln288_1_fu_3152_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln_fu_3231_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln180_fu_3277_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_3271_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_78_fu_3319_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_79_fu_3330_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln183_1_fu_3337_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln183_fu_3326_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln180_fu_3347_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln183_1_mid2_fu_3312_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln183_1_fu_3350_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln183_mid2_fu_3305_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln183_2_fu_3356_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln183_2_fu_3341_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln183_3_fu_3367_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln183_3_fu_3370_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_2202_ce : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal ap_CS_fsm_state84 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state84 : signal is "none";
    signal ap_CS_fsm_state85 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state85 : signal is "none";
    signal ap_CS_fsm_state89 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state89 : signal is "none";
    signal ap_CS_fsm_state90 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state90 : signal is "none";
    signal grp_fu_2207_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (85 downto 0);
    signal ap_CS_fsm_state100 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state100 : signal is "none";
    signal regslice_both_data_out_V_data_U_apdone_blk : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;
    signal ap_idle_pp3 : STD_LOGIC;
    signal ap_enable_pp3 : STD_LOGIC;
    signal ap_idle_pp4 : STD_LOGIC;
    signal ap_enable_pp4 : STD_LOGIC;
    signal regslice_both_data_in_V_data_U_apdone_blk : STD_LOGIC;
    signal data_in_TDATA_int : STD_LOGIC_VECTOR (31 downto 0);
    signal data_in_TVALID_int : STD_LOGIC;
    signal data_in_TREADY_int : STD_LOGIC;
    signal regslice_both_data_in_V_data_U_ack_in : STD_LOGIC;
    signal regslice_both_w1_data_in_V_last_U_apdone_blk : STD_LOGIC;
    signal data_in_TLAST_int : STD_LOGIC;
    signal regslice_both_w1_data_in_V_last_U_vld_out : STD_LOGIC;
    signal regslice_both_w1_data_in_V_last_U_ack_in : STD_LOGIC;
    signal regslice_both_weight_in_V_data_V_U_apdone_blk : STD_LOGIC;
    signal weight_in_TDATA_int : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_in_TVALID_int : STD_LOGIC;
    signal weight_in_TREADY_int : STD_LOGIC;
    signal regslice_both_weight_in_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_w1_weight_in_V_last_U_apdone_blk : STD_LOGIC;
    signal weight_in_TLAST_int : STD_LOGIC;
    signal regslice_both_w1_weight_in_V_last_U_vld_out : STD_LOGIC;
    signal regslice_both_w1_weight_in_V_last_U_ack_in : STD_LOGIC;
    signal regslice_both_control_in_V_data_U_apdone_blk : STD_LOGIC;
    signal control_in_TDATA_int : STD_LOGIC_VECTOR (15 downto 0);
    signal control_in_TVALID_int : STD_LOGIC;
    signal control_in_TREADY_int : STD_LOGIC;
    signal regslice_both_control_in_V_data_U_ack_in : STD_LOGIC;
    signal regslice_both_w1_control_in_V_last_U_apdone_blk : STD_LOGIC;
    signal control_in_TLAST_int : STD_LOGIC;
    signal regslice_both_w1_control_in_V_last_U_vld_out : STD_LOGIC;
    signal regslice_both_w1_control_in_V_last_U_ack_in : STD_LOGIC;
    signal data_out_TREADY_int : STD_LOGIC;
    signal regslice_both_data_out_V_data_U_vld_out : STD_LOGIC;
    signal regslice_both_w1_data_out_V_last_U_apdone_blk : STD_LOGIC;
    signal regslice_both_w1_data_out_V_last_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_w1_data_out_V_last_U_vld_out : STD_LOGIC;
    signal ap_condition_2320 : BOOLEAN;

    component grucell IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_stream_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        in_stream_V_V_empty_n : IN STD_LOGIC;
        in_stream_V_V_read : OUT STD_LOGIC;
        out_stream_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_stream_V_V_full_n : IN STD_LOGIC;
        out_stream_V_V_write : OUT STD_LOGIC;
        keep_stream_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        keep_stream_V_empty_n : IN STD_LOGIC;
        keep_stream_V_read : OUT STD_LOGIC;
        pw12gru_scale_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        pw12gru_scale_V_empty_n : IN STD_LOGIC;
        pw12gru_scale_V_read : OUT STD_LOGIC;
        gru2fc_scale_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        gru2fc_scale_V_full_n : IN STD_LOGIC;
        gru2fc_scale_V_write : OUT STD_LOGIC;
        zu_weights_scale : IN STD_LOGIC_VECTOR (31 downto 0);
        ru_weights_scale : IN STD_LOGIC_VECTOR (31 downto 0);
        hu_weights_scale : IN STD_LOGIC_VECTOR (31 downto 0);
        tmp_scale_gru1 : IN STD_LOGIC_VECTOR (31 downto 0);
        tmp_scale_gru2 : IN STD_LOGIC_VECTOR (31 downto 0);
        tmp_scale_gru3 : IN STD_LOGIC_VECTOR (31 downto 0);
        tmp_scale_gru4 : IN STD_LOGIC_VECTOR (31 downto 0);
        tmp_scale_gru5 : IN STD_LOGIC_VECTOR (31 downto 0);
        tmp_scale_gru6 : IN STD_LOGIC_VECTOR (31 downto 0);
        tmp_scale_gru7 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_zu_V_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        weights_zu_V_ce0 : OUT STD_LOGIC;
        weights_zu_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        weights_ru_V_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        weights_ru_V_ce0 : OUT STD_LOGIC;
        weights_ru_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        weights_zw_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        weights_zw_V_ce0 : OUT STD_LOGIC;
        weights_zw_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        weights_rw_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        weights_rw_V_ce0 : OUT STD_LOGIC;
        weights_rw_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        bias_z_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        bias_z_V_ce0 : OUT STD_LOGIC;
        bias_z_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        bias_r_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        bias_r_V_ce0 : OUT STD_LOGIC;
        bias_r_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        weights_hw_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        weights_hw_V_ce0 : OUT STD_LOGIC;
        weights_hw_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        weights_hu_V_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        weights_hu_V_ce0 : OUT STD_LOGIC;
        weights_hu_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        bias_h_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        bias_h_V_ce0 : OUT STD_LOGIC;
        bias_h_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component mfcc_dct IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        dct_out_0_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        dct_out_0_ce1 : OUT STD_LOGIC;
        dct_out_0_we1 : OUT STD_LOGIC;
        dct_out_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        dct_out_1_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        dct_out_1_ce1 : OUT STD_LOGIC;
        dct_out_1_we1 : OUT STD_LOGIC;
        dct_out_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        dct_out_2_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        dct_out_2_ce1 : OUT STD_LOGIC;
        dct_out_2_we1 : OUT STD_LOGIC;
        dct_out_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        dct_out_3_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        dct_out_3_ce1 : OUT STD_LOGIC;
        dct_out_3_we1 : OUT STD_LOGIC;
        dct_out_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        cosines_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_0_ce0 : OUT STD_LOGIC;
        cosines_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        fbank_out_0_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        fbank_out_0_ce0 : OUT STD_LOGIC;
        fbank_out_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        fbank_out_0_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        fbank_out_0_ce1 : OUT STD_LOGIC;
        fbank_out_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        cosines_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_1_ce0 : OUT STD_LOGIC;
        cosines_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        fbank_out_1_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        fbank_out_1_ce0 : OUT STD_LOGIC;
        fbank_out_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        fbank_out_1_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        fbank_out_1_ce1 : OUT STD_LOGIC;
        fbank_out_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        cosines_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_2_ce0 : OUT STD_LOGIC;
        cosines_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        fbank_out_2_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        fbank_out_2_ce0 : OUT STD_LOGIC;
        fbank_out_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        fbank_out_2_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        fbank_out_2_ce1 : OUT STD_LOGIC;
        fbank_out_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        cosines_3_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_3_ce0 : OUT STD_LOGIC;
        cosines_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        fbank_out_3_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        fbank_out_3_ce0 : OUT STD_LOGIC;
        fbank_out_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        fbank_out_3_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        fbank_out_3_ce1 : OUT STD_LOGIC;
        fbank_out_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        cosines_4_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_4_ce0 : OUT STD_LOGIC;
        cosines_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        cosines_5_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_5_ce0 : OUT STD_LOGIC;
        cosines_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        cosines_6_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_6_ce0 : OUT STD_LOGIC;
        cosines_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        cosines_7_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_7_ce0 : OUT STD_LOGIC;
        cosines_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        cosines_8_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_8_ce0 : OUT STD_LOGIC;
        cosines_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        cosines_9_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_9_ce0 : OUT STD_LOGIC;
        cosines_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        cosines_10_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_10_ce0 : OUT STD_LOGIC;
        cosines_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        cosines_11_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_11_ce0 : OUT STD_LOGIC;
        cosines_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        cosines_12_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_12_ce0 : OUT STD_LOGIC;
        cosines_12_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        cosines_13_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_13_ce0 : OUT STD_LOGIC;
        cosines_13_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        cosines_14_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_14_ce0 : OUT STD_LOGIC;
        cosines_14_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        cosines_15_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_15_ce0 : OUT STD_LOGIC;
        cosines_15_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        cosines_16_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_16_ce0 : OUT STD_LOGIC;
        cosines_16_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        cosines_17_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_17_ce0 : OUT STD_LOGIC;
        cosines_17_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        cosines_18_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_18_ce0 : OUT STD_LOGIC;
        cosines_18_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        cosines_19_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_19_ce0 : OUT STD_LOGIC;
        cosines_19_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component calc_stft IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        frames_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        frames_ce0 : OUT STD_LOGIC;
        frames_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        frames_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
        frames_ce1 : OUT STD_LOGIC;
        frames_we1 : OUT STD_LOGIC;
        frames_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        spectrogram_0_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        spectrogram_0_ce1 : OUT STD_LOGIC;
        spectrogram_0_we1 : OUT STD_LOGIC;
        spectrogram_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        spectrogram_1_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        spectrogram_1_ce1 : OUT STD_LOGIC;
        spectrogram_1_we1 : OUT STD_LOGIC;
        spectrogram_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        spectrogram_2_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        spectrogram_2_ce1 : OUT STD_LOGIC;
        spectrogram_2_we1 : OUT STD_LOGIC;
        spectrogram_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        spectrogram_3_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        spectrogram_3_ce1 : OUT STD_LOGIC;
        spectrogram_3_we1 : OUT STD_LOGIC;
        spectrogram_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        cosines_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_0_ce0 : OUT STD_LOGIC;
        cosines_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        cosines_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_1_ce0 : OUT STD_LOGIC;
        cosines_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        cosines_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_2_ce0 : OUT STD_LOGIC;
        cosines_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        cosines_3_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_3_ce0 : OUT STD_LOGIC;
        cosines_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        cosines_4_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_4_ce0 : OUT STD_LOGIC;
        cosines_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        cosines_5_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_5_ce0 : OUT STD_LOGIC;
        cosines_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        cosines_6_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_6_ce0 : OUT STD_LOGIC;
        cosines_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        cosines_7_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_7_ce0 : OUT STD_LOGIC;
        cosines_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        cosines_8_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_8_ce0 : OUT STD_LOGIC;
        cosines_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        cosines_9_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_9_ce0 : OUT STD_LOGIC;
        cosines_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        cosines_10_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_10_ce0 : OUT STD_LOGIC;
        cosines_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        cosines_11_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_11_ce0 : OUT STD_LOGIC;
        cosines_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        cosines_12_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_12_ce0 : OUT STD_LOGIC;
        cosines_12_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        cosines_13_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_13_ce0 : OUT STD_LOGIC;
        cosines_13_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        cosines_14_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_14_ce0 : OUT STD_LOGIC;
        cosines_14_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        cosines_15_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_15_ce0 : OUT STD_LOGIC;
        cosines_15_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        cosines_16_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_16_ce0 : OUT STD_LOGIC;
        cosines_16_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        cosines_17_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_17_ce0 : OUT STD_LOGIC;
        cosines_17_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        cosines_18_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_18_ce0 : OUT STD_LOGIC;
        cosines_18_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        cosines_19_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_19_ce0 : OUT STD_LOGIC;
        cosines_19_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fc_relu6 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_stream_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        in_stream_V_V_empty_n : IN STD_LOGIC;
        in_stream_V_V_read : OUT STD_LOGIC;
        out_stream_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_stream_V_V_full_n : IN STD_LOGIC;
        out_stream_V_V_write : OUT STD_LOGIC;
        gru2fc_scale_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        gru2fc_scale_V_empty_n : IN STD_LOGIC;
        gru2fc_scale_V_read : OUT STD_LOGIC;
        fc2final_scale_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        fc2final_scale_V_full_n : IN STD_LOGIC;
        fc2final_scale_V_write : OUT STD_LOGIC;
        fc_weight1_scale : IN STD_LOGIC_VECTOR (31 downto 0);
        tmp_scale_fc6 : IN STD_LOGIC_VECTOR (31 downto 0);
        fc_weights1_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        fc_weights1_V_ce0 : OUT STD_LOGIC;
        fc_weights1_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        fc_bias1_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        fc_bias1_V_ce0 : OUT STD_LOGIC;
        fc_bias1_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component pw_layer1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_stream_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        in_stream_V_V_empty_n : IN STD_LOGIC;
        in_stream_V_V_read : OUT STD_LOGIC;
        out_stream_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_stream_V_V_full_n : IN STD_LOGIC;
        out_stream_V_V_write : OUT STD_LOGIC;
        pw_weights_scale : IN STD_LOGIC_VECTOR (31 downto 0);
        dw12pw1_scale_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        dw12pw1_scale_V_empty_n : IN STD_LOGIC;
        dw12pw1_scale_V_read : OUT STD_LOGIC;
        pw12gru_scale_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        pw12gru_scale_V_full_n : IN STD_LOGIC;
        pw12gru_scale_V_write : OUT STD_LOGIC;
        tmp_scalepw : IN STD_LOGIC_VECTOR (31 downto 0);
        pw_weight1_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        pw_weight1_V_ce0 : OUT STD_LOGIC;
        pw_weight1_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        bn_bias1_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        bn_bias1_V_ce0 : OUT STD_LOGIC;
        bn_bias1_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component dw_layer1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_stream_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        in_stream_V_V_empty_n : IN STD_LOGIC;
        in_stream_V_V_read : OUT STD_LOGIC;
        out_stream_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_stream_V_V_full_n : IN STD_LOGIC;
        out_stream_V_V_write : OUT STD_LOGIC;
        dw_weights_scale : IN STD_LOGIC_VECTOR (31 downto 0);
        data2dw1_scale_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        data2dw1_scale_V_empty_n : IN STD_LOGIC;
        data2dw1_scale_V_read : OUT STD_LOGIC;
        dw12pw1_scale_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        dw12pw1_scale_V_full_n : IN STD_LOGIC;
        dw12pw1_scale_V_write : OUT STD_LOGIC;
        dw_weight1_V_2 : IN STD_LOGIC_VECTOR (7 downto 0);
        dw_weight1_V_0 : IN STD_LOGIC_VECTOR (7 downto 0);
        dw_weight1_V_1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component fc_64u_12u_1u_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_stream_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        in_stream_V_V_empty_n : IN STD_LOGIC;
        in_stream_V_V_read : OUT STD_LOGIC;
        out_stream_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_stream_V_full_n : IN STD_LOGIC;
        out_stream_V_write : OUT STD_LOGIC;
        fc2final_scale_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        fc2final_scale_V_empty_n : IN STD_LOGIC;
        fc2final_scale_V_read : OUT STD_LOGIC;
        fc_weight2_scale : IN STD_LOGIC_VECTOR (31 downto 0);
        tmp_scale_fc : IN STD_LOGIC_VECTOR (31 downto 0);
        fc_bias2_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        fc_bias2_V_ce0 : OUT STD_LOGIC;
        fc_bias2_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        fc_weights2_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        fc_weights2_V_ce0 : OUT STD_LOGIC;
        fc_weights2_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component mfcc_log IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fbank_out_0_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        fbank_out_0_ce0 : OUT STD_LOGIC;
        fbank_out_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        fbank_out_0_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        fbank_out_0_ce1 : OUT STD_LOGIC;
        fbank_out_0_we1 : OUT STD_LOGIC;
        fbank_out_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        fbank_out_1_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        fbank_out_1_ce0 : OUT STD_LOGIC;
        fbank_out_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        fbank_out_1_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        fbank_out_1_ce1 : OUT STD_LOGIC;
        fbank_out_1_we1 : OUT STD_LOGIC;
        fbank_out_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        fbank_out_2_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        fbank_out_2_ce0 : OUT STD_LOGIC;
        fbank_out_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        fbank_out_2_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        fbank_out_2_ce1 : OUT STD_LOGIC;
        fbank_out_2_we1 : OUT STD_LOGIC;
        fbank_out_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        fbank_out_3_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        fbank_out_3_ce0 : OUT STD_LOGIC;
        fbank_out_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        fbank_out_3_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        fbank_out_3_ce1 : OUT STD_LOGIC;
        fbank_out_3_we1 : OUT STD_LOGIC;
        fbank_out_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component quant_layer_10u_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data2dw1_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        data2dw1_V_empty_n : IN STD_LOGIC;
        data2dw1_V_read : OUT STD_LOGIC;
        data2dw1_quant_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        data2dw1_quant_V_V_full_n : IN STD_LOGIC;
        data2dw1_quant_V_V_write : OUT STD_LOGIC;
        data2dw1_scale_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        data2dw1_scale_V_full_n : IN STD_LOGIC;
        data2dw1_scale_V_write : OUT STD_LOGIC );
    end component;


    component fbank IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        output_0_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        output_0_ce0 : OUT STD_LOGIC;
        output_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_0_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        output_0_ce1 : OUT STD_LOGIC;
        output_0_we1 : OUT STD_LOGIC;
        output_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_1_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        output_1_ce0 : OUT STD_LOGIC;
        output_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_1_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        output_1_ce1 : OUT STD_LOGIC;
        output_1_we1 : OUT STD_LOGIC;
        output_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_2_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        output_2_ce0 : OUT STD_LOGIC;
        output_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_2_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        output_2_ce1 : OUT STD_LOGIC;
        output_2_we1 : OUT STD_LOGIC;
        output_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_3_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        output_3_ce0 : OUT STD_LOGIC;
        output_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_3_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        output_3_ce1 : OUT STD_LOGIC;
        output_3_we1 : OUT STD_LOGIC;
        output_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        spectrogram_3_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        spectrogram_3_ce0 : OUT STD_LOGIC;
        spectrogram_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        spectrogram_0_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        spectrogram_0_ce0 : OUT STD_LOGIC;
        spectrogram_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        spectrogram_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        spectrogram_1_ce0 : OUT STD_LOGIC;
        spectrogram_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        spectrogram_2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        spectrogram_2_ce0 : OUT STD_LOGIC;
        spectrogram_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component weight_loader IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        weight_in_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_in_TVALID : IN STD_LOGIC;
        weight_in_TREADY : OUT STD_LOGIC;
        weight_in_TLAST : IN STD_LOGIC;
        data_in_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        data_in_TVALID : IN STD_LOGIC;
        data_in_TREADY : OUT STD_LOGIC;
        data_in_TLAST : IN STD_LOGIC;
        cosines_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_0_ce0 : OUT STD_LOGIC;
        cosines_0_we0 : OUT STD_LOGIC;
        cosines_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        cosines_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_1_ce0 : OUT STD_LOGIC;
        cosines_1_we0 : OUT STD_LOGIC;
        cosines_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        cosines_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_2_ce0 : OUT STD_LOGIC;
        cosines_2_we0 : OUT STD_LOGIC;
        cosines_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        cosines_3_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_3_ce0 : OUT STD_LOGIC;
        cosines_3_we0 : OUT STD_LOGIC;
        cosines_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        cosines_4_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_4_ce0 : OUT STD_LOGIC;
        cosines_4_we0 : OUT STD_LOGIC;
        cosines_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        cosines_5_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_5_ce0 : OUT STD_LOGIC;
        cosines_5_we0 : OUT STD_LOGIC;
        cosines_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        cosines_6_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_6_ce0 : OUT STD_LOGIC;
        cosines_6_we0 : OUT STD_LOGIC;
        cosines_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        cosines_7_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_7_ce0 : OUT STD_LOGIC;
        cosines_7_we0 : OUT STD_LOGIC;
        cosines_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        cosines_8_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_8_ce0 : OUT STD_LOGIC;
        cosines_8_we0 : OUT STD_LOGIC;
        cosines_8_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        cosines_9_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_9_ce0 : OUT STD_LOGIC;
        cosines_9_we0 : OUT STD_LOGIC;
        cosines_9_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        cosines_10_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_10_ce0 : OUT STD_LOGIC;
        cosines_10_we0 : OUT STD_LOGIC;
        cosines_10_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        cosines_11_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_11_ce0 : OUT STD_LOGIC;
        cosines_11_we0 : OUT STD_LOGIC;
        cosines_11_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        cosines_12_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_12_ce0 : OUT STD_LOGIC;
        cosines_12_we0 : OUT STD_LOGIC;
        cosines_12_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        cosines_13_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_13_ce0 : OUT STD_LOGIC;
        cosines_13_we0 : OUT STD_LOGIC;
        cosines_13_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        cosines_14_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_14_ce0 : OUT STD_LOGIC;
        cosines_14_we0 : OUT STD_LOGIC;
        cosines_14_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        cosines_15_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_15_ce0 : OUT STD_LOGIC;
        cosines_15_we0 : OUT STD_LOGIC;
        cosines_15_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        cosines_16_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_16_ce0 : OUT STD_LOGIC;
        cosines_16_we0 : OUT STD_LOGIC;
        cosines_16_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        cosines_17_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_17_ce0 : OUT STD_LOGIC;
        cosines_17_we0 : OUT STD_LOGIC;
        cosines_17_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        cosines_18_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_18_ce0 : OUT STD_LOGIC;
        cosines_18_we0 : OUT STD_LOGIC;
        cosines_18_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        cosines_19_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cosines_19_ce0 : OUT STD_LOGIC;
        cosines_19_we0 : OUT STD_LOGIC;
        cosines_19_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        weight_bias_scale_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_bias_scale_ce0 : OUT STD_LOGIC;
        weight_bias_scale_we0 : OUT STD_LOGIC;
        weight_bias_scale_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        tmp_scale_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        tmp_scale_ce0 : OUT STD_LOGIC;
        tmp_scale_we0 : OUT STD_LOGIC;
        tmp_scale_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        pw_weight1_V_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        pw_weight1_V_2_ce0 : OUT STD_LOGIC;
        pw_weight1_V_2_we0 : OUT STD_LOGIC;
        pw_weight1_V_2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        pw_weight1_V_2_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        pw_weight1_V_2_ce1 : OUT STD_LOGIC;
        pw_weight1_V_2_we1 : OUT STD_LOGIC;
        pw_weight1_V_2_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        bn_bias1_V_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        bn_bias1_V_2_ce0 : OUT STD_LOGIC;
        bn_bias1_V_2_we0 : OUT STD_LOGIC;
        bn_bias1_V_2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        bn_bias1_V_2_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        bn_bias1_V_2_ce1 : OUT STD_LOGIC;
        bn_bias1_V_2_we1 : OUT STD_LOGIC;
        bn_bias1_V_2_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        weights_ru_V_2_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        weights_ru_V_2_ce0 : OUT STD_LOGIC;
        weights_ru_V_2_we0 : OUT STD_LOGIC;
        weights_ru_V_2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        weights_rw_V_2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        weights_rw_V_2_ce0 : OUT STD_LOGIC;
        weights_rw_V_2_we0 : OUT STD_LOGIC;
        weights_rw_V_2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        bias_r_V_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        bias_r_V_2_ce0 : OUT STD_LOGIC;
        bias_r_V_2_we0 : OUT STD_LOGIC;
        bias_r_V_2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        weights_zu_V_2_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        weights_zu_V_2_ce0 : OUT STD_LOGIC;
        weights_zu_V_2_we0 : OUT STD_LOGIC;
        weights_zu_V_2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        weights_zw_V_2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        weights_zw_V_2_ce0 : OUT STD_LOGIC;
        weights_zw_V_2_we0 : OUT STD_LOGIC;
        weights_zw_V_2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        bias_z_V_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        bias_z_V_2_ce0 : OUT STD_LOGIC;
        bias_z_V_2_we0 : OUT STD_LOGIC;
        bias_z_V_2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        bias_z_V_2_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        bias_z_V_2_ce1 : OUT STD_LOGIC;
        bias_z_V_2_we1 : OUT STD_LOGIC;
        bias_z_V_2_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        weights_hu_V_2_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        weights_hu_V_2_ce0 : OUT STD_LOGIC;
        weights_hu_V_2_we0 : OUT STD_LOGIC;
        weights_hu_V_2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        weights_hw_V_2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        weights_hw_V_2_ce0 : OUT STD_LOGIC;
        weights_hw_V_2_we0 : OUT STD_LOGIC;
        weights_hw_V_2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        bias_h_V_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        bias_h_V_2_ce0 : OUT STD_LOGIC;
        bias_h_V_2_we0 : OUT STD_LOGIC;
        bias_h_V_2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        bias_h_V_2_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        bias_h_V_2_ce1 : OUT STD_LOGIC;
        bias_h_V_2_we1 : OUT STD_LOGIC;
        bias_h_V_2_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        fc_weights1_V_2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        fc_weights1_V_2_ce0 : OUT STD_LOGIC;
        fc_weights1_V_2_we0 : OUT STD_LOGIC;
        fc_weights1_V_2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        fc_bias1_V_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        fc_bias1_V_2_ce0 : OUT STD_LOGIC;
        fc_bias1_V_2_we0 : OUT STD_LOGIC;
        fc_bias1_V_2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        fc_bias1_V_2_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        fc_bias1_V_2_ce1 : OUT STD_LOGIC;
        fc_bias1_V_2_we1 : OUT STD_LOGIC;
        fc_bias1_V_2_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        fc_weights2_V_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        fc_weights2_V_2_ce0 : OUT STD_LOGIC;
        fc_weights2_V_2_we0 : OUT STD_LOGIC;
        fc_weights2_V_2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        fc_bias2_V_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        fc_bias2_V_2_ce0 : OUT STD_LOGIC;
        fc_bias2_V_2_we0 : OUT STD_LOGIC;
        fc_bias2_V_2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        fc_bias2_V_2_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        fc_bias2_V_2_ce1 : OUT STD_LOGIC;
        fc_bias2_V_2_we1 : OUT STD_LOGIC;
        fc_bias2_V_2_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component datastream_out_12u_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        output_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        output_V_empty_n : IN STD_LOGIC;
        output_V_read : OUT STD_LOGIC;
        data_out_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        data_out_TVALID : OUT STD_LOGIC;
        data_out_TREADY : IN STD_LOGIC;
        data_out_TLAST : OUT STD_LOGIC );
    end component;


    component kws_fadd_32ns_32nwdI IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component kws_fmul_32ns_32neOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component kws_sitofp_32s_32OgC IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component kws_fcmp_32ns_32nHfu IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component kws_mux_816_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component kws_cosines_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component kws_weight_bias_sZio IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component kws_tmp_scale IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component kws_pw_weight1_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component kws_weights_ru_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component kws_weights_rw_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component kws_bias_r_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component kws_bias_z_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component kws_fc_weights2_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component kws_indices IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (12 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component kws_signal_in_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component kws_frames IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component kws_spectrogram_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component kws_spectrogram_1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component kws_fbank_out_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component kws_dct_out_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component kws_dct_out_2 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fifo_w16_d1_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (15 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (15 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w32_d10_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w32_d12_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w8_d10_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w8_d100_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w8_d64_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w32_d1_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;


    component regslice_both_w1 IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC;
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC;
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    cosines_0_U : component kws_cosines_0
    generic map (
        DataWidth => 32,
        AddressRange => 36,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => cosines_0_address0,
        ce0 => cosines_0_ce0,
        we0 => cosines_0_we0,
        d0 => grp_weight_loader_fu_2101_cosines_0_d0,
        q0 => cosines_0_q0);

    cosines_1_U : component kws_cosines_0
    generic map (
        DataWidth => 32,
        AddressRange => 36,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => cosines_1_address0,
        ce0 => cosines_1_ce0,
        we0 => cosines_1_we0,
        d0 => grp_weight_loader_fu_2101_cosines_1_d0,
        q0 => cosines_1_q0);

    cosines_2_U : component kws_cosines_0
    generic map (
        DataWidth => 32,
        AddressRange => 36,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => cosines_2_address0,
        ce0 => cosines_2_ce0,
        we0 => cosines_2_we0,
        d0 => grp_weight_loader_fu_2101_cosines_2_d0,
        q0 => cosines_2_q0);

    cosines_3_U : component kws_cosines_0
    generic map (
        DataWidth => 32,
        AddressRange => 36,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => cosines_3_address0,
        ce0 => cosines_3_ce0,
        we0 => cosines_3_we0,
        d0 => grp_weight_loader_fu_2101_cosines_3_d0,
        q0 => cosines_3_q0);

    cosines_4_U : component kws_cosines_0
    generic map (
        DataWidth => 32,
        AddressRange => 36,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => cosines_4_address0,
        ce0 => cosines_4_ce0,
        we0 => cosines_4_we0,
        d0 => grp_weight_loader_fu_2101_cosines_4_d0,
        q0 => cosines_4_q0);

    cosines_5_U : component kws_cosines_0
    generic map (
        DataWidth => 32,
        AddressRange => 36,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => cosines_5_address0,
        ce0 => cosines_5_ce0,
        we0 => cosines_5_we0,
        d0 => grp_weight_loader_fu_2101_cosines_5_d0,
        q0 => cosines_5_q0);

    cosines_6_U : component kws_cosines_0
    generic map (
        DataWidth => 32,
        AddressRange => 36,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => cosines_6_address0,
        ce0 => cosines_6_ce0,
        we0 => cosines_6_we0,
        d0 => grp_weight_loader_fu_2101_cosines_6_d0,
        q0 => cosines_6_q0);

    cosines_7_U : component kws_cosines_0
    generic map (
        DataWidth => 32,
        AddressRange => 36,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => cosines_7_address0,
        ce0 => cosines_7_ce0,
        we0 => cosines_7_we0,
        d0 => grp_weight_loader_fu_2101_cosines_7_d0,
        q0 => cosines_7_q0);

    cosines_8_U : component kws_cosines_0
    generic map (
        DataWidth => 32,
        AddressRange => 36,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => cosines_8_address0,
        ce0 => cosines_8_ce0,
        we0 => cosines_8_we0,
        d0 => grp_weight_loader_fu_2101_cosines_8_d0,
        q0 => cosines_8_q0);

    cosines_9_U : component kws_cosines_0
    generic map (
        DataWidth => 32,
        AddressRange => 36,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => cosines_9_address0,
        ce0 => cosines_9_ce0,
        we0 => cosines_9_we0,
        d0 => grp_weight_loader_fu_2101_cosines_9_d0,
        q0 => cosines_9_q0);

    cosines_10_U : component kws_cosines_0
    generic map (
        DataWidth => 32,
        AddressRange => 36,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => cosines_10_address0,
        ce0 => cosines_10_ce0,
        we0 => cosines_10_we0,
        d0 => grp_weight_loader_fu_2101_cosines_10_d0,
        q0 => cosines_10_q0);

    cosines_11_U : component kws_cosines_0
    generic map (
        DataWidth => 32,
        AddressRange => 36,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => cosines_11_address0,
        ce0 => cosines_11_ce0,
        we0 => cosines_11_we0,
        d0 => grp_weight_loader_fu_2101_cosines_11_d0,
        q0 => cosines_11_q0);

    cosines_12_U : component kws_cosines_0
    generic map (
        DataWidth => 32,
        AddressRange => 36,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => cosines_12_address0,
        ce0 => cosines_12_ce0,
        we0 => cosines_12_we0,
        d0 => grp_weight_loader_fu_2101_cosines_12_d0,
        q0 => cosines_12_q0);

    cosines_13_U : component kws_cosines_0
    generic map (
        DataWidth => 32,
        AddressRange => 36,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => cosines_13_address0,
        ce0 => cosines_13_ce0,
        we0 => cosines_13_we0,
        d0 => grp_weight_loader_fu_2101_cosines_13_d0,
        q0 => cosines_13_q0);

    cosines_14_U : component kws_cosines_0
    generic map (
        DataWidth => 32,
        AddressRange => 36,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => cosines_14_address0,
        ce0 => cosines_14_ce0,
        we0 => cosines_14_we0,
        d0 => grp_weight_loader_fu_2101_cosines_14_d0,
        q0 => cosines_14_q0);

    cosines_15_U : component kws_cosines_0
    generic map (
        DataWidth => 32,
        AddressRange => 36,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => cosines_15_address0,
        ce0 => cosines_15_ce0,
        we0 => cosines_15_we0,
        d0 => grp_weight_loader_fu_2101_cosines_15_d0,
        q0 => cosines_15_q0);

    cosines_16_U : component kws_cosines_0
    generic map (
        DataWidth => 32,
        AddressRange => 36,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => cosines_16_address0,
        ce0 => cosines_16_ce0,
        we0 => cosines_16_we0,
        d0 => grp_weight_loader_fu_2101_cosines_16_d0,
        q0 => cosines_16_q0);

    cosines_17_U : component kws_cosines_0
    generic map (
        DataWidth => 32,
        AddressRange => 36,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => cosines_17_address0,
        ce0 => cosines_17_ce0,
        we0 => cosines_17_we0,
        d0 => grp_weight_loader_fu_2101_cosines_17_d0,
        q0 => cosines_17_q0);

    cosines_18_U : component kws_cosines_0
    generic map (
        DataWidth => 32,
        AddressRange => 36,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => cosines_18_address0,
        ce0 => cosines_18_ce0,
        we0 => cosines_18_we0,
        d0 => grp_weight_loader_fu_2101_cosines_18_d0,
        q0 => cosines_18_q0);

    cosines_19_U : component kws_cosines_0
    generic map (
        DataWidth => 32,
        AddressRange => 36,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => cosines_19_address0,
        ce0 => cosines_19_ce0,
        we0 => cosines_19_we0,
        d0 => grp_weight_loader_fu_2101_cosines_19_d0,
        q0 => cosines_19_q0);

    weight_bias_scale_U : component kws_weight_bias_sZio
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => weight_bias_scale_address0,
        ce0 => weight_bias_scale_ce0,
        we0 => grp_weight_loader_fu_2101_weight_bias_scale_we0,
        d0 => grp_weight_loader_fu_2101_weight_bias_scale_d0,
        q0 => weight_bias_scale_q0,
        address1 => weight_bias_scale_address1,
        ce1 => weight_bias_scale_ce1,
        q1 => weight_bias_scale_q1);

    tmp_scale_U : component kws_tmp_scale
    generic map (
        DataWidth => 32,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => tmp_scale_address0,
        ce0 => tmp_scale_ce0,
        we0 => grp_weight_loader_fu_2101_tmp_scale_we0,
        d0 => grp_weight_loader_fu_2101_tmp_scale_d0,
        q0 => tmp_scale_q0,
        address1 => tmp_scale_address1,
        ce1 => tmp_scale_ce1,
        q1 => tmp_scale_q1);

    pw_weight1_V_U : component kws_pw_weight1_V
    generic map (
        DataWidth => 8,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => pw_weight1_V_address0,
        ce0 => pw_weight1_V_ce0,
        we0 => pw_weight1_V_we0,
        d0 => grp_weight_loader_fu_2101_pw_weight1_V_2_d0,
        q0 => pw_weight1_V_q0,
        address1 => grp_weight_loader_fu_2101_pw_weight1_V_2_address1,
        ce1 => pw_weight1_V_ce1,
        we1 => pw_weight1_V_we1,
        d1 => grp_weight_loader_fu_2101_pw_weight1_V_2_d1);

    bn_bias1_V_U : component kws_pw_weight1_V
    generic map (
        DataWidth => 8,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => bn_bias1_V_address0,
        ce0 => bn_bias1_V_ce0,
        we0 => bn_bias1_V_we0,
        d0 => grp_weight_loader_fu_2101_bn_bias1_V_2_d0,
        q0 => bn_bias1_V_q0,
        address1 => grp_weight_loader_fu_2101_bn_bias1_V_2_address1,
        ce1 => bn_bias1_V_ce1,
        we1 => bn_bias1_V_we1,
        d1 => grp_weight_loader_fu_2101_bn_bias1_V_2_d1);

    weights_ru_V_U : component kws_weights_ru_V
    generic map (
        DataWidth => 8,
        AddressRange => 6144,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => weights_ru_V_address0,
        ce0 => weights_ru_V_ce0,
        we0 => weights_ru_V_we0,
        d0 => grp_weight_loader_fu_2101_weights_ru_V_2_d0,
        q0 => weights_ru_V_q0);

    weights_rw_V_U : component kws_weights_rw_V
    generic map (
        DataWidth => 8,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => weights_rw_V_address0,
        ce0 => weights_rw_V_ce0,
        we0 => weights_rw_V_we0,
        d0 => grp_weight_loader_fu_2101_weights_rw_V_2_d0,
        q0 => weights_rw_V_q0);

    bias_r_V_U : component kws_bias_r_V
    generic map (
        DataWidth => 8,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => bias_r_V_address0,
        ce0 => bias_r_V_ce0,
        we0 => bias_r_V_we0,
        d0 => grp_weight_loader_fu_2101_bias_r_V_2_d0,
        q0 => bias_r_V_q0);

    weights_zu_V_U : component kws_weights_ru_V
    generic map (
        DataWidth => 8,
        AddressRange => 6144,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => weights_zu_V_address0,
        ce0 => weights_zu_V_ce0,
        we0 => weights_zu_V_we0,
        d0 => grp_weight_loader_fu_2101_weights_zu_V_2_d0,
        q0 => weights_zu_V_q0);

    weights_zw_V_U : component kws_weights_rw_V
    generic map (
        DataWidth => 8,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => weights_zw_V_address0,
        ce0 => weights_zw_V_ce0,
        we0 => weights_zw_V_we0,
        d0 => grp_weight_loader_fu_2101_weights_zw_V_2_d0,
        q0 => weights_zw_V_q0);

    bias_z_V_U : component kws_bias_z_V
    generic map (
        DataWidth => 8,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => bias_z_V_address0,
        ce0 => bias_z_V_ce0,
        we0 => bias_z_V_we0,
        d0 => grp_weight_loader_fu_2101_bias_z_V_2_d0,
        q0 => bias_z_V_q0,
        address1 => grp_weight_loader_fu_2101_bias_z_V_2_address1,
        ce1 => bias_z_V_ce1,
        we1 => bias_z_V_we1,
        d1 => grp_weight_loader_fu_2101_bias_z_V_2_d1);

    weights_hu_V_U : component kws_weights_ru_V
    generic map (
        DataWidth => 8,
        AddressRange => 6144,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => weights_hu_V_address0,
        ce0 => weights_hu_V_ce0,
        we0 => weights_hu_V_we0,
        d0 => grp_weight_loader_fu_2101_weights_hu_V_2_d0,
        q0 => weights_hu_V_q0);

    weights_hw_V_U : component kws_weights_rw_V
    generic map (
        DataWidth => 8,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => weights_hw_V_address0,
        ce0 => weights_hw_V_ce0,
        we0 => weights_hw_V_we0,
        d0 => grp_weight_loader_fu_2101_weights_hw_V_2_d0,
        q0 => weights_hw_V_q0);

    bias_h_V_U : component kws_bias_z_V
    generic map (
        DataWidth => 8,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => bias_h_V_address0,
        ce0 => bias_h_V_ce0,
        we0 => bias_h_V_we0,
        d0 => grp_weight_loader_fu_2101_bias_h_V_2_d0,
        q0 => bias_h_V_q0,
        address1 => grp_weight_loader_fu_2101_bias_h_V_2_address1,
        ce1 => bias_h_V_ce1,
        we1 => bias_h_V_we1,
        d1 => grp_weight_loader_fu_2101_bias_h_V_2_d1);

    fc_weights1_V_U : component kws_weights_rw_V
    generic map (
        DataWidth => 8,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => fc_weights1_V_address0,
        ce0 => fc_weights1_V_ce0,
        we0 => fc_weights1_V_we0,
        d0 => grp_weight_loader_fu_2101_fc_weights1_V_2_d0,
        q0 => fc_weights1_V_q0);

    fc_bias1_V_U : component kws_bias_z_V
    generic map (
        DataWidth => 8,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => fc_bias1_V_address0,
        ce0 => fc_bias1_V_ce0,
        we0 => fc_bias1_V_we0,
        d0 => grp_weight_loader_fu_2101_fc_bias1_V_2_d0,
        q0 => fc_bias1_V_q0,
        address1 => grp_weight_loader_fu_2101_fc_bias1_V_2_address1,
        ce1 => fc_bias1_V_ce1,
        we1 => fc_bias1_V_we1,
        d1 => grp_weight_loader_fu_2101_fc_bias1_V_2_d1);

    fc_weights2_V_U : component kws_fc_weights2_V
    generic map (
        DataWidth => 8,
        AddressRange => 768,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => fc_weights2_V_address0,
        ce0 => fc_weights2_V_ce0,
        we0 => fc_weights2_V_we0,
        d0 => grp_weight_loader_fu_2101_fc_weights2_V_2_d0,
        q0 => fc_weights2_V_q0);

    fc_bias2_V_U : component kws_pw_weight1_V
    generic map (
        DataWidth => 8,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => fc_bias2_V_address0,
        ce0 => fc_bias2_V_ce0,
        we0 => fc_bias2_V_we0,
        d0 => grp_weight_loader_fu_2101_fc_bias2_V_2_d0,
        q0 => fc_bias2_V_q0,
        address1 => grp_weight_loader_fu_2101_fc_bias2_V_2_address1,
        ce1 => fc_bias2_V_ce1,
        we1 => fc_bias2_V_we1,
        d1 => grp_weight_loader_fu_2101_fc_bias2_V_2_d1);

    indices_U : component kws_indices
    generic map (
        DataWidth => 13,
        AddressRange => 15680,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => indices_address0,
        ce0 => indices_ce0,
        we0 => indices_we0,
        d0 => indices_d0,
        q0 => indices_q0);

    signal_in_0_U : component kws_signal_in_0
    generic map (
        DataWidth => 32,
        AddressRange => 1000,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => signal_in_0_address0,
        ce0 => signal_in_0_ce0,
        q0 => signal_in_0_q0,
        address1 => signal_in_0_address1,
        ce1 => signal_in_0_ce1,
        we1 => signal_in_0_we1,
        d1 => reg_2235);

    signal_in_1_U : component kws_signal_in_0
    generic map (
        DataWidth => 32,
        AddressRange => 1000,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => signal_in_1_address0,
        ce0 => signal_in_1_ce0,
        q0 => signal_in_1_q0,
        address1 => signal_in_1_address1,
        ce1 => signal_in_1_ce1,
        we1 => signal_in_1_we1,
        d1 => reg_2235);

    signal_in_2_U : component kws_signal_in_0
    generic map (
        DataWidth => 32,
        AddressRange => 1000,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => signal_in_2_address0,
        ce0 => signal_in_2_ce0,
        q0 => signal_in_2_q0,
        address1 => signal_in_2_address1,
        ce1 => signal_in_2_ce1,
        we1 => signal_in_2_we1,
        d1 => reg_2235);

    signal_in_3_U : component kws_signal_in_0
    generic map (
        DataWidth => 32,
        AddressRange => 1000,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => signal_in_3_address0,
        ce0 => signal_in_3_ce0,
        q0 => signal_in_3_q0,
        address1 => signal_in_3_address1,
        ce1 => signal_in_3_ce1,
        we1 => signal_in_3_we1,
        d1 => reg_2235);

    signal_in_4_U : component kws_signal_in_0
    generic map (
        DataWidth => 32,
        AddressRange => 1000,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => signal_in_4_address0,
        ce0 => signal_in_4_ce0,
        q0 => signal_in_4_q0,
        address1 => signal_in_4_address1,
        ce1 => signal_in_4_ce1,
        we1 => signal_in_4_we1,
        d1 => reg_2235);

    signal_in_5_U : component kws_signal_in_0
    generic map (
        DataWidth => 32,
        AddressRange => 1000,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => signal_in_5_address0,
        ce0 => signal_in_5_ce0,
        q0 => signal_in_5_q0,
        address1 => signal_in_5_address1,
        ce1 => signal_in_5_ce1,
        we1 => signal_in_5_we1,
        d1 => reg_2235);

    signal_in_6_U : component kws_signal_in_0
    generic map (
        DataWidth => 32,
        AddressRange => 1000,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => signal_in_6_address0,
        ce0 => signal_in_6_ce0,
        q0 => signal_in_6_q0,
        address1 => signal_in_6_address1,
        ce1 => signal_in_6_ce1,
        we1 => signal_in_6_we1,
        d1 => reg_2235);

    signal_in_7_U : component kws_signal_in_0
    generic map (
        DataWidth => 32,
        AddressRange => 1000,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => signal_in_7_address0,
        ce0 => signal_in_7_ce0,
        q0 => signal_in_7_q0,
        address1 => signal_in_7_address1,
        ce1 => signal_in_7_ce1,
        we1 => signal_in_7_we1,
        d1 => reg_2235);

    frames_U : component kws_frames
    generic map (
        DataWidth => 32,
        AddressRange => 15680,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => frames_address0,
        ce0 => frames_ce0,
        we0 => frames_we0,
        d0 => frames_d0,
        q0 => frames_q0,
        address1 => grp_calc_stft_fu_1919_frames_address1,
        ce1 => frames_ce1,
        we1 => frames_we1,
        d1 => grp_calc_stft_fu_1919_frames_d1);

    spectrogram_0_U : component kws_spectrogram_0
    generic map (
        DataWidth => 32,
        AddressRange => 3185,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_fbank_fu_2077_spectrogram_0_address0,
        ce0 => spectrogram_0_ce0,
        q0 => spectrogram_0_q0,
        address1 => grp_calc_stft_fu_1919_spectrogram_0_address1,
        ce1 => spectrogram_0_ce1,
        we1 => spectrogram_0_we1,
        d1 => grp_calc_stft_fu_1919_spectrogram_0_d1);

    spectrogram_1_U : component kws_spectrogram_1
    generic map (
        DataWidth => 32,
        AddressRange => 3136,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_fbank_fu_2077_spectrogram_1_address0,
        ce0 => spectrogram_1_ce0,
        q0 => spectrogram_1_q0,
        address1 => grp_calc_stft_fu_1919_spectrogram_1_address1,
        ce1 => spectrogram_1_ce1,
        we1 => spectrogram_1_we1,
        d1 => grp_calc_stft_fu_1919_spectrogram_1_d1);

    spectrogram_2_U : component kws_spectrogram_1
    generic map (
        DataWidth => 32,
        AddressRange => 3136,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_fbank_fu_2077_spectrogram_2_address0,
        ce0 => spectrogram_2_ce0,
        q0 => spectrogram_2_q0,
        address1 => grp_calc_stft_fu_1919_spectrogram_2_address1,
        ce1 => spectrogram_2_ce1,
        we1 => spectrogram_2_we1,
        d1 => grp_calc_stft_fu_1919_spectrogram_2_d1);

    spectrogram_3_U : component kws_spectrogram_1
    generic map (
        DataWidth => 32,
        AddressRange => 3136,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_fbank_fu_2077_spectrogram_3_address0,
        ce0 => spectrogram_3_ce0,
        q0 => spectrogram_3_q0,
        address1 => grp_calc_stft_fu_1919_spectrogram_3_address1,
        ce1 => spectrogram_3_ce1,
        we1 => spectrogram_3_we1,
        d1 => grp_calc_stft_fu_1919_spectrogram_3_d1);

    fbank_out_0_U : component kws_fbank_out_0
    generic map (
        DataWidth => 32,
        AddressRange => 490,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => fbank_out_0_address0,
        ce0 => fbank_out_0_ce0,
        q0 => fbank_out_0_q0,
        address1 => fbank_out_0_address1,
        ce1 => fbank_out_0_ce1,
        we1 => fbank_out_0_we1,
        d1 => fbank_out_0_d1,
        q1 => fbank_out_0_q1);

    fbank_out_1_U : component kws_fbank_out_0
    generic map (
        DataWidth => 32,
        AddressRange => 490,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => fbank_out_1_address0,
        ce0 => fbank_out_1_ce0,
        q0 => fbank_out_1_q0,
        address1 => fbank_out_1_address1,
        ce1 => fbank_out_1_ce1,
        we1 => fbank_out_1_we1,
        d1 => fbank_out_1_d1,
        q1 => fbank_out_1_q1);

    fbank_out_2_U : component kws_fbank_out_0
    generic map (
        DataWidth => 32,
        AddressRange => 490,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => fbank_out_2_address0,
        ce0 => fbank_out_2_ce0,
        q0 => fbank_out_2_q0,
        address1 => fbank_out_2_address1,
        ce1 => fbank_out_2_ce1,
        we1 => fbank_out_2_we1,
        d1 => fbank_out_2_d1,
        q1 => fbank_out_2_q1);

    fbank_out_3_U : component kws_fbank_out_0
    generic map (
        DataWidth => 32,
        AddressRange => 490,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => fbank_out_3_address0,
        ce0 => fbank_out_3_ce0,
        q0 => fbank_out_3_q0,
        address1 => fbank_out_3_address1,
        ce1 => fbank_out_3_ce1,
        we1 => fbank_out_3_we1,
        d1 => fbank_out_3_d1,
        q1 => fbank_out_3_q1);

    dct_out_0_U : component kws_dct_out_0
    generic map (
        DataWidth => 32,
        AddressRange => 147,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => dct_out_0_address0,
        ce0 => dct_out_0_ce0,
        q0 => dct_out_0_q0,
        address1 => grp_mfcc_dct_fu_1859_dct_out_0_address1,
        ce1 => dct_out_0_ce1,
        we1 => dct_out_0_we1,
        d1 => grp_mfcc_dct_fu_1859_dct_out_0_d1);

    dct_out_1_U : component kws_dct_out_0
    generic map (
        DataWidth => 32,
        AddressRange => 147,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => dct_out_1_address0,
        ce0 => dct_out_1_ce0,
        q0 => dct_out_1_q0,
        address1 => grp_mfcc_dct_fu_1859_dct_out_1_address1,
        ce1 => dct_out_1_ce1,
        we1 => dct_out_1_we1,
        d1 => grp_mfcc_dct_fu_1859_dct_out_1_d1);

    dct_out_2_U : component kws_dct_out_2
    generic map (
        DataWidth => 32,
        AddressRange => 98,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => dct_out_2_address0,
        ce0 => dct_out_2_ce0,
        q0 => dct_out_2_q0,
        address1 => grp_mfcc_dct_fu_1859_dct_out_2_address1,
        ce1 => dct_out_2_ce1,
        we1 => dct_out_2_we1,
        d1 => grp_mfcc_dct_fu_1859_dct_out_2_d1);

    dct_out_3_U : component kws_dct_out_2
    generic map (
        DataWidth => 32,
        AddressRange => 98,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => dct_out_3_address0,
        ce0 => dct_out_3_ce0,
        q0 => dct_out_3_q0,
        address1 => grp_mfcc_dct_fu_1859_dct_out_3_address1,
        ce1 => dct_out_3_ce1,
        we1 => dct_out_3_we1,
        d1 => grp_mfcc_dct_fu_1859_dct_out_3_d1);

    grp_grucell_fu_1800 : component grucell
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_grucell_fu_1800_ap_start,
        ap_done => grp_grucell_fu_1800_ap_done,
        ap_idle => grp_grucell_fu_1800_ap_idle,
        ap_ready => grp_grucell_fu_1800_ap_ready,
        in_stream_V_V_dout => pw12gru_quant_V_V_dout,
        in_stream_V_V_empty_n => pw12gru_quant_V_V_empty_n,
        in_stream_V_V_read => grp_grucell_fu_1800_in_stream_V_V_read,
        out_stream_V_V_din => grp_grucell_fu_1800_out_stream_V_V_din,
        out_stream_V_V_full_n => gru2fc_quant_V_V_full_n,
        out_stream_V_V_write => grp_grucell_fu_1800_out_stream_V_V_write,
        keep_stream_V_dout => keepout_V_dout,
        keep_stream_V_empty_n => keepout_V_empty_n,
        keep_stream_V_read => grp_grucell_fu_1800_keep_stream_V_read,
        pw12gru_scale_V_dout => pw12gru_scale_V_dout,
        pw12gru_scale_V_empty_n => pw12gru_scale_V_empty_n,
        pw12gru_scale_V_read => grp_grucell_fu_1800_pw12gru_scale_V_read,
        gru2fc_scale_V_din => grp_grucell_fu_1800_gru2fc_scale_V_din,
        gru2fc_scale_V_full_n => gru2fc_scale_V_full_n,
        gru2fc_scale_V_write => grp_grucell_fu_1800_gru2fc_scale_V_write,
        zu_weights_scale => reg_2256,
        ru_weights_scale => weight_bias_scale_lo_3_reg_4072,
        hu_weights_scale => weight_bias_scale_lo_4_reg_4077,
        tmp_scale_gru1 => tmp_scale_load_3_reg_4047,
        tmp_scale_gru2 => reg_2266,
        tmp_scale_gru3 => tmp_scale_load_5_reg_4057,
        tmp_scale_gru4 => tmp_scale_load_6_reg_4062,
        tmp_scale_gru5 => tmp_scale_load_7_reg_4067,
        tmp_scale_gru6 => tmp_scale_load_8_reg_4082,
        tmp_scale_gru7 => tmp_scale_load_9_reg_4087,
        weights_zu_V_address0 => grp_grucell_fu_1800_weights_zu_V_address0,
        weights_zu_V_ce0 => grp_grucell_fu_1800_weights_zu_V_ce0,
        weights_zu_V_q0 => weights_zu_V_q0,
        weights_ru_V_address0 => grp_grucell_fu_1800_weights_ru_V_address0,
        weights_ru_V_ce0 => grp_grucell_fu_1800_weights_ru_V_ce0,
        weights_ru_V_q0 => weights_ru_V_q0,
        weights_zw_V_address0 => grp_grucell_fu_1800_weights_zw_V_address0,
        weights_zw_V_ce0 => grp_grucell_fu_1800_weights_zw_V_ce0,
        weights_zw_V_q0 => weights_zw_V_q0,
        weights_rw_V_address0 => grp_grucell_fu_1800_weights_rw_V_address0,
        weights_rw_V_ce0 => grp_grucell_fu_1800_weights_rw_V_ce0,
        weights_rw_V_q0 => weights_rw_V_q0,
        bias_z_V_address0 => grp_grucell_fu_1800_bias_z_V_address0,
        bias_z_V_ce0 => grp_grucell_fu_1800_bias_z_V_ce0,
        bias_z_V_q0 => bias_z_V_q0,
        bias_r_V_address0 => grp_grucell_fu_1800_bias_r_V_address0,
        bias_r_V_ce0 => grp_grucell_fu_1800_bias_r_V_ce0,
        bias_r_V_q0 => bias_r_V_q0,
        weights_hw_V_address0 => grp_grucell_fu_1800_weights_hw_V_address0,
        weights_hw_V_ce0 => grp_grucell_fu_1800_weights_hw_V_ce0,
        weights_hw_V_q0 => weights_hw_V_q0,
        weights_hu_V_address0 => grp_grucell_fu_1800_weights_hu_V_address0,
        weights_hu_V_ce0 => grp_grucell_fu_1800_weights_hu_V_ce0,
        weights_hu_V_q0 => weights_hu_V_q0,
        bias_h_V_address0 => grp_grucell_fu_1800_bias_h_V_address0,
        bias_h_V_ce0 => grp_grucell_fu_1800_bias_h_V_ce0,
        bias_h_V_q0 => bias_h_V_q0);

    grp_mfcc_dct_fu_1859 : component mfcc_dct
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_mfcc_dct_fu_1859_ap_start,
        ap_done => grp_mfcc_dct_fu_1859_ap_done,
        ap_idle => grp_mfcc_dct_fu_1859_ap_idle,
        ap_ready => grp_mfcc_dct_fu_1859_ap_ready,
        dct_out_0_address1 => grp_mfcc_dct_fu_1859_dct_out_0_address1,
        dct_out_0_ce1 => grp_mfcc_dct_fu_1859_dct_out_0_ce1,
        dct_out_0_we1 => grp_mfcc_dct_fu_1859_dct_out_0_we1,
        dct_out_0_d1 => grp_mfcc_dct_fu_1859_dct_out_0_d1,
        dct_out_1_address1 => grp_mfcc_dct_fu_1859_dct_out_1_address1,
        dct_out_1_ce1 => grp_mfcc_dct_fu_1859_dct_out_1_ce1,
        dct_out_1_we1 => grp_mfcc_dct_fu_1859_dct_out_1_we1,
        dct_out_1_d1 => grp_mfcc_dct_fu_1859_dct_out_1_d1,
        dct_out_2_address1 => grp_mfcc_dct_fu_1859_dct_out_2_address1,
        dct_out_2_ce1 => grp_mfcc_dct_fu_1859_dct_out_2_ce1,
        dct_out_2_we1 => grp_mfcc_dct_fu_1859_dct_out_2_we1,
        dct_out_2_d1 => grp_mfcc_dct_fu_1859_dct_out_2_d1,
        dct_out_3_address1 => grp_mfcc_dct_fu_1859_dct_out_3_address1,
        dct_out_3_ce1 => grp_mfcc_dct_fu_1859_dct_out_3_ce1,
        dct_out_3_we1 => grp_mfcc_dct_fu_1859_dct_out_3_we1,
        dct_out_3_d1 => grp_mfcc_dct_fu_1859_dct_out_3_d1,
        cosines_0_address0 => grp_mfcc_dct_fu_1859_cosines_0_address0,
        cosines_0_ce0 => grp_mfcc_dct_fu_1859_cosines_0_ce0,
        cosines_0_q0 => cosines_0_q0,
        fbank_out_0_address0 => grp_mfcc_dct_fu_1859_fbank_out_0_address0,
        fbank_out_0_ce0 => grp_mfcc_dct_fu_1859_fbank_out_0_ce0,
        fbank_out_0_q0 => fbank_out_0_q0,
        fbank_out_0_address1 => grp_mfcc_dct_fu_1859_fbank_out_0_address1,
        fbank_out_0_ce1 => grp_mfcc_dct_fu_1859_fbank_out_0_ce1,
        fbank_out_0_q1 => fbank_out_0_q1,
        cosines_1_address0 => grp_mfcc_dct_fu_1859_cosines_1_address0,
        cosines_1_ce0 => grp_mfcc_dct_fu_1859_cosines_1_ce0,
        cosines_1_q0 => cosines_1_q0,
        fbank_out_1_address0 => grp_mfcc_dct_fu_1859_fbank_out_1_address0,
        fbank_out_1_ce0 => grp_mfcc_dct_fu_1859_fbank_out_1_ce0,
        fbank_out_1_q0 => fbank_out_1_q0,
        fbank_out_1_address1 => grp_mfcc_dct_fu_1859_fbank_out_1_address1,
        fbank_out_1_ce1 => grp_mfcc_dct_fu_1859_fbank_out_1_ce1,
        fbank_out_1_q1 => fbank_out_1_q1,
        cosines_2_address0 => grp_mfcc_dct_fu_1859_cosines_2_address0,
        cosines_2_ce0 => grp_mfcc_dct_fu_1859_cosines_2_ce0,
        cosines_2_q0 => cosines_2_q0,
        fbank_out_2_address0 => grp_mfcc_dct_fu_1859_fbank_out_2_address0,
        fbank_out_2_ce0 => grp_mfcc_dct_fu_1859_fbank_out_2_ce0,
        fbank_out_2_q0 => fbank_out_2_q0,
        fbank_out_2_address1 => grp_mfcc_dct_fu_1859_fbank_out_2_address1,
        fbank_out_2_ce1 => grp_mfcc_dct_fu_1859_fbank_out_2_ce1,
        fbank_out_2_q1 => fbank_out_2_q1,
        cosines_3_address0 => grp_mfcc_dct_fu_1859_cosines_3_address0,
        cosines_3_ce0 => grp_mfcc_dct_fu_1859_cosines_3_ce0,
        cosines_3_q0 => cosines_3_q0,
        fbank_out_3_address0 => grp_mfcc_dct_fu_1859_fbank_out_3_address0,
        fbank_out_3_ce0 => grp_mfcc_dct_fu_1859_fbank_out_3_ce0,
        fbank_out_3_q0 => fbank_out_3_q0,
        fbank_out_3_address1 => grp_mfcc_dct_fu_1859_fbank_out_3_address1,
        fbank_out_3_ce1 => grp_mfcc_dct_fu_1859_fbank_out_3_ce1,
        fbank_out_3_q1 => fbank_out_3_q1,
        cosines_4_address0 => grp_mfcc_dct_fu_1859_cosines_4_address0,
        cosines_4_ce0 => grp_mfcc_dct_fu_1859_cosines_4_ce0,
        cosines_4_q0 => cosines_4_q0,
        cosines_5_address0 => grp_mfcc_dct_fu_1859_cosines_5_address0,
        cosines_5_ce0 => grp_mfcc_dct_fu_1859_cosines_5_ce0,
        cosines_5_q0 => cosines_5_q0,
        cosines_6_address0 => grp_mfcc_dct_fu_1859_cosines_6_address0,
        cosines_6_ce0 => grp_mfcc_dct_fu_1859_cosines_6_ce0,
        cosines_6_q0 => cosines_6_q0,
        cosines_7_address0 => grp_mfcc_dct_fu_1859_cosines_7_address0,
        cosines_7_ce0 => grp_mfcc_dct_fu_1859_cosines_7_ce0,
        cosines_7_q0 => cosines_7_q0,
        cosines_8_address0 => grp_mfcc_dct_fu_1859_cosines_8_address0,
        cosines_8_ce0 => grp_mfcc_dct_fu_1859_cosines_8_ce0,
        cosines_8_q0 => cosines_8_q0,
        cosines_9_address0 => grp_mfcc_dct_fu_1859_cosines_9_address0,
        cosines_9_ce0 => grp_mfcc_dct_fu_1859_cosines_9_ce0,
        cosines_9_q0 => cosines_9_q0,
        cosines_10_address0 => grp_mfcc_dct_fu_1859_cosines_10_address0,
        cosines_10_ce0 => grp_mfcc_dct_fu_1859_cosines_10_ce0,
        cosines_10_q0 => cosines_10_q0,
        cosines_11_address0 => grp_mfcc_dct_fu_1859_cosines_11_address0,
        cosines_11_ce0 => grp_mfcc_dct_fu_1859_cosines_11_ce0,
        cosines_11_q0 => cosines_11_q0,
        cosines_12_address0 => grp_mfcc_dct_fu_1859_cosines_12_address0,
        cosines_12_ce0 => grp_mfcc_dct_fu_1859_cosines_12_ce0,
        cosines_12_q0 => cosines_12_q0,
        cosines_13_address0 => grp_mfcc_dct_fu_1859_cosines_13_address0,
        cosines_13_ce0 => grp_mfcc_dct_fu_1859_cosines_13_ce0,
        cosines_13_q0 => cosines_13_q0,
        cosines_14_address0 => grp_mfcc_dct_fu_1859_cosines_14_address0,
        cosines_14_ce0 => grp_mfcc_dct_fu_1859_cosines_14_ce0,
        cosines_14_q0 => cosines_14_q0,
        cosines_15_address0 => grp_mfcc_dct_fu_1859_cosines_15_address0,
        cosines_15_ce0 => grp_mfcc_dct_fu_1859_cosines_15_ce0,
        cosines_15_q0 => cosines_15_q0,
        cosines_16_address0 => grp_mfcc_dct_fu_1859_cosines_16_address0,
        cosines_16_ce0 => grp_mfcc_dct_fu_1859_cosines_16_ce0,
        cosines_16_q0 => cosines_16_q0,
        cosines_17_address0 => grp_mfcc_dct_fu_1859_cosines_17_address0,
        cosines_17_ce0 => grp_mfcc_dct_fu_1859_cosines_17_ce0,
        cosines_17_q0 => cosines_17_q0,
        cosines_18_address0 => grp_mfcc_dct_fu_1859_cosines_18_address0,
        cosines_18_ce0 => grp_mfcc_dct_fu_1859_cosines_18_ce0,
        cosines_18_q0 => cosines_18_q0,
        cosines_19_address0 => grp_mfcc_dct_fu_1859_cosines_19_address0,
        cosines_19_ce0 => grp_mfcc_dct_fu_1859_cosines_19_ce0,
        cosines_19_q0 => cosines_19_q0);

    grp_calc_stft_fu_1919 : component calc_stft
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_calc_stft_fu_1919_ap_start,
        ap_done => grp_calc_stft_fu_1919_ap_done,
        ap_idle => grp_calc_stft_fu_1919_ap_idle,
        ap_ready => grp_calc_stft_fu_1919_ap_ready,
        frames_address0 => grp_calc_stft_fu_1919_frames_address0,
        frames_ce0 => grp_calc_stft_fu_1919_frames_ce0,
        frames_q0 => frames_q0,
        frames_address1 => grp_calc_stft_fu_1919_frames_address1,
        frames_ce1 => grp_calc_stft_fu_1919_frames_ce1,
        frames_we1 => grp_calc_stft_fu_1919_frames_we1,
        frames_d1 => grp_calc_stft_fu_1919_frames_d1,
        spectrogram_0_address1 => grp_calc_stft_fu_1919_spectrogram_0_address1,
        spectrogram_0_ce1 => grp_calc_stft_fu_1919_spectrogram_0_ce1,
        spectrogram_0_we1 => grp_calc_stft_fu_1919_spectrogram_0_we1,
        spectrogram_0_d1 => grp_calc_stft_fu_1919_spectrogram_0_d1,
        spectrogram_1_address1 => grp_calc_stft_fu_1919_spectrogram_1_address1,
        spectrogram_1_ce1 => grp_calc_stft_fu_1919_spectrogram_1_ce1,
        spectrogram_1_we1 => grp_calc_stft_fu_1919_spectrogram_1_we1,
        spectrogram_1_d1 => grp_calc_stft_fu_1919_spectrogram_1_d1,
        spectrogram_2_address1 => grp_calc_stft_fu_1919_spectrogram_2_address1,
        spectrogram_2_ce1 => grp_calc_stft_fu_1919_spectrogram_2_ce1,
        spectrogram_2_we1 => grp_calc_stft_fu_1919_spectrogram_2_we1,
        spectrogram_2_d1 => grp_calc_stft_fu_1919_spectrogram_2_d1,
        spectrogram_3_address1 => grp_calc_stft_fu_1919_spectrogram_3_address1,
        spectrogram_3_ce1 => grp_calc_stft_fu_1919_spectrogram_3_ce1,
        spectrogram_3_we1 => grp_calc_stft_fu_1919_spectrogram_3_we1,
        spectrogram_3_d1 => grp_calc_stft_fu_1919_spectrogram_3_d1,
        cosines_0_address0 => grp_calc_stft_fu_1919_cosines_0_address0,
        cosines_0_ce0 => grp_calc_stft_fu_1919_cosines_0_ce0,
        cosines_0_q0 => cosines_0_q0,
        cosines_1_address0 => grp_calc_stft_fu_1919_cosines_1_address0,
        cosines_1_ce0 => grp_calc_stft_fu_1919_cosines_1_ce0,
        cosines_1_q0 => cosines_1_q0,
        cosines_2_address0 => grp_calc_stft_fu_1919_cosines_2_address0,
        cosines_2_ce0 => grp_calc_stft_fu_1919_cosines_2_ce0,
        cosines_2_q0 => cosines_2_q0,
        cosines_3_address0 => grp_calc_stft_fu_1919_cosines_3_address0,
        cosines_3_ce0 => grp_calc_stft_fu_1919_cosines_3_ce0,
        cosines_3_q0 => cosines_3_q0,
        cosines_4_address0 => grp_calc_stft_fu_1919_cosines_4_address0,
        cosines_4_ce0 => grp_calc_stft_fu_1919_cosines_4_ce0,
        cosines_4_q0 => cosines_4_q0,
        cosines_5_address0 => grp_calc_stft_fu_1919_cosines_5_address0,
        cosines_5_ce0 => grp_calc_stft_fu_1919_cosines_5_ce0,
        cosines_5_q0 => cosines_5_q0,
        cosines_6_address0 => grp_calc_stft_fu_1919_cosines_6_address0,
        cosines_6_ce0 => grp_calc_stft_fu_1919_cosines_6_ce0,
        cosines_6_q0 => cosines_6_q0,
        cosines_7_address0 => grp_calc_stft_fu_1919_cosines_7_address0,
        cosines_7_ce0 => grp_calc_stft_fu_1919_cosines_7_ce0,
        cosines_7_q0 => cosines_7_q0,
        cosines_8_address0 => grp_calc_stft_fu_1919_cosines_8_address0,
        cosines_8_ce0 => grp_calc_stft_fu_1919_cosines_8_ce0,
        cosines_8_q0 => cosines_8_q0,
        cosines_9_address0 => grp_calc_stft_fu_1919_cosines_9_address0,
        cosines_9_ce0 => grp_calc_stft_fu_1919_cosines_9_ce0,
        cosines_9_q0 => cosines_9_q0,
        cosines_10_address0 => grp_calc_stft_fu_1919_cosines_10_address0,
        cosines_10_ce0 => grp_calc_stft_fu_1919_cosines_10_ce0,
        cosines_10_q0 => cosines_10_q0,
        cosines_11_address0 => grp_calc_stft_fu_1919_cosines_11_address0,
        cosines_11_ce0 => grp_calc_stft_fu_1919_cosines_11_ce0,
        cosines_11_q0 => cosines_11_q0,
        cosines_12_address0 => grp_calc_stft_fu_1919_cosines_12_address0,
        cosines_12_ce0 => grp_calc_stft_fu_1919_cosines_12_ce0,
        cosines_12_q0 => cosines_12_q0,
        cosines_13_address0 => grp_calc_stft_fu_1919_cosines_13_address0,
        cosines_13_ce0 => grp_calc_stft_fu_1919_cosines_13_ce0,
        cosines_13_q0 => cosines_13_q0,
        cosines_14_address0 => grp_calc_stft_fu_1919_cosines_14_address0,
        cosines_14_ce0 => grp_calc_stft_fu_1919_cosines_14_ce0,
        cosines_14_q0 => cosines_14_q0,
        cosines_15_address0 => grp_calc_stft_fu_1919_cosines_15_address0,
        cosines_15_ce0 => grp_calc_stft_fu_1919_cosines_15_ce0,
        cosines_15_q0 => cosines_15_q0,
        cosines_16_address0 => grp_calc_stft_fu_1919_cosines_16_address0,
        cosines_16_ce0 => grp_calc_stft_fu_1919_cosines_16_ce0,
        cosines_16_q0 => cosines_16_q0,
        cosines_17_address0 => grp_calc_stft_fu_1919_cosines_17_address0,
        cosines_17_ce0 => grp_calc_stft_fu_1919_cosines_17_ce0,
        cosines_17_q0 => cosines_17_q0,
        cosines_18_address0 => grp_calc_stft_fu_1919_cosines_18_address0,
        cosines_18_ce0 => grp_calc_stft_fu_1919_cosines_18_ce0,
        cosines_18_q0 => cosines_18_q0,
        cosines_19_address0 => grp_calc_stft_fu_1919_cosines_19_address0,
        cosines_19_ce0 => grp_calc_stft_fu_1919_cosines_19_ce0,
        cosines_19_q0 => cosines_19_q0);

    grp_fc_relu6_fu_1973 : component fc_relu6
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_fc_relu6_fu_1973_ap_start,
        ap_done => grp_fc_relu6_fu_1973_ap_done,
        ap_idle => grp_fc_relu6_fu_1973_ap_idle,
        ap_ready => grp_fc_relu6_fu_1973_ap_ready,
        in_stream_V_V_dout => gru2fc_quant_V_V_dout,
        in_stream_V_V_empty_n => gru2fc_quant_V_V_empty_n,
        in_stream_V_V_read => grp_fc_relu6_fu_1973_in_stream_V_V_read,
        out_stream_V_V_din => grp_fc_relu6_fu_1973_out_stream_V_V_din,
        out_stream_V_V_full_n => fc2final_quant_V_V_full_n,
        out_stream_V_V_write => grp_fc_relu6_fu_1973_out_stream_V_V_write,
        gru2fc_scale_V_dout => gru2fc_scale_V_dout,
        gru2fc_scale_V_empty_n => gru2fc_scale_V_empty_n,
        gru2fc_scale_V_read => grp_fc_relu6_fu_1973_gru2fc_scale_V_read,
        fc2final_scale_V_din => grp_fc_relu6_fu_1973_fc2final_scale_V_din,
        fc2final_scale_V_full_n => fc2final_scale_V_full_n,
        fc2final_scale_V_write => grp_fc_relu6_fu_1973_fc2final_scale_V_write,
        fc_weight1_scale => reg_2256,
        tmp_scale_fc6 => reg_2266,
        fc_weights1_V_address0 => grp_fc_relu6_fu_1973_fc_weights1_V_address0,
        fc_weights1_V_ce0 => grp_fc_relu6_fu_1973_fc_weights1_V_ce0,
        fc_weights1_V_q0 => fc_weights1_V_q0,
        fc_bias1_V_address0 => grp_fc_relu6_fu_1973_fc_bias1_V_address0,
        fc_bias1_V_ce0 => grp_fc_relu6_fu_1973_fc_bias1_V_ce0,
        fc_bias1_V_q0 => fc_bias1_V_q0);

    grp_pw_layer1_fu_1999 : component pw_layer1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_pw_layer1_fu_1999_ap_start,
        ap_done => grp_pw_layer1_fu_1999_ap_done,
        ap_idle => grp_pw_layer1_fu_1999_ap_idle,
        ap_ready => grp_pw_layer1_fu_1999_ap_ready,
        in_stream_V_V_dout => dw12pw1_quant_V_V_dout,
        in_stream_V_V_empty_n => dw12pw1_quant_V_V_empty_n,
        in_stream_V_V_read => grp_pw_layer1_fu_1999_in_stream_V_V_read,
        out_stream_V_V_din => grp_pw_layer1_fu_1999_out_stream_V_V_din,
        out_stream_V_V_full_n => pw12gru_quant_V_V_full_n,
        out_stream_V_V_write => grp_pw_layer1_fu_1999_out_stream_V_V_write,
        pw_weights_scale => reg_2256,
        dw12pw1_scale_V_dout => dw12pw1_scale_V_dout,
        dw12pw1_scale_V_empty_n => dw12pw1_scale_V_empty_n,
        dw12pw1_scale_V_read => grp_pw_layer1_fu_1999_dw12pw1_scale_V_read,
        pw12gru_scale_V_din => grp_pw_layer1_fu_1999_pw12gru_scale_V_din,
        pw12gru_scale_V_full_n => pw12gru_scale_V_full_n,
        pw12gru_scale_V_write => grp_pw_layer1_fu_1999_pw12gru_scale_V_write,
        tmp_scalepw => reg_2266,
        pw_weight1_V_address0 => grp_pw_layer1_fu_1999_pw_weight1_V_address0,
        pw_weight1_V_ce0 => grp_pw_layer1_fu_1999_pw_weight1_V_ce0,
        pw_weight1_V_q0 => pw_weight1_V_q0,
        bn_bias1_V_address0 => grp_pw_layer1_fu_1999_bn_bias1_V_address0,
        bn_bias1_V_ce0 => grp_pw_layer1_fu_1999_bn_bias1_V_ce0,
        bn_bias1_V_q0 => bn_bias1_V_q0);

    grp_dw_layer1_fu_2019 : component dw_layer1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_dw_layer1_fu_2019_ap_start,
        ap_done => grp_dw_layer1_fu_2019_ap_done,
        ap_idle => grp_dw_layer1_fu_2019_ap_idle,
        ap_ready => grp_dw_layer1_fu_2019_ap_ready,
        in_stream_V_V_dout => data2dw1_quant_V_V_dout,
        in_stream_V_V_empty_n => data2dw1_quant_V_V_empty_n,
        in_stream_V_V_read => grp_dw_layer1_fu_2019_in_stream_V_V_read,
        out_stream_V_V_din => grp_dw_layer1_fu_2019_out_stream_V_V_din,
        out_stream_V_V_full_n => dw12pw1_quant_V_V_full_n,
        out_stream_V_V_write => grp_dw_layer1_fu_2019_out_stream_V_V_write,
        dw_weights_scale => reg_2256,
        data2dw1_scale_V_dout => data2dw1_scale_V_dout,
        data2dw1_scale_V_empty_n => data2dw1_scale_V_empty_n,
        data2dw1_scale_V_read => grp_dw_layer1_fu_2019_data2dw1_scale_V_read,
        dw12pw1_scale_V_din => grp_dw_layer1_fu_2019_dw12pw1_scale_V_din,
        dw12pw1_scale_V_full_n => dw12pw1_scale_V_full_n,
        dw12pw1_scale_V_write => grp_dw_layer1_fu_2019_dw12pw1_scale_V_write,
        dw_weight1_V_2 => dw_weight1_V_2,
        dw_weight1_V_0 => dw_weight1_V_0,
        dw_weight1_V_1 => dw_weight1_V_1);

    grp_fc_64u_12u_1u_s_fu_2039 : component fc_64u_12u_1u_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_fc_64u_12u_1u_s_fu_2039_ap_start,
        ap_done => grp_fc_64u_12u_1u_s_fu_2039_ap_done,
        ap_idle => grp_fc_64u_12u_1u_s_fu_2039_ap_idle,
        ap_ready => grp_fc_64u_12u_1u_s_fu_2039_ap_ready,
        in_stream_V_V_dout => fc2final_quant_V_V_dout,
        in_stream_V_V_empty_n => fc2final_quant_V_V_empty_n,
        in_stream_V_V_read => grp_fc_64u_12u_1u_s_fu_2039_in_stream_V_V_read,
        out_stream_V_din => grp_fc_64u_12u_1u_s_fu_2039_out_stream_V_din,
        out_stream_V_full_n => output_V_full_n,
        out_stream_V_write => grp_fc_64u_12u_1u_s_fu_2039_out_stream_V_write,
        fc2final_scale_V_dout => fc2final_scale_V_dout,
        fc2final_scale_V_empty_n => fc2final_scale_V_empty_n,
        fc2final_scale_V_read => grp_fc_64u_12u_1u_s_fu_2039_fc2final_scale_V_read,
        fc_weight2_scale => reg_2256,
        tmp_scale_fc => reg_2266,
        fc_bias2_V_address0 => grp_fc_64u_12u_1u_s_fu_2039_fc_bias2_V_address0,
        fc_bias2_V_ce0 => grp_fc_64u_12u_1u_s_fu_2039_fc_bias2_V_ce0,
        fc_bias2_V_q0 => fc_bias2_V_q0,
        fc_weights2_V_address0 => grp_fc_64u_12u_1u_s_fu_2039_fc_weights2_V_address0,
        fc_weights2_V_ce0 => grp_fc_64u_12u_1u_s_fu_2039_fc_weights2_V_ce0,
        fc_weights2_V_q0 => fc_weights2_V_q0);

    grp_mfcc_log_fu_2058 : component mfcc_log
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_mfcc_log_fu_2058_ap_start,
        ap_done => grp_mfcc_log_fu_2058_ap_done,
        ap_idle => grp_mfcc_log_fu_2058_ap_idle,
        ap_ready => grp_mfcc_log_fu_2058_ap_ready,
        fbank_out_0_address0 => grp_mfcc_log_fu_2058_fbank_out_0_address0,
        fbank_out_0_ce0 => grp_mfcc_log_fu_2058_fbank_out_0_ce0,
        fbank_out_0_q0 => fbank_out_0_q0,
        fbank_out_0_address1 => grp_mfcc_log_fu_2058_fbank_out_0_address1,
        fbank_out_0_ce1 => grp_mfcc_log_fu_2058_fbank_out_0_ce1,
        fbank_out_0_we1 => grp_mfcc_log_fu_2058_fbank_out_0_we1,
        fbank_out_0_d1 => grp_mfcc_log_fu_2058_fbank_out_0_d1,
        fbank_out_1_address0 => grp_mfcc_log_fu_2058_fbank_out_1_address0,
        fbank_out_1_ce0 => grp_mfcc_log_fu_2058_fbank_out_1_ce0,
        fbank_out_1_q0 => fbank_out_1_q0,
        fbank_out_1_address1 => grp_mfcc_log_fu_2058_fbank_out_1_address1,
        fbank_out_1_ce1 => grp_mfcc_log_fu_2058_fbank_out_1_ce1,
        fbank_out_1_we1 => grp_mfcc_log_fu_2058_fbank_out_1_we1,
        fbank_out_1_d1 => grp_mfcc_log_fu_2058_fbank_out_1_d1,
        fbank_out_2_address0 => grp_mfcc_log_fu_2058_fbank_out_2_address0,
        fbank_out_2_ce0 => grp_mfcc_log_fu_2058_fbank_out_2_ce0,
        fbank_out_2_q0 => fbank_out_2_q0,
        fbank_out_2_address1 => grp_mfcc_log_fu_2058_fbank_out_2_address1,
        fbank_out_2_ce1 => grp_mfcc_log_fu_2058_fbank_out_2_ce1,
        fbank_out_2_we1 => grp_mfcc_log_fu_2058_fbank_out_2_we1,
        fbank_out_2_d1 => grp_mfcc_log_fu_2058_fbank_out_2_d1,
        fbank_out_3_address0 => grp_mfcc_log_fu_2058_fbank_out_3_address0,
        fbank_out_3_ce0 => grp_mfcc_log_fu_2058_fbank_out_3_ce0,
        fbank_out_3_q0 => fbank_out_3_q0,
        fbank_out_3_address1 => grp_mfcc_log_fu_2058_fbank_out_3_address1,
        fbank_out_3_ce1 => grp_mfcc_log_fu_2058_fbank_out_3_ce1,
        fbank_out_3_we1 => grp_mfcc_log_fu_2058_fbank_out_3_we1,
        fbank_out_3_d1 => grp_mfcc_log_fu_2058_fbank_out_3_d1);

    grp_quant_layer_10u_s_fu_2070 : component quant_layer_10u_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_quant_layer_10u_s_fu_2070_ap_start,
        ap_done => grp_quant_layer_10u_s_fu_2070_ap_done,
        ap_idle => grp_quant_layer_10u_s_fu_2070_ap_idle,
        ap_ready => grp_quant_layer_10u_s_fu_2070_ap_ready,
        data2dw1_V_dout => data2dw1_V_dout,
        data2dw1_V_empty_n => data2dw1_V_empty_n,
        data2dw1_V_read => grp_quant_layer_10u_s_fu_2070_data2dw1_V_read,
        data2dw1_quant_V_V_din => grp_quant_layer_10u_s_fu_2070_data2dw1_quant_V_V_din,
        data2dw1_quant_V_V_full_n => data2dw1_quant_V_V_full_n,
        data2dw1_quant_V_V_write => grp_quant_layer_10u_s_fu_2070_data2dw1_quant_V_V_write,
        data2dw1_scale_V_din => grp_quant_layer_10u_s_fu_2070_data2dw1_scale_V_din,
        data2dw1_scale_V_full_n => data2dw1_scale_V_full_n,
        data2dw1_scale_V_write => grp_quant_layer_10u_s_fu_2070_data2dw1_scale_V_write);

    grp_fbank_fu_2077 : component fbank
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_fbank_fu_2077_ap_start,
        ap_done => grp_fbank_fu_2077_ap_done,
        ap_idle => grp_fbank_fu_2077_ap_idle,
        ap_ready => grp_fbank_fu_2077_ap_ready,
        output_0_address0 => grp_fbank_fu_2077_output_0_address0,
        output_0_ce0 => grp_fbank_fu_2077_output_0_ce0,
        output_0_q0 => fbank_out_0_q0,
        output_0_address1 => grp_fbank_fu_2077_output_0_address1,
        output_0_ce1 => grp_fbank_fu_2077_output_0_ce1,
        output_0_we1 => grp_fbank_fu_2077_output_0_we1,
        output_0_d1 => grp_fbank_fu_2077_output_0_d1,
        output_1_address0 => grp_fbank_fu_2077_output_1_address0,
        output_1_ce0 => grp_fbank_fu_2077_output_1_ce0,
        output_1_q0 => fbank_out_1_q0,
        output_1_address1 => grp_fbank_fu_2077_output_1_address1,
        output_1_ce1 => grp_fbank_fu_2077_output_1_ce1,
        output_1_we1 => grp_fbank_fu_2077_output_1_we1,
        output_1_d1 => grp_fbank_fu_2077_output_1_d1,
        output_2_address0 => grp_fbank_fu_2077_output_2_address0,
        output_2_ce0 => grp_fbank_fu_2077_output_2_ce0,
        output_2_q0 => fbank_out_2_q0,
        output_2_address1 => grp_fbank_fu_2077_output_2_address1,
        output_2_ce1 => grp_fbank_fu_2077_output_2_ce1,
        output_2_we1 => grp_fbank_fu_2077_output_2_we1,
        output_2_d1 => grp_fbank_fu_2077_output_2_d1,
        output_3_address0 => grp_fbank_fu_2077_output_3_address0,
        output_3_ce0 => grp_fbank_fu_2077_output_3_ce0,
        output_3_q0 => fbank_out_3_q0,
        output_3_address1 => grp_fbank_fu_2077_output_3_address1,
        output_3_ce1 => grp_fbank_fu_2077_output_3_ce1,
        output_3_we1 => grp_fbank_fu_2077_output_3_we1,
        output_3_d1 => grp_fbank_fu_2077_output_3_d1,
        spectrogram_3_address0 => grp_fbank_fu_2077_spectrogram_3_address0,
        spectrogram_3_ce0 => grp_fbank_fu_2077_spectrogram_3_ce0,
        spectrogram_3_q0 => spectrogram_3_q0,
        spectrogram_0_address0 => grp_fbank_fu_2077_spectrogram_0_address0,
        spectrogram_0_ce0 => grp_fbank_fu_2077_spectrogram_0_ce0,
        spectrogram_0_q0 => spectrogram_0_q0,
        spectrogram_1_address0 => grp_fbank_fu_2077_spectrogram_1_address0,
        spectrogram_1_ce0 => grp_fbank_fu_2077_spectrogram_1_ce0,
        spectrogram_1_q0 => spectrogram_1_q0,
        spectrogram_2_address0 => grp_fbank_fu_2077_spectrogram_2_address0,
        spectrogram_2_ce0 => grp_fbank_fu_2077_spectrogram_2_ce0,
        spectrogram_2_q0 => spectrogram_2_q0);

    grp_weight_loader_fu_2101 : component weight_loader
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_weight_loader_fu_2101_ap_start,
        ap_done => grp_weight_loader_fu_2101_ap_done,
        ap_idle => grp_weight_loader_fu_2101_ap_idle,
        ap_ready => grp_weight_loader_fu_2101_ap_ready,
        weight_in_TDATA => weight_in_TDATA_int,
        weight_in_TVALID => weight_in_TVALID_int,
        weight_in_TREADY => grp_weight_loader_fu_2101_weight_in_TREADY,
        weight_in_TLAST => weight_in_TLAST_int,
        data_in_TDATA => data_in_TDATA_int,
        data_in_TVALID => data_in_TVALID_int,
        data_in_TREADY => grp_weight_loader_fu_2101_data_in_TREADY,
        data_in_TLAST => data_in_TLAST_int,
        cosines_0_address0 => grp_weight_loader_fu_2101_cosines_0_address0,
        cosines_0_ce0 => grp_weight_loader_fu_2101_cosines_0_ce0,
        cosines_0_we0 => grp_weight_loader_fu_2101_cosines_0_we0,
        cosines_0_d0 => grp_weight_loader_fu_2101_cosines_0_d0,
        cosines_1_address0 => grp_weight_loader_fu_2101_cosines_1_address0,
        cosines_1_ce0 => grp_weight_loader_fu_2101_cosines_1_ce0,
        cosines_1_we0 => grp_weight_loader_fu_2101_cosines_1_we0,
        cosines_1_d0 => grp_weight_loader_fu_2101_cosines_1_d0,
        cosines_2_address0 => grp_weight_loader_fu_2101_cosines_2_address0,
        cosines_2_ce0 => grp_weight_loader_fu_2101_cosines_2_ce0,
        cosines_2_we0 => grp_weight_loader_fu_2101_cosines_2_we0,
        cosines_2_d0 => grp_weight_loader_fu_2101_cosines_2_d0,
        cosines_3_address0 => grp_weight_loader_fu_2101_cosines_3_address0,
        cosines_3_ce0 => grp_weight_loader_fu_2101_cosines_3_ce0,
        cosines_3_we0 => grp_weight_loader_fu_2101_cosines_3_we0,
        cosines_3_d0 => grp_weight_loader_fu_2101_cosines_3_d0,
        cosines_4_address0 => grp_weight_loader_fu_2101_cosines_4_address0,
        cosines_4_ce0 => grp_weight_loader_fu_2101_cosines_4_ce0,
        cosines_4_we0 => grp_weight_loader_fu_2101_cosines_4_we0,
        cosines_4_d0 => grp_weight_loader_fu_2101_cosines_4_d0,
        cosines_5_address0 => grp_weight_loader_fu_2101_cosines_5_address0,
        cosines_5_ce0 => grp_weight_loader_fu_2101_cosines_5_ce0,
        cosines_5_we0 => grp_weight_loader_fu_2101_cosines_5_we0,
        cosines_5_d0 => grp_weight_loader_fu_2101_cosines_5_d0,
        cosines_6_address0 => grp_weight_loader_fu_2101_cosines_6_address0,
        cosines_6_ce0 => grp_weight_loader_fu_2101_cosines_6_ce0,
        cosines_6_we0 => grp_weight_loader_fu_2101_cosines_6_we0,
        cosines_6_d0 => grp_weight_loader_fu_2101_cosines_6_d0,
        cosines_7_address0 => grp_weight_loader_fu_2101_cosines_7_address0,
        cosines_7_ce0 => grp_weight_loader_fu_2101_cosines_7_ce0,
        cosines_7_we0 => grp_weight_loader_fu_2101_cosines_7_we0,
        cosines_7_d0 => grp_weight_loader_fu_2101_cosines_7_d0,
        cosines_8_address0 => grp_weight_loader_fu_2101_cosines_8_address0,
        cosines_8_ce0 => grp_weight_loader_fu_2101_cosines_8_ce0,
        cosines_8_we0 => grp_weight_loader_fu_2101_cosines_8_we0,
        cosines_8_d0 => grp_weight_loader_fu_2101_cosines_8_d0,
        cosines_9_address0 => grp_weight_loader_fu_2101_cosines_9_address0,
        cosines_9_ce0 => grp_weight_loader_fu_2101_cosines_9_ce0,
        cosines_9_we0 => grp_weight_loader_fu_2101_cosines_9_we0,
        cosines_9_d0 => grp_weight_loader_fu_2101_cosines_9_d0,
        cosines_10_address0 => grp_weight_loader_fu_2101_cosines_10_address0,
        cosines_10_ce0 => grp_weight_loader_fu_2101_cosines_10_ce0,
        cosines_10_we0 => grp_weight_loader_fu_2101_cosines_10_we0,
        cosines_10_d0 => grp_weight_loader_fu_2101_cosines_10_d0,
        cosines_11_address0 => grp_weight_loader_fu_2101_cosines_11_address0,
        cosines_11_ce0 => grp_weight_loader_fu_2101_cosines_11_ce0,
        cosines_11_we0 => grp_weight_loader_fu_2101_cosines_11_we0,
        cosines_11_d0 => grp_weight_loader_fu_2101_cosines_11_d0,
        cosines_12_address0 => grp_weight_loader_fu_2101_cosines_12_address0,
        cosines_12_ce0 => grp_weight_loader_fu_2101_cosines_12_ce0,
        cosines_12_we0 => grp_weight_loader_fu_2101_cosines_12_we0,
        cosines_12_d0 => grp_weight_loader_fu_2101_cosines_12_d0,
        cosines_13_address0 => grp_weight_loader_fu_2101_cosines_13_address0,
        cosines_13_ce0 => grp_weight_loader_fu_2101_cosines_13_ce0,
        cosines_13_we0 => grp_weight_loader_fu_2101_cosines_13_we0,
        cosines_13_d0 => grp_weight_loader_fu_2101_cosines_13_d0,
        cosines_14_address0 => grp_weight_loader_fu_2101_cosines_14_address0,
        cosines_14_ce0 => grp_weight_loader_fu_2101_cosines_14_ce0,
        cosines_14_we0 => grp_weight_loader_fu_2101_cosines_14_we0,
        cosines_14_d0 => grp_weight_loader_fu_2101_cosines_14_d0,
        cosines_15_address0 => grp_weight_loader_fu_2101_cosines_15_address0,
        cosines_15_ce0 => grp_weight_loader_fu_2101_cosines_15_ce0,
        cosines_15_we0 => grp_weight_loader_fu_2101_cosines_15_we0,
        cosines_15_d0 => grp_weight_loader_fu_2101_cosines_15_d0,
        cosines_16_address0 => grp_weight_loader_fu_2101_cosines_16_address0,
        cosines_16_ce0 => grp_weight_loader_fu_2101_cosines_16_ce0,
        cosines_16_we0 => grp_weight_loader_fu_2101_cosines_16_we0,
        cosines_16_d0 => grp_weight_loader_fu_2101_cosines_16_d0,
        cosines_17_address0 => grp_weight_loader_fu_2101_cosines_17_address0,
        cosines_17_ce0 => grp_weight_loader_fu_2101_cosines_17_ce0,
        cosines_17_we0 => grp_weight_loader_fu_2101_cosines_17_we0,
        cosines_17_d0 => grp_weight_loader_fu_2101_cosines_17_d0,
        cosines_18_address0 => grp_weight_loader_fu_2101_cosines_18_address0,
        cosines_18_ce0 => grp_weight_loader_fu_2101_cosines_18_ce0,
        cosines_18_we0 => grp_weight_loader_fu_2101_cosines_18_we0,
        cosines_18_d0 => grp_weight_loader_fu_2101_cosines_18_d0,
        cosines_19_address0 => grp_weight_loader_fu_2101_cosines_19_address0,
        cosines_19_ce0 => grp_weight_loader_fu_2101_cosines_19_ce0,
        cosines_19_we0 => grp_weight_loader_fu_2101_cosines_19_we0,
        cosines_19_d0 => grp_weight_loader_fu_2101_cosines_19_d0,
        weight_bias_scale_address0 => grp_weight_loader_fu_2101_weight_bias_scale_address0,
        weight_bias_scale_ce0 => grp_weight_loader_fu_2101_weight_bias_scale_ce0,
        weight_bias_scale_we0 => grp_weight_loader_fu_2101_weight_bias_scale_we0,
        weight_bias_scale_d0 => grp_weight_loader_fu_2101_weight_bias_scale_d0,
        tmp_scale_address0 => grp_weight_loader_fu_2101_tmp_scale_address0,
        tmp_scale_ce0 => grp_weight_loader_fu_2101_tmp_scale_ce0,
        tmp_scale_we0 => grp_weight_loader_fu_2101_tmp_scale_we0,
        tmp_scale_d0 => grp_weight_loader_fu_2101_tmp_scale_d0,
        pw_weight1_V_2_address0 => grp_weight_loader_fu_2101_pw_weight1_V_2_address0,
        pw_weight1_V_2_ce0 => grp_weight_loader_fu_2101_pw_weight1_V_2_ce0,
        pw_weight1_V_2_we0 => grp_weight_loader_fu_2101_pw_weight1_V_2_we0,
        pw_weight1_V_2_d0 => grp_weight_loader_fu_2101_pw_weight1_V_2_d0,
        pw_weight1_V_2_address1 => grp_weight_loader_fu_2101_pw_weight1_V_2_address1,
        pw_weight1_V_2_ce1 => grp_weight_loader_fu_2101_pw_weight1_V_2_ce1,
        pw_weight1_V_2_we1 => grp_weight_loader_fu_2101_pw_weight1_V_2_we1,
        pw_weight1_V_2_d1 => grp_weight_loader_fu_2101_pw_weight1_V_2_d1,
        bn_bias1_V_2_address0 => grp_weight_loader_fu_2101_bn_bias1_V_2_address0,
        bn_bias1_V_2_ce0 => grp_weight_loader_fu_2101_bn_bias1_V_2_ce0,
        bn_bias1_V_2_we0 => grp_weight_loader_fu_2101_bn_bias1_V_2_we0,
        bn_bias1_V_2_d0 => grp_weight_loader_fu_2101_bn_bias1_V_2_d0,
        bn_bias1_V_2_address1 => grp_weight_loader_fu_2101_bn_bias1_V_2_address1,
        bn_bias1_V_2_ce1 => grp_weight_loader_fu_2101_bn_bias1_V_2_ce1,
        bn_bias1_V_2_we1 => grp_weight_loader_fu_2101_bn_bias1_V_2_we1,
        bn_bias1_V_2_d1 => grp_weight_loader_fu_2101_bn_bias1_V_2_d1,
        weights_ru_V_2_address0 => grp_weight_loader_fu_2101_weights_ru_V_2_address0,
        weights_ru_V_2_ce0 => grp_weight_loader_fu_2101_weights_ru_V_2_ce0,
        weights_ru_V_2_we0 => grp_weight_loader_fu_2101_weights_ru_V_2_we0,
        weights_ru_V_2_d0 => grp_weight_loader_fu_2101_weights_ru_V_2_d0,
        weights_rw_V_2_address0 => grp_weight_loader_fu_2101_weights_rw_V_2_address0,
        weights_rw_V_2_ce0 => grp_weight_loader_fu_2101_weights_rw_V_2_ce0,
        weights_rw_V_2_we0 => grp_weight_loader_fu_2101_weights_rw_V_2_we0,
        weights_rw_V_2_d0 => grp_weight_loader_fu_2101_weights_rw_V_2_d0,
        bias_r_V_2_address0 => grp_weight_loader_fu_2101_bias_r_V_2_address0,
        bias_r_V_2_ce0 => grp_weight_loader_fu_2101_bias_r_V_2_ce0,
        bias_r_V_2_we0 => grp_weight_loader_fu_2101_bias_r_V_2_we0,
        bias_r_V_2_d0 => grp_weight_loader_fu_2101_bias_r_V_2_d0,
        weights_zu_V_2_address0 => grp_weight_loader_fu_2101_weights_zu_V_2_address0,
        weights_zu_V_2_ce0 => grp_weight_loader_fu_2101_weights_zu_V_2_ce0,
        weights_zu_V_2_we0 => grp_weight_loader_fu_2101_weights_zu_V_2_we0,
        weights_zu_V_2_d0 => grp_weight_loader_fu_2101_weights_zu_V_2_d0,
        weights_zw_V_2_address0 => grp_weight_loader_fu_2101_weights_zw_V_2_address0,
        weights_zw_V_2_ce0 => grp_weight_loader_fu_2101_weights_zw_V_2_ce0,
        weights_zw_V_2_we0 => grp_weight_loader_fu_2101_weights_zw_V_2_we0,
        weights_zw_V_2_d0 => grp_weight_loader_fu_2101_weights_zw_V_2_d0,
        bias_z_V_2_address0 => grp_weight_loader_fu_2101_bias_z_V_2_address0,
        bias_z_V_2_ce0 => grp_weight_loader_fu_2101_bias_z_V_2_ce0,
        bias_z_V_2_we0 => grp_weight_loader_fu_2101_bias_z_V_2_we0,
        bias_z_V_2_d0 => grp_weight_loader_fu_2101_bias_z_V_2_d0,
        bias_z_V_2_address1 => grp_weight_loader_fu_2101_bias_z_V_2_address1,
        bias_z_V_2_ce1 => grp_weight_loader_fu_2101_bias_z_V_2_ce1,
        bias_z_V_2_we1 => grp_weight_loader_fu_2101_bias_z_V_2_we1,
        bias_z_V_2_d1 => grp_weight_loader_fu_2101_bias_z_V_2_d1,
        weights_hu_V_2_address0 => grp_weight_loader_fu_2101_weights_hu_V_2_address0,
        weights_hu_V_2_ce0 => grp_weight_loader_fu_2101_weights_hu_V_2_ce0,
        weights_hu_V_2_we0 => grp_weight_loader_fu_2101_weights_hu_V_2_we0,
        weights_hu_V_2_d0 => grp_weight_loader_fu_2101_weights_hu_V_2_d0,
        weights_hw_V_2_address0 => grp_weight_loader_fu_2101_weights_hw_V_2_address0,
        weights_hw_V_2_ce0 => grp_weight_loader_fu_2101_weights_hw_V_2_ce0,
        weights_hw_V_2_we0 => grp_weight_loader_fu_2101_weights_hw_V_2_we0,
        weights_hw_V_2_d0 => grp_weight_loader_fu_2101_weights_hw_V_2_d0,
        bias_h_V_2_address0 => grp_weight_loader_fu_2101_bias_h_V_2_address0,
        bias_h_V_2_ce0 => grp_weight_loader_fu_2101_bias_h_V_2_ce0,
        bias_h_V_2_we0 => grp_weight_loader_fu_2101_bias_h_V_2_we0,
        bias_h_V_2_d0 => grp_weight_loader_fu_2101_bias_h_V_2_d0,
        bias_h_V_2_address1 => grp_weight_loader_fu_2101_bias_h_V_2_address1,
        bias_h_V_2_ce1 => grp_weight_loader_fu_2101_bias_h_V_2_ce1,
        bias_h_V_2_we1 => grp_weight_loader_fu_2101_bias_h_V_2_we1,
        bias_h_V_2_d1 => grp_weight_loader_fu_2101_bias_h_V_2_d1,
        fc_weights1_V_2_address0 => grp_weight_loader_fu_2101_fc_weights1_V_2_address0,
        fc_weights1_V_2_ce0 => grp_weight_loader_fu_2101_fc_weights1_V_2_ce0,
        fc_weights1_V_2_we0 => grp_weight_loader_fu_2101_fc_weights1_V_2_we0,
        fc_weights1_V_2_d0 => grp_weight_loader_fu_2101_fc_weights1_V_2_d0,
        fc_bias1_V_2_address0 => grp_weight_loader_fu_2101_fc_bias1_V_2_address0,
        fc_bias1_V_2_ce0 => grp_weight_loader_fu_2101_fc_bias1_V_2_ce0,
        fc_bias1_V_2_we0 => grp_weight_loader_fu_2101_fc_bias1_V_2_we0,
        fc_bias1_V_2_d0 => grp_weight_loader_fu_2101_fc_bias1_V_2_d0,
        fc_bias1_V_2_address1 => grp_weight_loader_fu_2101_fc_bias1_V_2_address1,
        fc_bias1_V_2_ce1 => grp_weight_loader_fu_2101_fc_bias1_V_2_ce1,
        fc_bias1_V_2_we1 => grp_weight_loader_fu_2101_fc_bias1_V_2_we1,
        fc_bias1_V_2_d1 => grp_weight_loader_fu_2101_fc_bias1_V_2_d1,
        fc_weights2_V_2_address0 => grp_weight_loader_fu_2101_fc_weights2_V_2_address0,
        fc_weights2_V_2_ce0 => grp_weight_loader_fu_2101_fc_weights2_V_2_ce0,
        fc_weights2_V_2_we0 => grp_weight_loader_fu_2101_fc_weights2_V_2_we0,
        fc_weights2_V_2_d0 => grp_weight_loader_fu_2101_fc_weights2_V_2_d0,
        fc_bias2_V_2_address0 => grp_weight_loader_fu_2101_fc_bias2_V_2_address0,
        fc_bias2_V_2_ce0 => grp_weight_loader_fu_2101_fc_bias2_V_2_ce0,
        fc_bias2_V_2_we0 => grp_weight_loader_fu_2101_fc_bias2_V_2_we0,
        fc_bias2_V_2_d0 => grp_weight_loader_fu_2101_fc_bias2_V_2_d0,
        fc_bias2_V_2_address1 => grp_weight_loader_fu_2101_fc_bias2_V_2_address1,
        fc_bias2_V_2_ce1 => grp_weight_loader_fu_2101_fc_bias2_V_2_ce1,
        fc_bias2_V_2_we1 => grp_weight_loader_fu_2101_fc_bias2_V_2_we1,
        fc_bias2_V_2_d1 => grp_weight_loader_fu_2101_fc_bias2_V_2_d1,
        ap_return_0 => grp_weight_loader_fu_2101_ap_return_0,
        ap_return_1 => grp_weight_loader_fu_2101_ap_return_1,
        ap_return_2 => grp_weight_loader_fu_2101_ap_return_2);

    grp_datastream_out_12u_s_fu_2187 : component datastream_out_12u_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_datastream_out_12u_s_fu_2187_ap_start,
        ap_done => grp_datastream_out_12u_s_fu_2187_ap_done,
        ap_idle => grp_datastream_out_12u_s_fu_2187_ap_idle,
        ap_ready => grp_datastream_out_12u_s_fu_2187_ap_ready,
        output_V_dout => output_V_dout,
        output_V_empty_n => output_V_empty_n,
        output_V_read => grp_datastream_out_12u_s_fu_2187_output_V_read,
        data_out_TDATA => grp_datastream_out_12u_s_fu_2187_data_out_TDATA,
        data_out_TVALID => grp_datastream_out_12u_s_fu_2187_data_out_TVALID,
        data_out_TREADY => grp_datastream_out_12u_s_fu_2187_data_out_TREADY,
        data_out_TLAST => grp_datastream_out_12u_s_fu_2187_data_out_TLAST);

    kws_fadd_32ns_32nwdI_U406 : component kws_fadd_32ns_32nwdI
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_2196_p0,
        din1 => reg_2235,
        ce => ap_const_logic_1,
        dout => grp_fu_2196_p2);

    kws_fmul_32ns_32neOg_U407 : component kws_fmul_32ns_32neOg
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_2202_p0,
        din1 => grp_fu_2202_p1,
        ce => grp_fu_2202_ce,
        dout => grp_fu_2202_p2);

    kws_sitofp_32s_32OgC_U408 : component kws_sitofp_32s_32OgC
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_2207_p0,
        ce => grp_fu_2207_ce,
        dout => grp_fu_2207_p1);

    kws_fcmp_32ns_32nHfu_U409 : component kws_fcmp_32ns_32nHfu
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => shorttime_energy_0_reg_1579,
        din1 => threshold_load_reg_3474,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_2,
        dout => grp_fu_2210_p2);

    kws_mux_816_32_1_1_U410 : component kws_mux_816_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => signal_in_0_q0,
        din1 => signal_in_1_q0,
        din2 => signal_in_2_q0,
        din3 => signal_in_3_q0,
        din4 => signal_in_4_q0,
        din5 => signal_in_5_q0,
        din6 => signal_in_6_q0,
        din7 => signal_in_7_q0,
        din8 => tmp_280_fu_2434_p9,
        dout => tmp_280_fu_2434_p10);

    kws_mux_816_32_1_1_U411 : component kws_mux_816_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => signal_in_0_q0,
        din1 => signal_in_1_q0,
        din2 => signal_in_2_q0,
        din3 => signal_in_3_q0,
        din4 => signal_in_4_q0,
        din5 => signal_in_5_q0,
        din6 => signal_in_6_q0,
        din7 => signal_in_7_q0,
        din8 => tmp_281_fu_2636_p9,
        dout => tmp_281_fu_2636_p10);

    kws_mux_816_32_1_1_U412 : component kws_mux_816_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => signal_in_0_q0,
        din1 => signal_in_1_q0,
        din2 => signal_in_2_q0,
        din3 => signal_in_3_q0,
        din4 => signal_in_4_q0,
        din5 => signal_in_5_q0,
        din6 => signal_in_6_q0,
        din7 => signal_in_7_q0,
        din8 => tmp_284_fu_3039_p9,
        dout => tmp_284_fu_3039_p10);

    keep_in_V_fifo_U : component fifo_w16_d1_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => keep_in_V_din,
        if_full_n => keep_in_V_full_n,
        if_write => keep_in_V_write,
        if_dout => keep_in_V_dout,
        if_empty_n => keep_in_V_empty_n,
        if_read => keep_in_V_read);

    pre_out_V_fifo_U : component fifo_w32_d10_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ap_phi_mux_tmp_98_phi_fu_1719_p8,
        if_full_n => pre_out_V_full_n,
        if_write => pre_out_V_write,
        if_dout => pre_out_V_dout,
        if_empty_n => pre_out_V_empty_n,
        if_read => pre_out_V_read);

    data2dw1_V_fifo_U : component fifo_w32_d10_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => pre_out_V_dout,
        if_full_n => data2dw1_V_full_n,
        if_write => data2dw1_V_write,
        if_dout => data2dw1_V_dout,
        if_empty_n => data2dw1_V_empty_n,
        if_read => data2dw1_V_read);

    keepout_V_fifo_U : component fifo_w32_d10_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => tmp2_reg_4052,
        if_full_n => keepout_V_full_n,
        if_write => keepout_V_write,
        if_dout => keepout_V_dout,
        if_empty_n => keepout_V_empty_n,
        if_read => keepout_V_read);

    output_V_fifo_U : component fifo_w32_d12_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_fc_64u_12u_1u_s_fu_2039_out_stream_V_din,
        if_full_n => output_V_full_n,
        if_write => output_V_write,
        if_dout => output_V_dout,
        if_empty_n => output_V_empty_n,
        if_read => output_V_read);

    data2dw1_quant_V_V_fifo_U : component fifo_w8_d10_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_quant_layer_10u_s_fu_2070_data2dw1_quant_V_V_din,
        if_full_n => data2dw1_quant_V_V_full_n,
        if_write => data2dw1_quant_V_V_write,
        if_dout => data2dw1_quant_V_V_dout,
        if_empty_n => data2dw1_quant_V_V_empty_n,
        if_read => data2dw1_quant_V_V_read);

    dw12pw1_quant_V_V_fifo_U : component fifo_w8_d10_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_dw_layer1_fu_2019_out_stream_V_V_din,
        if_full_n => dw12pw1_quant_V_V_full_n,
        if_write => dw12pw1_quant_V_V_write,
        if_dout => dw12pw1_quant_V_V_dout,
        if_empty_n => dw12pw1_quant_V_V_empty_n,
        if_read => dw12pw1_quant_V_V_read);

    pw12gru_quant_V_V_fifo_U : component fifo_w8_d100_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_pw_layer1_fu_1999_out_stream_V_V_din,
        if_full_n => pw12gru_quant_V_V_full_n,
        if_write => pw12gru_quant_V_V_write,
        if_dout => pw12gru_quant_V_V_dout,
        if_empty_n => pw12gru_quant_V_V_empty_n,
        if_read => pw12gru_quant_V_V_read);

    gru2fc_quant_V_V_fifo_U : component fifo_w8_d64_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_grucell_fu_1800_out_stream_V_V_din,
        if_full_n => gru2fc_quant_V_V_full_n,
        if_write => gru2fc_quant_V_V_write,
        if_dout => gru2fc_quant_V_V_dout,
        if_empty_n => gru2fc_quant_V_V_empty_n,
        if_read => gru2fc_quant_V_V_read);

    fc2final_quant_V_V_fifo_U : component fifo_w8_d64_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_fc_relu6_fu_1973_out_stream_V_V_din,
        if_full_n => fc2final_quant_V_V_full_n,
        if_write => fc2final_quant_V_V_write,
        if_dout => fc2final_quant_V_V_dout,
        if_empty_n => fc2final_quant_V_V_empty_n,
        if_read => fc2final_quant_V_V_read);

    data2dw1_scale_V_fifo_U : component fifo_w32_d1_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_quant_layer_10u_s_fu_2070_data2dw1_scale_V_din,
        if_full_n => data2dw1_scale_V_full_n,
        if_write => data2dw1_scale_V_write,
        if_dout => data2dw1_scale_V_dout,
        if_empty_n => data2dw1_scale_V_empty_n,
        if_read => data2dw1_scale_V_read);

    dw12pw1_scale_V_fifo_U : component fifo_w32_d1_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_dw_layer1_fu_2019_dw12pw1_scale_V_din,
        if_full_n => dw12pw1_scale_V_full_n,
        if_write => dw12pw1_scale_V_write,
        if_dout => dw12pw1_scale_V_dout,
        if_empty_n => dw12pw1_scale_V_empty_n,
        if_read => dw12pw1_scale_V_read);

    pw12gru_scale_V_fifo_U : component fifo_w32_d1_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_pw_layer1_fu_1999_pw12gru_scale_V_din,
        if_full_n => pw12gru_scale_V_full_n,
        if_write => pw12gru_scale_V_write,
        if_dout => pw12gru_scale_V_dout,
        if_empty_n => pw12gru_scale_V_empty_n,
        if_read => pw12gru_scale_V_read);

    gru2fc_scale_V_fifo_U : component fifo_w32_d1_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_grucell_fu_1800_gru2fc_scale_V_din,
        if_full_n => gru2fc_scale_V_full_n,
        if_write => gru2fc_scale_V_write,
        if_dout => gru2fc_scale_V_dout,
        if_empty_n => gru2fc_scale_V_empty_n,
        if_read => gru2fc_scale_V_read);

    fc2final_scale_V_fifo_U : component fifo_w32_d1_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_fc_relu6_fu_1973_fc2final_scale_V_din,
        if_full_n => fc2final_scale_V_full_n,
        if_write => fc2final_scale_V_write,
        if_dout => fc2final_scale_V_dout,
        if_empty_n => fc2final_scale_V_empty_n,
        if_read => fc2final_scale_V_read);

    regslice_both_data_in_V_data_U : component regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => data_in_TDATA,
        vld_in => data_in_TVALID,
        ack_in => regslice_both_data_in_V_data_U_ack_in,
        data_out => data_in_TDATA_int,
        vld_out => data_in_TVALID_int,
        ack_out => data_in_TREADY_int,
        apdone_blk => regslice_both_data_in_V_data_U_apdone_blk);

    regslice_both_w1_data_in_V_last_U : component regslice_both_w1
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => data_in_TLAST,
        vld_in => data_in_TVALID,
        ack_in => regslice_both_w1_data_in_V_last_U_ack_in,
        data_out => data_in_TLAST_int,
        vld_out => regslice_both_w1_data_in_V_last_U_vld_out,
        ack_out => data_in_TREADY_int,
        apdone_blk => regslice_both_w1_data_in_V_last_U_apdone_blk);

    regslice_both_weight_in_V_data_V_U : component regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => weight_in_TDATA,
        vld_in => weight_in_TVALID,
        ack_in => regslice_both_weight_in_V_data_V_U_ack_in,
        data_out => weight_in_TDATA_int,
        vld_out => weight_in_TVALID_int,
        ack_out => weight_in_TREADY_int,
        apdone_blk => regslice_both_weight_in_V_data_V_U_apdone_blk);

    regslice_both_w1_weight_in_V_last_U : component regslice_both_w1
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => weight_in_TLAST,
        vld_in => weight_in_TVALID,
        ack_in => regslice_both_w1_weight_in_V_last_U_ack_in,
        data_out => weight_in_TLAST_int,
        vld_out => regslice_both_w1_weight_in_V_last_U_vld_out,
        ack_out => weight_in_TREADY_int,
        apdone_blk => regslice_both_w1_weight_in_V_last_U_apdone_blk);

    regslice_both_control_in_V_data_U : component regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => control_in_TDATA,
        vld_in => control_in_TVALID,
        ack_in => regslice_both_control_in_V_data_U_ack_in,
        data_out => control_in_TDATA_int,
        vld_out => control_in_TVALID_int,
        ack_out => control_in_TREADY_int,
        apdone_blk => regslice_both_control_in_V_data_U_apdone_blk);

    regslice_both_w1_control_in_V_last_U : component regslice_both_w1
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => control_in_TLAST,
        vld_in => control_in_TVALID,
        ack_in => regslice_both_w1_control_in_V_last_U_ack_in,
        data_out => control_in_TLAST_int,
        vld_out => regslice_both_w1_control_in_V_last_U_vld_out,
        ack_out => control_in_TREADY_int,
        apdone_blk => regslice_both_w1_control_in_V_last_U_apdone_blk);

    regslice_both_data_out_V_data_U : component regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_datastream_out_12u_s_fu_2187_data_out_TDATA,
        vld_in => grp_datastream_out_12u_s_fu_2187_data_out_TVALID,
        ack_in => data_out_TREADY_int,
        data_out => data_out_TDATA,
        vld_out => regslice_both_data_out_V_data_U_vld_out,
        ack_out => data_out_TREADY,
        apdone_blk => regslice_both_data_out_V_data_U_apdone_blk);

    regslice_both_w1_data_out_V_last_U : component regslice_both_w1
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_datastream_out_12u_s_fu_2187_data_out_TLAST,
        vld_in => grp_datastream_out_12u_s_fu_2187_data_out_TVALID,
        ack_in => regslice_both_w1_data_out_V_last_U_ack_in_dummy,
        data_out => data_out_TLAST,
        vld_out => regslice_both_w1_data_out_V_last_U_vld_out,
        ack_out => data_out_TREADY,
        apdone_blk => regslice_both_w1_data_out_V_last_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state8) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((icmp_ln194_fu_2289_p2 = ap_const_lv1_0) and (data_in_TVALID_int = ap_const_logic_0))) and (icmp_ln194_fu_2289_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state8)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state8);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                elsif ((not(((icmp_ln194_fu_2289_p2 = ap_const_lv1_0) and (data_in_TVALID_int = ap_const_logic_0))) and (icmp_ln194_fu_2289_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state21) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((not(((icmp_ln212_fu_2491_p2 = ap_const_lv1_0) and (data_in_TVALID_int = ap_const_logic_0))) and (icmp_ln212_fu_2491_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state21)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state21);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
                elsif ((not(((icmp_ln212_fu_2491_p2 = ap_const_lv1_0) and (data_in_TVALID_int = ap_const_logic_0))) and (icmp_ln212_fu_2491_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                    ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp2_exit_iter0_state49) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif ((not(((icmp_ln241_fu_2894_p2 = ap_const_lv1_0) and (data_in_TVALID_int = ap_const_logic_0))) and (icmp_ln241_fu_2894_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state43))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp2_exit_iter0_state49)) then 
                        ap_enable_reg_pp2_iter1 <= (ap_const_logic_1 xor ap_condition_pp2_exit_iter0_state49);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
                elsif ((not(((icmp_ln241_fu_2894_p2 = ap_const_lv1_0) and (data_in_TVALID_int = ap_const_logic_0))) and (icmp_ln241_fu_2894_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state43))) then 
                    ap_enable_reg_pp2_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp3_exit_iter0_state63) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln282_fu_3061_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state62))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp3_exit_iter0_state63) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone))) then 
                    ap_enable_reg_pp3_iter1 <= (ap_const_logic_1 xor ap_condition_pp3_exit_iter0_state63);
                elsif ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
                elsif (((icmp_ln282_fu_3061_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state62))) then 
                    ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp4_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp4_exit_iter0_state97) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone))) then 
                    ap_enable_reg_pp4_iter0 <= ap_const_logic_0;
                elsif ((not(((icmp_ln167_fu_3215_p2 = ap_const_lv1_0) and (data_in_TVALID_int = ap_const_logic_0))) and (icmp_ln167_fu_3215_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state83))) then 
                    ap_enable_reg_pp4_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp4_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp4_exit_iter0_state97) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone))) then 
                    ap_enable_reg_pp4_iter1 <= (ap_const_logic_1 xor ap_condition_pp4_exit_iter0_state97);
                elsif ((ap_const_boolean_0 = ap_block_pp4_stage0_subdone)) then 
                    ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
                elsif ((not(((icmp_ln167_fu_3215_p2 = ap_const_lv1_0) and (data_in_TVALID_int = ap_const_logic_0))) and (icmp_ln167_fu_3215_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state83))) then 
                    ap_enable_reg_pp4_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_calc_stft_fu_1919_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_calc_stft_fu_1919_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
                    grp_calc_stft_fu_1919_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_calc_stft_fu_1919_ap_ready = ap_const_logic_1)) then 
                    grp_calc_stft_fu_1919_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_datastream_out_12u_s_fu_2187_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_datastream_out_12u_s_fu_2187_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
                    grp_datastream_out_12u_s_fu_2187_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_datastream_out_12u_s_fu_2187_ap_ready = ap_const_logic_1)) then 
                    grp_datastream_out_12u_s_fu_2187_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dw_layer1_fu_2019_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_dw_layer1_fu_2019_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
                    grp_dw_layer1_fu_2019_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dw_layer1_fu_2019_ap_ready = ap_const_logic_1)) then 
                    grp_dw_layer1_fu_2019_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_fbank_fu_2077_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_fbank_fu_2077_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
                    grp_fbank_fu_2077_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fbank_fu_2077_ap_ready = ap_const_logic_1)) then 
                    grp_fbank_fu_2077_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_fc_64u_12u_1u_s_fu_2039_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_fc_64u_12u_1u_s_fu_2039_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state78)) then 
                    grp_fc_64u_12u_1u_s_fu_2039_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fc_64u_12u_1u_s_fu_2039_ap_ready = ap_const_logic_1)) then 
                    grp_fc_64u_12u_1u_s_fu_2039_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_fc_relu6_fu_1973_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_fc_relu6_fu_1973_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
                    grp_fc_relu6_fu_1973_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fc_relu6_fu_1973_ap_ready = ap_const_logic_1)) then 
                    grp_fc_relu6_fu_1973_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_grucell_fu_1800_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_grucell_fu_1800_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
                    grp_grucell_fu_1800_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_grucell_fu_1800_ap_ready = ap_const_logic_1)) then 
                    grp_grucell_fu_1800_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_mfcc_dct_fu_1859_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_mfcc_dct_fu_1859_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
                    grp_mfcc_dct_fu_1859_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_mfcc_dct_fu_1859_ap_ready = ap_const_logic_1)) then 
                    grp_mfcc_dct_fu_1859_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_mfcc_log_fu_2058_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_mfcc_log_fu_2058_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
                    grp_mfcc_log_fu_2058_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_mfcc_log_fu_2058_ap_ready = ap_const_logic_1)) then 
                    grp_mfcc_log_fu_2058_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_pw_layer1_fu_1999_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_pw_layer1_fu_1999_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
                    grp_pw_layer1_fu_1999_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_pw_layer1_fu_1999_ap_ready = ap_const_logic_1)) then 
                    grp_pw_layer1_fu_1999_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_quant_layer_10u_s_fu_2070_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_quant_layer_10u_s_fu_2070_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
                    grp_quant_layer_10u_s_fu_2070_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_quant_layer_10u_s_fu_2070_ap_ready = ap_const_logic_1)) then 
                    grp_quant_layer_10u_s_fu_2070_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_weight_loader_fu_2101_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_weight_loader_fu_2101_ap_start_reg <= ap_const_logic_0;
            else
                if (((control_in_TVALID_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln137_fu_2279_p2 = ap_const_lv1_1))) then 
                    grp_weight_loader_fu_2101_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_weight_loader_fu_2101_ap_ready = ap_const_logic_1)) then 
                    grp_weight_loader_fu_2101_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i10_0_reg_1591_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                i10_0_reg_1591 <= ap_const_lv5_A;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state28) and (icmp_ln231_fu_2694_p2 = ap_const_lv1_1))) then 
                i10_0_reg_1591 <= i_34_fu_2720_p2;
            end if; 
        end if;
    end process;

    i12_0_reg_1648_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state39) and (ap_const_lv1_1 = and_ln238_1_fu_2767_p2))) then 
                i12_0_reg_1648 <= ap_const_lv13_D20;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
                i12_0_reg_1648 <= i_37_fu_2926_p2;
            end if; 
        end if;
    end process;

    i14_0_reg_1671_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((icmp_ln241_fu_2894_p2 = ap_const_lv1_0) and (data_in_TVALID_int = ap_const_logic_0))) and (icmp_ln241_fu_2894_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state43))) then 
                i14_0_reg_1671 <= ap_const_lv6_14;
            elsif (((icmp_ln247_reg_3888 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
                i14_0_reg_1671 <= select_ln252_1_reg_3902;
            end if; 
        end if;
    end process;

    i16_0_reg_1626_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = and_ln238_1_fu_2767_p2) and (ap_const_logic_1 = ap_CS_fsm_state39))) then 
                i16_0_reg_1626 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state41) and (icmp_ln263_fu_2855_p2 = ap_const_lv1_1))) then 
                i16_0_reg_1626 <= i_33_reg_3802;
            end if; 
        end if;
    end process;

    i18_0_reg_1693_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state75) and (grp_grucell_fu_1800_ap_done = ap_const_logic_1))) then 
                i18_0_reg_1693 <= i_38_reg_3978;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state61) and (grp_mfcc_dct_fu_1859_ap_done = ap_const_logic_1))) then 
                i18_0_reg_1693 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    i1_0_reg_1778_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((icmp_ln167_fu_3215_p2 = ap_const_lv1_0) and (data_in_TVALID_int = ap_const_logic_0))) and (icmp_ln167_fu_3215_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state83))) then 
                i1_0_reg_1778 <= ap_const_lv6_0;
            elsif (((icmp_ln178_reg_4145 = ap_const_lv1_0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001))) then 
                i1_0_reg_1778 <= select_ln178_1_reg_4160;
            end if; 
        end if;
    end process;

    i2_0_reg_1489_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln137_fu_2279_p2 = ap_const_lv1_0) and (control_in_TVALID_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i2_0_reg_1489 <= ap_const_lv11_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                i2_0_reg_1489 <= i_29_reg_3485;
            end if; 
        end if;
    end process;

    i4_0_reg_1512_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((icmp_ln194_fu_2289_p2 = ap_const_lv1_0) and (data_in_TVALID_int = ap_const_logic_0))) and (icmp_ln194_fu_2289_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i4_0_reg_1512 <= ap_const_lv4_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln200_reg_3534 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                i4_0_reg_1512 <= select_ln205_1_reg_3548;
            end if; 
        end if;
    end process;

    i6_0_reg_1534_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                i6_0_reg_1534 <= i_32_fu_2523_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                i6_0_reg_1534 <= ap_const_lv12_6E0;
            end if; 
        end if;
    end process;

    i8_0_reg_1557_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((icmp_ln212_fu_2491_p2 = ap_const_lv1_0) and (data_in_TVALID_int = ap_const_logic_0))) and (icmp_ln212_fu_2491_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                i8_0_reg_1557 <= ap_const_lv5_A;
            elsif (((icmp_ln218_reg_3678 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                i8_0_reg_1557 <= select_ln223_1_reg_3692;
            end if; 
        end if;
    end process;

    i_0_i_reg_1734_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((keep_in_V_empty_n = ap_const_logic_0) and (icmp_ln22_fu_3169_p2 = ap_const_lv1_1)) or ((icmp_ln22_fu_3169_p2 = ap_const_lv1_0) and (data2dw1_V_full_n = ap_const_logic_0)) or ((icmp_ln22_fu_3169_p2 = ap_const_lv1_0) and (pre_out_V_empty_n = ap_const_logic_0)))) and (icmp_ln22_fu_3169_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state66))) then 
                i_0_i_reg_1734 <= i_39_fu_3175_p2;
            elsif ((not((((keep_in_V_full_n = ap_const_logic_0) and (icmp_ln290_fu_3163_p2 = ap_const_lv1_1)) or ((icmp_ln290_fu_3163_p2 = ap_const_lv1_0) and (keep_in_V_full_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state65))) then 
                i_0_i_reg_1734 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    i_0_reg_1755_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state96)) then 
                i_0_reg_1755 <= i_27_reg_4096;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state82) and (grp_weight_loader_fu_2101_ap_done = ap_const_logic_1))) then 
                i_0_reg_1755 <= ap_const_lv12_0;
            end if; 
        end if;
    end process;

    indvar_flatten13_reg_1546_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((icmp_ln212_fu_2491_p2 = ap_const_lv1_0) and (data_in_TVALID_int = ap_const_logic_0))) and (icmp_ln212_fu_2491_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                indvar_flatten13_reg_1546 <= ap_const_lv12_0;
            elsif (((icmp_ln218_fu_2529_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                indvar_flatten13_reg_1546 <= add_ln218_fu_2535_p2;
            end if; 
        end if;
    end process;

    indvar_flatten20_reg_1660_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((icmp_ln241_fu_2894_p2 = ap_const_lv1_0) and (data_in_TVALID_int = ap_const_logic_0))) and (icmp_ln241_fu_2894_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state43))) then 
                indvar_flatten20_reg_1660 <= ap_const_lv14_0;
            elsif (((icmp_ln247_fu_2932_p2 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
                indvar_flatten20_reg_1660 <= add_ln247_fu_2938_p2;
            end if; 
        end if;
    end process;

    indvar_flatten6_reg_1501_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((icmp_ln194_fu_2289_p2 = ap_const_lv1_0) and (data_in_TVALID_int = ap_const_logic_0))) and (icmp_ln194_fu_2289_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                indvar_flatten6_reg_1501 <= ap_const_lv12_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln200_fu_2327_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten6_reg_1501 <= add_ln200_fu_2333_p2;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_1767_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((icmp_ln167_fu_3215_p2 = ap_const_lv1_0) and (data_in_TVALID_int = ap_const_logic_0))) and (icmp_ln167_fu_3215_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state83))) then 
                indvar_flatten_reg_1767 <= ap_const_lv14_0;
            elsif (((icmp_ln178_fu_3259_p2 = ap_const_lv1_0) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001))) then 
                indvar_flatten_reg_1767 <= add_ln178_fu_3265_p2;
            end if; 
        end if;
    end process;

    j11_0_reg_1615_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln229_fu_2658_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                j11_0_reg_1615 <= ap_const_lv9_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
                j11_0_reg_1615 <= j_11_reg_3775;
            end if; 
        end if;
    end process;

    j15_0_reg_1682_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((icmp_ln241_fu_2894_p2 = ap_const_lv1_0) and (data_in_TVALID_int = ap_const_logic_0))) and (icmp_ln241_fu_2894_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state43))) then 
                j15_0_reg_1682 <= ap_const_lv9_0;
            elsif (((icmp_ln247_fu_2932_p2 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
                j15_0_reg_1682 <= j_12_fu_2972_p2;
            end if; 
        end if;
    end process;

    j17_0_reg_1637_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln261_fu_2773_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state40))) then 
                j17_0_reg_1637 <= ap_const_lv9_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
                j17_0_reg_1637 <= j_13_reg_3820;
            end if; 
        end if;
    end process;

    j19_0_reg_1705_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln282_fu_3061_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state62))) then 
                j19_0_reg_1705 <= ap_const_lv4_0;
            elsif (((icmp_ln285_fu_3107_p2 = ap_const_lv1_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
                j19_0_reg_1705 <= j_14_fu_3113_p2;
            end if; 
        end if;
    end process;

    j5_0_reg_1523_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((icmp_ln194_fu_2289_p2 = ap_const_lv1_0) and (data_in_TVALID_int = ap_const_logic_0))) and (icmp_ln194_fu_2289_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                j5_0_reg_1523 <= ap_const_lv9_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln200_fu_2327_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                j5_0_reg_1523 <= j_9_fu_2367_p2;
            end if; 
        end if;
    end process;

    j9_0_reg_1568_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((icmp_ln212_fu_2491_p2 = ap_const_lv1_0) and (data_in_TVALID_int = ap_const_logic_0))) and (icmp_ln212_fu_2491_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                j9_0_reg_1568 <= ap_const_lv9_0;
            elsif (((icmp_ln218_fu_2529_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                j9_0_reg_1568 <= j_10_fu_2569_p2;
            end if; 
        end if;
    end process;

    j_0_reg_1789_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((icmp_ln167_fu_3215_p2 = ap_const_lv1_0) and (data_in_TVALID_int = ap_const_logic_0))) and (icmp_ln167_fu_3215_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state83))) then 
                j_0_reg_1789 <= ap_const_lv9_0;
            elsif (((icmp_ln178_fu_3259_p2 = ap_const_lv1_0) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001))) then 
                j_0_reg_1789 <= j_fu_3299_p2;
            end if; 
        end if;
    end process;

    reg_2256_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state78)) then 
                reg_2256 <= weight_bias_scale_q1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state69) or ((keepout_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state73)))) then 
                reg_2256 <= weight_bias_scale_q0;
            end if; 
        end if;
    end process;

    reg_2266_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state78) or ((grp_pw_layer1_fu_1999_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state72)))) then 
                reg_2266 <= tmp_scale_q1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state71))) then 
                reg_2266 <= tmp_scale_q0;
            end if; 
        end if;
    end process;

    shorttime_energy_0_reg_1579_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                shorttime_energy_0_reg_1579 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state28) and (icmp_ln231_fu_2694_p2 = ap_const_lv1_1))) then 
                shorttime_energy_0_reg_1579 <= shorttime_energy_1_reg_1603;
            end if; 
        end if;
    end process;

    shorttime_energy_1_reg_1603_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln229_fu_2658_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                shorttime_energy_1_reg_1603 <= shorttime_energy_0_reg_1579;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
                shorttime_energy_1_reg_1603 <= grp_fu_2196_p2;
            end if; 
        end if;
    end process;

    threshold_loc_0_reg_1745_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state96)) then 
                threshold_loc_0_reg_1745 <= grp_fu_2196_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state82) and (grp_weight_loader_fu_2101_ap_done = ap_const_logic_1))) then 
                threshold_loc_0_reg_1745 <= threshold_load_reg_3474;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln229_fu_2658_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                    add_ln233_reg_3767(13 downto 6) <= add_ln233_fu_2688_p2(13 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln261_fu_2773_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state40))) then
                    add_ln265_1_reg_3807(13 downto 6) <= add_ln265_1_fu_2819_p2(13 downto 6);
                    add_ln265_2_reg_3812(12 downto 6) <= add_ln265_2_fu_2849_p2(12 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln263_fu_2855_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state41))) then
                add_ln265_4_reg_3830 <= add_ln265_4_fu_2885_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state82) and (grp_weight_loader_fu_2101_ap_done = ap_const_logic_1))) then
                dw_weight1_V_0 <= grp_weight_loader_fu_2101_ap_return_0;
                dw_weight1_V_1 <= grp_weight_loader_fu_2101_ap_return_1;
                dw_weight1_V_2 <= grp_weight_loader_fu_2101_ap_return_2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state29)) then
                frames_load_reg_3790 <= frames_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((icmp_ln167_fu_3215_p2 = ap_const_lv1_0) and (data_in_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state83))) then
                i_27_reg_4096 <= i_27_fu_3221_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((icmp_ln194_fu_2289_p2 = ap_const_lv1_0) and (data_in_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                i_29_reg_3485 <= i_29_fu_2295_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state40)) then
                i_33_reg_3802 <= i_33_fu_2779_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state62)) then
                i_38_reg_3978 <= i_38_fu_3067_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001))) then
                icmp_ln178_reg_4145 <= icmp_ln178_fu_3259_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln200_reg_3534 <= icmp_ln200_fu_2327_p2;
                icmp_ln200_reg_3534_pp0_iter1_reg <= icmp_ln200_reg_3534;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                icmp_ln200_reg_3534_pp0_iter2_reg <= icmp_ln200_reg_3534_pp0_iter1_reg;
                icmp_ln200_reg_3534_pp0_iter3_reg <= icmp_ln200_reg_3534_pp0_iter2_reg;
                    zext_ln205_5_reg_3560_pp0_iter2_reg(12 downto 0) <= zext_ln205_5_reg_3560(12 downto 0);
                    zext_ln205_5_reg_3560_pp0_iter3_reg(12 downto 0) <= zext_ln205_5_reg_3560_pp0_iter2_reg(12 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                icmp_ln218_reg_3678 <= icmp_ln218_fu_2529_p2;
                icmp_ln218_reg_3678_pp1_iter1_reg <= icmp_ln218_reg_3678;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                icmp_ln218_reg_3678_pp1_iter2_reg <= icmp_ln218_reg_3678_pp1_iter1_reg;
                icmp_ln218_reg_3678_pp1_iter3_reg <= icmp_ln218_reg_3678_pp1_iter2_reg;
                    zext_ln223_5_reg_3704_pp1_iter2_reg(13 downto 0) <= zext_ln223_5_reg_3704(13 downto 0);
                    zext_ln223_5_reg_3704_pp1_iter3_reg(13 downto 0) <= zext_ln223_5_reg_3704_pp1_iter2_reg(13 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                icmp_ln247_reg_3888 <= icmp_ln247_fu_2932_p2;
                icmp_ln247_reg_3888_pp2_iter1_reg <= icmp_ln247_reg_3888;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp2_stage0_11001)) then
                icmp_ln247_reg_3888_pp2_iter2_reg <= icmp_ln247_reg_3888_pp2_iter1_reg;
                icmp_ln247_reg_3888_pp2_iter3_reg <= icmp_ln247_reg_3888_pp2_iter2_reg;
                    zext_ln252_5_reg_3914_pp2_iter2_reg(14 downto 0) <= zext_ln252_5_reg_3914(14 downto 0);
                    zext_ln252_5_reg_3914_pp2_iter3_reg(14 downto 0) <= zext_ln252_5_reg_3914_pp2_iter2_reg(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then
                icmp_ln285_reg_3993 <= icmp_ln285_fu_3107_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state28)) then
                j_11_reg_3775 <= j_11_fu_2700_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state41)) then
                j_13_reg_3820 <= j_13_fu_2861_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                or_ln238_1_reg_3620 <= or_ln238_1_fu_2485_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state91) or (ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state5))) then
                reg_2235 <= grp_fu_2202_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln178_fu_3259_p2 = ap_const_lv1_0) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001))) then
                select_ln178_1_reg_4160 <= select_ln178_1_fu_3291_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln178_fu_3259_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001))) then
                select_ln178_reg_4154 <= select_ln178_fu_3283_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln200_fu_2327_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                select_ln205_1_reg_3548 <= select_ln205_1_fu_2359_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln200_fu_2327_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                select_ln205_reg_3543 <= select_ln205_fu_2351_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln218_fu_2529_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                select_ln223_1_reg_3692 <= select_ln223_1_fu_2561_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln218_fu_2529_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                select_ln223_reg_3687 <= select_ln223_fu_2553_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln247_fu_2932_p2 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                select_ln252_1_reg_3902 <= select_ln252_1_fu_2964_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln247_fu_2932_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                select_ln252_reg_3897 <= select_ln252_fu_2956_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state86)) then
                    signal_in_0_addr_1_reg_4105(8 downto 0) <= zext_ln171_fu_3241_p1(10 - 1 downto 0)(8 downto 0);
                    signal_in_1_addr_1_reg_4110(8 downto 0) <= zext_ln171_fu_3241_p1(10 - 1 downto 0)(8 downto 0);
                    signal_in_2_addr_1_reg_4115(8 downto 0) <= zext_ln171_fu_3241_p1(10 - 1 downto 0)(8 downto 0);
                    signal_in_3_addr_1_reg_4120(8 downto 0) <= zext_ln171_fu_3241_p1(10 - 1 downto 0)(8 downto 0);
                    signal_in_4_addr_1_reg_4125(8 downto 0) <= zext_ln171_fu_3241_p1(10 - 1 downto 0)(8 downto 0);
                    signal_in_5_addr_1_reg_4130(8 downto 0) <= zext_ln171_fu_3241_p1(10 - 1 downto 0)(8 downto 0);
                    signal_in_6_addr_1_reg_4135(8 downto 0) <= zext_ln171_fu_3241_p1(10 - 1 downto 0)(8 downto 0);
                    signal_in_7_addr_1_reg_4140(8 downto 0) <= zext_ln171_fu_3241_p1(10 - 1 downto 0)(8 downto 0);
                trunc_ln171_reg_4101 <= trunc_ln171_fu_3227_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                    signal_in_0_addr_2_reg_3633(8 downto 0) <= zext_ln216_fu_2511_p1(10 - 1 downto 0)(8 downto 0);
                    signal_in_1_addr_2_reg_3638(8 downto 0) <= zext_ln216_fu_2511_p1(10 - 1 downto 0)(8 downto 0);
                    signal_in_2_addr_2_reg_3643(8 downto 0) <= zext_ln216_fu_2511_p1(10 - 1 downto 0)(8 downto 0);
                    signal_in_3_addr_2_reg_3648(8 downto 0) <= zext_ln216_fu_2511_p1(10 - 1 downto 0)(8 downto 0);
                    signal_in_4_addr_2_reg_3653(8 downto 0) <= zext_ln216_fu_2511_p1(10 - 1 downto 0)(8 downto 0);
                    signal_in_5_addr_2_reg_3658(8 downto 0) <= zext_ln216_fu_2511_p1(10 - 1 downto 0)(8 downto 0);
                    signal_in_6_addr_2_reg_3663(8 downto 0) <= zext_ln216_fu_2511_p1(10 - 1 downto 0)(8 downto 0);
                    signal_in_7_addr_2_reg_3668(8 downto 0) <= zext_ln216_fu_2511_p1(10 - 1 downto 0)(8 downto 0);
                trunc_ln216_reg_3629 <= trunc_ln216_fu_2497_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state46)) then
                signal_in_0_addr_3_reg_3843 <= zext_ln245_fu_2914_p1(10 - 1 downto 0);
                signal_in_1_addr_3_reg_3848 <= zext_ln245_fu_2914_p1(10 - 1 downto 0);
                signal_in_2_addr_3_reg_3853 <= zext_ln245_fu_2914_p1(10 - 1 downto 0);
                signal_in_3_addr_3_reg_3858 <= zext_ln245_fu_2914_p1(10 - 1 downto 0);
                signal_in_4_addr_3_reg_3863 <= zext_ln245_fu_2914_p1(10 - 1 downto 0);
                signal_in_5_addr_3_reg_3868 <= zext_ln245_fu_2914_p1(10 - 1 downto 0);
                signal_in_6_addr_3_reg_3873 <= zext_ln245_fu_2914_p1(10 - 1 downto 0);
                signal_in_7_addr_3_reg_3878 <= zext_ln245_fu_2914_p1(10 - 1 downto 0);
                trunc_ln245_reg_3839 <= trunc_ln245_fu_2900_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                    signal_in_0_addr_reg_3494(7 downto 0) <= zext_ln198_fu_2315_p1(10 - 1 downto 0)(7 downto 0);
                    signal_in_1_addr_reg_3499(7 downto 0) <= zext_ln198_fu_2315_p1(10 - 1 downto 0)(7 downto 0);
                    signal_in_2_addr_reg_3504(7 downto 0) <= zext_ln198_fu_2315_p1(10 - 1 downto 0)(7 downto 0);
                    signal_in_3_addr_reg_3509(7 downto 0) <= zext_ln198_fu_2315_p1(10 - 1 downto 0)(7 downto 0);
                    signal_in_4_addr_reg_3514(7 downto 0) <= zext_ln198_fu_2315_p1(10 - 1 downto 0)(7 downto 0);
                    signal_in_5_addr_reg_3519(7 downto 0) <= zext_ln198_fu_2315_p1(10 - 1 downto 0)(7 downto 0);
                    signal_in_6_addr_reg_3524(7 downto 0) <= zext_ln198_fu_2315_p1(10 - 1 downto 0)(7 downto 0);
                    signal_in_7_addr_reg_3529(7 downto 0) <= zext_ln198_fu_2315_p1(10 - 1 downto 0)(7 downto 0);
                trunc_ln198_reg_3490 <= trunc_ln198_fu_2301_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln282_fu_3061_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state62))) then
                sub_ln288_reg_3983 <= sub_ln288_fu_3089_p2;
                    zext_ln285_reg_3988(6 downto 1) <= zext_ln285_fu_3103_p1(6 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state96)) then
                threshold <= grp_fu_2196_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((control_in_TVALID_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                threshold_load_reg_3474 <= threshold;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_pw_layer1_fu_1999_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state72))) then
                tmp2_reg_4052 <= grp_fu_2207_p1;
                tmp_scale_load_5_reg_4057 <= tmp_scale_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((keep_in_V_empty_n = ap_const_logic_0) and (icmp_ln22_fu_3169_p2 = ap_const_lv1_1)) or ((icmp_ln22_fu_3169_p2 = ap_const_lv1_0) and (data2dw1_V_full_n = ap_const_logic_0)) or ((icmp_ln22_fu_3169_p2 = ap_const_lv1_0) and (pre_out_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state66) and (icmp_ln22_fu_3169_p2 = ap_const_lv1_1))) then
                tmp_103_reg_4037 <= keep_in_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln200_reg_3534_pp0_iter2_reg = ap_const_lv1_0))) then
                tmp_280_reg_3615 <= tmp_280_fu_2434_p10;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln218_reg_3678_pp1_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                tmp_281_reg_3759 <= tmp_281_fu_2636_p10;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln247_reg_3888_pp2_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                tmp_284_reg_3969 <= tmp_284_fu_3039_p10;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state71)) then
                tmp_scale_load_3_reg_4047 <= tmp_scale_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((keepout_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state73))) then
                tmp_scale_load_6_reg_4062 <= tmp_scale_q1;
                tmp_scale_load_7_reg_4067 <= tmp_scale_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state74)) then
                tmp_scale_load_8_reg_4082 <= tmp_scale_q1;
                tmp_scale_load_9_reg_4087 <= tmp_scale_q0;
                weight_bias_scale_lo_3_reg_4072 <= weight_bias_scale_q0;
                weight_bias_scale_lo_4_reg_4077 <= weight_bias_scale_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln200_reg_3534_pp0_iter1_reg = ap_const_lv1_0))) then
                trunc_ln205_reg_3570 <= trunc_ln205_fu_2415_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln218_reg_3678_pp1_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                trunc_ln223_reg_3714 <= trunc_ln223_fu_2617_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln247_reg_3888_pp2_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                trunc_ln252_reg_3924 <= trunc_ln252_fu_3020_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln285_fu_3107_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then
                trunc_ln288_reg_4002 <= trunc_ln288_fu_3119_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln200_reg_3534 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    zext_ln205_5_reg_3560(12 downto 0) <= zext_ln205_5_fu_2410_p1(12 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln218_reg_3678 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                    zext_ln223_5_reg_3704(13 downto 0) <= zext_ln223_5_fu_2612_p1(13 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln247_reg_3888 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                    zext_ln252_5_reg_3914(14 downto 0) <= zext_ln252_5_fu_3015_p1(14 downto 0);
            end if;
        end if;
    end process;
    signal_in_0_addr_reg_3494(9 downto 8) <= "00";
    signal_in_1_addr_reg_3499(9 downto 8) <= "00";
    signal_in_2_addr_reg_3504(9 downto 8) <= "00";
    signal_in_3_addr_reg_3509(9 downto 8) <= "00";
    signal_in_4_addr_reg_3514(9 downto 8) <= "00";
    signal_in_5_addr_reg_3519(9 downto 8) <= "00";
    signal_in_6_addr_reg_3524(9 downto 8) <= "00";
    signal_in_7_addr_reg_3529(9 downto 8) <= "00";
    zext_ln205_5_reg_3560(63 downto 13) <= "000000000000000000000000000000000000000000000000000";
    zext_ln205_5_reg_3560_pp0_iter2_reg(63 downto 13) <= "000000000000000000000000000000000000000000000000000";
    zext_ln205_5_reg_3560_pp0_iter3_reg(63 downto 13) <= "000000000000000000000000000000000000000000000000000";
    signal_in_0_addr_2_reg_3633(9) <= '0';
    signal_in_1_addr_2_reg_3638(9) <= '0';
    signal_in_2_addr_2_reg_3643(9) <= '0';
    signal_in_3_addr_2_reg_3648(9) <= '0';
    signal_in_4_addr_2_reg_3653(9) <= '0';
    signal_in_5_addr_2_reg_3658(9) <= '0';
    signal_in_6_addr_2_reg_3663(9) <= '0';
    signal_in_7_addr_2_reg_3668(9) <= '0';
    zext_ln223_5_reg_3704(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    zext_ln223_5_reg_3704_pp1_iter2_reg(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    zext_ln223_5_reg_3704_pp1_iter3_reg(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    add_ln233_reg_3767(5 downto 0) <= "000000";
    add_ln265_1_reg_3807(5 downto 0) <= "000000";
    add_ln265_2_reg_3812(5 downto 0) <= "000000";
    zext_ln252_5_reg_3914(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    zext_ln252_5_reg_3914_pp2_iter2_reg(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    zext_ln252_5_reg_3914_pp2_iter3_reg(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    zext_ln285_reg_3988(0) <= '0';
    zext_ln285_reg_3988(7) <= '0';
    signal_in_0_addr_1_reg_4105(9) <= '0';
    signal_in_1_addr_1_reg_4110(9) <= '0';
    signal_in_2_addr_1_reg_4115(9) <= '0';
    signal_in_3_addr_1_reg_4120(9) <= '0';
    signal_in_4_addr_1_reg_4125(9) <= '0';
    signal_in_5_addr_1_reg_4130(9) <= '0';
    signal_in_6_addr_1_reg_4135(9) <= '0';
    signal_in_7_addr_1_reg_4140(9) <= '0';

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state83, icmp_ln167_fu_3215_p2, ap_CS_fsm_state2, icmp_ln194_fu_2289_p2, ap_CS_fsm_state15, icmp_ln212_fu_2491_p2, ap_CS_fsm_state43, icmp_ln241_fu_2894_p2, ap_CS_fsm_state1, ap_CS_fsm_state73, keepout_V_full_n, ap_CS_fsm_state72, grp_pw_layer1_fu_1999_ap_done, icmp_ln200_fu_2327_p2, ap_enable_reg_pp0_iter0, icmp_ln218_fu_2529_p2, ap_enable_reg_pp1_iter0, ap_CS_fsm_state27, icmp_ln229_fu_2658_p2, ap_CS_fsm_state28, icmp_ln231_fu_2694_p2, ap_CS_fsm_state40, icmp_ln261_fu_2773_p2, ap_CS_fsm_state41, icmp_ln263_fu_2855_p2, icmp_ln247_fu_2932_p2, ap_enable_reg_pp2_iter0, icmp_ln282_fu_3061_p2, ap_CS_fsm_state62, icmp_ln285_fu_3107_p2, ap_enable_reg_pp3_iter0, ap_CS_fsm_state66, pre_out_V_empty_n, icmp_ln22_fu_3169_p2, data2dw1_V_full_n, keep_in_V_empty_n, icmp_ln178_fu_3259_p2, ap_enable_reg_pp4_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter4, ap_block_pp2_stage0_subdone, ap_enable_reg_pp2_iter1, ap_enable_reg_pp2_iter3, ap_enable_reg_pp2_iter4, ap_block_pp3_stage0_subdone, ap_block_pp4_stage0_subdone, grp_grucell_fu_1800_ap_done, grp_mfcc_dct_fu_1859_ap_done, grp_calc_stft_fu_1919_ap_done, grp_fc_relu6_fu_1973_ap_done, grp_dw_layer1_fu_2019_ap_done, grp_fc_64u_12u_1u_s_fu_2039_ap_done, grp_mfcc_log_fu_2058_ap_done, grp_quant_layer_10u_s_fu_2070_ap_done, grp_fbank_fu_2077_ap_done, grp_weight_loader_fu_2101_ap_done, grp_datastream_out_12u_s_fu_2187_ap_done, icmp_ln137_fu_2279_p2, ap_CS_fsm_state39, and_ln238_1_fu_2767_p2, ap_CS_fsm_state61, ap_CS_fsm_state75, ap_CS_fsm_state65, keep_in_V_full_n, icmp_ln290_fu_3163_p2, ap_CS_fsm_state82, ap_CS_fsm_state55, ap_CS_fsm_state77, ap_CS_fsm_state70, ap_CS_fsm_state79, ap_CS_fsm_state59, ap_CS_fsm_state68, ap_CS_fsm_state57, ap_CS_fsm_state81, ap_CS_fsm_state100, regslice_both_data_out_V_data_U_apdone_blk, data_in_TVALID_int, control_in_TVALID_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((icmp_ln137_fu_2279_p2 = ap_const_lv1_0) and (control_in_TVALID_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif (((control_in_TVALID_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln137_fu_2279_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state82;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((not(((icmp_ln194_fu_2289_p2 = ap_const_lv1_0) and (data_in_TVALID_int = ap_const_logic_0))) and (icmp_ln194_fu_2289_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((not(((icmp_ln194_fu_2289_p2 = ap_const_lv1_0) and (data_in_TVALID_int = ap_const_logic_0))) and (icmp_ln194_fu_2289_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((icmp_ln200_fu_2327_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) and not(((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((icmp_ln200_fu_2327_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if ((not(((icmp_ln212_fu_2491_p2 = ap_const_lv1_0) and (data_in_TVALID_int = ap_const_logic_0))) and (icmp_ln212_fu_2491_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((not(((icmp_ln212_fu_2491_p2 = ap_const_lv1_0) and (data_in_TVALID_int = ap_const_logic_0))) and (icmp_ln212_fu_2491_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln218_fu_2529_p2 = ap_const_lv1_1))) and not(((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln218_fu_2529_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                if (((icmp_ln229_fu_2658_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_state39;
                end if;
            when ap_ST_fsm_state28 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state28) and (icmp_ln231_fu_2694_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state39 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state39) and (ap_const_lv1_1 = and_ln238_1_fu_2767_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state43;
                else
                    ap_NS_fsm <= ap_ST_fsm_state40;
                end if;
            when ap_ST_fsm_state40 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state40) and (icmp_ln261_fu_2773_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state41;
                end if;
            when ap_ST_fsm_state41 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state41) and (icmp_ln263_fu_2855_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state40;
                else
                    ap_NS_fsm <= ap_ST_fsm_state42;
                end if;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state43 => 
                if ((not(((icmp_ln241_fu_2894_p2 = ap_const_lv1_0) and (data_in_TVALID_int = ap_const_logic_0))) and (icmp_ln241_fu_2894_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state43))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif ((not(((icmp_ln241_fu_2894_p2 = ap_const_lv1_0) and (data_in_TVALID_int = ap_const_logic_0))) and (icmp_ln241_fu_2894_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state43))) then
                    ap_NS_fsm <= ap_ST_fsm_state44;
                else
                    ap_NS_fsm <= ap_ST_fsm_state43;
                end if;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_pp2_stage0 => 
                if ((not(((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (icmp_ln247_fu_2932_p2 = ap_const_lv1_1))) and not(((ap_enable_reg_pp2_iter4 = ap_const_logic_1) and (ap_enable_reg_pp2_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif ((((ap_enable_reg_pp2_iter4 = ap_const_logic_1) and (ap_enable_reg_pp2_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (icmp_ln247_fu_2932_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state54;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state55) and (grp_calc_stft_fu_1919_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state56;
                else
                    ap_NS_fsm <= ap_ST_fsm_state55;
                end if;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state57) and (grp_fbank_fu_2077_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state58;
                else
                    ap_NS_fsm <= ap_ST_fsm_state57;
                end if;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state59) and (grp_mfcc_log_fu_2058_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state60;
                else
                    ap_NS_fsm <= ap_ST_fsm_state59;
                end if;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state61) and (grp_mfcc_dct_fu_1859_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state62;
                else
                    ap_NS_fsm <= ap_ST_fsm_state61;
                end if;
            when ap_ST_fsm_state62 => 
                if (((icmp_ln282_fu_3061_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state62))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state76;
                end if;
            when ap_ST_fsm_pp3_stage0 => 
                if (not(((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (icmp_ln285_fu_3107_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                elsif (((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (icmp_ln285_fu_3107_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state65;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                end if;
            when ap_ST_fsm_state65 => 
                if ((not((((keep_in_V_full_n = ap_const_logic_0) and (icmp_ln290_fu_3163_p2 = ap_const_lv1_1)) or ((icmp_ln290_fu_3163_p2 = ap_const_lv1_0) and (keep_in_V_full_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state65))) then
                    ap_NS_fsm <= ap_ST_fsm_state66;
                else
                    ap_NS_fsm <= ap_ST_fsm_state65;
                end if;
            when ap_ST_fsm_state66 => 
                if ((not((((keep_in_V_empty_n = ap_const_logic_0) and (icmp_ln22_fu_3169_p2 = ap_const_lv1_1)) or ((icmp_ln22_fu_3169_p2 = ap_const_lv1_0) and (data2dw1_V_full_n = ap_const_logic_0)) or ((icmp_ln22_fu_3169_p2 = ap_const_lv1_0) and (pre_out_V_empty_n = ap_const_logic_0)))) and (icmp_ln22_fu_3169_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state66))) then
                    ap_NS_fsm <= ap_ST_fsm_state66;
                elsif ((not((((keep_in_V_empty_n = ap_const_logic_0) and (icmp_ln22_fu_3169_p2 = ap_const_lv1_1)) or ((icmp_ln22_fu_3169_p2 = ap_const_lv1_0) and (data2dw1_V_full_n = ap_const_logic_0)) or ((icmp_ln22_fu_3169_p2 = ap_const_lv1_0) and (pre_out_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state66) and (icmp_ln22_fu_3169_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state67;
                else
                    ap_NS_fsm <= ap_ST_fsm_state66;
                end if;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state68) and (grp_quant_layer_10u_s_fu_2070_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state69;
                else
                    ap_NS_fsm <= ap_ST_fsm_state68;
                end if;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state70 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state70) and (grp_dw_layer1_fu_2019_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state71;
                else
                    ap_NS_fsm <= ap_ST_fsm_state70;
                end if;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state72;
            when ap_ST_fsm_state72 => 
                if (((grp_pw_layer1_fu_1999_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state72))) then
                    ap_NS_fsm <= ap_ST_fsm_state73;
                else
                    ap_NS_fsm <= ap_ST_fsm_state72;
                end if;
            when ap_ST_fsm_state73 => 
                if (((keepout_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state73))) then
                    ap_NS_fsm <= ap_ST_fsm_state74;
                else
                    ap_NS_fsm <= ap_ST_fsm_state73;
                end if;
            when ap_ST_fsm_state74 => 
                ap_NS_fsm <= ap_ST_fsm_state75;
            when ap_ST_fsm_state75 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state75) and (grp_grucell_fu_1800_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state62;
                else
                    ap_NS_fsm <= ap_ST_fsm_state75;
                end if;
            when ap_ST_fsm_state76 => 
                ap_NS_fsm <= ap_ST_fsm_state77;
            when ap_ST_fsm_state77 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state77) and (grp_fc_relu6_fu_1973_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state78;
                else
                    ap_NS_fsm <= ap_ST_fsm_state77;
                end if;
            when ap_ST_fsm_state78 => 
                ap_NS_fsm <= ap_ST_fsm_state79;
            when ap_ST_fsm_state79 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state79) and (grp_fc_64u_12u_1u_s_fu_2039_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state80;
                else
                    ap_NS_fsm <= ap_ST_fsm_state79;
                end if;
            when ap_ST_fsm_state80 => 
                ap_NS_fsm <= ap_ST_fsm_state81;
            when ap_ST_fsm_state81 => 
                if (((grp_datastream_out_12u_s_fu_2187_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state81))) then
                    ap_NS_fsm <= ap_ST_fsm_state100;
                else
                    ap_NS_fsm <= ap_ST_fsm_state81;
                end if;
            when ap_ST_fsm_state82 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state82) and (grp_weight_loader_fu_2101_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state83;
                else
                    ap_NS_fsm <= ap_ST_fsm_state82;
                end if;
            when ap_ST_fsm_state83 => 
                if ((not(((icmp_ln167_fu_3215_p2 = ap_const_lv1_0) and (data_in_TVALID_int = ap_const_logic_0))) and (icmp_ln167_fu_3215_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state83))) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
                elsif ((not(((icmp_ln167_fu_3215_p2 = ap_const_lv1_0) and (data_in_TVALID_int = ap_const_logic_0))) and (icmp_ln167_fu_3215_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state83))) then
                    ap_NS_fsm <= ap_ST_fsm_state84;
                else
                    ap_NS_fsm <= ap_ST_fsm_state83;
                end if;
            when ap_ST_fsm_state84 => 
                ap_NS_fsm <= ap_ST_fsm_state85;
            when ap_ST_fsm_state85 => 
                ap_NS_fsm <= ap_ST_fsm_state86;
            when ap_ST_fsm_state86 => 
                ap_NS_fsm <= ap_ST_fsm_state87;
            when ap_ST_fsm_state87 => 
                ap_NS_fsm <= ap_ST_fsm_state88;
            when ap_ST_fsm_state88 => 
                ap_NS_fsm <= ap_ST_fsm_state89;
            when ap_ST_fsm_state89 => 
                ap_NS_fsm <= ap_ST_fsm_state90;
            when ap_ST_fsm_state90 => 
                ap_NS_fsm <= ap_ST_fsm_state91;
            when ap_ST_fsm_state91 => 
                ap_NS_fsm <= ap_ST_fsm_state92;
            when ap_ST_fsm_state92 => 
                ap_NS_fsm <= ap_ST_fsm_state93;
            when ap_ST_fsm_state93 => 
                ap_NS_fsm <= ap_ST_fsm_state94;
            when ap_ST_fsm_state94 => 
                ap_NS_fsm <= ap_ST_fsm_state95;
            when ap_ST_fsm_state95 => 
                ap_NS_fsm <= ap_ST_fsm_state96;
            when ap_ST_fsm_state96 => 
                ap_NS_fsm <= ap_ST_fsm_state83;
            when ap_ST_fsm_pp4_stage0 => 
                if (not(((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone) and (icmp_ln178_fu_3259_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
                elsif (((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone) and (icmp_ln178_fu_3259_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state99;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
                end if;
            when ap_ST_fsm_state99 => 
                ap_NS_fsm <= ap_ST_fsm_state100;
            when ap_ST_fsm_state100 => 
                if (((regslice_both_data_out_V_data_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state100))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state100;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln178_fu_3265_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_1767) + unsigned(ap_const_lv14_1));
    add_ln183_1_fu_3350_p2 <= std_logic_vector(unsigned(zext_ln180_fu_3347_p1) + unsigned(shl_ln183_1_mid2_fu_3312_p3));
    add_ln183_2_fu_3341_p2 <= std_logic_vector(unsigned(zext_ln183_1_fu_3337_p1) + unsigned(zext_ln183_fu_3326_p1));
    add_ln183_3_fu_3370_p2 <= std_logic_vector(unsigned(add_ln183_2_fu_3341_p2) + unsigned(zext_ln183_3_fu_3367_p1));
    add_ln200_fu_2333_p2 <= std_logic_vector(unsigned(indvar_flatten6_reg_1501) + unsigned(ap_const_lv12_1));
    add_ln205_1_fu_2404_p2 <= std_logic_vector(unsigned(zext_ln205_4_fu_2401_p1) + unsigned(add_ln205_fu_2395_p2));
    add_ln205_fu_2395_p2 <= std_logic_vector(unsigned(zext_ln205_fu_2380_p1) + unsigned(zext_ln205_1_fu_2391_p1));
    add_ln218_fu_2535_p2 <= std_logic_vector(unsigned(indvar_flatten13_reg_1546) + unsigned(ap_const_lv12_1));
    add_ln223_1_fu_2606_p2 <= std_logic_vector(unsigned(zext_ln223_4_fu_2603_p1) + unsigned(add_ln223_fu_2597_p2));
    add_ln223_fu_2597_p2 <= std_logic_vector(unsigned(zext_ln223_fu_2582_p1) + unsigned(zext_ln223_1_fu_2593_p1));
    add_ln233_1_fu_2710_p2 <= std_logic_vector(unsigned(add_ln233_reg_3767) + unsigned(zext_ln233_2_fu_2706_p1));
    add_ln233_fu_2688_p2 <= std_logic_vector(unsigned(zext_ln233_1_fu_2684_p1) + unsigned(zext_ln233_fu_2672_p1));
    add_ln247_fu_2938_p2 <= std_logic_vector(unsigned(indvar_flatten20_reg_1660) + unsigned(ap_const_lv14_1));
    add_ln252_1_fu_3009_p2 <= std_logic_vector(unsigned(zext_ln252_4_fu_3006_p1) + unsigned(add_ln252_fu_3000_p2));
    add_ln252_fu_3000_p2 <= std_logic_vector(unsigned(zext_ln252_fu_2985_p1) + unsigned(zext_ln252_1_fu_2996_p1));
    add_ln265_1_fu_2819_p2 <= std_logic_vector(unsigned(zext_ln265_2_fu_2815_p1) + unsigned(zext_ln265_1_fu_2803_p1));
    add_ln265_2_fu_2849_p2 <= std_logic_vector(unsigned(zext_ln265_4_fu_2845_p1) + unsigned(zext_ln265_3_fu_2833_p1));
    add_ln265_3_fu_2875_p2 <= std_logic_vector(unsigned(add_ln265_1_reg_3807) + unsigned(zext_ln265_6_fu_2871_p1));
    add_ln265_4_fu_2885_p2 <= std_logic_vector(unsigned(add_ln265_2_reg_3812) + unsigned(zext_ln265_5_fu_2867_p1));
    add_ln265_fu_2789_p2 <= std_logic_vector(unsigned(zext_ln265_fu_2785_p1) + unsigned(ap_const_lv5_A));
    add_ln288_1_fu_3152_p2 <= std_logic_vector(unsigned(zext_ln285_reg_3988) + unsigned(zext_ln288_2_fu_3133_p1));
    add_ln288_fu_3141_p2 <= std_logic_vector(unsigned(sub_ln288_reg_3983) + unsigned(zext_ln288_3_fu_3137_p1));
    and_ln238_1_fu_2767_p2 <= (grp_fu_2210_p2 and and_ln238_fu_2762_p2);
    and_ln238_fu_2762_p2 <= (or_ln238_fu_2756_p2 and or_ln238_1_reg_3620);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(7);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(16);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(40);
    ap_CS_fsm_pp3_stage0 <= ap_CS_fsm(50);
    ap_CS_fsm_pp4_stage0 <= ap_CS_fsm(83);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state100 <= ap_CS_fsm(85);
    ap_CS_fsm_state13 <= ap_CS_fsm(8);
    ap_CS_fsm_state14 <= ap_CS_fsm(9);
    ap_CS_fsm_state15 <= ap_CS_fsm(10);
    ap_CS_fsm_state16 <= ap_CS_fsm(11);
    ap_CS_fsm_state17 <= ap_CS_fsm(12);
    ap_CS_fsm_state18 <= ap_CS_fsm(13);
    ap_CS_fsm_state19 <= ap_CS_fsm(14);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(15);
    ap_CS_fsm_state26 <= ap_CS_fsm(17);
    ap_CS_fsm_state27 <= ap_CS_fsm(18);
    ap_CS_fsm_state28 <= ap_CS_fsm(19);
    ap_CS_fsm_state29 <= ap_CS_fsm(20);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(21);
    ap_CS_fsm_state31 <= ap_CS_fsm(22);
    ap_CS_fsm_state32 <= ap_CS_fsm(23);
    ap_CS_fsm_state33 <= ap_CS_fsm(24);
    ap_CS_fsm_state34 <= ap_CS_fsm(25);
    ap_CS_fsm_state38 <= ap_CS_fsm(29);
    ap_CS_fsm_state39 <= ap_CS_fsm(30);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(31);
    ap_CS_fsm_state41 <= ap_CS_fsm(32);
    ap_CS_fsm_state42 <= ap_CS_fsm(33);
    ap_CS_fsm_state43 <= ap_CS_fsm(34);
    ap_CS_fsm_state44 <= ap_CS_fsm(35);
    ap_CS_fsm_state45 <= ap_CS_fsm(36);
    ap_CS_fsm_state46 <= ap_CS_fsm(37);
    ap_CS_fsm_state47 <= ap_CS_fsm(38);
    ap_CS_fsm_state48 <= ap_CS_fsm(39);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state54 <= ap_CS_fsm(41);
    ap_CS_fsm_state55 <= ap_CS_fsm(42);
    ap_CS_fsm_state56 <= ap_CS_fsm(43);
    ap_CS_fsm_state57 <= ap_CS_fsm(44);
    ap_CS_fsm_state58 <= ap_CS_fsm(45);
    ap_CS_fsm_state59 <= ap_CS_fsm(46);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state60 <= ap_CS_fsm(47);
    ap_CS_fsm_state61 <= ap_CS_fsm(48);
    ap_CS_fsm_state62 <= ap_CS_fsm(49);
    ap_CS_fsm_state65 <= ap_CS_fsm(51);
    ap_CS_fsm_state66 <= ap_CS_fsm(52);
    ap_CS_fsm_state67 <= ap_CS_fsm(53);
    ap_CS_fsm_state68 <= ap_CS_fsm(54);
    ap_CS_fsm_state69 <= ap_CS_fsm(55);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state70 <= ap_CS_fsm(56);
    ap_CS_fsm_state71 <= ap_CS_fsm(57);
    ap_CS_fsm_state72 <= ap_CS_fsm(58);
    ap_CS_fsm_state73 <= ap_CS_fsm(59);
    ap_CS_fsm_state74 <= ap_CS_fsm(60);
    ap_CS_fsm_state75 <= ap_CS_fsm(61);
    ap_CS_fsm_state76 <= ap_CS_fsm(62);
    ap_CS_fsm_state77 <= ap_CS_fsm(63);
    ap_CS_fsm_state78 <= ap_CS_fsm(64);
    ap_CS_fsm_state79 <= ap_CS_fsm(65);
    ap_CS_fsm_state80 <= ap_CS_fsm(66);
    ap_CS_fsm_state81 <= ap_CS_fsm(67);
    ap_CS_fsm_state82 <= ap_CS_fsm(68);
    ap_CS_fsm_state83 <= ap_CS_fsm(69);
    ap_CS_fsm_state84 <= ap_CS_fsm(70);
    ap_CS_fsm_state85 <= ap_CS_fsm(71);
    ap_CS_fsm_state86 <= ap_CS_fsm(72);
    ap_CS_fsm_state87 <= ap_CS_fsm(73);
    ap_CS_fsm_state88 <= ap_CS_fsm(74);
    ap_CS_fsm_state89 <= ap_CS_fsm(75);
    ap_CS_fsm_state90 <= ap_CS_fsm(76);
    ap_CS_fsm_state91 <= ap_CS_fsm(77);
    ap_CS_fsm_state92 <= ap_CS_fsm(78);
    ap_CS_fsm_state96 <= ap_CS_fsm(82);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp3_stage0_01001_assign_proc : process(icmp_ln285_reg_3993, pre_out_V_full_n, ap_enable_reg_pp3_iter1)
    begin
                ap_block_pp3_stage0_01001 <= ((icmp_ln285_reg_3993 = ap_const_lv1_0) and (pre_out_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp3_stage0_11001_assign_proc : process(icmp_ln285_reg_3993, pre_out_V_full_n, ap_enable_reg_pp3_iter1)
    begin
                ap_block_pp3_stage0_11001 <= ((icmp_ln285_reg_3993 = ap_const_lv1_0) and (pre_out_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp3_stage0_subdone_assign_proc : process(icmp_ln285_reg_3993, pre_out_V_full_n, ap_enable_reg_pp3_iter1)
    begin
                ap_block_pp3_stage0_subdone <= ((icmp_ln285_reg_3993 = ap_const_lv1_0) and (pre_out_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp4_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state15_assign_proc : process(icmp_ln212_fu_2491_p2, data_in_TVALID_int)
    begin
                ap_block_state15 <= ((icmp_ln212_fu_2491_p2 = ap_const_lv1_0) and (data_in_TVALID_int = ap_const_logic_0));
    end process;


    ap_block_state2_assign_proc : process(icmp_ln194_fu_2289_p2, data_in_TVALID_int)
    begin
                ap_block_state2 <= ((icmp_ln194_fu_2289_p2 = ap_const_lv1_0) and (data_in_TVALID_int = ap_const_logic_0));
    end process;

        ap_block_state21_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp1_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state43_assign_proc : process(icmp_ln241_fu_2894_p2, data_in_TVALID_int)
    begin
                ap_block_state43 <= ((icmp_ln241_fu_2894_p2 = ap_const_lv1_0) and (data_in_TVALID_int = ap_const_logic_0));
    end process;

        ap_block_state49_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state50_pp2_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state51_pp2_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state52_pp2_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state53_pp2_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state63_pp3_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state64_pp3_stage0_iter1_assign_proc : process(icmp_ln285_reg_3993, pre_out_V_full_n)
    begin
                ap_block_state64_pp3_stage0_iter1 <= ((icmp_ln285_reg_3993 = ap_const_lv1_0) and (pre_out_V_full_n = ap_const_logic_0));
    end process;


    ap_block_state65_assign_proc : process(keep_in_V_full_n, icmp_ln290_fu_3163_p2)
    begin
                ap_block_state65 <= (((keep_in_V_full_n = ap_const_logic_0) and (icmp_ln290_fu_3163_p2 = ap_const_lv1_1)) or ((icmp_ln290_fu_3163_p2 = ap_const_lv1_0) and (keep_in_V_full_n = ap_const_logic_0)));
    end process;


    ap_block_state66_assign_proc : process(pre_out_V_empty_n, icmp_ln22_fu_3169_p2, data2dw1_V_full_n, keep_in_V_empty_n)
    begin
                ap_block_state66 <= (((keep_in_V_empty_n = ap_const_logic_0) and (icmp_ln22_fu_3169_p2 = ap_const_lv1_1)) or ((icmp_ln22_fu_3169_p2 = ap_const_lv1_0) and (data2dw1_V_full_n = ap_const_logic_0)) or ((icmp_ln22_fu_3169_p2 = ap_const_lv1_0) and (pre_out_V_empty_n = ap_const_logic_0)));
    end process;


    ap_block_state83_assign_proc : process(icmp_ln167_fu_3215_p2, data_in_TVALID_int)
    begin
                ap_block_state83 <= ((icmp_ln167_fu_3215_p2 = ap_const_lv1_0) and (data_in_TVALID_int = ap_const_logic_0));
    end process;

        ap_block_state8_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state97_pp4_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state98_pp4_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_2320_assign_proc : process(ap_CS_fsm_state65, keep_in_V_full_n, icmp_ln290_fu_3163_p2)
    begin
                ap_condition_2320 <= (not((((keep_in_V_full_n = ap_const_logic_0) and (icmp_ln290_fu_3163_p2 = ap_const_lv1_1)) or ((icmp_ln290_fu_3163_p2 = ap_const_lv1_0) and (keep_in_V_full_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state65));
    end process;


    ap_condition_pp0_exit_iter0_state8_assign_proc : process(icmp_ln200_fu_2327_p2)
    begin
        if ((icmp_ln200_fu_2327_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state8 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state21_assign_proc : process(icmp_ln218_fu_2529_p2)
    begin
        if ((icmp_ln218_fu_2529_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state21 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state21 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_exit_iter0_state49_assign_proc : process(icmp_ln247_fu_2932_p2)
    begin
        if ((icmp_ln247_fu_2932_p2 = ap_const_lv1_1)) then 
            ap_condition_pp2_exit_iter0_state49 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state49 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp3_exit_iter0_state63_assign_proc : process(icmp_ln285_fu_3107_p2)
    begin
        if ((icmp_ln285_fu_3107_p2 = ap_const_lv1_1)) then 
            ap_condition_pp3_exit_iter0_state63 <= ap_const_logic_1;
        else 
            ap_condition_pp3_exit_iter0_state63 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp4_exit_iter0_state97_assign_proc : process(icmp_ln178_fu_3259_p2)
    begin
        if ((icmp_ln178_fu_3259_p2 = ap_const_lv1_1)) then 
            ap_condition_pp4_exit_iter0_state97 <= ap_const_logic_1;
        else 
            ap_condition_pp4_exit_iter0_state97 <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);
    ap_enable_pp3 <= (ap_idle_pp3 xor ap_const_logic_1);
    ap_enable_pp4 <= (ap_idle_pp4 xor ap_const_logic_1);

    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter4)
    begin
        if (((ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1, ap_enable_reg_pp2_iter2, ap_enable_reg_pp2_iter3, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_enable_reg_pp2_iter4 = ap_const_logic_0) and (ap_enable_reg_pp2_iter3 = ap_const_logic_0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp3_assign_proc : process(ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter0)
    begin
        if (((ap_enable_reg_pp3_iter0 = ap_const_logic_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0))) then 
            ap_idle_pp3 <= ap_const_logic_1;
        else 
            ap_idle_pp3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp4_assign_proc : process(ap_enable_reg_pp4_iter0, ap_enable_reg_pp4_iter1)
    begin
        if (((ap_enable_reg_pp4_iter1 = ap_const_logic_0) and (ap_enable_reg_pp4_iter0 = ap_const_logic_0))) then 
            ap_idle_pp4 <= ap_const_logic_1;
        else 
            ap_idle_pp4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i14_0_phi_fu_1675_p4_assign_proc : process(i14_0_reg_1671, icmp_ln247_reg_3888, ap_CS_fsm_pp2_stage0, select_ln252_1_reg_3902, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0)
    begin
        if (((icmp_ln247_reg_3888 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            ap_phi_mux_i14_0_phi_fu_1675_p4 <= select_ln252_1_reg_3902;
        else 
            ap_phi_mux_i14_0_phi_fu_1675_p4 <= i14_0_reg_1671;
        end if; 
    end process;


    ap_phi_mux_i1_0_phi_fu_1782_p4_assign_proc : process(i1_0_reg_1778, icmp_ln178_reg_4145, ap_CS_fsm_pp4_stage0, select_ln178_1_reg_4160, ap_enable_reg_pp4_iter1, ap_block_pp4_stage0)
    begin
        if (((icmp_ln178_reg_4145 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then 
            ap_phi_mux_i1_0_phi_fu_1782_p4 <= select_ln178_1_reg_4160;
        else 
            ap_phi_mux_i1_0_phi_fu_1782_p4 <= i1_0_reg_1778;
        end if; 
    end process;


    ap_phi_mux_i4_0_phi_fu_1516_p4_assign_proc : process(i4_0_reg_1512, icmp_ln200_reg_3534, ap_CS_fsm_pp0_stage0, select_ln205_1_reg_3548, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((icmp_ln200_reg_3534 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_i4_0_phi_fu_1516_p4 <= select_ln205_1_reg_3548;
        else 
            ap_phi_mux_i4_0_phi_fu_1516_p4 <= i4_0_reg_1512;
        end if; 
    end process;


    ap_phi_mux_i8_0_phi_fu_1561_p4_assign_proc : process(i8_0_reg_1557, icmp_ln218_reg_3678, ap_CS_fsm_pp1_stage0, select_ln223_1_reg_3692, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0)
    begin
        if (((icmp_ln218_reg_3678 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_phi_mux_i8_0_phi_fu_1561_p4 <= select_ln223_1_reg_3692;
        else 
            ap_phi_mux_i8_0_phi_fu_1561_p4 <= i8_0_reg_1557;
        end if; 
    end process;


    ap_phi_mux_tmp_98_phi_fu_1719_p8_assign_proc : process(dct_out_0_q0, dct_out_1_q0, dct_out_2_q0, dct_out_3_q0, icmp_ln285_reg_3993, trunc_ln288_reg_4002, ap_phi_reg_pp3_iter1_tmp_98_reg_1716)
    begin
        if ((icmp_ln285_reg_3993 = ap_const_lv1_0)) then
            if ((trunc_ln288_reg_4002 = ap_const_lv2_3)) then 
                ap_phi_mux_tmp_98_phi_fu_1719_p8 <= dct_out_3_q0;
            elsif ((trunc_ln288_reg_4002 = ap_const_lv2_2)) then 
                ap_phi_mux_tmp_98_phi_fu_1719_p8 <= dct_out_2_q0;
            elsif ((trunc_ln288_reg_4002 = ap_const_lv2_1)) then 
                ap_phi_mux_tmp_98_phi_fu_1719_p8 <= dct_out_1_q0;
            elsif ((trunc_ln288_reg_4002 = ap_const_lv2_0)) then 
                ap_phi_mux_tmp_98_phi_fu_1719_p8 <= dct_out_0_q0;
            else 
                ap_phi_mux_tmp_98_phi_fu_1719_p8 <= ap_phi_reg_pp3_iter1_tmp_98_reg_1716;
            end if;
        else 
            ap_phi_mux_tmp_98_phi_fu_1719_p8 <= ap_phi_reg_pp3_iter1_tmp_98_reg_1716;
        end if; 
    end process;

    ap_phi_reg_pp3_iter1_tmp_98_reg_1716 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    bias_h_V_address0_assign_proc : process(grp_grucell_fu_1800_bias_h_V_address0, grp_weight_loader_fu_2101_bias_h_V_2_address0, ap_CS_fsm_state75, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            bias_h_V_address0 <= grp_weight_loader_fu_2101_bias_h_V_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            bias_h_V_address0 <= grp_grucell_fu_1800_bias_h_V_address0;
        else 
            bias_h_V_address0 <= "XXXXXX";
        end if; 
    end process;


    bias_h_V_ce0_assign_proc : process(grp_grucell_fu_1800_bias_h_V_ce0, grp_weight_loader_fu_2101_bias_h_V_2_ce0, ap_CS_fsm_state75, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            bias_h_V_ce0 <= grp_weight_loader_fu_2101_bias_h_V_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            bias_h_V_ce0 <= grp_grucell_fu_1800_bias_h_V_ce0;
        else 
            bias_h_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    bias_h_V_ce1_assign_proc : process(grp_weight_loader_fu_2101_bias_h_V_2_ce1, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            bias_h_V_ce1 <= grp_weight_loader_fu_2101_bias_h_V_2_ce1;
        else 
            bias_h_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    bias_h_V_we0_assign_proc : process(grp_weight_loader_fu_2101_bias_h_V_2_we0, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            bias_h_V_we0 <= grp_weight_loader_fu_2101_bias_h_V_2_we0;
        else 
            bias_h_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    bias_h_V_we1_assign_proc : process(grp_weight_loader_fu_2101_bias_h_V_2_we1, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            bias_h_V_we1 <= grp_weight_loader_fu_2101_bias_h_V_2_we1;
        else 
            bias_h_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    bias_r_V_address0_assign_proc : process(grp_grucell_fu_1800_bias_r_V_address0, grp_weight_loader_fu_2101_bias_r_V_2_address0, ap_CS_fsm_state75, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            bias_r_V_address0 <= grp_weight_loader_fu_2101_bias_r_V_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            bias_r_V_address0 <= grp_grucell_fu_1800_bias_r_V_address0;
        else 
            bias_r_V_address0 <= "XXXXXX";
        end if; 
    end process;


    bias_r_V_ce0_assign_proc : process(grp_grucell_fu_1800_bias_r_V_ce0, grp_weight_loader_fu_2101_bias_r_V_2_ce0, ap_CS_fsm_state75, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            bias_r_V_ce0 <= grp_weight_loader_fu_2101_bias_r_V_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            bias_r_V_ce0 <= grp_grucell_fu_1800_bias_r_V_ce0;
        else 
            bias_r_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    bias_r_V_we0_assign_proc : process(grp_weight_loader_fu_2101_bias_r_V_2_we0, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            bias_r_V_we0 <= grp_weight_loader_fu_2101_bias_r_V_2_we0;
        else 
            bias_r_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    bias_z_V_address0_assign_proc : process(grp_grucell_fu_1800_bias_z_V_address0, grp_weight_loader_fu_2101_bias_z_V_2_address0, ap_CS_fsm_state75, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            bias_z_V_address0 <= grp_weight_loader_fu_2101_bias_z_V_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            bias_z_V_address0 <= grp_grucell_fu_1800_bias_z_V_address0;
        else 
            bias_z_V_address0 <= "XXXXXX";
        end if; 
    end process;


    bias_z_V_ce0_assign_proc : process(grp_grucell_fu_1800_bias_z_V_ce0, grp_weight_loader_fu_2101_bias_z_V_2_ce0, ap_CS_fsm_state75, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            bias_z_V_ce0 <= grp_weight_loader_fu_2101_bias_z_V_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            bias_z_V_ce0 <= grp_grucell_fu_1800_bias_z_V_ce0;
        else 
            bias_z_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    bias_z_V_ce1_assign_proc : process(grp_weight_loader_fu_2101_bias_z_V_2_ce1, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            bias_z_V_ce1 <= grp_weight_loader_fu_2101_bias_z_V_2_ce1;
        else 
            bias_z_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    bias_z_V_we0_assign_proc : process(grp_weight_loader_fu_2101_bias_z_V_2_we0, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            bias_z_V_we0 <= grp_weight_loader_fu_2101_bias_z_V_2_we0;
        else 
            bias_z_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    bias_z_V_we1_assign_proc : process(grp_weight_loader_fu_2101_bias_z_V_2_we1, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            bias_z_V_we1 <= grp_weight_loader_fu_2101_bias_z_V_2_we1;
        else 
            bias_z_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln238_1_fu_2456_p1 <= threshold_load_reg_3474;
    bitcast_ln238_fu_2726_p1 <= shorttime_energy_0_reg_1579;

    bn_bias1_V_address0_assign_proc : process(ap_CS_fsm_state72, grp_pw_layer1_fu_1999_bn_bias1_V_address0, grp_weight_loader_fu_2101_bn_bias1_V_2_address0, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            bn_bias1_V_address0 <= grp_weight_loader_fu_2101_bn_bias1_V_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            bn_bias1_V_address0 <= grp_pw_layer1_fu_1999_bn_bias1_V_address0;
        else 
            bn_bias1_V_address0 <= "XXXX";
        end if; 
    end process;


    bn_bias1_V_ce0_assign_proc : process(ap_CS_fsm_state72, grp_pw_layer1_fu_1999_bn_bias1_V_ce0, grp_weight_loader_fu_2101_bn_bias1_V_2_ce0, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            bn_bias1_V_ce0 <= grp_weight_loader_fu_2101_bn_bias1_V_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            bn_bias1_V_ce0 <= grp_pw_layer1_fu_1999_bn_bias1_V_ce0;
        else 
            bn_bias1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    bn_bias1_V_ce1_assign_proc : process(grp_weight_loader_fu_2101_bn_bias1_V_2_ce1, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            bn_bias1_V_ce1 <= grp_weight_loader_fu_2101_bn_bias1_V_2_ce1;
        else 
            bn_bias1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    bn_bias1_V_we0_assign_proc : process(grp_weight_loader_fu_2101_bn_bias1_V_2_we0, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            bn_bias1_V_we0 <= grp_weight_loader_fu_2101_bn_bias1_V_2_we0;
        else 
            bn_bias1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    bn_bias1_V_we1_assign_proc : process(grp_weight_loader_fu_2101_bn_bias1_V_2_we1, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            bn_bias1_V_we1 <= grp_weight_loader_fu_2101_bn_bias1_V_2_we1;
        else 
            bn_bias1_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    control_in_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state1, control_in_TVALID_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            control_in_TDATA_blk_n <= control_in_TVALID_int;
        else 
            control_in_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    control_in_TREADY_assign_proc : process(control_in_TVALID, regslice_both_control_in_V_data_U_ack_in)
    begin
        if (((regslice_both_control_in_V_data_U_ack_in = ap_const_logic_1) and (control_in_TVALID = ap_const_logic_1))) then 
            control_in_TREADY <= ap_const_logic_1;
        else 
            control_in_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    control_in_TREADY_int_assign_proc : process(ap_CS_fsm_state1, control_in_TVALID_int)
    begin
        if (((control_in_TVALID_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            control_in_TREADY_int <= ap_const_logic_1;
        else 
            control_in_TREADY_int <= ap_const_logic_0;
        end if; 
    end process;


    cosines_0_address0_assign_proc : process(grp_mfcc_dct_fu_1859_cosines_0_address0, grp_calc_stft_fu_1919_cosines_0_address0, grp_weight_loader_fu_2101_cosines_0_address0, ap_CS_fsm_state61, ap_CS_fsm_state82, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_0_address0 <= grp_weight_loader_fu_2101_cosines_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            cosines_0_address0 <= grp_calc_stft_fu_1919_cosines_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            cosines_0_address0 <= grp_mfcc_dct_fu_1859_cosines_0_address0;
        else 
            cosines_0_address0 <= "XXXXXX";
        end if; 
    end process;


    cosines_0_ce0_assign_proc : process(grp_mfcc_dct_fu_1859_cosines_0_ce0, grp_calc_stft_fu_1919_cosines_0_ce0, grp_weight_loader_fu_2101_cosines_0_ce0, ap_CS_fsm_state61, ap_CS_fsm_state82, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_0_ce0 <= grp_weight_loader_fu_2101_cosines_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            cosines_0_ce0 <= grp_calc_stft_fu_1919_cosines_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            cosines_0_ce0 <= grp_mfcc_dct_fu_1859_cosines_0_ce0;
        else 
            cosines_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    cosines_0_we0_assign_proc : process(grp_weight_loader_fu_2101_cosines_0_we0, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_0_we0 <= grp_weight_loader_fu_2101_cosines_0_we0;
        else 
            cosines_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    cosines_10_address0_assign_proc : process(grp_mfcc_dct_fu_1859_cosines_10_address0, grp_calc_stft_fu_1919_cosines_10_address0, grp_weight_loader_fu_2101_cosines_10_address0, ap_CS_fsm_state61, ap_CS_fsm_state82, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_10_address0 <= grp_weight_loader_fu_2101_cosines_10_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            cosines_10_address0 <= grp_calc_stft_fu_1919_cosines_10_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            cosines_10_address0 <= grp_mfcc_dct_fu_1859_cosines_10_address0;
        else 
            cosines_10_address0 <= "XXXXXX";
        end if; 
    end process;


    cosines_10_ce0_assign_proc : process(grp_mfcc_dct_fu_1859_cosines_10_ce0, grp_calc_stft_fu_1919_cosines_10_ce0, grp_weight_loader_fu_2101_cosines_10_ce0, ap_CS_fsm_state61, ap_CS_fsm_state82, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_10_ce0 <= grp_weight_loader_fu_2101_cosines_10_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            cosines_10_ce0 <= grp_calc_stft_fu_1919_cosines_10_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            cosines_10_ce0 <= grp_mfcc_dct_fu_1859_cosines_10_ce0;
        else 
            cosines_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    cosines_10_we0_assign_proc : process(grp_weight_loader_fu_2101_cosines_10_we0, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_10_we0 <= grp_weight_loader_fu_2101_cosines_10_we0;
        else 
            cosines_10_we0 <= ap_const_logic_0;
        end if; 
    end process;


    cosines_11_address0_assign_proc : process(grp_mfcc_dct_fu_1859_cosines_11_address0, grp_calc_stft_fu_1919_cosines_11_address0, grp_weight_loader_fu_2101_cosines_11_address0, ap_CS_fsm_state61, ap_CS_fsm_state82, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_11_address0 <= grp_weight_loader_fu_2101_cosines_11_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            cosines_11_address0 <= grp_calc_stft_fu_1919_cosines_11_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            cosines_11_address0 <= grp_mfcc_dct_fu_1859_cosines_11_address0;
        else 
            cosines_11_address0 <= "XXXXXX";
        end if; 
    end process;


    cosines_11_ce0_assign_proc : process(grp_mfcc_dct_fu_1859_cosines_11_ce0, grp_calc_stft_fu_1919_cosines_11_ce0, grp_weight_loader_fu_2101_cosines_11_ce0, ap_CS_fsm_state61, ap_CS_fsm_state82, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_11_ce0 <= grp_weight_loader_fu_2101_cosines_11_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            cosines_11_ce0 <= grp_calc_stft_fu_1919_cosines_11_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            cosines_11_ce0 <= grp_mfcc_dct_fu_1859_cosines_11_ce0;
        else 
            cosines_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    cosines_11_we0_assign_proc : process(grp_weight_loader_fu_2101_cosines_11_we0, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_11_we0 <= grp_weight_loader_fu_2101_cosines_11_we0;
        else 
            cosines_11_we0 <= ap_const_logic_0;
        end if; 
    end process;


    cosines_12_address0_assign_proc : process(grp_mfcc_dct_fu_1859_cosines_12_address0, grp_calc_stft_fu_1919_cosines_12_address0, grp_weight_loader_fu_2101_cosines_12_address0, ap_CS_fsm_state61, ap_CS_fsm_state82, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_12_address0 <= grp_weight_loader_fu_2101_cosines_12_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            cosines_12_address0 <= grp_calc_stft_fu_1919_cosines_12_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            cosines_12_address0 <= grp_mfcc_dct_fu_1859_cosines_12_address0;
        else 
            cosines_12_address0 <= "XXXXXX";
        end if; 
    end process;


    cosines_12_ce0_assign_proc : process(grp_mfcc_dct_fu_1859_cosines_12_ce0, grp_calc_stft_fu_1919_cosines_12_ce0, grp_weight_loader_fu_2101_cosines_12_ce0, ap_CS_fsm_state61, ap_CS_fsm_state82, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_12_ce0 <= grp_weight_loader_fu_2101_cosines_12_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            cosines_12_ce0 <= grp_calc_stft_fu_1919_cosines_12_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            cosines_12_ce0 <= grp_mfcc_dct_fu_1859_cosines_12_ce0;
        else 
            cosines_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    cosines_12_we0_assign_proc : process(grp_weight_loader_fu_2101_cosines_12_we0, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_12_we0 <= grp_weight_loader_fu_2101_cosines_12_we0;
        else 
            cosines_12_we0 <= ap_const_logic_0;
        end if; 
    end process;


    cosines_13_address0_assign_proc : process(grp_mfcc_dct_fu_1859_cosines_13_address0, grp_calc_stft_fu_1919_cosines_13_address0, grp_weight_loader_fu_2101_cosines_13_address0, ap_CS_fsm_state61, ap_CS_fsm_state82, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_13_address0 <= grp_weight_loader_fu_2101_cosines_13_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            cosines_13_address0 <= grp_calc_stft_fu_1919_cosines_13_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            cosines_13_address0 <= grp_mfcc_dct_fu_1859_cosines_13_address0;
        else 
            cosines_13_address0 <= "XXXXXX";
        end if; 
    end process;


    cosines_13_ce0_assign_proc : process(grp_mfcc_dct_fu_1859_cosines_13_ce0, grp_calc_stft_fu_1919_cosines_13_ce0, grp_weight_loader_fu_2101_cosines_13_ce0, ap_CS_fsm_state61, ap_CS_fsm_state82, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_13_ce0 <= grp_weight_loader_fu_2101_cosines_13_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            cosines_13_ce0 <= grp_calc_stft_fu_1919_cosines_13_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            cosines_13_ce0 <= grp_mfcc_dct_fu_1859_cosines_13_ce0;
        else 
            cosines_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    cosines_13_we0_assign_proc : process(grp_weight_loader_fu_2101_cosines_13_we0, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_13_we0 <= grp_weight_loader_fu_2101_cosines_13_we0;
        else 
            cosines_13_we0 <= ap_const_logic_0;
        end if; 
    end process;


    cosines_14_address0_assign_proc : process(grp_mfcc_dct_fu_1859_cosines_14_address0, grp_calc_stft_fu_1919_cosines_14_address0, grp_weight_loader_fu_2101_cosines_14_address0, ap_CS_fsm_state61, ap_CS_fsm_state82, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_14_address0 <= grp_weight_loader_fu_2101_cosines_14_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            cosines_14_address0 <= grp_calc_stft_fu_1919_cosines_14_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            cosines_14_address0 <= grp_mfcc_dct_fu_1859_cosines_14_address0;
        else 
            cosines_14_address0 <= "XXXXXX";
        end if; 
    end process;


    cosines_14_ce0_assign_proc : process(grp_mfcc_dct_fu_1859_cosines_14_ce0, grp_calc_stft_fu_1919_cosines_14_ce0, grp_weight_loader_fu_2101_cosines_14_ce0, ap_CS_fsm_state61, ap_CS_fsm_state82, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_14_ce0 <= grp_weight_loader_fu_2101_cosines_14_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            cosines_14_ce0 <= grp_calc_stft_fu_1919_cosines_14_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            cosines_14_ce0 <= grp_mfcc_dct_fu_1859_cosines_14_ce0;
        else 
            cosines_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    cosines_14_we0_assign_proc : process(grp_weight_loader_fu_2101_cosines_14_we0, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_14_we0 <= grp_weight_loader_fu_2101_cosines_14_we0;
        else 
            cosines_14_we0 <= ap_const_logic_0;
        end if; 
    end process;


    cosines_15_address0_assign_proc : process(grp_mfcc_dct_fu_1859_cosines_15_address0, grp_calc_stft_fu_1919_cosines_15_address0, grp_weight_loader_fu_2101_cosines_15_address0, ap_CS_fsm_state61, ap_CS_fsm_state82, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_15_address0 <= grp_weight_loader_fu_2101_cosines_15_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            cosines_15_address0 <= grp_calc_stft_fu_1919_cosines_15_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            cosines_15_address0 <= grp_mfcc_dct_fu_1859_cosines_15_address0;
        else 
            cosines_15_address0 <= "XXXXXX";
        end if; 
    end process;


    cosines_15_ce0_assign_proc : process(grp_mfcc_dct_fu_1859_cosines_15_ce0, grp_calc_stft_fu_1919_cosines_15_ce0, grp_weight_loader_fu_2101_cosines_15_ce0, ap_CS_fsm_state61, ap_CS_fsm_state82, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_15_ce0 <= grp_weight_loader_fu_2101_cosines_15_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            cosines_15_ce0 <= grp_calc_stft_fu_1919_cosines_15_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            cosines_15_ce0 <= grp_mfcc_dct_fu_1859_cosines_15_ce0;
        else 
            cosines_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    cosines_15_we0_assign_proc : process(grp_weight_loader_fu_2101_cosines_15_we0, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_15_we0 <= grp_weight_loader_fu_2101_cosines_15_we0;
        else 
            cosines_15_we0 <= ap_const_logic_0;
        end if; 
    end process;


    cosines_16_address0_assign_proc : process(grp_mfcc_dct_fu_1859_cosines_16_address0, grp_calc_stft_fu_1919_cosines_16_address0, grp_weight_loader_fu_2101_cosines_16_address0, ap_CS_fsm_state61, ap_CS_fsm_state82, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_16_address0 <= grp_weight_loader_fu_2101_cosines_16_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            cosines_16_address0 <= grp_calc_stft_fu_1919_cosines_16_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            cosines_16_address0 <= grp_mfcc_dct_fu_1859_cosines_16_address0;
        else 
            cosines_16_address0 <= "XXXXXX";
        end if; 
    end process;


    cosines_16_ce0_assign_proc : process(grp_mfcc_dct_fu_1859_cosines_16_ce0, grp_calc_stft_fu_1919_cosines_16_ce0, grp_weight_loader_fu_2101_cosines_16_ce0, ap_CS_fsm_state61, ap_CS_fsm_state82, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_16_ce0 <= grp_weight_loader_fu_2101_cosines_16_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            cosines_16_ce0 <= grp_calc_stft_fu_1919_cosines_16_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            cosines_16_ce0 <= grp_mfcc_dct_fu_1859_cosines_16_ce0;
        else 
            cosines_16_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    cosines_16_we0_assign_proc : process(grp_weight_loader_fu_2101_cosines_16_we0, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_16_we0 <= grp_weight_loader_fu_2101_cosines_16_we0;
        else 
            cosines_16_we0 <= ap_const_logic_0;
        end if; 
    end process;


    cosines_17_address0_assign_proc : process(grp_mfcc_dct_fu_1859_cosines_17_address0, grp_calc_stft_fu_1919_cosines_17_address0, grp_weight_loader_fu_2101_cosines_17_address0, ap_CS_fsm_state61, ap_CS_fsm_state82, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_17_address0 <= grp_weight_loader_fu_2101_cosines_17_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            cosines_17_address0 <= grp_calc_stft_fu_1919_cosines_17_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            cosines_17_address0 <= grp_mfcc_dct_fu_1859_cosines_17_address0;
        else 
            cosines_17_address0 <= "XXXXXX";
        end if; 
    end process;


    cosines_17_ce0_assign_proc : process(grp_mfcc_dct_fu_1859_cosines_17_ce0, grp_calc_stft_fu_1919_cosines_17_ce0, grp_weight_loader_fu_2101_cosines_17_ce0, ap_CS_fsm_state61, ap_CS_fsm_state82, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_17_ce0 <= grp_weight_loader_fu_2101_cosines_17_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            cosines_17_ce0 <= grp_calc_stft_fu_1919_cosines_17_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            cosines_17_ce0 <= grp_mfcc_dct_fu_1859_cosines_17_ce0;
        else 
            cosines_17_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    cosines_17_we0_assign_proc : process(grp_weight_loader_fu_2101_cosines_17_we0, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_17_we0 <= grp_weight_loader_fu_2101_cosines_17_we0;
        else 
            cosines_17_we0 <= ap_const_logic_0;
        end if; 
    end process;


    cosines_18_address0_assign_proc : process(grp_mfcc_dct_fu_1859_cosines_18_address0, grp_calc_stft_fu_1919_cosines_18_address0, grp_weight_loader_fu_2101_cosines_18_address0, ap_CS_fsm_state61, ap_CS_fsm_state82, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_18_address0 <= grp_weight_loader_fu_2101_cosines_18_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            cosines_18_address0 <= grp_calc_stft_fu_1919_cosines_18_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            cosines_18_address0 <= grp_mfcc_dct_fu_1859_cosines_18_address0;
        else 
            cosines_18_address0 <= "XXXXXX";
        end if; 
    end process;


    cosines_18_ce0_assign_proc : process(grp_mfcc_dct_fu_1859_cosines_18_ce0, grp_calc_stft_fu_1919_cosines_18_ce0, grp_weight_loader_fu_2101_cosines_18_ce0, ap_CS_fsm_state61, ap_CS_fsm_state82, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_18_ce0 <= grp_weight_loader_fu_2101_cosines_18_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            cosines_18_ce0 <= grp_calc_stft_fu_1919_cosines_18_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            cosines_18_ce0 <= grp_mfcc_dct_fu_1859_cosines_18_ce0;
        else 
            cosines_18_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    cosines_18_we0_assign_proc : process(grp_weight_loader_fu_2101_cosines_18_we0, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_18_we0 <= grp_weight_loader_fu_2101_cosines_18_we0;
        else 
            cosines_18_we0 <= ap_const_logic_0;
        end if; 
    end process;


    cosines_19_address0_assign_proc : process(grp_mfcc_dct_fu_1859_cosines_19_address0, grp_calc_stft_fu_1919_cosines_19_address0, grp_weight_loader_fu_2101_cosines_19_address0, ap_CS_fsm_state61, ap_CS_fsm_state82, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_19_address0 <= grp_weight_loader_fu_2101_cosines_19_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            cosines_19_address0 <= grp_calc_stft_fu_1919_cosines_19_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            cosines_19_address0 <= grp_mfcc_dct_fu_1859_cosines_19_address0;
        else 
            cosines_19_address0 <= "XXXXXX";
        end if; 
    end process;


    cosines_19_ce0_assign_proc : process(grp_mfcc_dct_fu_1859_cosines_19_ce0, grp_calc_stft_fu_1919_cosines_19_ce0, grp_weight_loader_fu_2101_cosines_19_ce0, ap_CS_fsm_state61, ap_CS_fsm_state82, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_19_ce0 <= grp_weight_loader_fu_2101_cosines_19_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            cosines_19_ce0 <= grp_calc_stft_fu_1919_cosines_19_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            cosines_19_ce0 <= grp_mfcc_dct_fu_1859_cosines_19_ce0;
        else 
            cosines_19_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    cosines_19_we0_assign_proc : process(grp_weight_loader_fu_2101_cosines_19_we0, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_19_we0 <= grp_weight_loader_fu_2101_cosines_19_we0;
        else 
            cosines_19_we0 <= ap_const_logic_0;
        end if; 
    end process;


    cosines_1_address0_assign_proc : process(grp_mfcc_dct_fu_1859_cosines_1_address0, grp_calc_stft_fu_1919_cosines_1_address0, grp_weight_loader_fu_2101_cosines_1_address0, ap_CS_fsm_state61, ap_CS_fsm_state82, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_1_address0 <= grp_weight_loader_fu_2101_cosines_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            cosines_1_address0 <= grp_calc_stft_fu_1919_cosines_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            cosines_1_address0 <= grp_mfcc_dct_fu_1859_cosines_1_address0;
        else 
            cosines_1_address0 <= "XXXXXX";
        end if; 
    end process;


    cosines_1_ce0_assign_proc : process(grp_mfcc_dct_fu_1859_cosines_1_ce0, grp_calc_stft_fu_1919_cosines_1_ce0, grp_weight_loader_fu_2101_cosines_1_ce0, ap_CS_fsm_state61, ap_CS_fsm_state82, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_1_ce0 <= grp_weight_loader_fu_2101_cosines_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            cosines_1_ce0 <= grp_calc_stft_fu_1919_cosines_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            cosines_1_ce0 <= grp_mfcc_dct_fu_1859_cosines_1_ce0;
        else 
            cosines_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    cosines_1_we0_assign_proc : process(grp_weight_loader_fu_2101_cosines_1_we0, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_1_we0 <= grp_weight_loader_fu_2101_cosines_1_we0;
        else 
            cosines_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    cosines_2_address0_assign_proc : process(grp_mfcc_dct_fu_1859_cosines_2_address0, grp_calc_stft_fu_1919_cosines_2_address0, grp_weight_loader_fu_2101_cosines_2_address0, ap_CS_fsm_state61, ap_CS_fsm_state82, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_2_address0 <= grp_weight_loader_fu_2101_cosines_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            cosines_2_address0 <= grp_calc_stft_fu_1919_cosines_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            cosines_2_address0 <= grp_mfcc_dct_fu_1859_cosines_2_address0;
        else 
            cosines_2_address0 <= "XXXXXX";
        end if; 
    end process;


    cosines_2_ce0_assign_proc : process(grp_mfcc_dct_fu_1859_cosines_2_ce0, grp_calc_stft_fu_1919_cosines_2_ce0, grp_weight_loader_fu_2101_cosines_2_ce0, ap_CS_fsm_state61, ap_CS_fsm_state82, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_2_ce0 <= grp_weight_loader_fu_2101_cosines_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            cosines_2_ce0 <= grp_calc_stft_fu_1919_cosines_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            cosines_2_ce0 <= grp_mfcc_dct_fu_1859_cosines_2_ce0;
        else 
            cosines_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    cosines_2_we0_assign_proc : process(grp_weight_loader_fu_2101_cosines_2_we0, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_2_we0 <= grp_weight_loader_fu_2101_cosines_2_we0;
        else 
            cosines_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    cosines_3_address0_assign_proc : process(grp_mfcc_dct_fu_1859_cosines_3_address0, grp_calc_stft_fu_1919_cosines_3_address0, grp_weight_loader_fu_2101_cosines_3_address0, ap_CS_fsm_state61, ap_CS_fsm_state82, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_3_address0 <= grp_weight_loader_fu_2101_cosines_3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            cosines_3_address0 <= grp_calc_stft_fu_1919_cosines_3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            cosines_3_address0 <= grp_mfcc_dct_fu_1859_cosines_3_address0;
        else 
            cosines_3_address0 <= "XXXXXX";
        end if; 
    end process;


    cosines_3_ce0_assign_proc : process(grp_mfcc_dct_fu_1859_cosines_3_ce0, grp_calc_stft_fu_1919_cosines_3_ce0, grp_weight_loader_fu_2101_cosines_3_ce0, ap_CS_fsm_state61, ap_CS_fsm_state82, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_3_ce0 <= grp_weight_loader_fu_2101_cosines_3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            cosines_3_ce0 <= grp_calc_stft_fu_1919_cosines_3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            cosines_3_ce0 <= grp_mfcc_dct_fu_1859_cosines_3_ce0;
        else 
            cosines_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    cosines_3_we0_assign_proc : process(grp_weight_loader_fu_2101_cosines_3_we0, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_3_we0 <= grp_weight_loader_fu_2101_cosines_3_we0;
        else 
            cosines_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    cosines_4_address0_assign_proc : process(grp_mfcc_dct_fu_1859_cosines_4_address0, grp_calc_stft_fu_1919_cosines_4_address0, grp_weight_loader_fu_2101_cosines_4_address0, ap_CS_fsm_state61, ap_CS_fsm_state82, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_4_address0 <= grp_weight_loader_fu_2101_cosines_4_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            cosines_4_address0 <= grp_calc_stft_fu_1919_cosines_4_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            cosines_4_address0 <= grp_mfcc_dct_fu_1859_cosines_4_address0;
        else 
            cosines_4_address0 <= "XXXXXX";
        end if; 
    end process;


    cosines_4_ce0_assign_proc : process(grp_mfcc_dct_fu_1859_cosines_4_ce0, grp_calc_stft_fu_1919_cosines_4_ce0, grp_weight_loader_fu_2101_cosines_4_ce0, ap_CS_fsm_state61, ap_CS_fsm_state82, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_4_ce0 <= grp_weight_loader_fu_2101_cosines_4_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            cosines_4_ce0 <= grp_calc_stft_fu_1919_cosines_4_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            cosines_4_ce0 <= grp_mfcc_dct_fu_1859_cosines_4_ce0;
        else 
            cosines_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    cosines_4_we0_assign_proc : process(grp_weight_loader_fu_2101_cosines_4_we0, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_4_we0 <= grp_weight_loader_fu_2101_cosines_4_we0;
        else 
            cosines_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    cosines_5_address0_assign_proc : process(grp_mfcc_dct_fu_1859_cosines_5_address0, grp_calc_stft_fu_1919_cosines_5_address0, grp_weight_loader_fu_2101_cosines_5_address0, ap_CS_fsm_state61, ap_CS_fsm_state82, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_5_address0 <= grp_weight_loader_fu_2101_cosines_5_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            cosines_5_address0 <= grp_calc_stft_fu_1919_cosines_5_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            cosines_5_address0 <= grp_mfcc_dct_fu_1859_cosines_5_address0;
        else 
            cosines_5_address0 <= "XXXXXX";
        end if; 
    end process;


    cosines_5_ce0_assign_proc : process(grp_mfcc_dct_fu_1859_cosines_5_ce0, grp_calc_stft_fu_1919_cosines_5_ce0, grp_weight_loader_fu_2101_cosines_5_ce0, ap_CS_fsm_state61, ap_CS_fsm_state82, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_5_ce0 <= grp_weight_loader_fu_2101_cosines_5_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            cosines_5_ce0 <= grp_calc_stft_fu_1919_cosines_5_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            cosines_5_ce0 <= grp_mfcc_dct_fu_1859_cosines_5_ce0;
        else 
            cosines_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    cosines_5_we0_assign_proc : process(grp_weight_loader_fu_2101_cosines_5_we0, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_5_we0 <= grp_weight_loader_fu_2101_cosines_5_we0;
        else 
            cosines_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    cosines_6_address0_assign_proc : process(grp_mfcc_dct_fu_1859_cosines_6_address0, grp_calc_stft_fu_1919_cosines_6_address0, grp_weight_loader_fu_2101_cosines_6_address0, ap_CS_fsm_state61, ap_CS_fsm_state82, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_6_address0 <= grp_weight_loader_fu_2101_cosines_6_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            cosines_6_address0 <= grp_calc_stft_fu_1919_cosines_6_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            cosines_6_address0 <= grp_mfcc_dct_fu_1859_cosines_6_address0;
        else 
            cosines_6_address0 <= "XXXXXX";
        end if; 
    end process;


    cosines_6_ce0_assign_proc : process(grp_mfcc_dct_fu_1859_cosines_6_ce0, grp_calc_stft_fu_1919_cosines_6_ce0, grp_weight_loader_fu_2101_cosines_6_ce0, ap_CS_fsm_state61, ap_CS_fsm_state82, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_6_ce0 <= grp_weight_loader_fu_2101_cosines_6_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            cosines_6_ce0 <= grp_calc_stft_fu_1919_cosines_6_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            cosines_6_ce0 <= grp_mfcc_dct_fu_1859_cosines_6_ce0;
        else 
            cosines_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    cosines_6_we0_assign_proc : process(grp_weight_loader_fu_2101_cosines_6_we0, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_6_we0 <= grp_weight_loader_fu_2101_cosines_6_we0;
        else 
            cosines_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    cosines_7_address0_assign_proc : process(grp_mfcc_dct_fu_1859_cosines_7_address0, grp_calc_stft_fu_1919_cosines_7_address0, grp_weight_loader_fu_2101_cosines_7_address0, ap_CS_fsm_state61, ap_CS_fsm_state82, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_7_address0 <= grp_weight_loader_fu_2101_cosines_7_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            cosines_7_address0 <= grp_calc_stft_fu_1919_cosines_7_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            cosines_7_address0 <= grp_mfcc_dct_fu_1859_cosines_7_address0;
        else 
            cosines_7_address0 <= "XXXXXX";
        end if; 
    end process;


    cosines_7_ce0_assign_proc : process(grp_mfcc_dct_fu_1859_cosines_7_ce0, grp_calc_stft_fu_1919_cosines_7_ce0, grp_weight_loader_fu_2101_cosines_7_ce0, ap_CS_fsm_state61, ap_CS_fsm_state82, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_7_ce0 <= grp_weight_loader_fu_2101_cosines_7_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            cosines_7_ce0 <= grp_calc_stft_fu_1919_cosines_7_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            cosines_7_ce0 <= grp_mfcc_dct_fu_1859_cosines_7_ce0;
        else 
            cosines_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    cosines_7_we0_assign_proc : process(grp_weight_loader_fu_2101_cosines_7_we0, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_7_we0 <= grp_weight_loader_fu_2101_cosines_7_we0;
        else 
            cosines_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    cosines_8_address0_assign_proc : process(grp_mfcc_dct_fu_1859_cosines_8_address0, grp_calc_stft_fu_1919_cosines_8_address0, grp_weight_loader_fu_2101_cosines_8_address0, ap_CS_fsm_state61, ap_CS_fsm_state82, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_8_address0 <= grp_weight_loader_fu_2101_cosines_8_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            cosines_8_address0 <= grp_calc_stft_fu_1919_cosines_8_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            cosines_8_address0 <= grp_mfcc_dct_fu_1859_cosines_8_address0;
        else 
            cosines_8_address0 <= "XXXXXX";
        end if; 
    end process;


    cosines_8_ce0_assign_proc : process(grp_mfcc_dct_fu_1859_cosines_8_ce0, grp_calc_stft_fu_1919_cosines_8_ce0, grp_weight_loader_fu_2101_cosines_8_ce0, ap_CS_fsm_state61, ap_CS_fsm_state82, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_8_ce0 <= grp_weight_loader_fu_2101_cosines_8_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            cosines_8_ce0 <= grp_calc_stft_fu_1919_cosines_8_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            cosines_8_ce0 <= grp_mfcc_dct_fu_1859_cosines_8_ce0;
        else 
            cosines_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    cosines_8_we0_assign_proc : process(grp_weight_loader_fu_2101_cosines_8_we0, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_8_we0 <= grp_weight_loader_fu_2101_cosines_8_we0;
        else 
            cosines_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    cosines_9_address0_assign_proc : process(grp_mfcc_dct_fu_1859_cosines_9_address0, grp_calc_stft_fu_1919_cosines_9_address0, grp_weight_loader_fu_2101_cosines_9_address0, ap_CS_fsm_state61, ap_CS_fsm_state82, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_9_address0 <= grp_weight_loader_fu_2101_cosines_9_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            cosines_9_address0 <= grp_calc_stft_fu_1919_cosines_9_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            cosines_9_address0 <= grp_mfcc_dct_fu_1859_cosines_9_address0;
        else 
            cosines_9_address0 <= "XXXXXX";
        end if; 
    end process;


    cosines_9_ce0_assign_proc : process(grp_mfcc_dct_fu_1859_cosines_9_ce0, grp_calc_stft_fu_1919_cosines_9_ce0, grp_weight_loader_fu_2101_cosines_9_ce0, ap_CS_fsm_state61, ap_CS_fsm_state82, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_9_ce0 <= grp_weight_loader_fu_2101_cosines_9_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            cosines_9_ce0 <= grp_calc_stft_fu_1919_cosines_9_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            cosines_9_ce0 <= grp_mfcc_dct_fu_1859_cosines_9_ce0;
        else 
            cosines_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    cosines_9_we0_assign_proc : process(grp_weight_loader_fu_2101_cosines_9_we0, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            cosines_9_we0 <= grp_weight_loader_fu_2101_cosines_9_we0;
        else 
            cosines_9_we0 <= ap_const_logic_0;
        end if; 
    end process;


    data2dw1_V_read_assign_proc : process(grp_quant_layer_10u_s_fu_2070_data2dw1_V_read, ap_CS_fsm_state68)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            data2dw1_V_read <= grp_quant_layer_10u_s_fu_2070_data2dw1_V_read;
        else 
            data2dw1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data2dw1_V_write_assign_proc : process(ap_CS_fsm_state66, pre_out_V_empty_n, icmp_ln22_fu_3169_p2, data2dw1_V_full_n, keep_in_V_empty_n)
    begin
        if ((not((((keep_in_V_empty_n = ap_const_logic_0) and (icmp_ln22_fu_3169_p2 = ap_const_lv1_1)) or ((icmp_ln22_fu_3169_p2 = ap_const_lv1_0) and (data2dw1_V_full_n = ap_const_logic_0)) or ((icmp_ln22_fu_3169_p2 = ap_const_lv1_0) and (pre_out_V_empty_n = ap_const_logic_0)))) and (icmp_ln22_fu_3169_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state66))) then 
            data2dw1_V_write <= ap_const_logic_1;
        else 
            data2dw1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    data2dw1_quant_V_V_read_assign_proc : process(grp_dw_layer1_fu_2019_in_stream_V_V_read, ap_CS_fsm_state70)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            data2dw1_quant_V_V_read <= grp_dw_layer1_fu_2019_in_stream_V_V_read;
        else 
            data2dw1_quant_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data2dw1_quant_V_V_write_assign_proc : process(grp_quant_layer_10u_s_fu_2070_data2dw1_quant_V_V_write, ap_CS_fsm_state68)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            data2dw1_quant_V_V_write <= grp_quant_layer_10u_s_fu_2070_data2dw1_quant_V_V_write;
        else 
            data2dw1_quant_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    data2dw1_scale_V_read_assign_proc : process(grp_dw_layer1_fu_2019_data2dw1_scale_V_read, ap_CS_fsm_state70)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            data2dw1_scale_V_read <= grp_dw_layer1_fu_2019_data2dw1_scale_V_read;
        else 
            data2dw1_scale_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data2dw1_scale_V_write_assign_proc : process(grp_quant_layer_10u_s_fu_2070_data2dw1_scale_V_write, ap_CS_fsm_state68)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            data2dw1_scale_V_write <= grp_quant_layer_10u_s_fu_2070_data2dw1_scale_V_write;
        else 
            data2dw1_scale_V_write <= ap_const_logic_0;
        end if; 
    end process;


    data_in_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state83, icmp_ln167_fu_3215_p2, ap_CS_fsm_state2, icmp_ln194_fu_2289_p2, ap_CS_fsm_state15, icmp_ln212_fu_2491_p2, ap_CS_fsm_state43, icmp_ln241_fu_2894_p2, data_in_TVALID_int)
    begin
        if ((((icmp_ln241_fu_2894_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state43)) or ((icmp_ln212_fu_2491_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((icmp_ln194_fu_2289_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((icmp_ln167_fu_3215_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state83)))) then 
            data_in_TDATA_blk_n <= data_in_TVALID_int;
        else 
            data_in_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_in_TREADY_assign_proc : process(data_in_TVALID, regslice_both_data_in_V_data_U_ack_in)
    begin
        if (((data_in_TVALID = ap_const_logic_1) and (regslice_both_data_in_V_data_U_ack_in = ap_const_logic_1))) then 
            data_in_TREADY <= ap_const_logic_1;
        else 
            data_in_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    data_in_TREADY_int_assign_proc : process(ap_CS_fsm_state83, icmp_ln167_fu_3215_p2, ap_CS_fsm_state2, icmp_ln194_fu_2289_p2, ap_CS_fsm_state15, icmp_ln212_fu_2491_p2, ap_CS_fsm_state43, icmp_ln241_fu_2894_p2, grp_weight_loader_fu_2101_data_in_TREADY, ap_CS_fsm_state82, data_in_TVALID_int)
    begin
        if (((not(((icmp_ln241_fu_2894_p2 = ap_const_lv1_0) and (data_in_TVALID_int = ap_const_logic_0))) and (icmp_ln241_fu_2894_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state43)) or (not(((icmp_ln212_fu_2491_p2 = ap_const_lv1_0) and (data_in_TVALID_int = ap_const_logic_0))) and (icmp_ln212_fu_2491_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not(((icmp_ln194_fu_2289_p2 = ap_const_lv1_0) and (data_in_TVALID_int = ap_const_logic_0))) and (icmp_ln194_fu_2289_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((icmp_ln167_fu_3215_p2 = ap_const_lv1_0) and (data_in_TVALID_int = ap_const_logic_0))) and (icmp_ln167_fu_3215_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state83)))) then 
            data_in_TREADY_int <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            data_in_TREADY_int <= grp_weight_loader_fu_2101_data_in_TREADY;
        else 
            data_in_TREADY_int <= ap_const_logic_0;
        end if; 
    end process;

    data_out_TVALID <= regslice_both_data_out_V_data_U_vld_out;
    dct_out_0_address0 <= sext_ln288_fu_3146_p1(8 - 1 downto 0);

    dct_out_0_ce0_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter0)
    begin
        if (((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
            dct_out_0_ce0 <= ap_const_logic_1;
        else 
            dct_out_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dct_out_0_ce1_assign_proc : process(grp_mfcc_dct_fu_1859_dct_out_0_ce1, ap_CS_fsm_state61)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            dct_out_0_ce1 <= grp_mfcc_dct_fu_1859_dct_out_0_ce1;
        else 
            dct_out_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dct_out_0_we1_assign_proc : process(grp_mfcc_dct_fu_1859_dct_out_0_we1, ap_CS_fsm_state61)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            dct_out_0_we1 <= grp_mfcc_dct_fu_1859_dct_out_0_we1;
        else 
            dct_out_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    dct_out_1_address0 <= sext_ln288_fu_3146_p1(8 - 1 downto 0);

    dct_out_1_ce0_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter0)
    begin
        if (((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
            dct_out_1_ce0 <= ap_const_logic_1;
        else 
            dct_out_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dct_out_1_ce1_assign_proc : process(grp_mfcc_dct_fu_1859_dct_out_1_ce1, ap_CS_fsm_state61)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            dct_out_1_ce1 <= grp_mfcc_dct_fu_1859_dct_out_1_ce1;
        else 
            dct_out_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dct_out_1_we1_assign_proc : process(grp_mfcc_dct_fu_1859_dct_out_1_we1, ap_CS_fsm_state61)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            dct_out_1_we1 <= grp_mfcc_dct_fu_1859_dct_out_1_we1;
        else 
            dct_out_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    dct_out_2_address0 <= zext_ln288_4_fu_3157_p1(7 - 1 downto 0);

    dct_out_2_ce0_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter0)
    begin
        if (((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
            dct_out_2_ce0 <= ap_const_logic_1;
        else 
            dct_out_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dct_out_2_ce1_assign_proc : process(grp_mfcc_dct_fu_1859_dct_out_2_ce1, ap_CS_fsm_state61)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            dct_out_2_ce1 <= grp_mfcc_dct_fu_1859_dct_out_2_ce1;
        else 
            dct_out_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dct_out_2_we1_assign_proc : process(grp_mfcc_dct_fu_1859_dct_out_2_we1, ap_CS_fsm_state61)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            dct_out_2_we1 <= grp_mfcc_dct_fu_1859_dct_out_2_we1;
        else 
            dct_out_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    dct_out_3_address0 <= zext_ln288_4_fu_3157_p1(7 - 1 downto 0);

    dct_out_3_ce0_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter0)
    begin
        if (((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
            dct_out_3_ce0 <= ap_const_logic_1;
        else 
            dct_out_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dct_out_3_ce1_assign_proc : process(grp_mfcc_dct_fu_1859_dct_out_3_ce1, ap_CS_fsm_state61)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            dct_out_3_ce1 <= grp_mfcc_dct_fu_1859_dct_out_3_ce1;
        else 
            dct_out_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dct_out_3_we1_assign_proc : process(grp_mfcc_dct_fu_1859_dct_out_3_we1, ap_CS_fsm_state61)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            dct_out_3_we1 <= grp_mfcc_dct_fu_1859_dct_out_3_we1;
        else 
            dct_out_3_we1 <= ap_const_logic_0;
        end if; 
    end process;


    dw12pw1_quant_V_V_read_assign_proc : process(ap_CS_fsm_state72, grp_pw_layer1_fu_1999_in_stream_V_V_read)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            dw12pw1_quant_V_V_read <= grp_pw_layer1_fu_1999_in_stream_V_V_read;
        else 
            dw12pw1_quant_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    dw12pw1_quant_V_V_write_assign_proc : process(grp_dw_layer1_fu_2019_out_stream_V_V_write, ap_CS_fsm_state70)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            dw12pw1_quant_V_V_write <= grp_dw_layer1_fu_2019_out_stream_V_V_write;
        else 
            dw12pw1_quant_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    dw12pw1_scale_V_read_assign_proc : process(ap_CS_fsm_state72, grp_pw_layer1_fu_1999_dw12pw1_scale_V_read)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            dw12pw1_scale_V_read <= grp_pw_layer1_fu_1999_dw12pw1_scale_V_read;
        else 
            dw12pw1_scale_V_read <= ap_const_logic_0;
        end if; 
    end process;


    dw12pw1_scale_V_write_assign_proc : process(grp_dw_layer1_fu_2019_dw12pw1_scale_V_write, ap_CS_fsm_state70)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            dw12pw1_scale_V_write <= grp_dw_layer1_fu_2019_dw12pw1_scale_V_write;
        else 
            dw12pw1_scale_V_write <= ap_const_logic_0;
        end if; 
    end process;


    fbank_out_0_address0_assign_proc : process(grp_mfcc_dct_fu_1859_fbank_out_0_address0, grp_mfcc_log_fu_2058_fbank_out_0_address0, grp_fbank_fu_2077_output_0_address0, ap_CS_fsm_state61, ap_CS_fsm_state59, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            fbank_out_0_address0 <= grp_fbank_fu_2077_output_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            fbank_out_0_address0 <= grp_mfcc_log_fu_2058_fbank_out_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            fbank_out_0_address0 <= grp_mfcc_dct_fu_1859_fbank_out_0_address0;
        else 
            fbank_out_0_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    fbank_out_0_address1_assign_proc : process(grp_mfcc_dct_fu_1859_fbank_out_0_address1, grp_mfcc_log_fu_2058_fbank_out_0_address1, grp_fbank_fu_2077_output_0_address1, ap_CS_fsm_state61, ap_CS_fsm_state59, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            fbank_out_0_address1 <= grp_fbank_fu_2077_output_0_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            fbank_out_0_address1 <= grp_mfcc_log_fu_2058_fbank_out_0_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            fbank_out_0_address1 <= grp_mfcc_dct_fu_1859_fbank_out_0_address1;
        else 
            fbank_out_0_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    fbank_out_0_ce0_assign_proc : process(grp_mfcc_dct_fu_1859_fbank_out_0_ce0, grp_mfcc_log_fu_2058_fbank_out_0_ce0, grp_fbank_fu_2077_output_0_ce0, ap_CS_fsm_state61, ap_CS_fsm_state59, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            fbank_out_0_ce0 <= grp_fbank_fu_2077_output_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            fbank_out_0_ce0 <= grp_mfcc_log_fu_2058_fbank_out_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            fbank_out_0_ce0 <= grp_mfcc_dct_fu_1859_fbank_out_0_ce0;
        else 
            fbank_out_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fbank_out_0_ce1_assign_proc : process(grp_mfcc_dct_fu_1859_fbank_out_0_ce1, grp_mfcc_log_fu_2058_fbank_out_0_ce1, grp_fbank_fu_2077_output_0_ce1, ap_CS_fsm_state61, ap_CS_fsm_state59, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            fbank_out_0_ce1 <= grp_fbank_fu_2077_output_0_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            fbank_out_0_ce1 <= grp_mfcc_log_fu_2058_fbank_out_0_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            fbank_out_0_ce1 <= grp_mfcc_dct_fu_1859_fbank_out_0_ce1;
        else 
            fbank_out_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    fbank_out_0_d1_assign_proc : process(grp_mfcc_log_fu_2058_fbank_out_0_d1, grp_fbank_fu_2077_output_0_d1, ap_CS_fsm_state59, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            fbank_out_0_d1 <= grp_fbank_fu_2077_output_0_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            fbank_out_0_d1 <= grp_mfcc_log_fu_2058_fbank_out_0_d1;
        else 
            fbank_out_0_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    fbank_out_0_we1_assign_proc : process(grp_mfcc_log_fu_2058_fbank_out_0_we1, grp_fbank_fu_2077_output_0_we1, ap_CS_fsm_state59, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            fbank_out_0_we1 <= grp_fbank_fu_2077_output_0_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            fbank_out_0_we1 <= grp_mfcc_log_fu_2058_fbank_out_0_we1;
        else 
            fbank_out_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    fbank_out_1_address0_assign_proc : process(grp_mfcc_dct_fu_1859_fbank_out_1_address0, grp_mfcc_log_fu_2058_fbank_out_1_address0, grp_fbank_fu_2077_output_1_address0, ap_CS_fsm_state61, ap_CS_fsm_state59, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            fbank_out_1_address0 <= grp_fbank_fu_2077_output_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            fbank_out_1_address0 <= grp_mfcc_log_fu_2058_fbank_out_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            fbank_out_1_address0 <= grp_mfcc_dct_fu_1859_fbank_out_1_address0;
        else 
            fbank_out_1_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    fbank_out_1_address1_assign_proc : process(grp_mfcc_dct_fu_1859_fbank_out_1_address1, grp_mfcc_log_fu_2058_fbank_out_1_address1, grp_fbank_fu_2077_output_1_address1, ap_CS_fsm_state61, ap_CS_fsm_state59, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            fbank_out_1_address1 <= grp_fbank_fu_2077_output_1_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            fbank_out_1_address1 <= grp_mfcc_log_fu_2058_fbank_out_1_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            fbank_out_1_address1 <= grp_mfcc_dct_fu_1859_fbank_out_1_address1;
        else 
            fbank_out_1_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    fbank_out_1_ce0_assign_proc : process(grp_mfcc_dct_fu_1859_fbank_out_1_ce0, grp_mfcc_log_fu_2058_fbank_out_1_ce0, grp_fbank_fu_2077_output_1_ce0, ap_CS_fsm_state61, ap_CS_fsm_state59, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            fbank_out_1_ce0 <= grp_fbank_fu_2077_output_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            fbank_out_1_ce0 <= grp_mfcc_log_fu_2058_fbank_out_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            fbank_out_1_ce0 <= grp_mfcc_dct_fu_1859_fbank_out_1_ce0;
        else 
            fbank_out_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fbank_out_1_ce1_assign_proc : process(grp_mfcc_dct_fu_1859_fbank_out_1_ce1, grp_mfcc_log_fu_2058_fbank_out_1_ce1, grp_fbank_fu_2077_output_1_ce1, ap_CS_fsm_state61, ap_CS_fsm_state59, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            fbank_out_1_ce1 <= grp_fbank_fu_2077_output_1_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            fbank_out_1_ce1 <= grp_mfcc_log_fu_2058_fbank_out_1_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            fbank_out_1_ce1 <= grp_mfcc_dct_fu_1859_fbank_out_1_ce1;
        else 
            fbank_out_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    fbank_out_1_d1_assign_proc : process(grp_mfcc_log_fu_2058_fbank_out_1_d1, grp_fbank_fu_2077_output_1_d1, ap_CS_fsm_state59, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            fbank_out_1_d1 <= grp_fbank_fu_2077_output_1_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            fbank_out_1_d1 <= grp_mfcc_log_fu_2058_fbank_out_1_d1;
        else 
            fbank_out_1_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    fbank_out_1_we1_assign_proc : process(grp_mfcc_log_fu_2058_fbank_out_1_we1, grp_fbank_fu_2077_output_1_we1, ap_CS_fsm_state59, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            fbank_out_1_we1 <= grp_fbank_fu_2077_output_1_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            fbank_out_1_we1 <= grp_mfcc_log_fu_2058_fbank_out_1_we1;
        else 
            fbank_out_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    fbank_out_2_address0_assign_proc : process(grp_mfcc_dct_fu_1859_fbank_out_2_address0, grp_mfcc_log_fu_2058_fbank_out_2_address0, grp_fbank_fu_2077_output_2_address0, ap_CS_fsm_state61, ap_CS_fsm_state59, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            fbank_out_2_address0 <= grp_fbank_fu_2077_output_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            fbank_out_2_address0 <= grp_mfcc_log_fu_2058_fbank_out_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            fbank_out_2_address0 <= grp_mfcc_dct_fu_1859_fbank_out_2_address0;
        else 
            fbank_out_2_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    fbank_out_2_address1_assign_proc : process(grp_mfcc_dct_fu_1859_fbank_out_2_address1, grp_mfcc_log_fu_2058_fbank_out_2_address1, grp_fbank_fu_2077_output_2_address1, ap_CS_fsm_state61, ap_CS_fsm_state59, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            fbank_out_2_address1 <= grp_fbank_fu_2077_output_2_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            fbank_out_2_address1 <= grp_mfcc_log_fu_2058_fbank_out_2_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            fbank_out_2_address1 <= grp_mfcc_dct_fu_1859_fbank_out_2_address1;
        else 
            fbank_out_2_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    fbank_out_2_ce0_assign_proc : process(grp_mfcc_dct_fu_1859_fbank_out_2_ce0, grp_mfcc_log_fu_2058_fbank_out_2_ce0, grp_fbank_fu_2077_output_2_ce0, ap_CS_fsm_state61, ap_CS_fsm_state59, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            fbank_out_2_ce0 <= grp_fbank_fu_2077_output_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            fbank_out_2_ce0 <= grp_mfcc_log_fu_2058_fbank_out_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            fbank_out_2_ce0 <= grp_mfcc_dct_fu_1859_fbank_out_2_ce0;
        else 
            fbank_out_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fbank_out_2_ce1_assign_proc : process(grp_mfcc_dct_fu_1859_fbank_out_2_ce1, grp_mfcc_log_fu_2058_fbank_out_2_ce1, grp_fbank_fu_2077_output_2_ce1, ap_CS_fsm_state61, ap_CS_fsm_state59, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            fbank_out_2_ce1 <= grp_fbank_fu_2077_output_2_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            fbank_out_2_ce1 <= grp_mfcc_log_fu_2058_fbank_out_2_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            fbank_out_2_ce1 <= grp_mfcc_dct_fu_1859_fbank_out_2_ce1;
        else 
            fbank_out_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    fbank_out_2_d1_assign_proc : process(grp_mfcc_log_fu_2058_fbank_out_2_d1, grp_fbank_fu_2077_output_2_d1, ap_CS_fsm_state59, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            fbank_out_2_d1 <= grp_fbank_fu_2077_output_2_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            fbank_out_2_d1 <= grp_mfcc_log_fu_2058_fbank_out_2_d1;
        else 
            fbank_out_2_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    fbank_out_2_we1_assign_proc : process(grp_mfcc_log_fu_2058_fbank_out_2_we1, grp_fbank_fu_2077_output_2_we1, ap_CS_fsm_state59, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            fbank_out_2_we1 <= grp_fbank_fu_2077_output_2_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            fbank_out_2_we1 <= grp_mfcc_log_fu_2058_fbank_out_2_we1;
        else 
            fbank_out_2_we1 <= ap_const_logic_0;
        end if; 
    end process;


    fbank_out_3_address0_assign_proc : process(grp_mfcc_dct_fu_1859_fbank_out_3_address0, grp_mfcc_log_fu_2058_fbank_out_3_address0, grp_fbank_fu_2077_output_3_address0, ap_CS_fsm_state61, ap_CS_fsm_state59, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            fbank_out_3_address0 <= grp_fbank_fu_2077_output_3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            fbank_out_3_address0 <= grp_mfcc_log_fu_2058_fbank_out_3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            fbank_out_3_address0 <= grp_mfcc_dct_fu_1859_fbank_out_3_address0;
        else 
            fbank_out_3_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    fbank_out_3_address1_assign_proc : process(grp_mfcc_dct_fu_1859_fbank_out_3_address1, grp_mfcc_log_fu_2058_fbank_out_3_address1, grp_fbank_fu_2077_output_3_address1, ap_CS_fsm_state61, ap_CS_fsm_state59, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            fbank_out_3_address1 <= grp_fbank_fu_2077_output_3_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            fbank_out_3_address1 <= grp_mfcc_log_fu_2058_fbank_out_3_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            fbank_out_3_address1 <= grp_mfcc_dct_fu_1859_fbank_out_3_address1;
        else 
            fbank_out_3_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    fbank_out_3_ce0_assign_proc : process(grp_mfcc_dct_fu_1859_fbank_out_3_ce0, grp_mfcc_log_fu_2058_fbank_out_3_ce0, grp_fbank_fu_2077_output_3_ce0, ap_CS_fsm_state61, ap_CS_fsm_state59, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            fbank_out_3_ce0 <= grp_fbank_fu_2077_output_3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            fbank_out_3_ce0 <= grp_mfcc_log_fu_2058_fbank_out_3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            fbank_out_3_ce0 <= grp_mfcc_dct_fu_1859_fbank_out_3_ce0;
        else 
            fbank_out_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fbank_out_3_ce1_assign_proc : process(grp_mfcc_dct_fu_1859_fbank_out_3_ce1, grp_mfcc_log_fu_2058_fbank_out_3_ce1, grp_fbank_fu_2077_output_3_ce1, ap_CS_fsm_state61, ap_CS_fsm_state59, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            fbank_out_3_ce1 <= grp_fbank_fu_2077_output_3_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            fbank_out_3_ce1 <= grp_mfcc_log_fu_2058_fbank_out_3_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            fbank_out_3_ce1 <= grp_mfcc_dct_fu_1859_fbank_out_3_ce1;
        else 
            fbank_out_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    fbank_out_3_d1_assign_proc : process(grp_mfcc_log_fu_2058_fbank_out_3_d1, grp_fbank_fu_2077_output_3_d1, ap_CS_fsm_state59, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            fbank_out_3_d1 <= grp_fbank_fu_2077_output_3_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            fbank_out_3_d1 <= grp_mfcc_log_fu_2058_fbank_out_3_d1;
        else 
            fbank_out_3_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    fbank_out_3_we1_assign_proc : process(grp_mfcc_log_fu_2058_fbank_out_3_we1, grp_fbank_fu_2077_output_3_we1, ap_CS_fsm_state59, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            fbank_out_3_we1 <= grp_fbank_fu_2077_output_3_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            fbank_out_3_we1 <= grp_mfcc_log_fu_2058_fbank_out_3_we1;
        else 
            fbank_out_3_we1 <= ap_const_logic_0;
        end if; 
    end process;


    fc2final_quant_V_V_read_assign_proc : process(grp_fc_64u_12u_1u_s_fu_2039_in_stream_V_V_read, ap_CS_fsm_state79)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state79)) then 
            fc2final_quant_V_V_read <= grp_fc_64u_12u_1u_s_fu_2039_in_stream_V_V_read;
        else 
            fc2final_quant_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    fc2final_quant_V_V_write_assign_proc : process(grp_fc_relu6_fu_1973_out_stream_V_V_write, ap_CS_fsm_state77)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            fc2final_quant_V_V_write <= grp_fc_relu6_fu_1973_out_stream_V_V_write;
        else 
            fc2final_quant_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    fc2final_scale_V_read_assign_proc : process(grp_fc_64u_12u_1u_s_fu_2039_fc2final_scale_V_read, ap_CS_fsm_state79)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state79)) then 
            fc2final_scale_V_read <= grp_fc_64u_12u_1u_s_fu_2039_fc2final_scale_V_read;
        else 
            fc2final_scale_V_read <= ap_const_logic_0;
        end if; 
    end process;


    fc2final_scale_V_write_assign_proc : process(grp_fc_relu6_fu_1973_fc2final_scale_V_write, ap_CS_fsm_state77)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            fc2final_scale_V_write <= grp_fc_relu6_fu_1973_fc2final_scale_V_write;
        else 
            fc2final_scale_V_write <= ap_const_logic_0;
        end if; 
    end process;


    fc_bias1_V_address0_assign_proc : process(grp_fc_relu6_fu_1973_fc_bias1_V_address0, grp_weight_loader_fu_2101_fc_bias1_V_2_address0, ap_CS_fsm_state82, ap_CS_fsm_state77)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            fc_bias1_V_address0 <= grp_weight_loader_fu_2101_fc_bias1_V_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            fc_bias1_V_address0 <= grp_fc_relu6_fu_1973_fc_bias1_V_address0;
        else 
            fc_bias1_V_address0 <= "XXXXXX";
        end if; 
    end process;


    fc_bias1_V_ce0_assign_proc : process(grp_fc_relu6_fu_1973_fc_bias1_V_ce0, grp_weight_loader_fu_2101_fc_bias1_V_2_ce0, ap_CS_fsm_state82, ap_CS_fsm_state77)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            fc_bias1_V_ce0 <= grp_weight_loader_fu_2101_fc_bias1_V_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            fc_bias1_V_ce0 <= grp_fc_relu6_fu_1973_fc_bias1_V_ce0;
        else 
            fc_bias1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fc_bias1_V_ce1_assign_proc : process(grp_weight_loader_fu_2101_fc_bias1_V_2_ce1, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            fc_bias1_V_ce1 <= grp_weight_loader_fu_2101_fc_bias1_V_2_ce1;
        else 
            fc_bias1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    fc_bias1_V_we0_assign_proc : process(grp_weight_loader_fu_2101_fc_bias1_V_2_we0, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            fc_bias1_V_we0 <= grp_weight_loader_fu_2101_fc_bias1_V_2_we0;
        else 
            fc_bias1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    fc_bias1_V_we1_assign_proc : process(grp_weight_loader_fu_2101_fc_bias1_V_2_we1, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            fc_bias1_V_we1 <= grp_weight_loader_fu_2101_fc_bias1_V_2_we1;
        else 
            fc_bias1_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    fc_bias2_V_address0_assign_proc : process(grp_fc_64u_12u_1u_s_fu_2039_fc_bias2_V_address0, grp_weight_loader_fu_2101_fc_bias2_V_2_address0, ap_CS_fsm_state82, ap_CS_fsm_state79)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            fc_bias2_V_address0 <= grp_weight_loader_fu_2101_fc_bias2_V_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state79)) then 
            fc_bias2_V_address0 <= grp_fc_64u_12u_1u_s_fu_2039_fc_bias2_V_address0;
        else 
            fc_bias2_V_address0 <= "XXXX";
        end if; 
    end process;


    fc_bias2_V_ce0_assign_proc : process(grp_fc_64u_12u_1u_s_fu_2039_fc_bias2_V_ce0, grp_weight_loader_fu_2101_fc_bias2_V_2_ce0, ap_CS_fsm_state82, ap_CS_fsm_state79)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            fc_bias2_V_ce0 <= grp_weight_loader_fu_2101_fc_bias2_V_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state79)) then 
            fc_bias2_V_ce0 <= grp_fc_64u_12u_1u_s_fu_2039_fc_bias2_V_ce0;
        else 
            fc_bias2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fc_bias2_V_ce1_assign_proc : process(grp_weight_loader_fu_2101_fc_bias2_V_2_ce1, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            fc_bias2_V_ce1 <= grp_weight_loader_fu_2101_fc_bias2_V_2_ce1;
        else 
            fc_bias2_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    fc_bias2_V_we0_assign_proc : process(grp_weight_loader_fu_2101_fc_bias2_V_2_we0, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            fc_bias2_V_we0 <= grp_weight_loader_fu_2101_fc_bias2_V_2_we0;
        else 
            fc_bias2_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    fc_bias2_V_we1_assign_proc : process(grp_weight_loader_fu_2101_fc_bias2_V_2_we1, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            fc_bias2_V_we1 <= grp_weight_loader_fu_2101_fc_bias2_V_2_we1;
        else 
            fc_bias2_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    fc_weights1_V_address0_assign_proc : process(grp_fc_relu6_fu_1973_fc_weights1_V_address0, grp_weight_loader_fu_2101_fc_weights1_V_2_address0, ap_CS_fsm_state82, ap_CS_fsm_state77)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            fc_weights1_V_address0 <= grp_weight_loader_fu_2101_fc_weights1_V_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            fc_weights1_V_address0 <= grp_fc_relu6_fu_1973_fc_weights1_V_address0;
        else 
            fc_weights1_V_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    fc_weights1_V_ce0_assign_proc : process(grp_fc_relu6_fu_1973_fc_weights1_V_ce0, grp_weight_loader_fu_2101_fc_weights1_V_2_ce0, ap_CS_fsm_state82, ap_CS_fsm_state77)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            fc_weights1_V_ce0 <= grp_weight_loader_fu_2101_fc_weights1_V_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            fc_weights1_V_ce0 <= grp_fc_relu6_fu_1973_fc_weights1_V_ce0;
        else 
            fc_weights1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fc_weights1_V_we0_assign_proc : process(grp_weight_loader_fu_2101_fc_weights1_V_2_we0, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            fc_weights1_V_we0 <= grp_weight_loader_fu_2101_fc_weights1_V_2_we0;
        else 
            fc_weights1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    fc_weights2_V_address0_assign_proc : process(grp_fc_64u_12u_1u_s_fu_2039_fc_weights2_V_address0, grp_weight_loader_fu_2101_fc_weights2_V_2_address0, ap_CS_fsm_state82, ap_CS_fsm_state79)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            fc_weights2_V_address0 <= grp_weight_loader_fu_2101_fc_weights2_V_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state79)) then 
            fc_weights2_V_address0 <= grp_fc_64u_12u_1u_s_fu_2039_fc_weights2_V_address0;
        else 
            fc_weights2_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    fc_weights2_V_ce0_assign_proc : process(grp_fc_64u_12u_1u_s_fu_2039_fc_weights2_V_ce0, grp_weight_loader_fu_2101_fc_weights2_V_2_ce0, ap_CS_fsm_state82, ap_CS_fsm_state79)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            fc_weights2_V_ce0 <= grp_weight_loader_fu_2101_fc_weights2_V_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state79)) then 
            fc_weights2_V_ce0 <= grp_fc_64u_12u_1u_s_fu_2039_fc_weights2_V_ce0;
        else 
            fc_weights2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fc_weights2_V_we0_assign_proc : process(grp_weight_loader_fu_2101_fc_weights2_V_2_we0, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            fc_weights2_V_we0 <= grp_weight_loader_fu_2101_fc_weights2_V_2_we0;
        else 
            fc_weights2_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    frames_address0_assign_proc : process(zext_ln205_5_reg_3560_pp0_iter3_reg, zext_ln223_5_reg_3704_pp1_iter3_reg, ap_CS_fsm_state28, ap_CS_fsm_state41, zext_ln252_5_reg_3914_pp2_iter3_reg, ap_enable_reg_pp0_iter4, ap_enable_reg_pp1_iter4, ap_enable_reg_pp2_iter4, grp_calc_stft_fu_1919_frames_address0, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_CS_fsm_state42, ap_block_pp2_stage0, ap_CS_fsm_state55, zext_ln233_3_fu_2715_p1, zext_ln265_7_fu_2880_p1, zext_ln265_8_fu_2890_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            frames_address0 <= zext_ln252_5_reg_3914_pp2_iter3_reg(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            frames_address0 <= zext_ln265_8_fu_2890_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            frames_address0 <= zext_ln265_7_fu_2880_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            frames_address0 <= zext_ln233_3_fu_2715_p1(14 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
            frames_address0 <= zext_ln223_5_reg_3704_pp1_iter3_reg(14 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            frames_address0 <= zext_ln205_5_reg_3560_pp0_iter3_reg(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            frames_address0 <= grp_calc_stft_fu_1919_frames_address0;
        else 
            frames_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    frames_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_CS_fsm_state28, ap_CS_fsm_state41, ap_block_pp2_stage0_11001, ap_enable_reg_pp0_iter4, ap_enable_reg_pp1_iter4, ap_enable_reg_pp2_iter4, grp_calc_stft_fu_1919_frames_ce0, ap_CS_fsm_state42, ap_CS_fsm_state55)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state28) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_enable_reg_pp2_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)) or ((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            frames_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            frames_ce0 <= grp_calc_stft_fu_1919_frames_ce0;
        else 
            frames_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    frames_ce1_assign_proc : process(grp_calc_stft_fu_1919_frames_ce1, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            frames_ce1 <= grp_calc_stft_fu_1919_frames_ce1;
        else 
            frames_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    frames_d0_assign_proc : process(frames_q0, tmp_280_reg_3615, tmp_281_reg_3759, tmp_284_reg_3969, ap_enable_reg_pp0_iter4, ap_enable_reg_pp1_iter4, ap_enable_reg_pp2_iter4, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_CS_fsm_state42, ap_block_pp2_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            frames_d0 <= tmp_284_reg_3969;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            frames_d0 <= frames_q0;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
            frames_d0 <= tmp_281_reg_3759;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            frames_d0 <= tmp_280_reg_3615;
        else 
            frames_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    frames_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln200_reg_3534_pp0_iter3_reg, ap_block_pp1_stage0_11001, icmp_ln218_reg_3678_pp1_iter3_reg, ap_block_pp2_stage0_11001, icmp_ln247_reg_3888_pp2_iter3_reg, ap_enable_reg_pp0_iter4, ap_enable_reg_pp1_iter4, ap_enable_reg_pp2_iter4, ap_CS_fsm_state42)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state42) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln200_reg_3534_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((icmp_ln247_reg_3888_pp2_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)) or ((icmp_ln218_reg_3678_pp1_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            frames_we0 <= ap_const_logic_1;
        else 
            frames_we0 <= ap_const_logic_0;
        end if; 
    end process;


    frames_we1_assign_proc : process(grp_calc_stft_fu_1919_frames_we1, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            frames_we1 <= grp_calc_stft_fu_1919_frames_we1;
        else 
            frames_we1 <= ap_const_logic_0;
        end if; 
    end process;

    grp_calc_stft_fu_1919_ap_start <= grp_calc_stft_fu_1919_ap_start_reg;
    grp_datastream_out_12u_s_fu_2187_ap_start <= grp_datastream_out_12u_s_fu_2187_ap_start_reg;
    grp_datastream_out_12u_s_fu_2187_data_out_TREADY <= (data_out_TREADY_int and ap_CS_fsm_state81);
    grp_dw_layer1_fu_2019_ap_start <= grp_dw_layer1_fu_2019_ap_start_reg;
    grp_fbank_fu_2077_ap_start <= grp_fbank_fu_2077_ap_start_reg;
    grp_fc_64u_12u_1u_s_fu_2039_ap_start <= grp_fc_64u_12u_1u_s_fu_2039_ap_start_reg;
    grp_fc_relu6_fu_1973_ap_start <= grp_fc_relu6_fu_1973_ap_start_reg;

    grp_fu_2196_p0_assign_proc : process(shorttime_energy_1_reg_1603, threshold_loc_0_reg_1745, ap_CS_fsm_state34, ap_CS_fsm_state92)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            grp_fu_2196_p0 <= threshold_loc_0_reg_1745;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            grp_fu_2196_p0 <= shorttime_energy_1_reg_1603;
        else 
            grp_fu_2196_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2202_ce_assign_proc : process(ap_CS_fsm_state83, icmp_ln167_fu_3215_p2, ap_CS_fsm_state2, icmp_ln194_fu_2289_p2, ap_CS_fsm_state15, icmp_ln212_fu_2491_p2, ap_CS_fsm_state43, icmp_ln241_fu_2894_p2, ap_CS_fsm_state5, ap_CS_fsm_state18, ap_CS_fsm_state33, ap_CS_fsm_state46, ap_CS_fsm_state86, ap_CS_fsm_state91, ap_CS_fsm_state30, ap_CS_fsm_state88, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state84, ap_CS_fsm_state85, ap_CS_fsm_state89, ap_CS_fsm_state90, data_in_TVALID_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state91) or (ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state90) or (ap_const_logic_1 = ap_CS_fsm_state89) or (ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state88) or (ap_const_logic_1 = ap_CS_fsm_state30) or (not(((icmp_ln241_fu_2894_p2 = ap_const_lv1_0) and (data_in_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state43)) or (not(((icmp_ln212_fu_2491_p2 = ap_const_lv1_0) and (data_in_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not(((icmp_ln194_fu_2289_p2 = ap_const_lv1_0) and (data_in_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((icmp_ln167_fu_3215_p2 = ap_const_lv1_0) and (data_in_TVALID_int = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state83)))) then 
            grp_fu_2202_ce <= ap_const_logic_1;
        else 
            grp_fu_2202_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_2202_p0_assign_proc : process(ap_CS_fsm_state83, ap_CS_fsm_state2, ap_CS_fsm_state15, ap_CS_fsm_state43, reg_2235, frames_load_reg_3790, ap_CS_fsm_state30, ap_CS_fsm_state88, data_in_TDATA_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state88)) then 
            grp_fu_2202_p0 <= reg_2235;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            grp_fu_2202_p0 <= frames_load_reg_3790;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state83))) then 
            grp_fu_2202_p0 <= data_in_TDATA_int;
        else 
            grp_fu_2202_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2202_p1_assign_proc : process(ap_CS_fsm_state83, ap_CS_fsm_state2, ap_CS_fsm_state15, ap_CS_fsm_state43, reg_2235, frames_load_reg_3790, ap_CS_fsm_state30, ap_CS_fsm_state88)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state88)) then 
            grp_fu_2202_p1 <= reg_2235;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            grp_fu_2202_p1 <= frames_load_reg_3790;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state83))) then 
            grp_fu_2202_p1 <= ap_const_lv32_38000000;
        else 
            grp_fu_2202_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2207_ce_assign_proc : process(ap_CS_fsm_state69, ap_CS_fsm_state71, ap_CS_fsm_state72, grp_pw_layer1_fu_1999_ap_done, ap_CS_fsm_state67, grp_dw_layer1_fu_2019_ap_done, grp_quant_layer_10u_s_fu_2070_ap_done, ap_CS_fsm_state70, ap_CS_fsm_state68)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state67) or ((grp_pw_layer1_fu_1999_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state72)) or ((ap_const_logic_1 = ap_CS_fsm_state68) and (grp_quant_layer_10u_s_fu_2070_ap_done = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state70) and (grp_dw_layer1_fu_2019_ap_done = ap_const_logic_1)))) then 
            grp_fu_2207_ce <= ap_const_logic_1;
        else 
            grp_fu_2207_ce <= ap_const_logic_0;
        end if; 
    end process;

        grp_fu_2207_p0 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_103_reg_4037),32));

    grp_fu_2220_p4 <= indices_q0(12 downto 3);
    grp_grucell_fu_1800_ap_start <= grp_grucell_fu_1800_ap_start_reg;
    grp_mfcc_dct_fu_1859_ap_start <= grp_mfcc_dct_fu_1859_ap_start_reg;
    grp_mfcc_log_fu_2058_ap_start <= grp_mfcc_log_fu_2058_ap_start_reg;
    grp_pw_layer1_fu_1999_ap_start <= grp_pw_layer1_fu_1999_ap_start_reg;
    grp_quant_layer_10u_s_fu_2070_ap_start <= grp_quant_layer_10u_s_fu_2070_ap_start_reg;
    grp_weight_loader_fu_2101_ap_start <= grp_weight_loader_fu_2101_ap_start_reg;

    gru2fc_quant_V_V_read_assign_proc : process(grp_fc_relu6_fu_1973_in_stream_V_V_read, ap_CS_fsm_state77)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            gru2fc_quant_V_V_read <= grp_fc_relu6_fu_1973_in_stream_V_V_read;
        else 
            gru2fc_quant_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    gru2fc_quant_V_V_write_assign_proc : process(grp_grucell_fu_1800_out_stream_V_V_write, ap_CS_fsm_state75)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            gru2fc_quant_V_V_write <= grp_grucell_fu_1800_out_stream_V_V_write;
        else 
            gru2fc_quant_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    gru2fc_scale_V_read_assign_proc : process(grp_fc_relu6_fu_1973_gru2fc_scale_V_read, ap_CS_fsm_state77)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            gru2fc_scale_V_read <= grp_fc_relu6_fu_1973_gru2fc_scale_V_read;
        else 
            gru2fc_scale_V_read <= ap_const_logic_0;
        end if; 
    end process;


    gru2fc_scale_V_write_assign_proc : process(grp_grucell_fu_1800_gru2fc_scale_V_write, ap_CS_fsm_state75)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            gru2fc_scale_V_write <= grp_grucell_fu_1800_gru2fc_scale_V_write;
        else 
            gru2fc_scale_V_write <= ap_const_logic_0;
        end if; 
    end process;

    i_27_fu_3221_p2 <= std_logic_vector(unsigned(i_0_reg_1755) + unsigned(ap_const_lv12_1));
    i_28_fu_2339_p2 <= std_logic_vector(unsigned(ap_const_lv4_1) + unsigned(ap_phi_mux_i4_0_phi_fu_1516_p4));
    i_29_fu_2295_p2 <= std_logic_vector(unsigned(i2_0_reg_1489) + unsigned(ap_const_lv11_1));
    i_31_fu_2541_p2 <= std_logic_vector(unsigned(ap_const_lv5_1) + unsigned(ap_phi_mux_i8_0_phi_fu_1561_p4));
    i_32_fu_2523_p2 <= std_logic_vector(unsigned(i6_0_reg_1534) + unsigned(ap_const_lv12_1));
    i_33_fu_2779_p2 <= std_logic_vector(unsigned(i16_0_reg_1626) + unsigned(ap_const_lv4_1));
    i_34_fu_2720_p2 <= std_logic_vector(unsigned(i10_0_reg_1591) + unsigned(ap_const_lv5_1));
    i_36_fu_2944_p2 <= std_logic_vector(unsigned(ap_const_lv6_1) + unsigned(ap_phi_mux_i14_0_phi_fu_1675_p4));
    i_37_fu_2926_p2 <= std_logic_vector(unsigned(i12_0_reg_1648) + unsigned(ap_const_lv13_1));
    i_38_fu_3067_p2 <= std_logic_vector(unsigned(i18_0_reg_1693) + unsigned(ap_const_lv6_1));
    i_39_fu_3175_p2 <= std_logic_vector(unsigned(i_0_i_reg_1734) + unsigned(ap_const_lv4_1));
    i_fu_3271_p2 <= std_logic_vector(unsigned(ap_phi_mux_i1_0_phi_fu_1782_p4) + unsigned(ap_const_lv6_1));
    icmp_ln137_fu_2279_p2 <= "1" when (control_in_TDATA_int = ap_const_lv16_0) else "0";
    icmp_ln167_fu_3215_p2 <= "1" when (i_0_reg_1755 = ap_const_lv12_C80) else "0";
    icmp_ln178_fu_3259_p2 <= "1" when (indvar_flatten_reg_1767 = ap_const_lv14_3D40) else "0";
    icmp_ln180_fu_3277_p2 <= "1" when (j_0_reg_1789 = ap_const_lv9_140) else "0";
    icmp_ln194_fu_2289_p2 <= "1" when (i2_0_reg_1489 = ap_const_lv11_6E0) else "0";
    icmp_ln200_fu_2327_p2 <= "1" when (indvar_flatten6_reg_1501 = ap_const_lv12_C80) else "0";
    icmp_ln202_fu_2345_p2 <= "1" when (j5_0_reg_1523 = ap_const_lv9_140) else "0";
    icmp_ln212_fu_2491_p2 <= "1" when (i6_0_reg_1534 = ap_const_lv12_D20) else "0";
    icmp_ln218_fu_2529_p2 <= "1" when (indvar_flatten13_reg_1546 = ap_const_lv12_C80) else "0";
    icmp_ln220_fu_2547_p2 <= "1" when (j9_0_reg_1568 = ap_const_lv9_140) else "0";
    icmp_ln229_fu_2658_p2 <= "1" when (i10_0_reg_1591 = ap_const_lv5_14) else "0";
    icmp_ln22_fu_3169_p2 <= "1" when (i_0_i_reg_1734 = ap_const_lv4_A) else "0";
    icmp_ln231_fu_2694_p2 <= "1" when (j11_0_reg_1615 = ap_const_lv9_140) else "0";
    icmp_ln238_1_fu_2750_p2 <= "1" when (trunc_ln238_1_fu_2740_p1 = ap_const_lv23_0) else "0";
    icmp_ln238_2_fu_2473_p2 <= "0" when (tmp_279_fu_2459_p4 = ap_const_lv8_FF) else "1";
    icmp_ln238_3_fu_2479_p2 <= "1" when (trunc_ln238_fu_2469_p1 = ap_const_lv23_0) else "0";
    icmp_ln238_fu_2744_p2 <= "0" when (tmp_282_fu_2730_p4 = ap_const_lv8_FF) else "1";
    icmp_ln241_fu_2894_p2 <= "1" when (i12_0_reg_1648 = ap_const_lv13_1F40) else "0";
    icmp_ln247_fu_2932_p2 <= "1" when (indvar_flatten20_reg_1660 = ap_const_lv14_2440) else "0";
    icmp_ln249_fu_2950_p2 <= "1" when (j15_0_reg_1682 = ap_const_lv9_140) else "0";
    icmp_ln261_fu_2773_p2 <= "1" when (i16_0_reg_1626 = ap_const_lv4_A) else "0";
    icmp_ln263_fu_2855_p2 <= "1" when (j17_0_reg_1637 = ap_const_lv9_140) else "0";
    icmp_ln282_fu_3061_p2 <= "1" when (i18_0_reg_1693 = ap_const_lv6_31) else "0";
    icmp_ln285_fu_3107_p2 <= "1" when (j19_0_reg_1705 = ap_const_lv4_A) else "0";
    icmp_ln290_fu_3163_p2 <= "1" when (i18_0_reg_1693 = ap_const_lv6_0) else "0";

    indices_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, zext_ln205_5_fu_2410_p1, ap_CS_fsm_pp1_stage0, zext_ln223_5_fu_2612_p1, ap_CS_fsm_pp2_stage0, zext_ln252_5_fu_3015_p1, ap_CS_fsm_pp4_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1, ap_enable_reg_pp2_iter1, ap_enable_reg_pp4_iter1, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_block_pp2_stage0, ap_block_pp4_stage0, zext_ln183_4_fu_3376_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then 
            indices_address0 <= zext_ln183_4_fu_3376_p1(14 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            indices_address0 <= zext_ln252_5_fu_3015_p1(14 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            indices_address0 <= zext_ln223_5_fu_2612_p1(14 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            indices_address0 <= zext_ln205_5_fu_2410_p1(14 - 1 downto 0);
        else 
            indices_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    indices_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1, ap_enable_reg_pp2_iter1, ap_enable_reg_pp4_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            indices_ce0 <= ap_const_logic_1;
        else 
            indices_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    indices_d0 <= std_logic_vector(unsigned(shl_ln183_mid2_fu_3305_p3) + unsigned(zext_ln183_2_fu_3356_p1));

    indices_we0_assign_proc : process(icmp_ln178_reg_4145, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, ap_enable_reg_pp4_iter1)
    begin
        if (((icmp_ln178_reg_4145 = ap_const_lv1_0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001))) then 
            indices_we0 <= ap_const_logic_1;
        else 
            indices_we0 <= ap_const_logic_0;
        end if; 
    end process;

    j_10_fu_2569_p2 <= std_logic_vector(unsigned(ap_const_lv9_1) + unsigned(select_ln223_fu_2553_p3));
    j_11_fu_2700_p2 <= std_logic_vector(unsigned(j11_0_reg_1615) + unsigned(ap_const_lv9_1));
    j_12_fu_2972_p2 <= std_logic_vector(unsigned(ap_const_lv9_1) + unsigned(select_ln252_fu_2956_p3));
    j_13_fu_2861_p2 <= std_logic_vector(unsigned(j17_0_reg_1637) + unsigned(ap_const_lv9_1));
    j_14_fu_3113_p2 <= std_logic_vector(unsigned(j19_0_reg_1705) + unsigned(ap_const_lv4_1));
    j_9_fu_2367_p2 <= std_logic_vector(unsigned(ap_const_lv9_1) + unsigned(select_ln205_fu_2351_p3));
    j_fu_3299_p2 <= std_logic_vector(unsigned(select_ln178_fu_3283_p3) + unsigned(ap_const_lv9_1));

    keep_in_V_din_assign_proc : process(icmp_ln290_fu_3163_p2, ap_condition_2320)
    begin
        if ((ap_const_boolean_1 = ap_condition_2320)) then
            if ((icmp_ln290_fu_3163_p2 = ap_const_lv1_1)) then 
                keep_in_V_din <= ap_const_lv16_0;
            elsif ((icmp_ln290_fu_3163_p2 = ap_const_lv1_0)) then 
                keep_in_V_din <= ap_const_lv16_1;
            else 
                keep_in_V_din <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            keep_in_V_din <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    keep_in_V_read_assign_proc : process(ap_CS_fsm_state66, pre_out_V_empty_n, icmp_ln22_fu_3169_p2, data2dw1_V_full_n, keep_in_V_empty_n)
    begin
        if ((not((((keep_in_V_empty_n = ap_const_logic_0) and (icmp_ln22_fu_3169_p2 = ap_const_lv1_1)) or ((icmp_ln22_fu_3169_p2 = ap_const_lv1_0) and (data2dw1_V_full_n = ap_const_logic_0)) or ((icmp_ln22_fu_3169_p2 = ap_const_lv1_0) and (pre_out_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state66) and (icmp_ln22_fu_3169_p2 = ap_const_lv1_1))) then 
            keep_in_V_read <= ap_const_logic_1;
        else 
            keep_in_V_read <= ap_const_logic_0;
        end if; 
    end process;


    keep_in_V_write_assign_proc : process(ap_CS_fsm_state65, keep_in_V_full_n, icmp_ln290_fu_3163_p2)
    begin
        if (((not((((keep_in_V_full_n = ap_const_logic_0) and (icmp_ln290_fu_3163_p2 = ap_const_lv1_1)) or ((icmp_ln290_fu_3163_p2 = ap_const_lv1_0) and (keep_in_V_full_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state65) and (icmp_ln290_fu_3163_p2 = ap_const_lv1_1)) or (not((((keep_in_V_full_n = ap_const_logic_0) and (icmp_ln290_fu_3163_p2 = ap_const_lv1_1)) or ((icmp_ln290_fu_3163_p2 = ap_const_lv1_0) and (keep_in_V_full_n = ap_const_logic_0)))) and (icmp_ln290_fu_3163_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state65)))) then 
            keep_in_V_write <= ap_const_logic_1;
        else 
            keep_in_V_write <= ap_const_logic_0;
        end if; 
    end process;


    keepout_V_read_assign_proc : process(grp_grucell_fu_1800_keep_stream_V_read, ap_CS_fsm_state75)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            keepout_V_read <= grp_grucell_fu_1800_keep_stream_V_read;
        else 
            keepout_V_read <= ap_const_logic_0;
        end if; 
    end process;


    keepout_V_write_assign_proc : process(ap_CS_fsm_state73, keepout_V_full_n)
    begin
        if (((keepout_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state73))) then 
            keepout_V_write <= ap_const_logic_1;
        else 
            keepout_V_write <= ap_const_logic_0;
        end if; 
    end process;

    lshr_ln1_fu_2305_p4 <= i2_0_reg_1489(10 downto 3);
    lshr_ln3_fu_2501_p4 <= i6_0_reg_1534(11 downto 3);
    lshr_ln5_fu_2904_p4 <= i12_0_reg_1648(12 downto 3);
    lshr_ln_fu_3231_p4 <= i_0_reg_1755(11 downto 3);
    or_ln238_1_fu_2485_p2 <= (icmp_ln238_3_fu_2479_p2 or icmp_ln238_2_fu_2473_p2);
    or_ln238_fu_2756_p2 <= (icmp_ln238_fu_2744_p2 or icmp_ln238_1_fu_2750_p2);

    output_V_read_assign_proc : process(grp_datastream_out_12u_s_fu_2187_output_V_read, ap_CS_fsm_state81)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state81)) then 
            output_V_read <= grp_datastream_out_12u_s_fu_2187_output_V_read;
        else 
            output_V_read <= ap_const_logic_0;
        end if; 
    end process;


    output_V_write_assign_proc : process(grp_fc_64u_12u_1u_s_fu_2039_out_stream_V_write, ap_CS_fsm_state79)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state79)) then 
            output_V_write <= grp_fc_64u_12u_1u_s_fu_2039_out_stream_V_write;
        else 
            output_V_write <= ap_const_logic_0;
        end if; 
    end process;


    pre_out_V_read_assign_proc : process(ap_CS_fsm_state66, pre_out_V_empty_n, icmp_ln22_fu_3169_p2, data2dw1_V_full_n, keep_in_V_empty_n)
    begin
        if ((not((((keep_in_V_empty_n = ap_const_logic_0) and (icmp_ln22_fu_3169_p2 = ap_const_lv1_1)) or ((icmp_ln22_fu_3169_p2 = ap_const_lv1_0) and (data2dw1_V_full_n = ap_const_logic_0)) or ((icmp_ln22_fu_3169_p2 = ap_const_lv1_0) and (pre_out_V_empty_n = ap_const_logic_0)))) and (icmp_ln22_fu_3169_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state66))) then 
            pre_out_V_read <= ap_const_logic_1;
        else 
            pre_out_V_read <= ap_const_logic_0;
        end if; 
    end process;


    pre_out_V_write_assign_proc : process(icmp_ln285_reg_3993, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0_11001)
    begin
        if (((icmp_ln285_reg_3993 = ap_const_lv1_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
            pre_out_V_write <= ap_const_logic_1;
        else 
            pre_out_V_write <= ap_const_logic_0;
        end if; 
    end process;


    pw12gru_quant_V_V_read_assign_proc : process(grp_grucell_fu_1800_in_stream_V_V_read, ap_CS_fsm_state75)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            pw12gru_quant_V_V_read <= grp_grucell_fu_1800_in_stream_V_V_read;
        else 
            pw12gru_quant_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    pw12gru_quant_V_V_write_assign_proc : process(ap_CS_fsm_state72, grp_pw_layer1_fu_1999_out_stream_V_V_write)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            pw12gru_quant_V_V_write <= grp_pw_layer1_fu_1999_out_stream_V_V_write;
        else 
            pw12gru_quant_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    pw12gru_scale_V_read_assign_proc : process(grp_grucell_fu_1800_pw12gru_scale_V_read, ap_CS_fsm_state75)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            pw12gru_scale_V_read <= grp_grucell_fu_1800_pw12gru_scale_V_read;
        else 
            pw12gru_scale_V_read <= ap_const_logic_0;
        end if; 
    end process;


    pw12gru_scale_V_write_assign_proc : process(ap_CS_fsm_state72, grp_pw_layer1_fu_1999_pw12gru_scale_V_write)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            pw12gru_scale_V_write <= grp_pw_layer1_fu_1999_pw12gru_scale_V_write;
        else 
            pw12gru_scale_V_write <= ap_const_logic_0;
        end if; 
    end process;


    pw_weight1_V_address0_assign_proc : process(ap_CS_fsm_state72, grp_pw_layer1_fu_1999_pw_weight1_V_address0, grp_weight_loader_fu_2101_pw_weight1_V_2_address0, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            pw_weight1_V_address0 <= grp_weight_loader_fu_2101_pw_weight1_V_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            pw_weight1_V_address0 <= grp_pw_layer1_fu_1999_pw_weight1_V_address0;
        else 
            pw_weight1_V_address0 <= "XXXX";
        end if; 
    end process;


    pw_weight1_V_ce0_assign_proc : process(ap_CS_fsm_state72, grp_pw_layer1_fu_1999_pw_weight1_V_ce0, grp_weight_loader_fu_2101_pw_weight1_V_2_ce0, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            pw_weight1_V_ce0 <= grp_weight_loader_fu_2101_pw_weight1_V_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            pw_weight1_V_ce0 <= grp_pw_layer1_fu_1999_pw_weight1_V_ce0;
        else 
            pw_weight1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    pw_weight1_V_ce1_assign_proc : process(grp_weight_loader_fu_2101_pw_weight1_V_2_ce1, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            pw_weight1_V_ce1 <= grp_weight_loader_fu_2101_pw_weight1_V_2_ce1;
        else 
            pw_weight1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    pw_weight1_V_we0_assign_proc : process(grp_weight_loader_fu_2101_pw_weight1_V_2_we0, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            pw_weight1_V_we0 <= grp_weight_loader_fu_2101_pw_weight1_V_2_we0;
        else 
            pw_weight1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    pw_weight1_V_we1_assign_proc : process(grp_weight_loader_fu_2101_pw_weight1_V_2_we1, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            pw_weight1_V_we1 <= grp_weight_loader_fu_2101_pw_weight1_V_2_we1;
        else 
            pw_weight1_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln178_1_fu_3291_p3 <= 
        i_fu_3271_p2 when (icmp_ln180_fu_3277_p2(0) = '1') else 
        ap_phi_mux_i1_0_phi_fu_1782_p4;
    select_ln178_fu_3283_p3 <= 
        ap_const_lv9_0 when (icmp_ln180_fu_3277_p2(0) = '1') else 
        j_0_reg_1789;
    select_ln205_1_fu_2359_p3 <= 
        i_28_fu_2339_p2 when (icmp_ln202_fu_2345_p2(0) = '1') else 
        ap_phi_mux_i4_0_phi_fu_1516_p4;
    select_ln205_fu_2351_p3 <= 
        ap_const_lv9_0 when (icmp_ln202_fu_2345_p2(0) = '1') else 
        j5_0_reg_1523;
    select_ln223_1_fu_2561_p3 <= 
        i_31_fu_2541_p2 when (icmp_ln220_fu_2547_p2(0) = '1') else 
        ap_phi_mux_i8_0_phi_fu_1561_p4;
    select_ln223_fu_2553_p3 <= 
        ap_const_lv9_0 when (icmp_ln220_fu_2547_p2(0) = '1') else 
        j9_0_reg_1568;
    select_ln252_1_fu_2964_p3 <= 
        i_36_fu_2944_p2 when (icmp_ln249_fu_2950_p2(0) = '1') else 
        ap_phi_mux_i14_0_phi_fu_1675_p4;
    select_ln252_fu_2956_p3 <= 
        ap_const_lv9_0 when (icmp_ln249_fu_2950_p2(0) = '1') else 
        j15_0_reg_1682;
        sext_ln288_fu_3146_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln288_fu_3141_p2),64));

    shl_ln183_1_mid2_fu_3312_p3 <= (select_ln178_1_reg_4160 & ap_const_lv5_0);
    shl_ln183_mid2_fu_3305_p3 <= (select_ln178_1_reg_4160 & ap_const_lv7_0);

    signal_in_0_address0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter2, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_block_pp2_stage0, zext_ln205_3_fu_2419_p1, zext_ln223_3_fu_2621_p1, zext_ln252_3_fu_3024_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1))) then 
            signal_in_0_address0 <= zext_ln252_3_fu_3024_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            signal_in_0_address0 <= zext_ln223_3_fu_2621_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            signal_in_0_address0 <= zext_ln205_3_fu_2419_p1(10 - 1 downto 0);
        else 
            signal_in_0_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    signal_in_0_address1_assign_proc : process(signal_in_0_addr_reg_3494, signal_in_0_addr_2_reg_3633, signal_in_0_addr_3_reg_3843, signal_in_0_addr_1_reg_4105, ap_CS_fsm_state6, ap_CS_fsm_state19, ap_CS_fsm_state47, ap_CS_fsm_state87)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            signal_in_0_address1 <= signal_in_0_addr_1_reg_4105;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            signal_in_0_address1 <= signal_in_0_addr_3_reg_3843;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            signal_in_0_address1 <= signal_in_0_addr_2_reg_3633;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            signal_in_0_address1 <= signal_in_0_addr_reg_3494;
        else 
            signal_in_0_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    signal_in_0_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_block_pp2_stage0_11001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)) or ((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            signal_in_0_ce0 <= ap_const_logic_1;
        else 
            signal_in_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    signal_in_0_ce1_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state19, ap_CS_fsm_state47, ap_CS_fsm_state87)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            signal_in_0_ce1 <= ap_const_logic_1;
        else 
            signal_in_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    signal_in_0_we1_assign_proc : process(trunc_ln198_reg_3490, trunc_ln216_reg_3629, trunc_ln245_reg_3839, trunc_ln171_reg_4101, ap_CS_fsm_state6, ap_CS_fsm_state19, ap_CS_fsm_state47, ap_CS_fsm_state87)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state87) and (trunc_ln171_reg_4101 = ap_const_lv3_0)) or ((ap_const_logic_1 = ap_CS_fsm_state47) and (trunc_ln245_reg_3839 = ap_const_lv3_0)) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (trunc_ln216_reg_3629 = ap_const_lv3_0)) or ((trunc_ln198_reg_3490 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            signal_in_0_we1 <= ap_const_logic_1;
        else 
            signal_in_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    signal_in_1_address0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter2, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_block_pp2_stage0, zext_ln205_3_fu_2419_p1, zext_ln223_3_fu_2621_p1, zext_ln252_3_fu_3024_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1))) then 
            signal_in_1_address0 <= zext_ln252_3_fu_3024_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            signal_in_1_address0 <= zext_ln223_3_fu_2621_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            signal_in_1_address0 <= zext_ln205_3_fu_2419_p1(10 - 1 downto 0);
        else 
            signal_in_1_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    signal_in_1_address1_assign_proc : process(signal_in_1_addr_reg_3499, signal_in_1_addr_2_reg_3638, signal_in_1_addr_3_reg_3848, signal_in_1_addr_1_reg_4110, ap_CS_fsm_state6, ap_CS_fsm_state19, ap_CS_fsm_state47, ap_CS_fsm_state87)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            signal_in_1_address1 <= signal_in_1_addr_1_reg_4110;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            signal_in_1_address1 <= signal_in_1_addr_3_reg_3848;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            signal_in_1_address1 <= signal_in_1_addr_2_reg_3638;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            signal_in_1_address1 <= signal_in_1_addr_reg_3499;
        else 
            signal_in_1_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    signal_in_1_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_block_pp2_stage0_11001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)) or ((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            signal_in_1_ce0 <= ap_const_logic_1;
        else 
            signal_in_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    signal_in_1_ce1_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state19, ap_CS_fsm_state47, ap_CS_fsm_state87)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            signal_in_1_ce1 <= ap_const_logic_1;
        else 
            signal_in_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    signal_in_1_we1_assign_proc : process(trunc_ln198_reg_3490, trunc_ln216_reg_3629, trunc_ln245_reg_3839, trunc_ln171_reg_4101, ap_CS_fsm_state6, ap_CS_fsm_state19, ap_CS_fsm_state47, ap_CS_fsm_state87)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state87) and (trunc_ln171_reg_4101 = ap_const_lv3_1)) or ((ap_const_logic_1 = ap_CS_fsm_state47) and (trunc_ln245_reg_3839 = ap_const_lv3_1)) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (trunc_ln216_reg_3629 = ap_const_lv3_1)) or ((trunc_ln198_reg_3490 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            signal_in_1_we1 <= ap_const_logic_1;
        else 
            signal_in_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    signal_in_2_address0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter2, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_block_pp2_stage0, zext_ln205_3_fu_2419_p1, zext_ln223_3_fu_2621_p1, zext_ln252_3_fu_3024_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1))) then 
            signal_in_2_address0 <= zext_ln252_3_fu_3024_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            signal_in_2_address0 <= zext_ln223_3_fu_2621_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            signal_in_2_address0 <= zext_ln205_3_fu_2419_p1(10 - 1 downto 0);
        else 
            signal_in_2_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    signal_in_2_address1_assign_proc : process(signal_in_2_addr_reg_3504, signal_in_2_addr_2_reg_3643, signal_in_2_addr_3_reg_3853, signal_in_2_addr_1_reg_4115, ap_CS_fsm_state6, ap_CS_fsm_state19, ap_CS_fsm_state47, ap_CS_fsm_state87)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            signal_in_2_address1 <= signal_in_2_addr_1_reg_4115;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            signal_in_2_address1 <= signal_in_2_addr_3_reg_3853;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            signal_in_2_address1 <= signal_in_2_addr_2_reg_3643;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            signal_in_2_address1 <= signal_in_2_addr_reg_3504;
        else 
            signal_in_2_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    signal_in_2_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_block_pp2_stage0_11001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)) or ((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            signal_in_2_ce0 <= ap_const_logic_1;
        else 
            signal_in_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    signal_in_2_ce1_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state19, ap_CS_fsm_state47, ap_CS_fsm_state87)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            signal_in_2_ce1 <= ap_const_logic_1;
        else 
            signal_in_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    signal_in_2_we1_assign_proc : process(trunc_ln198_reg_3490, trunc_ln216_reg_3629, trunc_ln245_reg_3839, trunc_ln171_reg_4101, ap_CS_fsm_state6, ap_CS_fsm_state19, ap_CS_fsm_state47, ap_CS_fsm_state87)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state87) and (trunc_ln171_reg_4101 = ap_const_lv3_2)) or ((ap_const_logic_1 = ap_CS_fsm_state47) and (trunc_ln245_reg_3839 = ap_const_lv3_2)) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (trunc_ln216_reg_3629 = ap_const_lv3_2)) or ((trunc_ln198_reg_3490 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            signal_in_2_we1 <= ap_const_logic_1;
        else 
            signal_in_2_we1 <= ap_const_logic_0;
        end if; 
    end process;


    signal_in_3_address0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter2, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_block_pp2_stage0, zext_ln205_3_fu_2419_p1, zext_ln223_3_fu_2621_p1, zext_ln252_3_fu_3024_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1))) then 
            signal_in_3_address0 <= zext_ln252_3_fu_3024_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            signal_in_3_address0 <= zext_ln223_3_fu_2621_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            signal_in_3_address0 <= zext_ln205_3_fu_2419_p1(10 - 1 downto 0);
        else 
            signal_in_3_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    signal_in_3_address1_assign_proc : process(signal_in_3_addr_reg_3509, signal_in_3_addr_2_reg_3648, signal_in_3_addr_3_reg_3858, signal_in_3_addr_1_reg_4120, ap_CS_fsm_state6, ap_CS_fsm_state19, ap_CS_fsm_state47, ap_CS_fsm_state87)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            signal_in_3_address1 <= signal_in_3_addr_1_reg_4120;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            signal_in_3_address1 <= signal_in_3_addr_3_reg_3858;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            signal_in_3_address1 <= signal_in_3_addr_2_reg_3648;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            signal_in_3_address1 <= signal_in_3_addr_reg_3509;
        else 
            signal_in_3_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    signal_in_3_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_block_pp2_stage0_11001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)) or ((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            signal_in_3_ce0 <= ap_const_logic_1;
        else 
            signal_in_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    signal_in_3_ce1_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state19, ap_CS_fsm_state47, ap_CS_fsm_state87)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            signal_in_3_ce1 <= ap_const_logic_1;
        else 
            signal_in_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    signal_in_3_we1_assign_proc : process(trunc_ln198_reg_3490, trunc_ln216_reg_3629, trunc_ln245_reg_3839, trunc_ln171_reg_4101, ap_CS_fsm_state6, ap_CS_fsm_state19, ap_CS_fsm_state47, ap_CS_fsm_state87)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state87) and (trunc_ln171_reg_4101 = ap_const_lv3_3)) or ((ap_const_logic_1 = ap_CS_fsm_state47) and (trunc_ln245_reg_3839 = ap_const_lv3_3)) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (trunc_ln216_reg_3629 = ap_const_lv3_3)) or ((trunc_ln198_reg_3490 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            signal_in_3_we1 <= ap_const_logic_1;
        else 
            signal_in_3_we1 <= ap_const_logic_0;
        end if; 
    end process;


    signal_in_4_address0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter2, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_block_pp2_stage0, zext_ln205_3_fu_2419_p1, zext_ln223_3_fu_2621_p1, zext_ln252_3_fu_3024_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1))) then 
            signal_in_4_address0 <= zext_ln252_3_fu_3024_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            signal_in_4_address0 <= zext_ln223_3_fu_2621_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            signal_in_4_address0 <= zext_ln205_3_fu_2419_p1(10 - 1 downto 0);
        else 
            signal_in_4_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    signal_in_4_address1_assign_proc : process(signal_in_4_addr_reg_3514, signal_in_4_addr_2_reg_3653, signal_in_4_addr_3_reg_3863, signal_in_4_addr_1_reg_4125, ap_CS_fsm_state6, ap_CS_fsm_state19, ap_CS_fsm_state47, ap_CS_fsm_state87)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            signal_in_4_address1 <= signal_in_4_addr_1_reg_4125;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            signal_in_4_address1 <= signal_in_4_addr_3_reg_3863;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            signal_in_4_address1 <= signal_in_4_addr_2_reg_3653;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            signal_in_4_address1 <= signal_in_4_addr_reg_3514;
        else 
            signal_in_4_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    signal_in_4_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_block_pp2_stage0_11001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)) or ((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            signal_in_4_ce0 <= ap_const_logic_1;
        else 
            signal_in_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    signal_in_4_ce1_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state19, ap_CS_fsm_state47, ap_CS_fsm_state87)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            signal_in_4_ce1 <= ap_const_logic_1;
        else 
            signal_in_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    signal_in_4_we1_assign_proc : process(trunc_ln198_reg_3490, trunc_ln216_reg_3629, trunc_ln245_reg_3839, trunc_ln171_reg_4101, ap_CS_fsm_state6, ap_CS_fsm_state19, ap_CS_fsm_state47, ap_CS_fsm_state87)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state87) and (trunc_ln171_reg_4101 = ap_const_lv3_4)) or ((ap_const_logic_1 = ap_CS_fsm_state47) and (trunc_ln245_reg_3839 = ap_const_lv3_4)) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (trunc_ln216_reg_3629 = ap_const_lv3_4)) or ((trunc_ln198_reg_3490 = ap_const_lv3_4) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            signal_in_4_we1 <= ap_const_logic_1;
        else 
            signal_in_4_we1 <= ap_const_logic_0;
        end if; 
    end process;


    signal_in_5_address0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter2, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_block_pp2_stage0, zext_ln205_3_fu_2419_p1, zext_ln223_3_fu_2621_p1, zext_ln252_3_fu_3024_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1))) then 
            signal_in_5_address0 <= zext_ln252_3_fu_3024_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            signal_in_5_address0 <= zext_ln223_3_fu_2621_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            signal_in_5_address0 <= zext_ln205_3_fu_2419_p1(10 - 1 downto 0);
        else 
            signal_in_5_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    signal_in_5_address1_assign_proc : process(signal_in_5_addr_reg_3519, signal_in_5_addr_2_reg_3658, signal_in_5_addr_3_reg_3868, signal_in_5_addr_1_reg_4130, ap_CS_fsm_state6, ap_CS_fsm_state19, ap_CS_fsm_state47, ap_CS_fsm_state87)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            signal_in_5_address1 <= signal_in_5_addr_1_reg_4130;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            signal_in_5_address1 <= signal_in_5_addr_3_reg_3868;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            signal_in_5_address1 <= signal_in_5_addr_2_reg_3658;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            signal_in_5_address1 <= signal_in_5_addr_reg_3519;
        else 
            signal_in_5_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    signal_in_5_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_block_pp2_stage0_11001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)) or ((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            signal_in_5_ce0 <= ap_const_logic_1;
        else 
            signal_in_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    signal_in_5_ce1_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state19, ap_CS_fsm_state47, ap_CS_fsm_state87)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            signal_in_5_ce1 <= ap_const_logic_1;
        else 
            signal_in_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    signal_in_5_we1_assign_proc : process(trunc_ln198_reg_3490, trunc_ln216_reg_3629, trunc_ln245_reg_3839, trunc_ln171_reg_4101, ap_CS_fsm_state6, ap_CS_fsm_state19, ap_CS_fsm_state47, ap_CS_fsm_state87)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state87) and (trunc_ln171_reg_4101 = ap_const_lv3_5)) or ((ap_const_logic_1 = ap_CS_fsm_state47) and (trunc_ln245_reg_3839 = ap_const_lv3_5)) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (trunc_ln216_reg_3629 = ap_const_lv3_5)) or ((trunc_ln198_reg_3490 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            signal_in_5_we1 <= ap_const_logic_1;
        else 
            signal_in_5_we1 <= ap_const_logic_0;
        end if; 
    end process;


    signal_in_6_address0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter2, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_block_pp2_stage0, zext_ln205_3_fu_2419_p1, zext_ln223_3_fu_2621_p1, zext_ln252_3_fu_3024_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1))) then 
            signal_in_6_address0 <= zext_ln252_3_fu_3024_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            signal_in_6_address0 <= zext_ln223_3_fu_2621_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            signal_in_6_address0 <= zext_ln205_3_fu_2419_p1(10 - 1 downto 0);
        else 
            signal_in_6_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    signal_in_6_address1_assign_proc : process(signal_in_6_addr_reg_3524, signal_in_6_addr_2_reg_3663, signal_in_6_addr_3_reg_3873, signal_in_6_addr_1_reg_4135, ap_CS_fsm_state6, ap_CS_fsm_state19, ap_CS_fsm_state47, ap_CS_fsm_state87)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            signal_in_6_address1 <= signal_in_6_addr_1_reg_4135;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            signal_in_6_address1 <= signal_in_6_addr_3_reg_3873;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            signal_in_6_address1 <= signal_in_6_addr_2_reg_3663;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            signal_in_6_address1 <= signal_in_6_addr_reg_3524;
        else 
            signal_in_6_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    signal_in_6_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_block_pp2_stage0_11001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)) or ((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            signal_in_6_ce0 <= ap_const_logic_1;
        else 
            signal_in_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    signal_in_6_ce1_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state19, ap_CS_fsm_state47, ap_CS_fsm_state87)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            signal_in_6_ce1 <= ap_const_logic_1;
        else 
            signal_in_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    signal_in_6_we1_assign_proc : process(trunc_ln198_reg_3490, trunc_ln216_reg_3629, trunc_ln245_reg_3839, trunc_ln171_reg_4101, ap_CS_fsm_state6, ap_CS_fsm_state19, ap_CS_fsm_state47, ap_CS_fsm_state87)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state87) and (trunc_ln171_reg_4101 = ap_const_lv3_6)) or ((ap_const_logic_1 = ap_CS_fsm_state47) and (trunc_ln245_reg_3839 = ap_const_lv3_6)) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (trunc_ln216_reg_3629 = ap_const_lv3_6)) or ((trunc_ln198_reg_3490 = ap_const_lv3_6) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            signal_in_6_we1 <= ap_const_logic_1;
        else 
            signal_in_6_we1 <= ap_const_logic_0;
        end if; 
    end process;


    signal_in_7_address0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter2, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_block_pp2_stage0, zext_ln205_3_fu_2419_p1, zext_ln223_3_fu_2621_p1, zext_ln252_3_fu_3024_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1))) then 
            signal_in_7_address0 <= zext_ln252_3_fu_3024_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            signal_in_7_address0 <= zext_ln223_3_fu_2621_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            signal_in_7_address0 <= zext_ln205_3_fu_2419_p1(10 - 1 downto 0);
        else 
            signal_in_7_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    signal_in_7_address1_assign_proc : process(signal_in_7_addr_reg_3529, signal_in_7_addr_2_reg_3668, signal_in_7_addr_3_reg_3878, signal_in_7_addr_1_reg_4140, ap_CS_fsm_state6, ap_CS_fsm_state19, ap_CS_fsm_state47, ap_CS_fsm_state87)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            signal_in_7_address1 <= signal_in_7_addr_1_reg_4140;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            signal_in_7_address1 <= signal_in_7_addr_3_reg_3878;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            signal_in_7_address1 <= signal_in_7_addr_2_reg_3668;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            signal_in_7_address1 <= signal_in_7_addr_reg_3529;
        else 
            signal_in_7_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    signal_in_7_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_block_pp2_stage0_11001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)) or ((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            signal_in_7_ce0 <= ap_const_logic_1;
        else 
            signal_in_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    signal_in_7_ce1_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state19, ap_CS_fsm_state47, ap_CS_fsm_state87)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            signal_in_7_ce1 <= ap_const_logic_1;
        else 
            signal_in_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    signal_in_7_we1_assign_proc : process(trunc_ln198_reg_3490, trunc_ln216_reg_3629, trunc_ln245_reg_3839, trunc_ln171_reg_4101, ap_CS_fsm_state6, ap_CS_fsm_state19, ap_CS_fsm_state47, ap_CS_fsm_state87)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state87) and (trunc_ln171_reg_4101 = ap_const_lv3_7)) or ((ap_const_logic_1 = ap_CS_fsm_state47) and (trunc_ln245_reg_3839 = ap_const_lv3_7)) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (trunc_ln216_reg_3629 = ap_const_lv3_7)) or ((trunc_ln198_reg_3490 = ap_const_lv3_7) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            signal_in_7_we1 <= ap_const_logic_1;
        else 
            signal_in_7_we1 <= ap_const_logic_0;
        end if; 
    end process;


    spectrogram_0_ce0_assign_proc : process(grp_fbank_fu_2077_spectrogram_0_ce0, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            spectrogram_0_ce0 <= grp_fbank_fu_2077_spectrogram_0_ce0;
        else 
            spectrogram_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    spectrogram_0_ce1_assign_proc : process(grp_calc_stft_fu_1919_spectrogram_0_ce1, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            spectrogram_0_ce1 <= grp_calc_stft_fu_1919_spectrogram_0_ce1;
        else 
            spectrogram_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    spectrogram_0_we1_assign_proc : process(grp_calc_stft_fu_1919_spectrogram_0_we1, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            spectrogram_0_we1 <= grp_calc_stft_fu_1919_spectrogram_0_we1;
        else 
            spectrogram_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    spectrogram_1_ce0_assign_proc : process(grp_fbank_fu_2077_spectrogram_1_ce0, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            spectrogram_1_ce0 <= grp_fbank_fu_2077_spectrogram_1_ce0;
        else 
            spectrogram_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    spectrogram_1_ce1_assign_proc : process(grp_calc_stft_fu_1919_spectrogram_1_ce1, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            spectrogram_1_ce1 <= grp_calc_stft_fu_1919_spectrogram_1_ce1;
        else 
            spectrogram_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    spectrogram_1_we1_assign_proc : process(grp_calc_stft_fu_1919_spectrogram_1_we1, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            spectrogram_1_we1 <= grp_calc_stft_fu_1919_spectrogram_1_we1;
        else 
            spectrogram_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    spectrogram_2_ce0_assign_proc : process(grp_fbank_fu_2077_spectrogram_2_ce0, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            spectrogram_2_ce0 <= grp_fbank_fu_2077_spectrogram_2_ce0;
        else 
            spectrogram_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    spectrogram_2_ce1_assign_proc : process(grp_calc_stft_fu_1919_spectrogram_2_ce1, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            spectrogram_2_ce1 <= grp_calc_stft_fu_1919_spectrogram_2_ce1;
        else 
            spectrogram_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    spectrogram_2_we1_assign_proc : process(grp_calc_stft_fu_1919_spectrogram_2_we1, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            spectrogram_2_we1 <= grp_calc_stft_fu_1919_spectrogram_2_we1;
        else 
            spectrogram_2_we1 <= ap_const_logic_0;
        end if; 
    end process;


    spectrogram_3_ce0_assign_proc : process(grp_fbank_fu_2077_spectrogram_3_ce0, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            spectrogram_3_ce0 <= grp_fbank_fu_2077_spectrogram_3_ce0;
        else 
            spectrogram_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    spectrogram_3_ce1_assign_proc : process(grp_calc_stft_fu_1919_spectrogram_3_ce1, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            spectrogram_3_ce1 <= grp_calc_stft_fu_1919_spectrogram_3_ce1;
        else 
            spectrogram_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    spectrogram_3_we1_assign_proc : process(grp_calc_stft_fu_1919_spectrogram_3_we1, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            spectrogram_3_we1 <= grp_calc_stft_fu_1919_spectrogram_3_we1;
        else 
            spectrogram_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln288_fu_3089_p2 <= std_logic_vector(unsigned(zext_ln288_1_fu_3085_p1) - unsigned(zext_ln288_fu_3073_p1));
    tmp_279_fu_2459_p4 <= bitcast_ln238_1_fu_2456_p1(30 downto 23);
    tmp_280_fu_2434_p9 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln205_reg_3570),16));
    tmp_281_fu_2636_p9 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln223_reg_3714),16));
    tmp_282_fu_2730_p4 <= bitcast_ln238_fu_2726_p1(30 downto 23);
    tmp_284_fu_3039_p9 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln252_reg_3924),16));
    tmp_78_fu_3319_p3 <= (select_ln178_1_reg_4160 & ap_const_lv8_0);
    tmp_79_fu_3330_p3 <= (select_ln178_1_reg_4160 & ap_const_lv6_0);
    tmp_80_fu_2373_p3 <= (select_ln205_1_reg_3548 & ap_const_lv8_0);
    tmp_81_fu_2384_p3 <= (select_ln205_1_reg_3548 & ap_const_lv6_0);
    tmp_82_fu_2575_p3 <= (select_ln223_1_reg_3692 & ap_const_lv8_0);
    tmp_83_fu_2586_p3 <= (select_ln223_1_reg_3692 & ap_const_lv6_0);
    tmp_84_fu_2664_p3 <= (i10_0_reg_1591 & ap_const_lv8_0);
    tmp_85_fu_2676_p3 <= (i10_0_reg_1591 & ap_const_lv6_0);
    tmp_86_fu_2795_p3 <= (add_ln265_fu_2789_p2 & ap_const_lv8_0);
    tmp_87_fu_2807_p3 <= (add_ln265_fu_2789_p2 & ap_const_lv6_0);
    tmp_88_fu_2825_p3 <= (i16_0_reg_1626 & ap_const_lv8_0);
    tmp_89_fu_2837_p3 <= (i16_0_reg_1626 & ap_const_lv6_0);
    tmp_90_fu_2978_p3 <= (select_ln252_1_reg_3902 & ap_const_lv8_0);
    tmp_91_fu_2989_p3 <= (select_ln252_1_reg_3902 & ap_const_lv6_0);
    tmp_92_fu_3077_p3 <= (i18_0_reg_1693 & ap_const_lv2_0);
    tmp_93_fu_3095_p3 <= (i18_0_reg_1693 & ap_const_lv1_0);
    tmp_97_fu_3123_p4 <= j19_0_reg_1705(3 downto 2);

    tmp_scale_address0_assign_proc : process(ap_CS_fsm_state71, ap_CS_fsm_state73, ap_CS_fsm_state72, ap_CS_fsm_state62, grp_weight_loader_fu_2101_tmp_scale_address0, ap_CS_fsm_state82, ap_CS_fsm_state70)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            tmp_scale_address0 <= ap_const_lv4_7;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            tmp_scale_address0 <= ap_const_lv4_5;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
            tmp_scale_address0 <= ap_const_lv4_3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            tmp_scale_address0 <= ap_const_lv4_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            tmp_scale_address0 <= ap_const_lv4_8;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            tmp_scale_address0 <= grp_weight_loader_fu_2101_tmp_scale_address0;
        else 
            tmp_scale_address0 <= "XXXX";
        end if; 
    end process;


    tmp_scale_address1_assign_proc : process(ap_CS_fsm_state71, ap_CS_fsm_state73, ap_CS_fsm_state72, ap_CS_fsm_state77, ap_CS_fsm_state70)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            tmp_scale_address1 <= ap_const_lv4_9;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            tmp_scale_address1 <= ap_const_lv4_6;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            tmp_scale_address1 <= ap_const_lv4_4;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
            tmp_scale_address1 <= ap_const_lv4_2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            tmp_scale_address1 <= ap_const_lv4_1;
        else 
            tmp_scale_address1 <= "XXXX";
        end if; 
    end process;


    tmp_scale_ce0_assign_proc : process(ap_CS_fsm_state71, ap_CS_fsm_state73, keepout_V_full_n, ap_CS_fsm_state72, grp_pw_layer1_fu_1999_ap_done, ap_CS_fsm_state62, grp_dw_layer1_fu_2019_ap_done, grp_weight_loader_fu_2101_tmp_scale_ce0, ap_CS_fsm_state82, ap_CS_fsm_state70)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state62) or ((grp_pw_layer1_fu_1999_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state72)) or ((keepout_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state73)) or ((ap_const_logic_1 = ap_CS_fsm_state70) and (grp_dw_layer1_fu_2019_ap_done = ap_const_logic_1)))) then 
            tmp_scale_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            tmp_scale_ce0 <= grp_weight_loader_fu_2101_tmp_scale_ce0;
        else 
            tmp_scale_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_scale_ce1_assign_proc : process(ap_CS_fsm_state71, ap_CS_fsm_state73, keepout_V_full_n, ap_CS_fsm_state72, grp_pw_layer1_fu_1999_ap_done, grp_fc_relu6_fu_1973_ap_done, grp_dw_layer1_fu_2019_ap_done, ap_CS_fsm_state77, ap_CS_fsm_state70)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state71) or ((grp_pw_layer1_fu_1999_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state72)) or ((keepout_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state73)) or ((ap_const_logic_1 = ap_CS_fsm_state70) and (grp_dw_layer1_fu_2019_ap_done = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state77) and (grp_fc_relu6_fu_1973_ap_done = ap_const_logic_1)))) then 
            tmp_scale_ce1 <= ap_const_logic_1;
        else 
            tmp_scale_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln171_fu_3227_p1 <= i_0_reg_1755(3 - 1 downto 0);
    trunc_ln198_fu_2301_p1 <= i2_0_reg_1489(3 - 1 downto 0);
    trunc_ln205_fu_2415_p1 <= indices_q0(3 - 1 downto 0);
    trunc_ln216_fu_2497_p1 <= i6_0_reg_1534(3 - 1 downto 0);
    trunc_ln223_fu_2617_p1 <= indices_q0(3 - 1 downto 0);
    trunc_ln238_1_fu_2740_p1 <= bitcast_ln238_fu_2726_p1(23 - 1 downto 0);
    trunc_ln238_fu_2469_p1 <= bitcast_ln238_1_fu_2456_p1(23 - 1 downto 0);
    trunc_ln245_fu_2900_p1 <= i12_0_reg_1648(3 - 1 downto 0);
    trunc_ln252_fu_3020_p1 <= indices_q0(3 - 1 downto 0);
    trunc_ln288_fu_3119_p1 <= j19_0_reg_1705(2 - 1 downto 0);

    weight_bias_scale_address0_assign_proc : process(ap_CS_fsm_state73, ap_CS_fsm_state72, ap_CS_fsm_state62, grp_weight_loader_fu_2101_weight_bias_scale_address0, ap_CS_fsm_state82, ap_CS_fsm_state70, ap_CS_fsm_state68)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            weight_bias_scale_address0 <= ap_const_lv4_6;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            weight_bias_scale_address0 <= ap_const_lv4_3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            weight_bias_scale_address0 <= ap_const_lv4_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            weight_bias_scale_address0 <= ap_const_lv4_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            weight_bias_scale_address0 <= ap_const_lv4_C;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            weight_bias_scale_address0 <= grp_weight_loader_fu_2101_weight_bias_scale_address0;
        else 
            weight_bias_scale_address0 <= "XXXX";
        end if; 
    end process;


    weight_bias_scale_address1_assign_proc : process(ap_CS_fsm_state73, ap_CS_fsm_state77)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            weight_bias_scale_address1 <= ap_const_lv4_E;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            weight_bias_scale_address1 <= ap_const_lv4_9;
        else 
            weight_bias_scale_address1 <= "XXXX";
        end if; 
    end process;


    weight_bias_scale_ce0_assign_proc : process(ap_CS_fsm_state73, keepout_V_full_n, ap_CS_fsm_state72, grp_pw_layer1_fu_1999_ap_done, ap_CS_fsm_state62, grp_dw_layer1_fu_2019_ap_done, grp_quant_layer_10u_s_fu_2070_ap_done, grp_weight_loader_fu_2101_weight_bias_scale_ce0, ap_CS_fsm_state82, ap_CS_fsm_state70, ap_CS_fsm_state68)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state62) or ((grp_pw_layer1_fu_1999_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state72)) or ((keepout_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state73)) or ((ap_const_logic_1 = ap_CS_fsm_state68) and (grp_quant_layer_10u_s_fu_2070_ap_done = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state70) and (grp_dw_layer1_fu_2019_ap_done = ap_const_logic_1)))) then 
            weight_bias_scale_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            weight_bias_scale_ce0 <= grp_weight_loader_fu_2101_weight_bias_scale_ce0;
        else 
            weight_bias_scale_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_bias_scale_ce1_assign_proc : process(ap_CS_fsm_state73, keepout_V_full_n, grp_fc_relu6_fu_1973_ap_done, ap_CS_fsm_state77)
    begin
        if ((((keepout_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state73)) or ((ap_const_logic_1 = ap_CS_fsm_state77) and (grp_fc_relu6_fu_1973_ap_done = ap_const_logic_1)))) then 
            weight_bias_scale_ce1 <= ap_const_logic_1;
        else 
            weight_bias_scale_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    weight_in_TREADY_assign_proc : process(weight_in_TVALID, regslice_both_weight_in_V_data_V_U_ack_in)
    begin
        if (((weight_in_TVALID = ap_const_logic_1) and (regslice_both_weight_in_V_data_V_U_ack_in = ap_const_logic_1))) then 
            weight_in_TREADY <= ap_const_logic_1;
        else 
            weight_in_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    weight_in_TREADY_int_assign_proc : process(grp_weight_loader_fu_2101_weight_in_TREADY, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            weight_in_TREADY_int <= grp_weight_loader_fu_2101_weight_in_TREADY;
        else 
            weight_in_TREADY_int <= ap_const_logic_0;
        end if; 
    end process;


    weights_hu_V_address0_assign_proc : process(grp_grucell_fu_1800_weights_hu_V_address0, grp_weight_loader_fu_2101_weights_hu_V_2_address0, ap_CS_fsm_state75, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            weights_hu_V_address0 <= grp_weight_loader_fu_2101_weights_hu_V_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            weights_hu_V_address0 <= grp_grucell_fu_1800_weights_hu_V_address0;
        else 
            weights_hu_V_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    weights_hu_V_ce0_assign_proc : process(grp_grucell_fu_1800_weights_hu_V_ce0, grp_weight_loader_fu_2101_weights_hu_V_2_ce0, ap_CS_fsm_state75, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            weights_hu_V_ce0 <= grp_weight_loader_fu_2101_weights_hu_V_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            weights_hu_V_ce0 <= grp_grucell_fu_1800_weights_hu_V_ce0;
        else 
            weights_hu_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weights_hu_V_we0_assign_proc : process(grp_weight_loader_fu_2101_weights_hu_V_2_we0, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            weights_hu_V_we0 <= grp_weight_loader_fu_2101_weights_hu_V_2_we0;
        else 
            weights_hu_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weights_hw_V_address0_assign_proc : process(grp_grucell_fu_1800_weights_hw_V_address0, grp_weight_loader_fu_2101_weights_hw_V_2_address0, ap_CS_fsm_state75, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            weights_hw_V_address0 <= grp_weight_loader_fu_2101_weights_hw_V_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            weights_hw_V_address0 <= grp_grucell_fu_1800_weights_hw_V_address0;
        else 
            weights_hw_V_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    weights_hw_V_ce0_assign_proc : process(grp_grucell_fu_1800_weights_hw_V_ce0, grp_weight_loader_fu_2101_weights_hw_V_2_ce0, ap_CS_fsm_state75, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            weights_hw_V_ce0 <= grp_weight_loader_fu_2101_weights_hw_V_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            weights_hw_V_ce0 <= grp_grucell_fu_1800_weights_hw_V_ce0;
        else 
            weights_hw_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weights_hw_V_we0_assign_proc : process(grp_weight_loader_fu_2101_weights_hw_V_2_we0, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            weights_hw_V_we0 <= grp_weight_loader_fu_2101_weights_hw_V_2_we0;
        else 
            weights_hw_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weights_ru_V_address0_assign_proc : process(grp_grucell_fu_1800_weights_ru_V_address0, grp_weight_loader_fu_2101_weights_ru_V_2_address0, ap_CS_fsm_state75, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            weights_ru_V_address0 <= grp_weight_loader_fu_2101_weights_ru_V_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            weights_ru_V_address0 <= grp_grucell_fu_1800_weights_ru_V_address0;
        else 
            weights_ru_V_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    weights_ru_V_ce0_assign_proc : process(grp_grucell_fu_1800_weights_ru_V_ce0, grp_weight_loader_fu_2101_weights_ru_V_2_ce0, ap_CS_fsm_state75, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            weights_ru_V_ce0 <= grp_weight_loader_fu_2101_weights_ru_V_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            weights_ru_V_ce0 <= grp_grucell_fu_1800_weights_ru_V_ce0;
        else 
            weights_ru_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weights_ru_V_we0_assign_proc : process(grp_weight_loader_fu_2101_weights_ru_V_2_we0, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            weights_ru_V_we0 <= grp_weight_loader_fu_2101_weights_ru_V_2_we0;
        else 
            weights_ru_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weights_rw_V_address0_assign_proc : process(grp_grucell_fu_1800_weights_rw_V_address0, grp_weight_loader_fu_2101_weights_rw_V_2_address0, ap_CS_fsm_state75, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            weights_rw_V_address0 <= grp_weight_loader_fu_2101_weights_rw_V_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            weights_rw_V_address0 <= grp_grucell_fu_1800_weights_rw_V_address0;
        else 
            weights_rw_V_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    weights_rw_V_ce0_assign_proc : process(grp_grucell_fu_1800_weights_rw_V_ce0, grp_weight_loader_fu_2101_weights_rw_V_2_ce0, ap_CS_fsm_state75, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            weights_rw_V_ce0 <= grp_weight_loader_fu_2101_weights_rw_V_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            weights_rw_V_ce0 <= grp_grucell_fu_1800_weights_rw_V_ce0;
        else 
            weights_rw_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weights_rw_V_we0_assign_proc : process(grp_weight_loader_fu_2101_weights_rw_V_2_we0, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            weights_rw_V_we0 <= grp_weight_loader_fu_2101_weights_rw_V_2_we0;
        else 
            weights_rw_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weights_zu_V_address0_assign_proc : process(grp_grucell_fu_1800_weights_zu_V_address0, grp_weight_loader_fu_2101_weights_zu_V_2_address0, ap_CS_fsm_state75, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            weights_zu_V_address0 <= grp_weight_loader_fu_2101_weights_zu_V_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            weights_zu_V_address0 <= grp_grucell_fu_1800_weights_zu_V_address0;
        else 
            weights_zu_V_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    weights_zu_V_ce0_assign_proc : process(grp_grucell_fu_1800_weights_zu_V_ce0, grp_weight_loader_fu_2101_weights_zu_V_2_ce0, ap_CS_fsm_state75, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            weights_zu_V_ce0 <= grp_weight_loader_fu_2101_weights_zu_V_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            weights_zu_V_ce0 <= grp_grucell_fu_1800_weights_zu_V_ce0;
        else 
            weights_zu_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weights_zu_V_we0_assign_proc : process(grp_weight_loader_fu_2101_weights_zu_V_2_we0, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            weights_zu_V_we0 <= grp_weight_loader_fu_2101_weights_zu_V_2_we0;
        else 
            weights_zu_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weights_zw_V_address0_assign_proc : process(grp_grucell_fu_1800_weights_zw_V_address0, grp_weight_loader_fu_2101_weights_zw_V_2_address0, ap_CS_fsm_state75, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            weights_zw_V_address0 <= grp_weight_loader_fu_2101_weights_zw_V_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            weights_zw_V_address0 <= grp_grucell_fu_1800_weights_zw_V_address0;
        else 
            weights_zw_V_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    weights_zw_V_ce0_assign_proc : process(grp_grucell_fu_1800_weights_zw_V_ce0, grp_weight_loader_fu_2101_weights_zw_V_2_ce0, ap_CS_fsm_state75, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            weights_zw_V_ce0 <= grp_weight_loader_fu_2101_weights_zw_V_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            weights_zw_V_ce0 <= grp_grucell_fu_1800_weights_zw_V_ce0;
        else 
            weights_zw_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weights_zw_V_we0_assign_proc : process(grp_weight_loader_fu_2101_weights_zw_V_2_we0, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            weights_zw_V_we0 <= grp_weight_loader_fu_2101_weights_zw_V_2_we0;
        else 
            weights_zw_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln171_fu_3241_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_fu_3231_p4),64));
    zext_ln180_fu_3347_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln178_reg_4154),11));
    zext_ln183_1_fu_3337_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_79_fu_3330_p3),15));
    zext_ln183_2_fu_3356_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln183_1_fu_3350_p2),13));
    zext_ln183_3_fu_3367_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln178_reg_4154),15));
    zext_ln183_4_fu_3376_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln183_3_fu_3370_p2),64));
    zext_ln183_fu_3326_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_78_fu_3319_p3),15));
    zext_ln198_fu_2315_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln1_fu_2305_p4),64));
    zext_ln205_1_fu_2391_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_81_fu_2384_p3),13));
    zext_ln205_3_fu_2419_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_2220_p4),64));
    zext_ln205_4_fu_2401_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln205_reg_3543),13));
    zext_ln205_5_fu_2410_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln205_1_fu_2404_p2),64));
    zext_ln205_fu_2380_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_80_fu_2373_p3),13));
    zext_ln216_fu_2511_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln3_fu_2501_p4),64));
    zext_ln223_1_fu_2593_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_83_fu_2586_p3),14));
    zext_ln223_3_fu_2621_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_2220_p4),64));
    zext_ln223_4_fu_2603_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln223_reg_3687),14));
    zext_ln223_5_fu_2612_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln223_1_fu_2606_p2),64));
    zext_ln223_fu_2582_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_82_fu_2575_p3),14));
    zext_ln233_1_fu_2684_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_85_fu_2676_p3),14));
    zext_ln233_2_fu_2706_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j11_0_reg_1615),14));
    zext_ln233_3_fu_2715_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln233_1_fu_2710_p2),64));
    zext_ln233_fu_2672_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_84_fu_2664_p3),14));
    zext_ln245_fu_2914_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln5_fu_2904_p4),64));
    zext_ln252_1_fu_2996_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_91_fu_2989_p3),15));
    zext_ln252_3_fu_3024_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_2220_p4),64));
    zext_ln252_4_fu_3006_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln252_reg_3897),15));
    zext_ln252_5_fu_3015_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln252_1_fu_3009_p2),64));
    zext_ln252_fu_2985_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_90_fu_2978_p3),15));
    zext_ln265_1_fu_2803_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_86_fu_2795_p3),14));
    zext_ln265_2_fu_2815_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_87_fu_2807_p3),14));
    zext_ln265_3_fu_2833_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_88_fu_2825_p3),13));
    zext_ln265_4_fu_2845_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_89_fu_2837_p3),13));
    zext_ln265_5_fu_2867_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j17_0_reg_1637),13));
    zext_ln265_6_fu_2871_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j17_0_reg_1637),14));
    zext_ln265_7_fu_2880_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln265_3_fu_2875_p2),64));
    zext_ln265_8_fu_2890_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln265_4_reg_3830),64));
    zext_ln265_fu_2785_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i16_0_reg_1626),5));
    zext_ln285_fu_3103_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_93_fu_3095_p3),8));
    zext_ln288_1_fu_3085_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_92_fu_3077_p3),9));
    zext_ln288_2_fu_3133_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_97_fu_3123_p4),8));
    zext_ln288_3_fu_3137_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_97_fu_3123_p4),9));
    zext_ln288_4_fu_3157_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln288_1_fu_3152_p2),64));
    zext_ln288_fu_3073_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i18_0_reg_1693),9));
end behav;
