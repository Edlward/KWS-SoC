-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity calc_stft is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    frames_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    frames_ce0 : OUT STD_LOGIC;
    frames_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    frames_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    frames_ce1 : OUT STD_LOGIC;
    frames_we1 : OUT STD_LOGIC;
    frames_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    spectrogram_0_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    spectrogram_0_ce1 : OUT STD_LOGIC;
    spectrogram_0_we1 : OUT STD_LOGIC;
    spectrogram_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    spectrogram_1_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    spectrogram_1_ce1 : OUT STD_LOGIC;
    spectrogram_1_we1 : OUT STD_LOGIC;
    spectrogram_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    spectrogram_2_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    spectrogram_2_ce1 : OUT STD_LOGIC;
    spectrogram_2_we1 : OUT STD_LOGIC;
    spectrogram_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    spectrogram_3_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    spectrogram_3_ce1 : OUT STD_LOGIC;
    spectrogram_3_we1 : OUT STD_LOGIC;
    spectrogram_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    cosines_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    cosines_0_ce0 : OUT STD_LOGIC;
    cosines_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    cosines_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    cosines_1_ce0 : OUT STD_LOGIC;
    cosines_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    cosines_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    cosines_2_ce0 : OUT STD_LOGIC;
    cosines_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    cosines_3_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    cosines_3_ce0 : OUT STD_LOGIC;
    cosines_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    cosines_4_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    cosines_4_ce0 : OUT STD_LOGIC;
    cosines_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    cosines_5_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    cosines_5_ce0 : OUT STD_LOGIC;
    cosines_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    cosines_6_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    cosines_6_ce0 : OUT STD_LOGIC;
    cosines_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    cosines_7_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    cosines_7_ce0 : OUT STD_LOGIC;
    cosines_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    cosines_8_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    cosines_8_ce0 : OUT STD_LOGIC;
    cosines_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    cosines_9_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    cosines_9_ce0 : OUT STD_LOGIC;
    cosines_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    cosines_10_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    cosines_10_ce0 : OUT STD_LOGIC;
    cosines_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    cosines_11_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    cosines_11_ce0 : OUT STD_LOGIC;
    cosines_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    cosines_12_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    cosines_12_ce0 : OUT STD_LOGIC;
    cosines_12_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    cosines_13_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    cosines_13_ce0 : OUT STD_LOGIC;
    cosines_13_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    cosines_14_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    cosines_14_ce0 : OUT STD_LOGIC;
    cosines_14_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    cosines_15_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    cosines_15_ce0 : OUT STD_LOGIC;
    cosines_15_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    cosines_16_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    cosines_16_ce0 : OUT STD_LOGIC;
    cosines_16_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    cosines_17_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    cosines_17_ce0 : OUT STD_LOGIC;
    cosines_17_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    cosines_18_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    cosines_18_ce0 : OUT STD_LOGIC;
    cosines_18_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    cosines_19_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    cosines_19_ce0 : OUT STD_LOGIC;
    cosines_19_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of calc_stft is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (10 downto 0) := "00000010000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (10 downto 0) := "00000100000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (10 downto 0) := "00001000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (10 downto 0) := "00010000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (10 downto 0) := "00100000000";
    constant ap_ST_fsm_pp3_stage0 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv10_140 : STD_LOGIC_VECTOR (9 downto 0) := "0101000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv14_3D40 : STD_LOGIC_VECTOR (13 downto 0) := "11110101000000";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv9_140 : STD_LOGIC_VECTOR (8 downto 0) := "101000000";
    constant ap_const_lv9_14 : STD_LOGIC_VECTOR (8 downto 0) := "000010100";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv6_31 : STD_LOGIC_VECTOR (5 downto 0) := "110001";
    constant ap_const_lv10_200 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv9_101 : STD_LOGIC_VECTOR (8 downto 0) := "100000001";
    constant ap_const_lv20_334 : STD_LOGIC_VECTOR (19 downto 0) := "00000000001100110100";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten_reg_874 : STD_LOGIC_VECTOR (13 downto 0);
    signal i_0_reg_885 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_0_reg_896 : STD_LOGIC_VECTOR (8 downto 0);
    signal j2_0_reg_918 : STD_LOGIC_VECTOR (8 downto 0);
    signal j4_0_reg_940 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_975_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_983 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln56_reg_1419 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln56_reg_1419_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state28_pp3_stage0_iter0 : BOOLEAN;
    signal ap_block_state29_pp3_stage0_iter1 : BOOLEAN;
    signal ap_block_state30_pp3_stage0_iter2 : BOOLEAN;
    signal ap_block_state31_pp3_stage0_iter3 : BOOLEAN;
    signal ap_block_state32_pp3_stage0_iter4 : BOOLEAN;
    signal ap_block_state33_pp3_stage0_iter5 : BOOLEAN;
    signal ap_block_state34_pp3_stage0_iter6 : BOOLEAN;
    signal ap_block_state35_pp3_stage0_iter7 : BOOLEAN;
    signal ap_block_state36_pp3_stage0_iter8 : BOOLEAN;
    signal ap_block_state37_pp3_stage0_iter9 : BOOLEAN;
    signal ap_block_state38_pp3_stage0_iter10 : BOOLEAN;
    signal ap_block_state39_pp3_stage0_iter11 : BOOLEAN;
    signal ap_block_pp3_stage0_11001 : BOOLEAN;
    signal ap_enable_reg_pp3_iter5 : STD_LOGIC := '0';
    signal icmp_ln56_fu_989_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal icmp_ln56_reg_1419_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln56_reg_1419_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln56_reg_1419_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln56_reg_1419_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln56_reg_1419_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln56_reg_1419_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln56_reg_1419_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln56_reg_1419_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln56_reg_1419_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln56_reg_1419_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln56_reg_1419_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln56_reg_1419_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln56_reg_1419_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln56_reg_1419_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln56_reg_1419_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln56_fu_995_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal select_ln63_fu_1013_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln63_reg_1428 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln63_reg_1428_pp0_iter1_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln63_reg_1428_pp0_iter2_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln63_reg_1428_pp0_iter3_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln63_reg_1428_pp0_iter4_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln63_reg_1428_pp0_iter5_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln63_reg_1428_pp0_iter6_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln63_reg_1428_pp0_iter7_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln63_reg_1428_pp0_iter8_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln63_reg_1428_pp0_iter9_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln63_1_fu_1021_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln63_1_reg_1435 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln63_1_reg_1435_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln63_1_reg_1435_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln63_1_reg_1435_pp0_iter3_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln63_1_reg_1435_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln63_1_reg_1435_pp0_iter5_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln63_1_reg_1435_pp0_iter6_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln63_1_reg_1435_pp0_iter7_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln63_1_reg_1435_pp0_iter8_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln63_1_reg_1435_pp0_iter9_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal j_fu_1035_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal frames_addr_reg_1447 : STD_LOGIC_VECTOR (13 downto 0);
    signal frames_addr_reg_1447_pp0_iter11_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal frames_addr_reg_1447_pp0_iter12_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal frames_addr_reg_1447_pp0_iter13_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal frames_addr_reg_1447_pp0_iter14_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal frames_addr_reg_1447_pp0_iter15_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal frames_addr_reg_1447_pp0_iter16_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_140_reg_1453 : STD_LOGIC_VECTOR (5 downto 0);
    signal frames_load_reg_1558 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal tmp_317_fu_1126_p22 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_317_reg_1563 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln69_fu_1172_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal i_48_fu_1178_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_48_reg_1572 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln77_3_fu_1208_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln77_3_reg_1577 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln77_fu_1216_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln77_reg_1582 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln99_fu_1222_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln99_reg_1587 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln74_fu_1228_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state22_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state23_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal j_20_fu_1234_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal trunc_ln77_fu_1254_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln77_reg_1606 : STD_LOGIC_VECTOR (1 downto 0);
    signal frames_temp_0_addr_reg_1610 : STD_LOGIC_VECTOR (6 downto 0);
    signal frames_temp_1_addr_reg_1615 : STD_LOGIC_VECTOR (6 downto 0);
    signal frames_temp_2_addr_reg_1620 : STD_LOGIC_VECTOR (6 downto 0);
    signal frames_temp_3_addr_reg_1625 : STD_LOGIC_VECTOR (6 downto 0);
    signal j_21_fu_1312_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal icmp_ln82_fu_1280_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln96_fu_1318_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp3_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage0 : signal is "none";
    signal j_22_fu_1324_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_enable_reg_pp3_iter0 : STD_LOGIC := '0';
    signal trunc_ln99_fu_1330_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln99_reg_1650 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln99_reg_1650_pp3_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln99_reg_1650_pp3_iter2_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln99_reg_1650_pp3_iter3_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln99_reg_1650_pp3_iter4_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln99_reg_1650_pp3_iter5_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln99_reg_1650_pp3_iter6_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln99_reg_1650_pp3_iter7_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln99_reg_1650_pp3_iter8_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln99_reg_1650_pp3_iter9_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln99_reg_1650_pp3_iter10_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal lshr_ln5_fu_1334_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln5_reg_1655 : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln5_reg_1655_pp3_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln5_reg_1655_pp3_iter2_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln5_reg_1655_pp3_iter3_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln5_reg_1655_pp3_iter4_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln5_reg_1655_pp3_iter5_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln5_reg_1655_pp3_iter6_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln5_reg_1655_pp3_iter7_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln5_reg_1655_pp3_iter8_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln5_reg_1655_pp3_iter9_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln5_reg_1655_pp3_iter10_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_318_fu_1359_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_318_reg_1700 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_319_fu_1373_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_319_reg_1706 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_979_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_312_reg_1712 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_971_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_313_reg_1717 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state22 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal grp_kfft_fu_951_ap_ready : STD_LOGIC;
    signal grp_kfft_fu_951_ap_done : STD_LOGIC;
    signal ap_block_pp3_stage0_subdone : BOOLEAN;
    signal ap_condition_pp3_exit_iter0_state28 : STD_LOGIC;
    signal ap_enable_reg_pp3_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter11 : STD_LOGIC := '0';
    signal fft_input_i_0_ce0 : STD_LOGIC;
    signal fft_input_i_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal fft_input_i_0_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal fft_input_i_0_ce1 : STD_LOGIC;
    signal fft_input_i_0_we1 : STD_LOGIC;
    signal fft_input_i_0_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal fft_input_i_1_ce0 : STD_LOGIC;
    signal fft_input_i_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal fft_input_i_1_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal fft_input_i_1_ce1 : STD_LOGIC;
    signal fft_input_i_1_we1 : STD_LOGIC;
    signal fft_input_i_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal fft_input_i_1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal fft_input_i_2_ce0 : STD_LOGIC;
    signal fft_input_i_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal fft_input_i_2_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal fft_input_i_2_ce1 : STD_LOGIC;
    signal fft_input_i_2_we1 : STD_LOGIC;
    signal fft_input_i_2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal fft_input_i_3_ce0 : STD_LOGIC;
    signal fft_input_i_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal fft_input_i_3_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal fft_input_i_3_ce1 : STD_LOGIC;
    signal fft_input_i_3_we1 : STD_LOGIC;
    signal fft_input_i_3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal fft_frame_r_temp_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal fft_frame_r_temp_0_ce0 : STD_LOGIC;
    signal fft_frame_r_temp_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal fft_frame_r_temp_0_ce1 : STD_LOGIC;
    signal fft_frame_r_temp_0_we1 : STD_LOGIC;
    signal fft_frame_r_temp_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal fft_frame_r_temp_1_ce0 : STD_LOGIC;
    signal fft_frame_r_temp_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal fft_frame_r_temp_1_ce1 : STD_LOGIC;
    signal fft_frame_r_temp_1_we1 : STD_LOGIC;
    signal fft_frame_r_temp_2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal fft_frame_r_temp_2_ce0 : STD_LOGIC;
    signal fft_frame_r_temp_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal fft_frame_r_temp_2_ce1 : STD_LOGIC;
    signal fft_frame_r_temp_2_we1 : STD_LOGIC;
    signal fft_frame_r_temp_3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal fft_frame_r_temp_3_ce0 : STD_LOGIC;
    signal fft_frame_r_temp_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal fft_frame_r_temp_3_ce1 : STD_LOGIC;
    signal fft_frame_r_temp_3_we1 : STD_LOGIC;
    signal fft_frame_i_temp_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal fft_frame_i_temp_0_ce0 : STD_LOGIC;
    signal fft_frame_i_temp_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal fft_frame_i_temp_0_ce1 : STD_LOGIC;
    signal fft_frame_i_temp_0_we1 : STD_LOGIC;
    signal fft_frame_i_temp_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal fft_frame_i_temp_1_ce0 : STD_LOGIC;
    signal fft_frame_i_temp_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal fft_frame_i_temp_1_ce1 : STD_LOGIC;
    signal fft_frame_i_temp_1_we1 : STD_LOGIC;
    signal fft_frame_i_temp_2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal fft_frame_i_temp_2_ce0 : STD_LOGIC;
    signal fft_frame_i_temp_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal fft_frame_i_temp_2_ce1 : STD_LOGIC;
    signal fft_frame_i_temp_2_we1 : STD_LOGIC;
    signal fft_frame_i_temp_3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal fft_frame_i_temp_3_ce0 : STD_LOGIC;
    signal fft_frame_i_temp_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal fft_frame_i_temp_3_ce1 : STD_LOGIC;
    signal fft_frame_i_temp_3_we1 : STD_LOGIC;
    signal frames_temp_0_ce0 : STD_LOGIC;
    signal frames_temp_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal frames_temp_0_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal frames_temp_0_ce1 : STD_LOGIC;
    signal frames_temp_0_we1 : STD_LOGIC;
    signal frames_temp_0_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal frames_temp_1_ce0 : STD_LOGIC;
    signal frames_temp_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal frames_temp_1_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal frames_temp_1_ce1 : STD_LOGIC;
    signal frames_temp_1_we1 : STD_LOGIC;
    signal frames_temp_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal frames_temp_1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal frames_temp_2_ce0 : STD_LOGIC;
    signal frames_temp_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal frames_temp_2_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal frames_temp_2_ce1 : STD_LOGIC;
    signal frames_temp_2_we1 : STD_LOGIC;
    signal frames_temp_2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal frames_temp_3_ce0 : STD_LOGIC;
    signal frames_temp_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal frames_temp_3_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal frames_temp_3_ce1 : STD_LOGIC;
    signal frames_temp_3_we1 : STD_LOGIC;
    signal frames_temp_3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kfft_fu_951_ap_start : STD_LOGIC;
    signal grp_kfft_fu_951_ap_idle : STD_LOGIC;
    signal grp_kfft_fu_951_pr_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_kfft_fu_951_pr_0_ce0 : STD_LOGIC;
    signal grp_kfft_fu_951_pr_0_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_kfft_fu_951_pr_0_ce1 : STD_LOGIC;
    signal grp_kfft_fu_951_pr_0_we1 : STD_LOGIC;
    signal grp_kfft_fu_951_pr_0_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kfft_fu_951_pr_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_kfft_fu_951_pr_1_ce0 : STD_LOGIC;
    signal grp_kfft_fu_951_pr_1_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_kfft_fu_951_pr_1_ce1 : STD_LOGIC;
    signal grp_kfft_fu_951_pr_1_we1 : STD_LOGIC;
    signal grp_kfft_fu_951_pr_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kfft_fu_951_pr_2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_kfft_fu_951_pr_2_ce0 : STD_LOGIC;
    signal grp_kfft_fu_951_pr_2_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_kfft_fu_951_pr_2_ce1 : STD_LOGIC;
    signal grp_kfft_fu_951_pr_2_we1 : STD_LOGIC;
    signal grp_kfft_fu_951_pr_2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kfft_fu_951_pr_3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_kfft_fu_951_pr_3_ce0 : STD_LOGIC;
    signal grp_kfft_fu_951_pr_3_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_kfft_fu_951_pr_3_ce1 : STD_LOGIC;
    signal grp_kfft_fu_951_pr_3_we1 : STD_LOGIC;
    signal grp_kfft_fu_951_pr_3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kfft_fu_951_pi_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_kfft_fu_951_pi_0_ce0 : STD_LOGIC;
    signal grp_kfft_fu_951_pi_0_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_kfft_fu_951_pi_0_ce1 : STD_LOGIC;
    signal grp_kfft_fu_951_pi_0_we1 : STD_LOGIC;
    signal grp_kfft_fu_951_pi_0_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kfft_fu_951_pi_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_kfft_fu_951_pi_1_ce0 : STD_LOGIC;
    signal grp_kfft_fu_951_pi_1_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_kfft_fu_951_pi_1_ce1 : STD_LOGIC;
    signal grp_kfft_fu_951_pi_1_we1 : STD_LOGIC;
    signal grp_kfft_fu_951_pi_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kfft_fu_951_pi_2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_kfft_fu_951_pi_2_ce0 : STD_LOGIC;
    signal grp_kfft_fu_951_pi_2_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_kfft_fu_951_pi_2_ce1 : STD_LOGIC;
    signal grp_kfft_fu_951_pi_2_we1 : STD_LOGIC;
    signal grp_kfft_fu_951_pi_2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kfft_fu_951_pi_3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_kfft_fu_951_pi_3_ce0 : STD_LOGIC;
    signal grp_kfft_fu_951_pi_3_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_kfft_fu_951_pi_3_ce1 : STD_LOGIC;
    signal grp_kfft_fu_951_pi_3_we1 : STD_LOGIC;
    signal grp_kfft_fu_951_pi_3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kfft_fu_951_fr_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_kfft_fu_951_fr_0_ce0 : STD_LOGIC;
    signal grp_kfft_fu_951_fr_0_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_kfft_fu_951_fr_0_ce1 : STD_LOGIC;
    signal grp_kfft_fu_951_fr_0_we1 : STD_LOGIC;
    signal grp_kfft_fu_951_fr_0_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kfft_fu_951_fr_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_kfft_fu_951_fr_1_ce0 : STD_LOGIC;
    signal grp_kfft_fu_951_fr_1_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_kfft_fu_951_fr_1_ce1 : STD_LOGIC;
    signal grp_kfft_fu_951_fr_1_we1 : STD_LOGIC;
    signal grp_kfft_fu_951_fr_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kfft_fu_951_fr_2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_kfft_fu_951_fr_2_ce0 : STD_LOGIC;
    signal grp_kfft_fu_951_fr_2_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_kfft_fu_951_fr_2_ce1 : STD_LOGIC;
    signal grp_kfft_fu_951_fr_2_we1 : STD_LOGIC;
    signal grp_kfft_fu_951_fr_2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kfft_fu_951_fr_3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_kfft_fu_951_fr_3_ce0 : STD_LOGIC;
    signal grp_kfft_fu_951_fr_3_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_kfft_fu_951_fr_3_ce1 : STD_LOGIC;
    signal grp_kfft_fu_951_fr_3_we1 : STD_LOGIC;
    signal grp_kfft_fu_951_fr_3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kfft_fu_951_fi_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_kfft_fu_951_fi_0_ce0 : STD_LOGIC;
    signal grp_kfft_fu_951_fi_0_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_kfft_fu_951_fi_0_ce1 : STD_LOGIC;
    signal grp_kfft_fu_951_fi_0_we1 : STD_LOGIC;
    signal grp_kfft_fu_951_fi_0_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kfft_fu_951_fi_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_kfft_fu_951_fi_1_ce0 : STD_LOGIC;
    signal grp_kfft_fu_951_fi_1_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_kfft_fu_951_fi_1_ce1 : STD_LOGIC;
    signal grp_kfft_fu_951_fi_1_we1 : STD_LOGIC;
    signal grp_kfft_fu_951_fi_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kfft_fu_951_fi_2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_kfft_fu_951_fi_2_ce0 : STD_LOGIC;
    signal grp_kfft_fu_951_fi_2_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_kfft_fu_951_fi_2_ce1 : STD_LOGIC;
    signal grp_kfft_fu_951_fi_2_we1 : STD_LOGIC;
    signal grp_kfft_fu_951_fi_2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kfft_fu_951_fi_3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_kfft_fu_951_fi_3_ce0 : STD_LOGIC;
    signal grp_kfft_fu_951_fi_3_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_kfft_fu_951_fi_3_ce1 : STD_LOGIC;
    signal grp_kfft_fu_951_fi_3_we1 : STD_LOGIC;
    signal grp_kfft_fu_951_fi_3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_i_0_phi_fu_889_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal i1_0_reg_907 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal j3_0_reg_929 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal grp_kfft_fu_951_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal zext_ln63_5_fu_1078_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln63_2_fu_1098_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln77_6_fu_1249_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal zext_ln77_2_fu_1268_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln85_fu_1300_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln99_1_fu_1344_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp3_stage0 : BOOLEAN;
    signal zext_ln99_3_fu_1395_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln99_4_fu_1405_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln85_fu_1286_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_975_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_975_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln59_fu_1007_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_1001_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1029_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_119_fu_1041_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_123_fu_1052_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln63_1_fu_1059_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln63_fu_1048_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln63_fu_1063_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln63_4_fu_1069_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln63_1_fu_1072_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln63_fu_1412_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln63_fu_1095_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1029_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_317_fu_1126_p21 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_124_fu_1188_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_125_fu_1200_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln77_4_fu_1212_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln77_1_fu_1196_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln77_fu_1184_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln77_5_fu_1240_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln77_1_fu_1244_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal lshr_ln_fu_1258_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln4_fu_1290_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln99_fu_1356_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln99_2_fu_1387_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln99_1_fu_1390_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln99_2_fu_1400_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln63_fu_1412_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln63_fu_1412_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp3 : STD_LOGIC;
    signal ap_enable_pp3 : STD_LOGIC;
    signal mul_ln63_fu_1412_p00 : STD_LOGIC_VECTOR (19 downto 0);

    component kfft IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        pr_0_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        pr_0_ce0 : OUT STD_LOGIC;
        pr_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pr_0_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        pr_0_ce1 : OUT STD_LOGIC;
        pr_0_we1 : OUT STD_LOGIC;
        pr_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        pr_1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        pr_1_ce0 : OUT STD_LOGIC;
        pr_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pr_1_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        pr_1_ce1 : OUT STD_LOGIC;
        pr_1_we1 : OUT STD_LOGIC;
        pr_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        pr_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        pr_2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        pr_2_ce0 : OUT STD_LOGIC;
        pr_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pr_2_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        pr_2_ce1 : OUT STD_LOGIC;
        pr_2_we1 : OUT STD_LOGIC;
        pr_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        pr_3_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        pr_3_ce0 : OUT STD_LOGIC;
        pr_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pr_3_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        pr_3_ce1 : OUT STD_LOGIC;
        pr_3_we1 : OUT STD_LOGIC;
        pr_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        pi_0_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        pi_0_ce0 : OUT STD_LOGIC;
        pi_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pi_0_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        pi_0_ce1 : OUT STD_LOGIC;
        pi_0_we1 : OUT STD_LOGIC;
        pi_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        pi_1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        pi_1_ce0 : OUT STD_LOGIC;
        pi_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pi_1_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        pi_1_ce1 : OUT STD_LOGIC;
        pi_1_we1 : OUT STD_LOGIC;
        pi_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        pi_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        pi_2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        pi_2_ce0 : OUT STD_LOGIC;
        pi_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pi_2_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        pi_2_ce1 : OUT STD_LOGIC;
        pi_2_we1 : OUT STD_LOGIC;
        pi_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        pi_3_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        pi_3_ce0 : OUT STD_LOGIC;
        pi_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pi_3_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        pi_3_ce1 : OUT STD_LOGIC;
        pi_3_we1 : OUT STD_LOGIC;
        pi_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        fr_0_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        fr_0_ce0 : OUT STD_LOGIC;
        fr_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        fr_0_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        fr_0_ce1 : OUT STD_LOGIC;
        fr_0_we1 : OUT STD_LOGIC;
        fr_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        fr_1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        fr_1_ce0 : OUT STD_LOGIC;
        fr_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        fr_1_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        fr_1_ce1 : OUT STD_LOGIC;
        fr_1_we1 : OUT STD_LOGIC;
        fr_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        fr_2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        fr_2_ce0 : OUT STD_LOGIC;
        fr_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        fr_2_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        fr_2_ce1 : OUT STD_LOGIC;
        fr_2_we1 : OUT STD_LOGIC;
        fr_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        fr_3_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        fr_3_ce0 : OUT STD_LOGIC;
        fr_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        fr_3_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        fr_3_ce1 : OUT STD_LOGIC;
        fr_3_we1 : OUT STD_LOGIC;
        fr_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        fi_0_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        fi_0_ce0 : OUT STD_LOGIC;
        fi_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        fi_0_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        fi_0_ce1 : OUT STD_LOGIC;
        fi_0_we1 : OUT STD_LOGIC;
        fi_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        fi_1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        fi_1_ce0 : OUT STD_LOGIC;
        fi_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        fi_1_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        fi_1_ce1 : OUT STD_LOGIC;
        fi_1_we1 : OUT STD_LOGIC;
        fi_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        fi_2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        fi_2_ce0 : OUT STD_LOGIC;
        fi_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        fi_2_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        fi_2_ce1 : OUT STD_LOGIC;
        fi_2_we1 : OUT STD_LOGIC;
        fi_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        fi_3_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        fi_3_ce0 : OUT STD_LOGIC;
        fi_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        fi_3_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        fi_3_ce1 : OUT STD_LOGIC;
        fi_3_we1 : OUT STD_LOGIC;
        fi_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component kws_fadd_32ns_32nwdI IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component kws_fmul_32ns_32neOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component kws_urem_9ns_6ns_xdS IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component kws_mux_2016_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        din17_WIDTH : INTEGER;
        din18_WIDTH : INTEGER;
        din19_WIDTH : INTEGER;
        din20_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (31 downto 0);
        din10 : IN STD_LOGIC_VECTOR (31 downto 0);
        din11 : IN STD_LOGIC_VECTOR (31 downto 0);
        din12 : IN STD_LOGIC_VECTOR (31 downto 0);
        din13 : IN STD_LOGIC_VECTOR (31 downto 0);
        din14 : IN STD_LOGIC_VECTOR (31 downto 0);
        din15 : IN STD_LOGIC_VECTOR (31 downto 0);
        din16 : IN STD_LOGIC_VECTOR (31 downto 0);
        din17 : IN STD_LOGIC_VECTOR (31 downto 0);
        din18 : IN STD_LOGIC_VECTOR (31 downto 0);
        din19 : IN STD_LOGIC_VECTOR (31 downto 0);
        din20 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component kws_mux_416_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component kws_mul_mul_9ns_1yd2 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component calc_stft_fft_inpg8j IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component calc_stft_fft_inphbi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    fft_input_i_0_U : component calc_stft_fft_inpg8j
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_kfft_fu_951_pi_0_address0,
        ce0 => fft_input_i_0_ce0,
        q0 => fft_input_i_0_q0,
        address1 => fft_input_i_0_address1,
        ce1 => fft_input_i_0_ce1,
        we1 => fft_input_i_0_we1,
        d1 => fft_input_i_0_d1);

    fft_input_i_1_U : component calc_stft_fft_inphbi
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_kfft_fu_951_pi_1_address0,
        ce0 => fft_input_i_1_ce0,
        q0 => fft_input_i_1_q0,
        address1 => fft_input_i_1_address1,
        ce1 => fft_input_i_1_ce1,
        we1 => fft_input_i_1_we1,
        d1 => fft_input_i_1_d1,
        q1 => fft_input_i_1_q1);

    fft_input_i_2_U : component calc_stft_fft_inpg8j
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_kfft_fu_951_pi_2_address0,
        ce0 => fft_input_i_2_ce0,
        q0 => fft_input_i_2_q0,
        address1 => fft_input_i_2_address1,
        ce1 => fft_input_i_2_ce1,
        we1 => fft_input_i_2_we1,
        d1 => fft_input_i_2_d1);

    fft_input_i_3_U : component calc_stft_fft_inpg8j
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_kfft_fu_951_pi_3_address0,
        ce0 => fft_input_i_3_ce0,
        q0 => fft_input_i_3_q0,
        address1 => fft_input_i_3_address1,
        ce1 => fft_input_i_3_ce1,
        we1 => fft_input_i_3_we1,
        d1 => fft_input_i_3_d1);

    fft_frame_r_temp_0_U : component calc_stft_fft_inpg8j
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => fft_frame_r_temp_0_address0,
        ce0 => fft_frame_r_temp_0_ce0,
        q0 => fft_frame_r_temp_0_q0,
        address1 => grp_kfft_fu_951_fr_0_address1,
        ce1 => fft_frame_r_temp_0_ce1,
        we1 => fft_frame_r_temp_0_we1,
        d1 => grp_kfft_fu_951_fr_0_d1);

    fft_frame_r_temp_1_U : component calc_stft_fft_inpg8j
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => fft_frame_r_temp_1_address0,
        ce0 => fft_frame_r_temp_1_ce0,
        q0 => fft_frame_r_temp_1_q0,
        address1 => grp_kfft_fu_951_fr_1_address1,
        ce1 => fft_frame_r_temp_1_ce1,
        we1 => fft_frame_r_temp_1_we1,
        d1 => grp_kfft_fu_951_fr_1_d1);

    fft_frame_r_temp_2_U : component calc_stft_fft_inpg8j
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => fft_frame_r_temp_2_address0,
        ce0 => fft_frame_r_temp_2_ce0,
        q0 => fft_frame_r_temp_2_q0,
        address1 => grp_kfft_fu_951_fr_2_address1,
        ce1 => fft_frame_r_temp_2_ce1,
        we1 => fft_frame_r_temp_2_we1,
        d1 => grp_kfft_fu_951_fr_2_d1);

    fft_frame_r_temp_3_U : component calc_stft_fft_inpg8j
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => fft_frame_r_temp_3_address0,
        ce0 => fft_frame_r_temp_3_ce0,
        q0 => fft_frame_r_temp_3_q0,
        address1 => grp_kfft_fu_951_fr_3_address1,
        ce1 => fft_frame_r_temp_3_ce1,
        we1 => fft_frame_r_temp_3_we1,
        d1 => grp_kfft_fu_951_fr_3_d1);

    fft_frame_i_temp_0_U : component calc_stft_fft_inpg8j
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => fft_frame_i_temp_0_address0,
        ce0 => fft_frame_i_temp_0_ce0,
        q0 => fft_frame_i_temp_0_q0,
        address1 => grp_kfft_fu_951_fi_0_address1,
        ce1 => fft_frame_i_temp_0_ce1,
        we1 => fft_frame_i_temp_0_we1,
        d1 => grp_kfft_fu_951_fi_0_d1);

    fft_frame_i_temp_1_U : component calc_stft_fft_inpg8j
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => fft_frame_i_temp_1_address0,
        ce0 => fft_frame_i_temp_1_ce0,
        q0 => fft_frame_i_temp_1_q0,
        address1 => grp_kfft_fu_951_fi_1_address1,
        ce1 => fft_frame_i_temp_1_ce1,
        we1 => fft_frame_i_temp_1_we1,
        d1 => grp_kfft_fu_951_fi_1_d1);

    fft_frame_i_temp_2_U : component calc_stft_fft_inpg8j
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => fft_frame_i_temp_2_address0,
        ce0 => fft_frame_i_temp_2_ce0,
        q0 => fft_frame_i_temp_2_q0,
        address1 => grp_kfft_fu_951_fi_2_address1,
        ce1 => fft_frame_i_temp_2_ce1,
        we1 => fft_frame_i_temp_2_we1,
        d1 => grp_kfft_fu_951_fi_2_d1);

    fft_frame_i_temp_3_U : component calc_stft_fft_inpg8j
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => fft_frame_i_temp_3_address0,
        ce0 => fft_frame_i_temp_3_ce0,
        q0 => fft_frame_i_temp_3_q0,
        address1 => grp_kfft_fu_951_fi_3_address1,
        ce1 => fft_frame_i_temp_3_ce1,
        we1 => fft_frame_i_temp_3_we1,
        d1 => grp_kfft_fu_951_fi_3_d1);

    frames_temp_0_U : component calc_stft_fft_inpg8j
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_kfft_fu_951_pr_0_address0,
        ce0 => frames_temp_0_ce0,
        q0 => frames_temp_0_q0,
        address1 => frames_temp_0_address1,
        ce1 => frames_temp_0_ce1,
        we1 => frames_temp_0_we1,
        d1 => frames_temp_0_d1);

    frames_temp_1_U : component calc_stft_fft_inphbi
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_kfft_fu_951_pr_1_address0,
        ce0 => frames_temp_1_ce0,
        q0 => frames_temp_1_q0,
        address1 => frames_temp_1_address1,
        ce1 => frames_temp_1_ce1,
        we1 => frames_temp_1_we1,
        d1 => frames_temp_1_d1,
        q1 => frames_temp_1_q1);

    frames_temp_2_U : component calc_stft_fft_inpg8j
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_kfft_fu_951_pr_2_address0,
        ce0 => frames_temp_2_ce0,
        q0 => frames_temp_2_q0,
        address1 => frames_temp_2_address1,
        ce1 => frames_temp_2_ce1,
        we1 => frames_temp_2_we1,
        d1 => frames_temp_2_d1);

    frames_temp_3_U : component calc_stft_fft_inpg8j
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_kfft_fu_951_pr_3_address0,
        ce0 => frames_temp_3_ce0,
        q0 => frames_temp_3_q0,
        address1 => frames_temp_3_address1,
        ce1 => frames_temp_3_ce1,
        we1 => frames_temp_3_we1,
        d1 => frames_temp_3_d1);

    grp_kfft_fu_951 : component kfft
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_kfft_fu_951_ap_start,
        ap_done => grp_kfft_fu_951_ap_done,
        ap_idle => grp_kfft_fu_951_ap_idle,
        ap_ready => grp_kfft_fu_951_ap_ready,
        pr_0_address0 => grp_kfft_fu_951_pr_0_address0,
        pr_0_ce0 => grp_kfft_fu_951_pr_0_ce0,
        pr_0_q0 => frames_temp_0_q0,
        pr_0_address1 => grp_kfft_fu_951_pr_0_address1,
        pr_0_ce1 => grp_kfft_fu_951_pr_0_ce1,
        pr_0_we1 => grp_kfft_fu_951_pr_0_we1,
        pr_0_d1 => grp_kfft_fu_951_pr_0_d1,
        pr_1_address0 => grp_kfft_fu_951_pr_1_address0,
        pr_1_ce0 => grp_kfft_fu_951_pr_1_ce0,
        pr_1_q0 => frames_temp_1_q0,
        pr_1_address1 => grp_kfft_fu_951_pr_1_address1,
        pr_1_ce1 => grp_kfft_fu_951_pr_1_ce1,
        pr_1_we1 => grp_kfft_fu_951_pr_1_we1,
        pr_1_d1 => grp_kfft_fu_951_pr_1_d1,
        pr_1_q1 => frames_temp_1_q1,
        pr_2_address0 => grp_kfft_fu_951_pr_2_address0,
        pr_2_ce0 => grp_kfft_fu_951_pr_2_ce0,
        pr_2_q0 => frames_temp_2_q0,
        pr_2_address1 => grp_kfft_fu_951_pr_2_address1,
        pr_2_ce1 => grp_kfft_fu_951_pr_2_ce1,
        pr_2_we1 => grp_kfft_fu_951_pr_2_we1,
        pr_2_d1 => grp_kfft_fu_951_pr_2_d1,
        pr_3_address0 => grp_kfft_fu_951_pr_3_address0,
        pr_3_ce0 => grp_kfft_fu_951_pr_3_ce0,
        pr_3_q0 => frames_temp_3_q0,
        pr_3_address1 => grp_kfft_fu_951_pr_3_address1,
        pr_3_ce1 => grp_kfft_fu_951_pr_3_ce1,
        pr_3_we1 => grp_kfft_fu_951_pr_3_we1,
        pr_3_d1 => grp_kfft_fu_951_pr_3_d1,
        pi_0_address0 => grp_kfft_fu_951_pi_0_address0,
        pi_0_ce0 => grp_kfft_fu_951_pi_0_ce0,
        pi_0_q0 => fft_input_i_0_q0,
        pi_0_address1 => grp_kfft_fu_951_pi_0_address1,
        pi_0_ce1 => grp_kfft_fu_951_pi_0_ce1,
        pi_0_we1 => grp_kfft_fu_951_pi_0_we1,
        pi_0_d1 => grp_kfft_fu_951_pi_0_d1,
        pi_1_address0 => grp_kfft_fu_951_pi_1_address0,
        pi_1_ce0 => grp_kfft_fu_951_pi_1_ce0,
        pi_1_q0 => fft_input_i_1_q0,
        pi_1_address1 => grp_kfft_fu_951_pi_1_address1,
        pi_1_ce1 => grp_kfft_fu_951_pi_1_ce1,
        pi_1_we1 => grp_kfft_fu_951_pi_1_we1,
        pi_1_d1 => grp_kfft_fu_951_pi_1_d1,
        pi_1_q1 => fft_input_i_1_q1,
        pi_2_address0 => grp_kfft_fu_951_pi_2_address0,
        pi_2_ce0 => grp_kfft_fu_951_pi_2_ce0,
        pi_2_q0 => fft_input_i_2_q0,
        pi_2_address1 => grp_kfft_fu_951_pi_2_address1,
        pi_2_ce1 => grp_kfft_fu_951_pi_2_ce1,
        pi_2_we1 => grp_kfft_fu_951_pi_2_we1,
        pi_2_d1 => grp_kfft_fu_951_pi_2_d1,
        pi_3_address0 => grp_kfft_fu_951_pi_3_address0,
        pi_3_ce0 => grp_kfft_fu_951_pi_3_ce0,
        pi_3_q0 => fft_input_i_3_q0,
        pi_3_address1 => grp_kfft_fu_951_pi_3_address1,
        pi_3_ce1 => grp_kfft_fu_951_pi_3_ce1,
        pi_3_we1 => grp_kfft_fu_951_pi_3_we1,
        pi_3_d1 => grp_kfft_fu_951_pi_3_d1,
        fr_0_address0 => grp_kfft_fu_951_fr_0_address0,
        fr_0_ce0 => grp_kfft_fu_951_fr_0_ce0,
        fr_0_q0 => fft_frame_r_temp_0_q0,
        fr_0_address1 => grp_kfft_fu_951_fr_0_address1,
        fr_0_ce1 => grp_kfft_fu_951_fr_0_ce1,
        fr_0_we1 => grp_kfft_fu_951_fr_0_we1,
        fr_0_d1 => grp_kfft_fu_951_fr_0_d1,
        fr_1_address0 => grp_kfft_fu_951_fr_1_address0,
        fr_1_ce0 => grp_kfft_fu_951_fr_1_ce0,
        fr_1_q0 => fft_frame_r_temp_1_q0,
        fr_1_address1 => grp_kfft_fu_951_fr_1_address1,
        fr_1_ce1 => grp_kfft_fu_951_fr_1_ce1,
        fr_1_we1 => grp_kfft_fu_951_fr_1_we1,
        fr_1_d1 => grp_kfft_fu_951_fr_1_d1,
        fr_2_address0 => grp_kfft_fu_951_fr_2_address0,
        fr_2_ce0 => grp_kfft_fu_951_fr_2_ce0,
        fr_2_q0 => fft_frame_r_temp_2_q0,
        fr_2_address1 => grp_kfft_fu_951_fr_2_address1,
        fr_2_ce1 => grp_kfft_fu_951_fr_2_ce1,
        fr_2_we1 => grp_kfft_fu_951_fr_2_we1,
        fr_2_d1 => grp_kfft_fu_951_fr_2_d1,
        fr_3_address0 => grp_kfft_fu_951_fr_3_address0,
        fr_3_ce0 => grp_kfft_fu_951_fr_3_ce0,
        fr_3_q0 => fft_frame_r_temp_3_q0,
        fr_3_address1 => grp_kfft_fu_951_fr_3_address1,
        fr_3_ce1 => grp_kfft_fu_951_fr_3_ce1,
        fr_3_we1 => grp_kfft_fu_951_fr_3_we1,
        fr_3_d1 => grp_kfft_fu_951_fr_3_d1,
        fi_0_address0 => grp_kfft_fu_951_fi_0_address0,
        fi_0_ce0 => grp_kfft_fu_951_fi_0_ce0,
        fi_0_q0 => fft_frame_i_temp_0_q0,
        fi_0_address1 => grp_kfft_fu_951_fi_0_address1,
        fi_0_ce1 => grp_kfft_fu_951_fi_0_ce1,
        fi_0_we1 => grp_kfft_fu_951_fi_0_we1,
        fi_0_d1 => grp_kfft_fu_951_fi_0_d1,
        fi_1_address0 => grp_kfft_fu_951_fi_1_address0,
        fi_1_ce0 => grp_kfft_fu_951_fi_1_ce0,
        fi_1_q0 => fft_frame_i_temp_1_q0,
        fi_1_address1 => grp_kfft_fu_951_fi_1_address1,
        fi_1_ce1 => grp_kfft_fu_951_fi_1_ce1,
        fi_1_we1 => grp_kfft_fu_951_fi_1_we1,
        fi_1_d1 => grp_kfft_fu_951_fi_1_d1,
        fi_2_address0 => grp_kfft_fu_951_fi_2_address0,
        fi_2_ce0 => grp_kfft_fu_951_fi_2_ce0,
        fi_2_q0 => fft_frame_i_temp_2_q0,
        fi_2_address1 => grp_kfft_fu_951_fi_2_address1,
        fi_2_ce1 => grp_kfft_fu_951_fi_2_ce1,
        fi_2_we1 => grp_kfft_fu_951_fi_2_we1,
        fi_2_d1 => grp_kfft_fu_951_fi_2_d1,
        fi_3_address0 => grp_kfft_fu_951_fi_3_address0,
        fi_3_ce0 => grp_kfft_fu_951_fi_3_ce0,
        fi_3_q0 => fft_frame_i_temp_3_q0,
        fi_3_address1 => grp_kfft_fu_951_fi_3_address1,
        fi_3_ce1 => grp_kfft_fu_951_fi_3_ce1,
        fi_3_we1 => grp_kfft_fu_951_fi_3_we1,
        fi_3_d1 => grp_kfft_fu_951_fi_3_d1);

    kws_fadd_32ns_32nwdI_U41 : component kws_fadd_32ns_32nwdI
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_983,
        din1 => tmp_312_reg_1712,
        ce => ap_const_logic_1,
        dout => grp_fu_971_p2);

    kws_fmul_32ns_32neOg_U42 : component kws_fmul_32ns_32neOg
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_975_p0,
        din1 => grp_fu_975_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_975_p2);

    kws_fmul_32ns_32neOg_U43 : component kws_fmul_32ns_32neOg
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_319_reg_1706,
        din1 => tmp_319_reg_1706,
        ce => ap_const_logic_1,
        dout => grp_fu_979_p2);

    kws_urem_9ns_6ns_xdS_U44 : component kws_urem_9ns_6ns_xdS
    generic map (
        ID => 1,
        NUM_STAGE => 13,
        din0_WIDTH => 9,
        din1_WIDTH => 6,
        dout_WIDTH => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => select_ln63_fu_1013_p3,
        din1 => grp_fu_1029_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1029_p2);

    kws_mux_2016_32_1_1_U45 : component kws_mux_2016_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => cosines_0_q0,
        din1 => cosines_1_q0,
        din2 => cosines_2_q0,
        din3 => cosines_3_q0,
        din4 => cosines_4_q0,
        din5 => cosines_5_q0,
        din6 => cosines_6_q0,
        din7 => cosines_7_q0,
        din8 => cosines_8_q0,
        din9 => cosines_9_q0,
        din10 => cosines_10_q0,
        din11 => cosines_11_q0,
        din12 => cosines_12_q0,
        din13 => cosines_13_q0,
        din14 => cosines_14_q0,
        din15 => cosines_15_q0,
        din16 => cosines_16_q0,
        din17 => cosines_17_q0,
        din18 => cosines_18_q0,
        din19 => cosines_19_q0,
        din20 => tmp_317_fu_1126_p21,
        dout => tmp_317_fu_1126_p22);

    kws_mux_416_32_1_1_U46 : component kws_mux_416_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => fft_frame_r_temp_0_q0,
        din1 => fft_frame_r_temp_1_q0,
        din2 => fft_frame_r_temp_2_q0,
        din3 => fft_frame_r_temp_3_q0,
        din4 => zext_ln99_fu_1356_p1,
        dout => tmp_318_fu_1359_p6);

    kws_mux_416_32_1_1_U47 : component kws_mux_416_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => fft_frame_i_temp_0_q0,
        din1 => fft_frame_i_temp_1_q0,
        din2 => fft_frame_i_temp_2_q0,
        din3 => fft_frame_i_temp_3_q0,
        din4 => zext_ln99_fu_1356_p1,
        dout => tmp_319_fu_1373_p6);

    kws_mul_mul_9ns_1yd2_U48 : component kws_mul_mul_9ns_1yd2
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 11,
        dout_WIDTH => 20)
    port map (
        din0 => mul_ln63_fu_1412_p0,
        din1 => mul_ln63_fu_1412_p1,
        dout => mul_ln63_fu_1412_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state22) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln69_fu_1172_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state22))) then 
                    ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state22);
                elsif ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                elsif (((icmp_ln69_fu_1172_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp3_exit_iter0_state28) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
                elsif (((grp_kfft_fu_951_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp3_exit_iter0_state28)) then 
                        ap_enable_reg_pp3_iter1 <= (ap_const_logic_1 xor ap_condition_pp3_exit_iter0_state28);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter10 <= ap_enable_reg_pp3_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter11 <= ap_enable_reg_pp3_iter10;
                elsif (((grp_kfft_fu_951_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                    ap_enable_reg_pp3_iter11 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter5 <= ap_enable_reg_pp3_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter6 <= ap_enable_reg_pp3_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter7 <= ap_enable_reg_pp3_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter8 <= ap_enable_reg_pp3_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter9 <= ap_enable_reg_pp3_iter8;
                end if; 
            end if;
        end if;
    end process;


    grp_kfft_fu_951_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_kfft_fu_951_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                    grp_kfft_fu_951_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_kfft_fu_951_ap_ready = ap_const_logic_1)) then 
                    grp_kfft_fu_951_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i1_0_reg_907_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                i1_0_reg_907 <= ap_const_lv6_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
                i1_0_reg_907 <= i_48_reg_1572;
            end if; 
        end if;
    end process;

    i_0_reg_885_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln56_reg_1419 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                i_0_reg_885 <= select_ln63_1_reg_1435;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_0_reg_885 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_874_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln56_fu_989_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten_reg_874 <= add_ln56_fu_995_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten_reg_874 <= ap_const_lv14_0;
            end if; 
        end if;
    end process;

    j2_0_reg_918_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln74_fu_1228_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                j2_0_reg_918 <= j_20_fu_1234_p2;
            elsif (((icmp_ln69_fu_1172_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                j2_0_reg_918 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    j3_0_reg_929_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                j3_0_reg_929 <= ap_const_lv10_140;
            elsif (((icmp_ln82_fu_1280_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state25))) then 
                j3_0_reg_929 <= j_21_fu_1312_p2;
            end if; 
        end if;
    end process;

    j4_0_reg_940_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln96_fu_1318_p2 = ap_const_lv1_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
                j4_0_reg_940 <= j_22_fu_1324_p2;
            elsif (((grp_kfft_fu_951_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                j4_0_reg_940 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    j_0_reg_896_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln56_fu_989_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                j_0_reg_896 <= j_fu_1035_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                j_0_reg_896 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln69_fu_1172_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                    add_ln77_reg_1582(14 downto 6) <= add_ln77_fu_1216_p2(14 downto 6);
                add_ln99_reg_1587 <= add_ln99_fu_1222_p2;
                    zext_ln77_3_reg_1577(11 downto 6) <= zext_ln77_3_fu_1208_p1(11 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln56_reg_1419_pp0_iter9_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                frames_addr_reg_1447 <= zext_ln63_5_fu_1078_p1(14 - 1 downto 0);
                tmp_140_reg_1453 <= mul_ln63_fu_1412_p2(19 downto 14);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                frames_addr_reg_1447_pp0_iter11_reg <= frames_addr_reg_1447;
                frames_addr_reg_1447_pp0_iter12_reg <= frames_addr_reg_1447_pp0_iter11_reg;
                frames_addr_reg_1447_pp0_iter13_reg <= frames_addr_reg_1447_pp0_iter12_reg;
                frames_addr_reg_1447_pp0_iter14_reg <= frames_addr_reg_1447_pp0_iter13_reg;
                frames_addr_reg_1447_pp0_iter15_reg <= frames_addr_reg_1447_pp0_iter14_reg;
                frames_addr_reg_1447_pp0_iter16_reg <= frames_addr_reg_1447_pp0_iter15_reg;
                icmp_ln56_reg_1419_pp0_iter10_reg <= icmp_ln56_reg_1419_pp0_iter9_reg;
                icmp_ln56_reg_1419_pp0_iter11_reg <= icmp_ln56_reg_1419_pp0_iter10_reg;
                icmp_ln56_reg_1419_pp0_iter12_reg <= icmp_ln56_reg_1419_pp0_iter11_reg;
                icmp_ln56_reg_1419_pp0_iter13_reg <= icmp_ln56_reg_1419_pp0_iter12_reg;
                icmp_ln56_reg_1419_pp0_iter14_reg <= icmp_ln56_reg_1419_pp0_iter13_reg;
                icmp_ln56_reg_1419_pp0_iter15_reg <= icmp_ln56_reg_1419_pp0_iter14_reg;
                icmp_ln56_reg_1419_pp0_iter16_reg <= icmp_ln56_reg_1419_pp0_iter15_reg;
                icmp_ln56_reg_1419_pp0_iter2_reg <= icmp_ln56_reg_1419_pp0_iter1_reg;
                icmp_ln56_reg_1419_pp0_iter3_reg <= icmp_ln56_reg_1419_pp0_iter2_reg;
                icmp_ln56_reg_1419_pp0_iter4_reg <= icmp_ln56_reg_1419_pp0_iter3_reg;
                icmp_ln56_reg_1419_pp0_iter5_reg <= icmp_ln56_reg_1419_pp0_iter4_reg;
                icmp_ln56_reg_1419_pp0_iter6_reg <= icmp_ln56_reg_1419_pp0_iter5_reg;
                icmp_ln56_reg_1419_pp0_iter7_reg <= icmp_ln56_reg_1419_pp0_iter6_reg;
                icmp_ln56_reg_1419_pp0_iter8_reg <= icmp_ln56_reg_1419_pp0_iter7_reg;
                icmp_ln56_reg_1419_pp0_iter9_reg <= icmp_ln56_reg_1419_pp0_iter8_reg;
                select_ln63_1_reg_1435_pp0_iter2_reg <= select_ln63_1_reg_1435_pp0_iter1_reg;
                select_ln63_1_reg_1435_pp0_iter3_reg <= select_ln63_1_reg_1435_pp0_iter2_reg;
                select_ln63_1_reg_1435_pp0_iter4_reg <= select_ln63_1_reg_1435_pp0_iter3_reg;
                select_ln63_1_reg_1435_pp0_iter5_reg <= select_ln63_1_reg_1435_pp0_iter4_reg;
                select_ln63_1_reg_1435_pp0_iter6_reg <= select_ln63_1_reg_1435_pp0_iter5_reg;
                select_ln63_1_reg_1435_pp0_iter7_reg <= select_ln63_1_reg_1435_pp0_iter6_reg;
                select_ln63_1_reg_1435_pp0_iter8_reg <= select_ln63_1_reg_1435_pp0_iter7_reg;
                select_ln63_1_reg_1435_pp0_iter9_reg <= select_ln63_1_reg_1435_pp0_iter8_reg;
                select_ln63_reg_1428_pp0_iter2_reg <= select_ln63_reg_1428_pp0_iter1_reg;
                select_ln63_reg_1428_pp0_iter3_reg <= select_ln63_reg_1428_pp0_iter2_reg;
                select_ln63_reg_1428_pp0_iter4_reg <= select_ln63_reg_1428_pp0_iter3_reg;
                select_ln63_reg_1428_pp0_iter5_reg <= select_ln63_reg_1428_pp0_iter4_reg;
                select_ln63_reg_1428_pp0_iter6_reg <= select_ln63_reg_1428_pp0_iter5_reg;
                select_ln63_reg_1428_pp0_iter7_reg <= select_ln63_reg_1428_pp0_iter6_reg;
                select_ln63_reg_1428_pp0_iter8_reg <= select_ln63_reg_1428_pp0_iter7_reg;
                select_ln63_reg_1428_pp0_iter9_reg <= select_ln63_reg_1428_pp0_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln56_reg_1419_pp0_iter11_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then
                frames_load_reg_1558 <= frames_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln74_fu_1228_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                frames_temp_0_addr_reg_1610 <= zext_ln77_2_fu_1268_p1(7 - 1 downto 0);
                frames_temp_1_addr_reg_1615 <= zext_ln77_2_fu_1268_p1(7 - 1 downto 0);
                frames_temp_2_addr_reg_1620 <= zext_ln77_2_fu_1268_p1(7 - 1 downto 0);
                frames_temp_3_addr_reg_1625 <= zext_ln77_2_fu_1268_p1(7 - 1 downto 0);
                trunc_ln77_reg_1606 <= trunc_ln77_fu_1254_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state21)) then
                i_48_reg_1572 <= i_48_fu_1178_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln56_reg_1419 <= icmp_ln56_fu_989_p2;
                icmp_ln56_reg_1419_pp0_iter1_reg <= icmp_ln56_reg_1419;
                select_ln63_1_reg_1435_pp0_iter1_reg <= select_ln63_1_reg_1435;
                select_ln63_reg_1428_pp0_iter1_reg <= select_ln63_reg_1428;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln96_fu_1318_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                lshr_ln5_reg_1655 <= j4_0_reg_940(8 downto 2);
                trunc_ln99_reg_1650 <= trunc_ln99_fu_1330_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp3_stage0_11001)) then
                lshr_ln5_reg_1655_pp3_iter10_reg <= lshr_ln5_reg_1655_pp3_iter9_reg;
                lshr_ln5_reg_1655_pp3_iter2_reg <= lshr_ln5_reg_1655_pp3_iter1_reg;
                lshr_ln5_reg_1655_pp3_iter3_reg <= lshr_ln5_reg_1655_pp3_iter2_reg;
                lshr_ln5_reg_1655_pp3_iter4_reg <= lshr_ln5_reg_1655_pp3_iter3_reg;
                lshr_ln5_reg_1655_pp3_iter5_reg <= lshr_ln5_reg_1655_pp3_iter4_reg;
                lshr_ln5_reg_1655_pp3_iter6_reg <= lshr_ln5_reg_1655_pp3_iter5_reg;
                lshr_ln5_reg_1655_pp3_iter7_reg <= lshr_ln5_reg_1655_pp3_iter6_reg;
                lshr_ln5_reg_1655_pp3_iter8_reg <= lshr_ln5_reg_1655_pp3_iter7_reg;
                lshr_ln5_reg_1655_pp3_iter9_reg <= lshr_ln5_reg_1655_pp3_iter8_reg;
                tmp_312_reg_1712 <= grp_fu_979_p2;
                tmp_313_reg_1717 <= grp_fu_971_p2;
                trunc_ln99_reg_1650_pp3_iter10_reg <= trunc_ln99_reg_1650_pp3_iter9_reg;
                trunc_ln99_reg_1650_pp3_iter2_reg <= trunc_ln99_reg_1650_pp3_iter1_reg;
                trunc_ln99_reg_1650_pp3_iter3_reg <= trunc_ln99_reg_1650_pp3_iter2_reg;
                trunc_ln99_reg_1650_pp3_iter4_reg <= trunc_ln99_reg_1650_pp3_iter3_reg;
                trunc_ln99_reg_1650_pp3_iter5_reg <= trunc_ln99_reg_1650_pp3_iter4_reg;
                trunc_ln99_reg_1650_pp3_iter6_reg <= trunc_ln99_reg_1650_pp3_iter5_reg;
                trunc_ln99_reg_1650_pp3_iter7_reg <= trunc_ln99_reg_1650_pp3_iter6_reg;
                trunc_ln99_reg_1650_pp3_iter8_reg <= trunc_ln99_reg_1650_pp3_iter7_reg;
                trunc_ln99_reg_1650_pp3_iter9_reg <= trunc_ln99_reg_1650_pp3_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                lshr_ln5_reg_1655_pp3_iter1_reg <= lshr_ln5_reg_1655;
                tmp_318_reg_1700 <= tmp_318_fu_1359_p6;
                tmp_319_reg_1706 <= tmp_319_fu_1373_p6;
                trunc_ln99_reg_1650_pp3_iter1_reg <= trunc_ln99_reg_1650;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter5 = ap_const_logic_1)) or ((icmp_ln56_reg_1419_pp0_iter15_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1)))) then
                reg_983 <= grp_fu_975_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln56_fu_989_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                select_ln63_1_reg_1435 <= select_ln63_1_fu_1021_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln56_fu_989_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                select_ln63_reg_1428 <= select_ln63_fu_1013_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln56_reg_1419_pp0_iter11_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_317_reg_1563 <= tmp_317_fu_1126_p22;
            end if;
        end if;
    end process;
    zext_ln77_3_reg_1577(5 downto 0) <= "000000";
    zext_ln77_3_reg_1577(12) <= '0';
    add_ln77_reg_1582(5 downto 0) <= "000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter16, icmp_ln56_fu_989_p2, ap_enable_reg_pp0_iter0, icmp_ln69_fu_1172_p2, ap_CS_fsm_state21, icmp_ln74_fu_1228_p2, ap_enable_reg_pp1_iter0, ap_CS_fsm_state25, icmp_ln82_fu_1280_p2, icmp_ln96_fu_1318_p2, ap_enable_reg_pp3_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter17, ap_block_pp1_stage0_subdone, ap_CS_fsm_state27, grp_kfft_fu_951_ap_done, ap_block_pp3_stage0_subdone, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter10, ap_enable_reg_pp3_iter11)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln56_fu_989_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln56_fu_989_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                if (((icmp_ln69_fu_1172_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln74_fu_1228_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln74_fu_1228_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                if (((icmp_ln82_fu_1280_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state25))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                if (((grp_kfft_fu_951_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_pp3_stage0 => 
                if ((not(((ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (icmp_ln96_fu_1318_p2 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp3_iter10 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter11 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                elsif ((((ap_enable_reg_pp3_iter10 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter11 = ap_const_logic_1)) or ((ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (icmp_ln96_fu_1318_p2 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state40;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                end if;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXX";
        end case;
    end process;
    add_ln56_fu_995_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_874) + unsigned(ap_const_lv14_1));
    add_ln63_1_fu_1072_p2 <= std_logic_vector(unsigned(add_ln63_fu_1063_p2) + unsigned(zext_ln63_4_fu_1069_p1));
    add_ln63_fu_1063_p2 <= std_logic_vector(unsigned(zext_ln63_1_fu_1059_p1) + unsigned(zext_ln63_fu_1048_p1));
    add_ln77_1_fu_1244_p2 <= std_logic_vector(unsigned(add_ln77_reg_1582) + unsigned(zext_ln77_5_fu_1240_p1));
    add_ln77_fu_1216_p2 <= std_logic_vector(unsigned(zext_ln77_4_fu_1212_p1) + unsigned(zext_ln77_1_fu_1196_p1));
    add_ln99_1_fu_1390_p2 <= std_logic_vector(unsigned(add_ln99_reg_1587) + unsigned(zext_ln99_2_fu_1387_p1));
    add_ln99_2_fu_1400_p2 <= std_logic_vector(unsigned(zext_ln77_3_reg_1577) + unsigned(zext_ln99_2_fu_1387_p1));
    add_ln99_fu_1222_p2 <= std_logic_vector(unsigned(zext_ln77_fu_1184_p1) + unsigned(zext_ln77_3_fu_1208_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(4);
    ap_CS_fsm_pp3_stage0 <= ap_CS_fsm(9);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state20 <= ap_CS_fsm(2);
    ap_CS_fsm_state21 <= ap_CS_fsm(3);
    ap_CS_fsm_state24 <= ap_CS_fsm(5);
    ap_CS_fsm_state25 <= ap_CS_fsm(6);
    ap_CS_fsm_state26 <= ap_CS_fsm(7);
    ap_CS_fsm_state27 <= ap_CS_fsm(8);
    ap_CS_fsm_state40 <= ap_CS_fsm(10);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp3_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp3_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp3_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp3_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp3_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp3_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp3_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp3_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp3_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp3_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp3_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp3_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln56_fu_989_p2)
    begin
        if ((icmp_ln56_fu_989_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state22_assign_proc : process(icmp_ln74_fu_1228_p2)
    begin
        if ((icmp_ln74_fu_1228_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state22 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state22 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp3_exit_iter0_state28_assign_proc : process(icmp_ln96_fu_1318_p2)
    begin
        if ((icmp_ln96_fu_1318_p2 = ap_const_lv1_1)) then 
            ap_condition_pp3_exit_iter0_state28 <= ap_const_logic_1;
        else 
            ap_condition_pp3_exit_iter0_state28 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, icmp_ln69_fu_1172_p2, ap_CS_fsm_state21)
    begin
        if ((((icmp_ln69_fu_1172_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp3 <= (ap_idle_pp3 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter17)
    begin
        if (((ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp3_assign_proc : process(ap_enable_reg_pp3_iter5, ap_enable_reg_pp3_iter0, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter2, ap_enable_reg_pp3_iter3, ap_enable_reg_pp3_iter4, ap_enable_reg_pp3_iter6, ap_enable_reg_pp3_iter7, ap_enable_reg_pp3_iter8, ap_enable_reg_pp3_iter9, ap_enable_reg_pp3_iter10, ap_enable_reg_pp3_iter11)
    begin
        if (((ap_enable_reg_pp3_iter11 = ap_const_logic_0) and (ap_enable_reg_pp3_iter10 = ap_const_logic_0) and (ap_enable_reg_pp3_iter9 = ap_const_logic_0) and (ap_enable_reg_pp3_iter8 = ap_const_logic_0) and (ap_enable_reg_pp3_iter7 = ap_const_logic_0) and (ap_enable_reg_pp3_iter6 = ap_const_logic_0) and (ap_enable_reg_pp3_iter4 = ap_const_logic_0) and (ap_enable_reg_pp3_iter3 = ap_const_logic_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_0) and (ap_enable_reg_pp3_iter5 = ap_const_logic_0))) then 
            ap_idle_pp3 <= ap_const_logic_1;
        else 
            ap_idle_pp3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i_0_phi_fu_889_p4_assign_proc : process(i_0_reg_885, icmp_ln56_reg_1419, ap_CS_fsm_pp0_stage0, select_ln63_1_reg_1435, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln56_reg_1419 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_i_0_phi_fu_889_p4 <= select_ln63_1_reg_1435;
        else 
            ap_phi_mux_i_0_phi_fu_889_p4 <= i_0_reg_885;
        end if; 
    end process;


    ap_ready_assign_proc : process(icmp_ln69_fu_1172_p2, ap_CS_fsm_state21)
    begin
        if (((icmp_ln69_fu_1172_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    cosines_0_address0 <= zext_ln63_2_fu_1098_p1(6 - 1 downto 0);

    cosines_0_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter11)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            cosines_0_ce0 <= ap_const_logic_1;
        else 
            cosines_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cosines_10_address0 <= zext_ln63_2_fu_1098_p1(6 - 1 downto 0);

    cosines_10_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter11)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            cosines_10_ce0 <= ap_const_logic_1;
        else 
            cosines_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cosines_11_address0 <= zext_ln63_2_fu_1098_p1(6 - 1 downto 0);

    cosines_11_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter11)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            cosines_11_ce0 <= ap_const_logic_1;
        else 
            cosines_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cosines_12_address0 <= zext_ln63_2_fu_1098_p1(6 - 1 downto 0);

    cosines_12_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter11)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            cosines_12_ce0 <= ap_const_logic_1;
        else 
            cosines_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cosines_13_address0 <= zext_ln63_2_fu_1098_p1(6 - 1 downto 0);

    cosines_13_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter11)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            cosines_13_ce0 <= ap_const_logic_1;
        else 
            cosines_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cosines_14_address0 <= zext_ln63_2_fu_1098_p1(6 - 1 downto 0);

    cosines_14_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter11)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            cosines_14_ce0 <= ap_const_logic_1;
        else 
            cosines_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cosines_15_address0 <= zext_ln63_2_fu_1098_p1(6 - 1 downto 0);

    cosines_15_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter11)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            cosines_15_ce0 <= ap_const_logic_1;
        else 
            cosines_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cosines_16_address0 <= zext_ln63_2_fu_1098_p1(6 - 1 downto 0);

    cosines_16_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter11)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            cosines_16_ce0 <= ap_const_logic_1;
        else 
            cosines_16_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cosines_17_address0 <= zext_ln63_2_fu_1098_p1(6 - 1 downto 0);

    cosines_17_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter11)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            cosines_17_ce0 <= ap_const_logic_1;
        else 
            cosines_17_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cosines_18_address0 <= zext_ln63_2_fu_1098_p1(6 - 1 downto 0);

    cosines_18_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter11)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            cosines_18_ce0 <= ap_const_logic_1;
        else 
            cosines_18_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cosines_19_address0 <= zext_ln63_2_fu_1098_p1(6 - 1 downto 0);

    cosines_19_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter11)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            cosines_19_ce0 <= ap_const_logic_1;
        else 
            cosines_19_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cosines_1_address0 <= zext_ln63_2_fu_1098_p1(6 - 1 downto 0);

    cosines_1_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter11)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            cosines_1_ce0 <= ap_const_logic_1;
        else 
            cosines_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cosines_2_address0 <= zext_ln63_2_fu_1098_p1(6 - 1 downto 0);

    cosines_2_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter11)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            cosines_2_ce0 <= ap_const_logic_1;
        else 
            cosines_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cosines_3_address0 <= zext_ln63_2_fu_1098_p1(6 - 1 downto 0);

    cosines_3_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter11)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            cosines_3_ce0 <= ap_const_logic_1;
        else 
            cosines_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cosines_4_address0 <= zext_ln63_2_fu_1098_p1(6 - 1 downto 0);

    cosines_4_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter11)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            cosines_4_ce0 <= ap_const_logic_1;
        else 
            cosines_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cosines_5_address0 <= zext_ln63_2_fu_1098_p1(6 - 1 downto 0);

    cosines_5_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter11)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            cosines_5_ce0 <= ap_const_logic_1;
        else 
            cosines_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cosines_6_address0 <= zext_ln63_2_fu_1098_p1(6 - 1 downto 0);

    cosines_6_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter11)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            cosines_6_ce0 <= ap_const_logic_1;
        else 
            cosines_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cosines_7_address0 <= zext_ln63_2_fu_1098_p1(6 - 1 downto 0);

    cosines_7_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter11)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            cosines_7_ce0 <= ap_const_logic_1;
        else 
            cosines_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cosines_8_address0 <= zext_ln63_2_fu_1098_p1(6 - 1 downto 0);

    cosines_8_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter11)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            cosines_8_ce0 <= ap_const_logic_1;
        else 
            cosines_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cosines_9_address0 <= zext_ln63_2_fu_1098_p1(6 - 1 downto 0);

    cosines_9_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter11)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            cosines_9_ce0 <= ap_const_logic_1;
        else 
            cosines_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fft_frame_i_temp_0_address0_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_CS_fsm_state27, grp_kfft_fu_951_fi_0_address0, zext_ln99_1_fu_1344_p1, ap_block_pp3_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            fft_frame_i_temp_0_address0 <= zext_ln99_1_fu_1344_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            fft_frame_i_temp_0_address0 <= grp_kfft_fu_951_fi_0_address0;
        else 
            fft_frame_i_temp_0_address0 <= "XXXXXXX";
        end if; 
    end process;


    fft_frame_i_temp_0_ce0_assign_proc : process(ap_block_pp3_stage0_11001, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_CS_fsm_state27, grp_kfft_fu_951_fi_0_ce0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            fft_frame_i_temp_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            fft_frame_i_temp_0_ce0 <= grp_kfft_fu_951_fi_0_ce0;
        else 
            fft_frame_i_temp_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fft_frame_i_temp_0_ce1_assign_proc : process(ap_CS_fsm_state27, grp_kfft_fu_951_fi_0_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            fft_frame_i_temp_0_ce1 <= grp_kfft_fu_951_fi_0_ce1;
        else 
            fft_frame_i_temp_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    fft_frame_i_temp_0_we1_assign_proc : process(ap_CS_fsm_state27, grp_kfft_fu_951_fi_0_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            fft_frame_i_temp_0_we1 <= grp_kfft_fu_951_fi_0_we1;
        else 
            fft_frame_i_temp_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    fft_frame_i_temp_1_address0_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_CS_fsm_state27, grp_kfft_fu_951_fi_1_address0, zext_ln99_1_fu_1344_p1, ap_block_pp3_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            fft_frame_i_temp_1_address0 <= zext_ln99_1_fu_1344_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            fft_frame_i_temp_1_address0 <= grp_kfft_fu_951_fi_1_address0;
        else 
            fft_frame_i_temp_1_address0 <= "XXXXXXX";
        end if; 
    end process;


    fft_frame_i_temp_1_ce0_assign_proc : process(ap_block_pp3_stage0_11001, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_CS_fsm_state27, grp_kfft_fu_951_fi_1_ce0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            fft_frame_i_temp_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            fft_frame_i_temp_1_ce0 <= grp_kfft_fu_951_fi_1_ce0;
        else 
            fft_frame_i_temp_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fft_frame_i_temp_1_ce1_assign_proc : process(ap_CS_fsm_state27, grp_kfft_fu_951_fi_1_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            fft_frame_i_temp_1_ce1 <= grp_kfft_fu_951_fi_1_ce1;
        else 
            fft_frame_i_temp_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    fft_frame_i_temp_1_we1_assign_proc : process(ap_CS_fsm_state27, grp_kfft_fu_951_fi_1_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            fft_frame_i_temp_1_we1 <= grp_kfft_fu_951_fi_1_we1;
        else 
            fft_frame_i_temp_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    fft_frame_i_temp_2_address0_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_CS_fsm_state27, grp_kfft_fu_951_fi_2_address0, zext_ln99_1_fu_1344_p1, ap_block_pp3_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            fft_frame_i_temp_2_address0 <= zext_ln99_1_fu_1344_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            fft_frame_i_temp_2_address0 <= grp_kfft_fu_951_fi_2_address0;
        else 
            fft_frame_i_temp_2_address0 <= "XXXXXXX";
        end if; 
    end process;


    fft_frame_i_temp_2_ce0_assign_proc : process(ap_block_pp3_stage0_11001, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_CS_fsm_state27, grp_kfft_fu_951_fi_2_ce0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            fft_frame_i_temp_2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            fft_frame_i_temp_2_ce0 <= grp_kfft_fu_951_fi_2_ce0;
        else 
            fft_frame_i_temp_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fft_frame_i_temp_2_ce1_assign_proc : process(ap_CS_fsm_state27, grp_kfft_fu_951_fi_2_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            fft_frame_i_temp_2_ce1 <= grp_kfft_fu_951_fi_2_ce1;
        else 
            fft_frame_i_temp_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    fft_frame_i_temp_2_we1_assign_proc : process(ap_CS_fsm_state27, grp_kfft_fu_951_fi_2_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            fft_frame_i_temp_2_we1 <= grp_kfft_fu_951_fi_2_we1;
        else 
            fft_frame_i_temp_2_we1 <= ap_const_logic_0;
        end if; 
    end process;


    fft_frame_i_temp_3_address0_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_CS_fsm_state27, grp_kfft_fu_951_fi_3_address0, zext_ln99_1_fu_1344_p1, ap_block_pp3_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            fft_frame_i_temp_3_address0 <= zext_ln99_1_fu_1344_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            fft_frame_i_temp_3_address0 <= grp_kfft_fu_951_fi_3_address0;
        else 
            fft_frame_i_temp_3_address0 <= "XXXXXXX";
        end if; 
    end process;


    fft_frame_i_temp_3_ce0_assign_proc : process(ap_block_pp3_stage0_11001, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_CS_fsm_state27, grp_kfft_fu_951_fi_3_ce0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            fft_frame_i_temp_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            fft_frame_i_temp_3_ce0 <= grp_kfft_fu_951_fi_3_ce0;
        else 
            fft_frame_i_temp_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fft_frame_i_temp_3_ce1_assign_proc : process(ap_CS_fsm_state27, grp_kfft_fu_951_fi_3_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            fft_frame_i_temp_3_ce1 <= grp_kfft_fu_951_fi_3_ce1;
        else 
            fft_frame_i_temp_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    fft_frame_i_temp_3_we1_assign_proc : process(ap_CS_fsm_state27, grp_kfft_fu_951_fi_3_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            fft_frame_i_temp_3_we1 <= grp_kfft_fu_951_fi_3_we1;
        else 
            fft_frame_i_temp_3_we1 <= ap_const_logic_0;
        end if; 
    end process;


    fft_frame_r_temp_0_address0_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_CS_fsm_state27, grp_kfft_fu_951_fr_0_address0, zext_ln99_1_fu_1344_p1, ap_block_pp3_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            fft_frame_r_temp_0_address0 <= zext_ln99_1_fu_1344_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            fft_frame_r_temp_0_address0 <= grp_kfft_fu_951_fr_0_address0;
        else 
            fft_frame_r_temp_0_address0 <= "XXXXXXX";
        end if; 
    end process;


    fft_frame_r_temp_0_ce0_assign_proc : process(ap_block_pp3_stage0_11001, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_CS_fsm_state27, grp_kfft_fu_951_fr_0_ce0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            fft_frame_r_temp_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            fft_frame_r_temp_0_ce0 <= grp_kfft_fu_951_fr_0_ce0;
        else 
            fft_frame_r_temp_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fft_frame_r_temp_0_ce1_assign_proc : process(ap_CS_fsm_state27, grp_kfft_fu_951_fr_0_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            fft_frame_r_temp_0_ce1 <= grp_kfft_fu_951_fr_0_ce1;
        else 
            fft_frame_r_temp_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    fft_frame_r_temp_0_we1_assign_proc : process(ap_CS_fsm_state27, grp_kfft_fu_951_fr_0_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            fft_frame_r_temp_0_we1 <= grp_kfft_fu_951_fr_0_we1;
        else 
            fft_frame_r_temp_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    fft_frame_r_temp_1_address0_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_CS_fsm_state27, grp_kfft_fu_951_fr_1_address0, zext_ln99_1_fu_1344_p1, ap_block_pp3_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            fft_frame_r_temp_1_address0 <= zext_ln99_1_fu_1344_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            fft_frame_r_temp_1_address0 <= grp_kfft_fu_951_fr_1_address0;
        else 
            fft_frame_r_temp_1_address0 <= "XXXXXXX";
        end if; 
    end process;


    fft_frame_r_temp_1_ce0_assign_proc : process(ap_block_pp3_stage0_11001, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_CS_fsm_state27, grp_kfft_fu_951_fr_1_ce0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            fft_frame_r_temp_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            fft_frame_r_temp_1_ce0 <= grp_kfft_fu_951_fr_1_ce0;
        else 
            fft_frame_r_temp_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fft_frame_r_temp_1_ce1_assign_proc : process(ap_CS_fsm_state27, grp_kfft_fu_951_fr_1_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            fft_frame_r_temp_1_ce1 <= grp_kfft_fu_951_fr_1_ce1;
        else 
            fft_frame_r_temp_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    fft_frame_r_temp_1_we1_assign_proc : process(ap_CS_fsm_state27, grp_kfft_fu_951_fr_1_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            fft_frame_r_temp_1_we1 <= grp_kfft_fu_951_fr_1_we1;
        else 
            fft_frame_r_temp_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    fft_frame_r_temp_2_address0_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_CS_fsm_state27, grp_kfft_fu_951_fr_2_address0, zext_ln99_1_fu_1344_p1, ap_block_pp3_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            fft_frame_r_temp_2_address0 <= zext_ln99_1_fu_1344_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            fft_frame_r_temp_2_address0 <= grp_kfft_fu_951_fr_2_address0;
        else 
            fft_frame_r_temp_2_address0 <= "XXXXXXX";
        end if; 
    end process;


    fft_frame_r_temp_2_ce0_assign_proc : process(ap_block_pp3_stage0_11001, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_CS_fsm_state27, grp_kfft_fu_951_fr_2_ce0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            fft_frame_r_temp_2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            fft_frame_r_temp_2_ce0 <= grp_kfft_fu_951_fr_2_ce0;
        else 
            fft_frame_r_temp_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fft_frame_r_temp_2_ce1_assign_proc : process(ap_CS_fsm_state27, grp_kfft_fu_951_fr_2_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            fft_frame_r_temp_2_ce1 <= grp_kfft_fu_951_fr_2_ce1;
        else 
            fft_frame_r_temp_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    fft_frame_r_temp_2_we1_assign_proc : process(ap_CS_fsm_state27, grp_kfft_fu_951_fr_2_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            fft_frame_r_temp_2_we1 <= grp_kfft_fu_951_fr_2_we1;
        else 
            fft_frame_r_temp_2_we1 <= ap_const_logic_0;
        end if; 
    end process;


    fft_frame_r_temp_3_address0_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_CS_fsm_state27, grp_kfft_fu_951_fr_3_address0, zext_ln99_1_fu_1344_p1, ap_block_pp3_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            fft_frame_r_temp_3_address0 <= zext_ln99_1_fu_1344_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            fft_frame_r_temp_3_address0 <= grp_kfft_fu_951_fr_3_address0;
        else 
            fft_frame_r_temp_3_address0 <= "XXXXXXX";
        end if; 
    end process;


    fft_frame_r_temp_3_ce0_assign_proc : process(ap_block_pp3_stage0_11001, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_CS_fsm_state27, grp_kfft_fu_951_fr_3_ce0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            fft_frame_r_temp_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            fft_frame_r_temp_3_ce0 <= grp_kfft_fu_951_fr_3_ce0;
        else 
            fft_frame_r_temp_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fft_frame_r_temp_3_ce1_assign_proc : process(ap_CS_fsm_state27, grp_kfft_fu_951_fr_3_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            fft_frame_r_temp_3_ce1 <= grp_kfft_fu_951_fr_3_ce1;
        else 
            fft_frame_r_temp_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    fft_frame_r_temp_3_we1_assign_proc : process(ap_CS_fsm_state27, grp_kfft_fu_951_fr_3_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            fft_frame_r_temp_3_we1 <= grp_kfft_fu_951_fr_3_we1;
        else 
            fft_frame_r_temp_3_we1 <= ap_const_logic_0;
        end if; 
    end process;


    fft_input_i_0_address1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_CS_fsm_state25, ap_CS_fsm_state27, grp_kfft_fu_951_pi_0_address1, ap_block_pp1_stage0, zext_ln77_2_fu_1268_p1, zext_ln85_fu_1300_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            fft_input_i_0_address1 <= zext_ln85_fu_1300_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            fft_input_i_0_address1 <= zext_ln77_2_fu_1268_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            fft_input_i_0_address1 <= grp_kfft_fu_951_pi_0_address1;
        else 
            fft_input_i_0_address1 <= "XXXXXXX";
        end if; 
    end process;


    fft_input_i_0_ce0_assign_proc : process(ap_CS_fsm_state27, grp_kfft_fu_951_pi_0_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            fft_input_i_0_ce0 <= grp_kfft_fu_951_pi_0_ce0;
        else 
            fft_input_i_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fft_input_i_0_ce1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, ap_CS_fsm_state25, ap_CS_fsm_state27, grp_kfft_fu_951_pi_0_ce1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state25) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            fft_input_i_0_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            fft_input_i_0_ce1 <= grp_kfft_fu_951_pi_0_ce1;
        else 
            fft_input_i_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    fft_input_i_0_d1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_CS_fsm_state25, ap_CS_fsm_state27, grp_kfft_fu_951_pi_0_d1, ap_block_pp1_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state25) or ((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            fft_input_i_0_d1 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            fft_input_i_0_d1 <= grp_kfft_fu_951_pi_0_d1;
        else 
            fft_input_i_0_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    fft_input_i_0_we1_assign_proc : process(icmp_ln74_fu_1228_p2, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, trunc_ln77_fu_1254_p1, ap_CS_fsm_state25, icmp_ln82_fu_1280_p2, ap_CS_fsm_state27, grp_kfft_fu_951_pi_0_we1, trunc_ln85_fu_1286_p1)
    begin
        if ((((icmp_ln82_fu_1280_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state25) and (trunc_ln85_fu_1286_p1 = ap_const_lv2_0)) or ((trunc_ln77_fu_1254_p1 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln74_fu_1228_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            fft_input_i_0_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            fft_input_i_0_we1 <= grp_kfft_fu_951_pi_0_we1;
        else 
            fft_input_i_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    fft_input_i_1_address1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_CS_fsm_state25, ap_CS_fsm_state27, grp_kfft_fu_951_pi_1_address1, ap_block_pp1_stage0, zext_ln77_2_fu_1268_p1, zext_ln85_fu_1300_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            fft_input_i_1_address1 <= zext_ln85_fu_1300_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            fft_input_i_1_address1 <= zext_ln77_2_fu_1268_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            fft_input_i_1_address1 <= grp_kfft_fu_951_pi_1_address1;
        else 
            fft_input_i_1_address1 <= "XXXXXXX";
        end if; 
    end process;


    fft_input_i_1_ce0_assign_proc : process(ap_CS_fsm_state27, grp_kfft_fu_951_pi_1_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            fft_input_i_1_ce0 <= grp_kfft_fu_951_pi_1_ce0;
        else 
            fft_input_i_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fft_input_i_1_ce1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, ap_CS_fsm_state25, ap_CS_fsm_state27, grp_kfft_fu_951_pi_1_ce1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state25) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            fft_input_i_1_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            fft_input_i_1_ce1 <= grp_kfft_fu_951_pi_1_ce1;
        else 
            fft_input_i_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    fft_input_i_1_d1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_CS_fsm_state25, ap_CS_fsm_state27, grp_kfft_fu_951_pi_1_d1, ap_block_pp1_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state25) or ((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            fft_input_i_1_d1 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            fft_input_i_1_d1 <= grp_kfft_fu_951_pi_1_d1;
        else 
            fft_input_i_1_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    fft_input_i_1_we1_assign_proc : process(icmp_ln74_fu_1228_p2, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, trunc_ln77_fu_1254_p1, ap_CS_fsm_state25, icmp_ln82_fu_1280_p2, ap_CS_fsm_state27, grp_kfft_fu_951_pi_1_we1, trunc_ln85_fu_1286_p1)
    begin
        if ((((icmp_ln82_fu_1280_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state25) and (trunc_ln85_fu_1286_p1 = ap_const_lv2_1)) or ((trunc_ln77_fu_1254_p1 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln74_fu_1228_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            fft_input_i_1_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            fft_input_i_1_we1 <= grp_kfft_fu_951_pi_1_we1;
        else 
            fft_input_i_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    fft_input_i_2_address1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_CS_fsm_state25, ap_CS_fsm_state27, grp_kfft_fu_951_pi_2_address1, ap_block_pp1_stage0, zext_ln77_2_fu_1268_p1, zext_ln85_fu_1300_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            fft_input_i_2_address1 <= zext_ln85_fu_1300_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            fft_input_i_2_address1 <= zext_ln77_2_fu_1268_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            fft_input_i_2_address1 <= grp_kfft_fu_951_pi_2_address1;
        else 
            fft_input_i_2_address1 <= "XXXXXXX";
        end if; 
    end process;


    fft_input_i_2_ce0_assign_proc : process(ap_CS_fsm_state27, grp_kfft_fu_951_pi_2_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            fft_input_i_2_ce0 <= grp_kfft_fu_951_pi_2_ce0;
        else 
            fft_input_i_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fft_input_i_2_ce1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, ap_CS_fsm_state25, ap_CS_fsm_state27, grp_kfft_fu_951_pi_2_ce1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state25) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            fft_input_i_2_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            fft_input_i_2_ce1 <= grp_kfft_fu_951_pi_2_ce1;
        else 
            fft_input_i_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    fft_input_i_2_d1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_CS_fsm_state25, ap_CS_fsm_state27, grp_kfft_fu_951_pi_2_d1, ap_block_pp1_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state25) or ((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            fft_input_i_2_d1 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            fft_input_i_2_d1 <= grp_kfft_fu_951_pi_2_d1;
        else 
            fft_input_i_2_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    fft_input_i_2_we1_assign_proc : process(icmp_ln74_fu_1228_p2, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, trunc_ln77_fu_1254_p1, ap_CS_fsm_state25, icmp_ln82_fu_1280_p2, ap_CS_fsm_state27, grp_kfft_fu_951_pi_2_we1, trunc_ln85_fu_1286_p1)
    begin
        if ((((icmp_ln82_fu_1280_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state25) and (trunc_ln85_fu_1286_p1 = ap_const_lv2_2)) or ((trunc_ln77_fu_1254_p1 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln74_fu_1228_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            fft_input_i_2_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            fft_input_i_2_we1 <= grp_kfft_fu_951_pi_2_we1;
        else 
            fft_input_i_2_we1 <= ap_const_logic_0;
        end if; 
    end process;


    fft_input_i_3_address1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_CS_fsm_state25, ap_CS_fsm_state27, grp_kfft_fu_951_pi_3_address1, ap_block_pp1_stage0, zext_ln77_2_fu_1268_p1, zext_ln85_fu_1300_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            fft_input_i_3_address1 <= zext_ln85_fu_1300_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            fft_input_i_3_address1 <= zext_ln77_2_fu_1268_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            fft_input_i_3_address1 <= grp_kfft_fu_951_pi_3_address1;
        else 
            fft_input_i_3_address1 <= "XXXXXXX";
        end if; 
    end process;


    fft_input_i_3_ce0_assign_proc : process(ap_CS_fsm_state27, grp_kfft_fu_951_pi_3_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            fft_input_i_3_ce0 <= grp_kfft_fu_951_pi_3_ce0;
        else 
            fft_input_i_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fft_input_i_3_ce1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, ap_CS_fsm_state25, ap_CS_fsm_state27, grp_kfft_fu_951_pi_3_ce1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state25) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            fft_input_i_3_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            fft_input_i_3_ce1 <= grp_kfft_fu_951_pi_3_ce1;
        else 
            fft_input_i_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    fft_input_i_3_d1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_CS_fsm_state25, ap_CS_fsm_state27, grp_kfft_fu_951_pi_3_d1, ap_block_pp1_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state25) or ((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            fft_input_i_3_d1 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            fft_input_i_3_d1 <= grp_kfft_fu_951_pi_3_d1;
        else 
            fft_input_i_3_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    fft_input_i_3_we1_assign_proc : process(icmp_ln74_fu_1228_p2, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, trunc_ln77_fu_1254_p1, ap_CS_fsm_state25, icmp_ln82_fu_1280_p2, ap_CS_fsm_state27, grp_kfft_fu_951_pi_3_we1, trunc_ln85_fu_1286_p1)
    begin
        if ((((icmp_ln82_fu_1280_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state25) and (trunc_ln85_fu_1286_p1 = ap_const_lv2_3)) or ((trunc_ln77_fu_1254_p1 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln74_fu_1228_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            fft_input_i_3_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            fft_input_i_3_we1 <= grp_kfft_fu_951_pi_3_we1;
        else 
            fft_input_i_3_we1 <= ap_const_logic_0;
        end if; 
    end process;


    frames_address0_assign_proc : process(frames_addr_reg_1447, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter11, ap_block_pp0_stage0, zext_ln77_6_fu_1249_p1, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            frames_address0 <= zext_ln77_6_fu_1249_p1(14 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            frames_address0 <= frames_addr_reg_1447;
        else 
            frames_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;

    frames_address1 <= frames_addr_reg_1447_pp0_iter16_reg;

    frames_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter11)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1)))) then 
            frames_ce0 <= ap_const_logic_1;
        else 
            frames_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    frames_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter17)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1))) then 
            frames_ce1 <= ap_const_logic_1;
        else 
            frames_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    frames_d1 <= reg_983;

    frames_temp_0_address1_assign_proc : process(ap_CS_fsm_pp1_stage0, frames_temp_0_addr_reg_1610, ap_CS_fsm_state25, ap_enable_reg_pp1_iter1, ap_CS_fsm_state27, grp_kfft_fu_951_pr_0_address1, ap_block_pp1_stage0, zext_ln85_fu_1300_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            frames_temp_0_address1 <= zext_ln85_fu_1300_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            frames_temp_0_address1 <= frames_temp_0_addr_reg_1610;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            frames_temp_0_address1 <= grp_kfft_fu_951_pr_0_address1;
        else 
            frames_temp_0_address1 <= "XXXXXXX";
        end if; 
    end process;


    frames_temp_0_ce0_assign_proc : process(ap_CS_fsm_state27, grp_kfft_fu_951_pr_0_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            frames_temp_0_ce0 <= grp_kfft_fu_951_pr_0_ce0;
        else 
            frames_temp_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    frames_temp_0_ce1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_CS_fsm_state25, ap_enable_reg_pp1_iter1, ap_CS_fsm_state27, grp_kfft_fu_951_pr_0_ce1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state25) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            frames_temp_0_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            frames_temp_0_ce1 <= grp_kfft_fu_951_pr_0_ce1;
        else 
            frames_temp_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    frames_temp_0_d1_assign_proc : process(frames_q0, ap_CS_fsm_pp1_stage0, ap_CS_fsm_state25, ap_enable_reg_pp1_iter1, ap_CS_fsm_state27, grp_kfft_fu_951_pr_0_d1, ap_block_pp1_stage0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            frames_temp_0_d1 <= ap_const_lv32_0;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            frames_temp_0_d1 <= frames_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            frames_temp_0_d1 <= grp_kfft_fu_951_pr_0_d1;
        else 
            frames_temp_0_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    frames_temp_0_we1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, trunc_ln77_reg_1606, ap_CS_fsm_state25, icmp_ln82_fu_1280_p2, ap_enable_reg_pp1_iter1, ap_CS_fsm_state27, grp_kfft_fu_951_pr_0_we1, trunc_ln85_fu_1286_p1)
    begin
        if ((((icmp_ln82_fu_1280_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state25) and (trunc_ln85_fu_1286_p1 = ap_const_lv2_0)) or ((trunc_ln77_reg_1606 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            frames_temp_0_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            frames_temp_0_we1 <= grp_kfft_fu_951_pr_0_we1;
        else 
            frames_temp_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    frames_temp_1_address1_assign_proc : process(ap_CS_fsm_pp1_stage0, frames_temp_1_addr_reg_1615, ap_CS_fsm_state25, ap_enable_reg_pp1_iter1, ap_CS_fsm_state27, grp_kfft_fu_951_pr_1_address1, ap_block_pp1_stage0, zext_ln85_fu_1300_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            frames_temp_1_address1 <= zext_ln85_fu_1300_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            frames_temp_1_address1 <= frames_temp_1_addr_reg_1615;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            frames_temp_1_address1 <= grp_kfft_fu_951_pr_1_address1;
        else 
            frames_temp_1_address1 <= "XXXXXXX";
        end if; 
    end process;


    frames_temp_1_ce0_assign_proc : process(ap_CS_fsm_state27, grp_kfft_fu_951_pr_1_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            frames_temp_1_ce0 <= grp_kfft_fu_951_pr_1_ce0;
        else 
            frames_temp_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    frames_temp_1_ce1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_CS_fsm_state25, ap_enable_reg_pp1_iter1, ap_CS_fsm_state27, grp_kfft_fu_951_pr_1_ce1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state25) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            frames_temp_1_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            frames_temp_1_ce1 <= grp_kfft_fu_951_pr_1_ce1;
        else 
            frames_temp_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    frames_temp_1_d1_assign_proc : process(frames_q0, ap_CS_fsm_pp1_stage0, ap_CS_fsm_state25, ap_enable_reg_pp1_iter1, ap_CS_fsm_state27, grp_kfft_fu_951_pr_1_d1, ap_block_pp1_stage0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            frames_temp_1_d1 <= ap_const_lv32_0;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            frames_temp_1_d1 <= frames_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            frames_temp_1_d1 <= grp_kfft_fu_951_pr_1_d1;
        else 
            frames_temp_1_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    frames_temp_1_we1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, trunc_ln77_reg_1606, ap_CS_fsm_state25, icmp_ln82_fu_1280_p2, ap_enable_reg_pp1_iter1, ap_CS_fsm_state27, grp_kfft_fu_951_pr_1_we1, trunc_ln85_fu_1286_p1)
    begin
        if ((((icmp_ln82_fu_1280_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state25) and (trunc_ln85_fu_1286_p1 = ap_const_lv2_1)) or ((trunc_ln77_reg_1606 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            frames_temp_1_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            frames_temp_1_we1 <= grp_kfft_fu_951_pr_1_we1;
        else 
            frames_temp_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    frames_temp_2_address1_assign_proc : process(ap_CS_fsm_pp1_stage0, frames_temp_2_addr_reg_1620, ap_CS_fsm_state25, ap_enable_reg_pp1_iter1, ap_CS_fsm_state27, grp_kfft_fu_951_pr_2_address1, ap_block_pp1_stage0, zext_ln85_fu_1300_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            frames_temp_2_address1 <= zext_ln85_fu_1300_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            frames_temp_2_address1 <= frames_temp_2_addr_reg_1620;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            frames_temp_2_address1 <= grp_kfft_fu_951_pr_2_address1;
        else 
            frames_temp_2_address1 <= "XXXXXXX";
        end if; 
    end process;


    frames_temp_2_ce0_assign_proc : process(ap_CS_fsm_state27, grp_kfft_fu_951_pr_2_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            frames_temp_2_ce0 <= grp_kfft_fu_951_pr_2_ce0;
        else 
            frames_temp_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    frames_temp_2_ce1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_CS_fsm_state25, ap_enable_reg_pp1_iter1, ap_CS_fsm_state27, grp_kfft_fu_951_pr_2_ce1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state25) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            frames_temp_2_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            frames_temp_2_ce1 <= grp_kfft_fu_951_pr_2_ce1;
        else 
            frames_temp_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    frames_temp_2_d1_assign_proc : process(frames_q0, ap_CS_fsm_pp1_stage0, ap_CS_fsm_state25, ap_enable_reg_pp1_iter1, ap_CS_fsm_state27, grp_kfft_fu_951_pr_2_d1, ap_block_pp1_stage0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            frames_temp_2_d1 <= ap_const_lv32_0;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            frames_temp_2_d1 <= frames_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            frames_temp_2_d1 <= grp_kfft_fu_951_pr_2_d1;
        else 
            frames_temp_2_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    frames_temp_2_we1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, trunc_ln77_reg_1606, ap_CS_fsm_state25, icmp_ln82_fu_1280_p2, ap_enable_reg_pp1_iter1, ap_CS_fsm_state27, grp_kfft_fu_951_pr_2_we1, trunc_ln85_fu_1286_p1)
    begin
        if ((((icmp_ln82_fu_1280_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state25) and (trunc_ln85_fu_1286_p1 = ap_const_lv2_2)) or ((trunc_ln77_reg_1606 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            frames_temp_2_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            frames_temp_2_we1 <= grp_kfft_fu_951_pr_2_we1;
        else 
            frames_temp_2_we1 <= ap_const_logic_0;
        end if; 
    end process;


    frames_temp_3_address1_assign_proc : process(ap_CS_fsm_pp1_stage0, frames_temp_3_addr_reg_1625, ap_CS_fsm_state25, ap_enable_reg_pp1_iter1, ap_CS_fsm_state27, grp_kfft_fu_951_pr_3_address1, ap_block_pp1_stage0, zext_ln85_fu_1300_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            frames_temp_3_address1 <= zext_ln85_fu_1300_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            frames_temp_3_address1 <= frames_temp_3_addr_reg_1625;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            frames_temp_3_address1 <= grp_kfft_fu_951_pr_3_address1;
        else 
            frames_temp_3_address1 <= "XXXXXXX";
        end if; 
    end process;


    frames_temp_3_ce0_assign_proc : process(ap_CS_fsm_state27, grp_kfft_fu_951_pr_3_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            frames_temp_3_ce0 <= grp_kfft_fu_951_pr_3_ce0;
        else 
            frames_temp_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    frames_temp_3_ce1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_CS_fsm_state25, ap_enable_reg_pp1_iter1, ap_CS_fsm_state27, grp_kfft_fu_951_pr_3_ce1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state25) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            frames_temp_3_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            frames_temp_3_ce1 <= grp_kfft_fu_951_pr_3_ce1;
        else 
            frames_temp_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    frames_temp_3_d1_assign_proc : process(frames_q0, ap_CS_fsm_pp1_stage0, ap_CS_fsm_state25, ap_enable_reg_pp1_iter1, ap_CS_fsm_state27, grp_kfft_fu_951_pr_3_d1, ap_block_pp1_stage0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            frames_temp_3_d1 <= ap_const_lv32_0;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            frames_temp_3_d1 <= frames_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            frames_temp_3_d1 <= grp_kfft_fu_951_pr_3_d1;
        else 
            frames_temp_3_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    frames_temp_3_we1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, trunc_ln77_reg_1606, ap_CS_fsm_state25, icmp_ln82_fu_1280_p2, ap_enable_reg_pp1_iter1, ap_CS_fsm_state27, grp_kfft_fu_951_pr_3_we1, trunc_ln85_fu_1286_p1)
    begin
        if ((((icmp_ln82_fu_1280_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state25) and (trunc_ln85_fu_1286_p1 = ap_const_lv2_3)) or ((trunc_ln77_reg_1606 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            frames_temp_3_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            frames_temp_3_we1 <= grp_kfft_fu_951_pr_3_we1;
        else 
            frames_temp_3_we1 <= ap_const_logic_0;
        end if; 
    end process;


    frames_we1_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln56_reg_1419_pp0_iter16_reg, ap_enable_reg_pp0_iter17)
    begin
        if (((icmp_ln56_reg_1419_pp0_iter16_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1))) then 
            frames_we1 <= ap_const_logic_1;
        else 
            frames_we1 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1029_p1 <= ap_const_lv9_14(6 - 1 downto 0);

    grp_fu_975_p0_assign_proc : process(frames_load_reg_1558, tmp_318_reg_1700, ap_enable_reg_pp0_iter13, ap_enable_reg_pp3_iter2, ap_block_pp0_stage0, ap_block_pp3_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1))) then 
            grp_fu_975_p0 <= tmp_318_reg_1700;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            grp_fu_975_p0 <= frames_load_reg_1558;
        else 
            grp_fu_975_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_975_p1_assign_proc : process(tmp_317_reg_1563, tmp_318_reg_1700, ap_enable_reg_pp0_iter13, ap_enable_reg_pp3_iter2, ap_block_pp0_stage0, ap_block_pp3_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1))) then 
            grp_fu_975_p1 <= tmp_318_reg_1700;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            grp_fu_975_p1 <= tmp_317_reg_1563;
        else 
            grp_fu_975_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_kfft_fu_951_ap_start <= grp_kfft_fu_951_ap_start_reg;
    i_48_fu_1178_p2 <= std_logic_vector(unsigned(i1_0_reg_907) + unsigned(ap_const_lv6_1));
    i_fu_1001_p2 <= std_logic_vector(unsigned(ap_phi_mux_i_0_phi_fu_889_p4) + unsigned(ap_const_lv6_1));
    icmp_ln56_fu_989_p2 <= "1" when (indvar_flatten_reg_874 = ap_const_lv14_3D40) else "0";
    icmp_ln59_fu_1007_p2 <= "1" when (j_0_reg_896 = ap_const_lv9_140) else "0";
    icmp_ln69_fu_1172_p2 <= "1" when (i1_0_reg_907 = ap_const_lv6_31) else "0";
    icmp_ln74_fu_1228_p2 <= "1" when (j2_0_reg_918 = ap_const_lv9_140) else "0";
    icmp_ln82_fu_1280_p2 <= "1" when (j3_0_reg_929 = ap_const_lv10_200) else "0";
    icmp_ln96_fu_1318_p2 <= "1" when (j4_0_reg_940 = ap_const_lv9_101) else "0";
    j_20_fu_1234_p2 <= std_logic_vector(unsigned(j2_0_reg_918) + unsigned(ap_const_lv9_1));
    j_21_fu_1312_p2 <= std_logic_vector(unsigned(j3_0_reg_929) + unsigned(ap_const_lv10_1));
    j_22_fu_1324_p2 <= std_logic_vector(unsigned(j4_0_reg_940) + unsigned(ap_const_lv9_1));
    j_fu_1035_p2 <= std_logic_vector(unsigned(select_ln63_fu_1013_p3) + unsigned(ap_const_lv9_1));
    lshr_ln4_fu_1290_p4 <= j3_0_reg_929(9 downto 2);
    lshr_ln5_fu_1334_p4 <= j4_0_reg_940(8 downto 2);
    lshr_ln_fu_1258_p4 <= j2_0_reg_918(8 downto 2);
    mul_ln63_fu_1412_p0 <= mul_ln63_fu_1412_p00(9 - 1 downto 0);
    mul_ln63_fu_1412_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln63_reg_1428_pp0_iter9_reg),20));
    mul_ln63_fu_1412_p1 <= ap_const_lv20_334(11 - 1 downto 0);
    select_ln63_1_fu_1021_p3 <= 
        i_fu_1001_p2 when (icmp_ln59_fu_1007_p2(0) = '1') else 
        ap_phi_mux_i_0_phi_fu_889_p4;
    select_ln63_fu_1013_p3 <= 
        ap_const_lv9_0 when (icmp_ln59_fu_1007_p2(0) = '1') else 
        j_0_reg_896;
        sext_ln63_fu_1095_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_140_reg_1453),9));

    spectrogram_0_address1 <= zext_ln99_3_fu_1395_p1(12 - 1 downto 0);

    spectrogram_0_ce1_assign_proc : process(ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter11)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter11 = ap_const_logic_1))) then 
            spectrogram_0_ce1 <= ap_const_logic_1;
        else 
            spectrogram_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    spectrogram_0_d1 <= tmp_313_reg_1717;

    spectrogram_0_we1_assign_proc : process(ap_block_pp3_stage0_11001, trunc_ln99_reg_1650_pp3_iter10_reg, ap_enable_reg_pp3_iter11)
    begin
        if (((trunc_ln99_reg_1650_pp3_iter10_reg = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter11 = ap_const_logic_1))) then 
            spectrogram_0_we1 <= ap_const_logic_1;
        else 
            spectrogram_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    spectrogram_1_address1 <= zext_ln99_4_fu_1405_p1(12 - 1 downto 0);

    spectrogram_1_ce1_assign_proc : process(ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter11)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter11 = ap_const_logic_1))) then 
            spectrogram_1_ce1 <= ap_const_logic_1;
        else 
            spectrogram_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    spectrogram_1_d1 <= tmp_313_reg_1717;

    spectrogram_1_we1_assign_proc : process(ap_block_pp3_stage0_11001, trunc_ln99_reg_1650_pp3_iter10_reg, ap_enable_reg_pp3_iter11)
    begin
        if (((trunc_ln99_reg_1650_pp3_iter10_reg = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter11 = ap_const_logic_1))) then 
            spectrogram_1_we1 <= ap_const_logic_1;
        else 
            spectrogram_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    spectrogram_2_address1 <= zext_ln99_4_fu_1405_p1(12 - 1 downto 0);

    spectrogram_2_ce1_assign_proc : process(ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter11)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter11 = ap_const_logic_1))) then 
            spectrogram_2_ce1 <= ap_const_logic_1;
        else 
            spectrogram_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    spectrogram_2_d1 <= tmp_313_reg_1717;

    spectrogram_2_we1_assign_proc : process(ap_block_pp3_stage0_11001, trunc_ln99_reg_1650_pp3_iter10_reg, ap_enable_reg_pp3_iter11)
    begin
        if (((trunc_ln99_reg_1650_pp3_iter10_reg = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter11 = ap_const_logic_1))) then 
            spectrogram_2_we1 <= ap_const_logic_1;
        else 
            spectrogram_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    spectrogram_3_address1 <= zext_ln99_4_fu_1405_p1(12 - 1 downto 0);

    spectrogram_3_ce1_assign_proc : process(ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter11)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter11 = ap_const_logic_1))) then 
            spectrogram_3_ce1 <= ap_const_logic_1;
        else 
            spectrogram_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    spectrogram_3_d1 <= tmp_313_reg_1717;

    spectrogram_3_we1_assign_proc : process(ap_block_pp3_stage0_11001, trunc_ln99_reg_1650_pp3_iter10_reg, ap_enable_reg_pp3_iter11)
    begin
        if (((trunc_ln99_reg_1650_pp3_iter10_reg = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter11 = ap_const_logic_1))) then 
            spectrogram_3_we1 <= ap_const_logic_1;
        else 
            spectrogram_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_119_fu_1041_p3 <= (select_ln63_1_reg_1435_pp0_iter9_reg & ap_const_lv8_0);
    tmp_123_fu_1052_p3 <= (select_ln63_1_reg_1435_pp0_iter9_reg & ap_const_lv6_0);
    tmp_124_fu_1188_p3 <= (i1_0_reg_907 & ap_const_lv8_0);
    tmp_125_fu_1200_p3 <= (i1_0_reg_907 & ap_const_lv6_0);
    tmp_317_fu_1126_p21 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1029_p2),16));
    trunc_ln77_fu_1254_p1 <= j2_0_reg_918(2 - 1 downto 0);
    trunc_ln85_fu_1286_p1 <= j3_0_reg_929(2 - 1 downto 0);
    trunc_ln99_fu_1330_p1 <= j4_0_reg_940(2 - 1 downto 0);
    zext_ln63_1_fu_1059_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_123_fu_1052_p3),15));
    zext_ln63_2_fu_1098_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln63_fu_1095_p1),64));
    zext_ln63_4_fu_1069_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln63_reg_1428_pp0_iter9_reg),15));
    zext_ln63_5_fu_1078_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln63_1_fu_1072_p2),64));
    zext_ln63_fu_1048_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_119_fu_1041_p3),15));
    zext_ln77_1_fu_1196_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_124_fu_1188_p3),15));
    zext_ln77_2_fu_1268_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_fu_1258_p4),64));
    zext_ln77_3_fu_1208_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_125_fu_1200_p3),13));
    zext_ln77_4_fu_1212_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_125_fu_1200_p3),15));
    zext_ln77_5_fu_1240_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j2_0_reg_918),15));
    zext_ln77_6_fu_1249_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln77_1_fu_1244_p2),64));
    zext_ln77_fu_1184_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i1_0_reg_907),13));
    zext_ln85_fu_1300_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln4_fu_1290_p4),64));
    zext_ln99_1_fu_1344_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln5_fu_1334_p4),64));
    zext_ln99_2_fu_1387_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln5_reg_1655_pp3_iter10_reg),13));
    zext_ln99_3_fu_1395_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln99_1_fu_1390_p2),64));
    zext_ln99_4_fu_1405_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln99_2_fu_1400_p2),64));
    zext_ln99_fu_1356_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln99_reg_1650),16));
end behav;
