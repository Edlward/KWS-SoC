// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dw_layer2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_stream_V_dout,
        in_stream_V_empty_n,
        in_stream_V_read,
        out_stream_V_din,
        out_stream_V_full_n,
        out_stream_V_write,
        dw_weight2_0_address0,
        dw_weight2_0_ce0,
        dw_weight2_0_q0,
        dw_weight2_1_address0,
        dw_weight2_1_ce0,
        dw_weight2_1_q0,
        dw_weight2_2_address0,
        dw_weight2_2_ce0,
        dw_weight2_2_q0,
        dw_weight2_3_address0,
        dw_weight2_3_ce0,
        dw_weight2_3_q0
);

parameter    ap_ST_fsm_state1 = 13'd1;
parameter    ap_ST_fsm_pp0_stage0 = 13'd2;
parameter    ap_ST_fsm_state4 = 13'd4;
parameter    ap_ST_fsm_state5 = 13'd8;
parameter    ap_ST_fsm_state6 = 13'd16;
parameter    ap_ST_fsm_pp2_stage0 = 13'd32;
parameter    ap_ST_fsm_pp2_stage1 = 13'd64;
parameter    ap_ST_fsm_pp2_stage2 = 13'd128;
parameter    ap_ST_fsm_pp2_stage3 = 13'd256;
parameter    ap_ST_fsm_pp2_stage4 = 13'd512;
parameter    ap_ST_fsm_state16 = 13'd1024;
parameter    ap_ST_fsm_pp3_stage0 = 13'd2048;
parameter    ap_ST_fsm_state19 = 13'd4096;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] in_stream_V_dout;
input   in_stream_V_empty_n;
output   in_stream_V_read;
output  [31:0] out_stream_V_din;
input   out_stream_V_full_n;
output   out_stream_V_write;
output  [6:0] dw_weight2_0_address0;
output   dw_weight2_0_ce0;
input  [31:0] dw_weight2_0_q0;
output  [6:0] dw_weight2_1_address0;
output   dw_weight2_1_ce0;
input  [31:0] dw_weight2_1_q0;
output  [6:0] dw_weight2_2_address0;
output   dw_weight2_2_ce0;
input  [31:0] dw_weight2_2_q0;
output  [6:0] dw_weight2_3_address0;
output   dw_weight2_3_ce0;
input  [31:0] dw_weight2_3_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg in_stream_V_read;
reg out_stream_V_write;
reg dw_weight2_0_ce0;
reg dw_weight2_1_ce0;
reg dw_weight2_2_ce0;
reg dw_weight2_3_ce0;

(* fsm_encoding = "none" *) reg   [12:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [12:0] y_6_0_address0;
reg    y_6_0_ce0;
reg    y_6_0_we0;
reg   [31:0] y_6_0_d0;
wire   [31:0] y_6_0_q0;
reg   [12:0] y_6_1_address0;
reg    y_6_1_ce0;
reg    y_6_1_we0;
reg   [31:0] y_6_1_d0;
wire   [31:0] y_6_1_q0;
reg   [12:0] y_6_2_address0;
reg    y_6_2_ce0;
reg    y_6_2_we0;
reg   [31:0] y_6_2_d0;
wire   [31:0] y_6_2_q0;
reg   [12:0] y_6_3_address0;
reg    y_6_3_ce0;
reg    y_6_3_we0;
reg   [31:0] y_6_3_d0;
wire   [31:0] y_6_3_q0;
reg   [12:0] x_7_0_address0;
reg    x_7_0_ce0;
reg    x_7_0_we0;
wire   [31:0] x_7_0_q0;
reg   [12:0] x_7_1_address0;
reg    x_7_1_ce0;
reg    x_7_1_we0;
wire   [31:0] x_7_1_q0;
reg   [12:0] x_7_2_address0;
reg    x_7_2_ce0;
reg    x_7_2_we0;
wire   [31:0] x_7_2_q0;
reg   [12:0] x_7_3_address0;
reg    x_7_3_ce0;
reg    x_7_3_we0;
wire   [31:0] x_7_3_q0;
reg    in_stream_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln33_reg_1955;
reg    out_stream_V_blk_n;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter1;
wire    ap_block_pp3_stage0;
reg   [0:0] icmp_ln65_reg_2173;
reg   [14:0] indvar_flatten13_reg_457;
reg   [5:0] h_0_reg_468;
reg   [9:0] indvar_flatten_reg_479;
reg   [3:0] w_0_reg_490;
reg   [5:0] d_0_reg_501;
reg   [17:0] indvar_flatten135_reg_567;
reg   [2:0] kh_0_reg_578;
reg   [16:0] indvar_flatten91_reg_589;
reg   [1:0] kw_0_reg_600;
reg   [14:0] indvar_flatten59_reg_611;
reg   [5:0] oh1_0_reg_622;
reg   [9:0] indvar_flatten41_reg_633;
reg   [3:0] ow2_0_reg_644;
reg   [5:0] id3_0_reg_655;
reg   [14:0] indvar_flatten156_reg_666;
reg   [5:0] oh4_0_reg_677;
reg   [9:0] indvar_flatten142_reg_688;
reg   [3:0] ow5_0_reg_699;
reg   [5:0] id6_0_reg_710;
wire   [0:0] icmp_ln33_fu_733_p2;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [14:0] add_ln33_fu_739_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [5:0] select_ln38_1_fu_765_p3;
reg   [5:0] select_ln38_1_reg_1964;
wire   [3:0] select_ln38_3_fu_811_p3;
reg   [3:0] select_ln38_3_reg_1971;
wire   [1:0] trunc_ln38_fu_819_p1;
reg   [1:0] trunc_ln38_reg_1977;
reg   [3:0] tmp_269_reg_1981;
wire   [5:0] d_fu_833_p2;
wire   [9:0] select_ln34_fu_845_p3;
wire   [14:0] add_ln43_fu_931_p2;
wire    ap_CS_fsm_state5;
wire   [5:0] select_ln47_1_fu_957_p3;
wire   [0:0] icmp_ln43_fu_925_p2;
wire   [3:0] select_ln47_3_fu_1015_p3;
wire   [5:0] id_fu_1091_p2;
wire   [9:0] select_ln44_fu_1103_p3;
wire   [0:0] icmp_ln52_fu_1131_p2;
reg   [0:0] icmp_ln52_reg_2027;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state7_pp2_stage0_iter0;
wire    ap_block_state12_pp2_stage0_iter1;
wire    ap_block_pp2_stage0_11001;
wire   [17:0] add_ln52_fu_1137_p2;
reg   [17:0] add_ln52_reg_2031;
reg    ap_enable_reg_pp2_iter0;
wire   [2:0] select_ln52_1_fu_1163_p3;
reg   [2:0] select_ln52_1_reg_2036;
wire   [1:0] select_ln53_4_fu_1269_p3;
reg   [1:0] select_ln53_4_reg_2041;
wire   [5:0] select_ln58_4_fu_1391_p3;
reg   [5:0] select_ln58_4_reg_2046;
wire   [3:0] select_ln58_8_fu_1481_p3;
reg   [3:0] select_ln58_8_reg_2052;
wire   [1:0] trunc_ln58_5_fu_1543_p1;
reg   [1:0] trunc_ln58_5_reg_2058;
reg   [1:0] trunc_ln58_5_reg_2058_pp2_iter1_reg;
wire   [13:0] zext_ln58_17_fu_1557_p1;
reg   [13:0] zext_ln58_17_reg_2063;
wire   [5:0] id_2_fu_1593_p2;
reg   [5:0] id_2_reg_2108;
wire   [9:0] select_ln55_fu_1605_p3;
reg   [9:0] select_ln55_reg_2113;
wire   [14:0] select_ln54_fu_1619_p3;
reg   [14:0] select_ln54_reg_2118;
wire   [16:0] select_ln53_7_fu_1633_p3;
reg   [16:0] select_ln53_7_reg_2123;
wire   [31:0] zext_ln58_10_fu_1641_p1;
reg   [31:0] zext_ln58_10_reg_2128;
wire    ap_CS_fsm_pp2_stage1;
wire    ap_block_state8_pp2_stage1_iter0;
wire    ap_block_state13_pp2_stage1_iter1;
wire    ap_block_pp2_stage1_11001;
wire   [31:0] tmp_229_fu_1644_p6;
wire   [31:0] tmp_230_fu_1659_p6;
reg   [12:0] y_6_0_addr_1_reg_2143;
wire    ap_CS_fsm_pp2_stage4;
wire    ap_block_state11_pp2_stage4_iter0;
wire    ap_block_pp2_stage4_11001;
reg   [12:0] y_6_1_addr_1_reg_2148;
reg   [12:0] y_6_2_addr_1_reg_2153;
reg   [12:0] y_6_3_addr_1_reg_2158;
wire   [31:0] grp_fu_729_p2;
reg   [31:0] tmp_s_reg_2163;
wire   [31:0] tmp_228_fu_1737_p6;
wire   [0:0] icmp_ln65_fu_1751_p2;
wire    ap_block_state17_pp3_stage0_iter0;
reg    ap_block_state18_pp3_stage0_iter1;
reg    ap_block_pp3_stage0_11001;
wire   [14:0] add_ln65_fu_1757_p2;
reg    ap_enable_reg_pp3_iter0;
wire   [5:0] select_ln69_1_fu_1783_p3;
reg   [5:0] select_ln69_1_reg_2182;
wire   [3:0] select_ln69_3_fu_1841_p3;
reg   [3:0] select_ln69_3_reg_2187;
wire   [1:0] trunc_ln69_fu_1885_p1;
reg   [1:0] trunc_ln69_reg_2192;
wire   [5:0] id_1_fu_1917_p2;
wire   [9:0] select_ln66_fu_1929_p3;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_CS_fsm_state6;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state7;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp2_stage4_subdone;
wire    ap_block_state10_pp2_stage3_iter0;
wire    ap_block_state15_pp2_stage3_iter1;
wire    ap_block_pp2_stage3_subdone;
wire    ap_CS_fsm_pp2_stage3;
wire    ap_CS_fsm_state16;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state17;
reg   [5:0] ap_phi_mux_h_0_phi_fu_472_p4;
reg   [3:0] ap_phi_mux_w_0_phi_fu_494_p4;
reg   [14:0] indvar_flatten34_reg_512;
wire    ap_CS_fsm_state4;
reg   [5:0] oh_0_reg_523;
reg   [9:0] indvar_flatten20_reg_534;
reg   [3:0] ow_0_reg_545;
reg   [5:0] id_0_reg_556;
reg   [17:0] ap_phi_mux_indvar_flatten135_phi_fu_571_p4;
wire    ap_block_pp2_stage0;
reg   [2:0] ap_phi_mux_kh_0_phi_fu_582_p4;
reg   [16:0] ap_phi_mux_indvar_flatten91_phi_fu_593_p4;
reg   [1:0] ap_phi_mux_kw_0_phi_fu_604_p4;
reg   [14:0] ap_phi_mux_indvar_flatten59_phi_fu_615_p4;
reg   [5:0] ap_phi_mux_oh1_0_phi_fu_626_p4;
reg   [9:0] ap_phi_mux_indvar_flatten41_phi_fu_637_p4;
reg   [3:0] ap_phi_mux_ow2_0_phi_fu_648_p4;
reg   [5:0] ap_phi_mux_id3_0_phi_fu_659_p4;
reg   [5:0] ap_phi_mux_oh4_0_phi_fu_681_p4;
reg   [3:0] ap_phi_mux_ow5_0_phi_fu_703_p4;
wire   [63:0] zext_ln38_5_fu_917_p1;
wire   [63:0] zext_ln47_4_fu_1083_p1;
wire   [63:0] zext_ln58_19_fu_1571_p1;
wire   [63:0] zext_ln58_20_fu_1585_p1;
wire   [63:0] zext_ln58_21_fu_1729_p1;
wire    ap_block_pp2_stage4;
wire   [63:0] zext_ln69_5_fu_1909_p1;
wire   [31:0] outprepare_fu_1940_p6;
reg    ap_block_pp3_stage0_01001;
wire   [1:0] trunc_ln47_fu_1059_p1;
wire    ap_block_pp2_stage3_11001;
wire   [31:0] grp_fu_721_p2;
wire    ap_block_pp2_stage3;
wire    ap_block_pp2_stage1;
wire   [0:0] icmp_ln34_fu_751_p2;
wire   [5:0] h_fu_745_p2;
wire   [0:0] icmp_ln35_fu_779_p2;
wire   [0:0] xor_ln38_fu_773_p2;
wire   [3:0] select_ln38_fu_757_p3;
wire   [0:0] and_ln38_fu_785_p2;
wire   [0:0] or_ln38_fu_797_p2;
wire   [3:0] w_fu_791_p2;
wire   [5:0] select_ln38_2_fu_803_p3;
wire   [9:0] add_ln34_1_fu_839_p2;
wire   [8:0] tmp_267_fu_856_p3;
wire   [9:0] zext_ln38_fu_853_p1;
wire   [9:0] zext_ln38_1_fu_863_p1;
wire   [9:0] add_ln38_fu_867_p2;
wire   [9:0] zext_ln38_2_fu_873_p1;
wire   [9:0] add_ln38_2_fu_876_p2;
wire   [11:0] tmp_fu_890_p3;
wire   [13:0] p_shl_cast_fu_882_p3;
wire   [13:0] zext_ln38_3_fu_898_p1;
wire   [13:0] sub_ln38_fu_902_p2;
wire   [13:0] zext_ln38_4_fu_908_p1;
wire   [13:0] add_ln38_3_fu_911_p2;
wire   [0:0] icmp_ln44_fu_943_p2;
wire   [5:0] oh_fu_937_p2;
wire   [8:0] tmp_270_fu_965_p3;
wire   [0:0] icmp_ln45_fu_983_p2;
wire   [0:0] xor_ln47_fu_977_p2;
wire   [3:0] select_ln47_fu_949_p3;
wire   [0:0] and_ln47_fu_989_p2;
wire   [0:0] or_ln47_fu_1001_p2;
wire   [3:0] ow_fu_995_p2;
wire   [9:0] zext_ln47_1_fu_1023_p1;
wire   [9:0] zext_ln47_fu_973_p1;
wire   [9:0] add_ln47_fu_1027_p2;
wire   [11:0] tmp_271_fu_1041_p3;
wire   [13:0] p_shl15_cast_fu_1033_p3;
wire   [13:0] zext_ln47_2_fu_1049_p1;
wire   [5:0] select_ln47_2_fu_1007_p3;
wire   [3:0] tmp_272_fu_1063_p4;
wire   [13:0] zext_ln47_3_fu_1073_p1;
wire   [13:0] sub_ln47_fu_1053_p2;
wire   [13:0] add_ln47_1_fu_1077_p2;
wire   [9:0] add_ln44_2_fu_1097_p2;
wire   [5:0] zext_ln52_fu_1111_p1;
wire   [3:0] zext_ln53_fu_1115_p1;
wire   [0:0] icmp_ln53_fu_1149_p2;
wire   [2:0] kh_fu_1143_p2;
wire   [3:0] tmp_273_fu_1175_p3;
wire   [5:0] zext_ln52_3_fu_1187_p1;
wire   [5:0] add_ln58_fu_1119_p2;
wire   [3:0] add_ln58_1_fu_1125_p2;
wire   [0:0] icmp_ln56_fu_1213_p2;
wire   [0:0] xor_ln52_fu_1207_p2;
wire   [0:0] icmp_ln55_fu_1225_p2;
wire   [0:0] icmp_ln54_fu_1237_p2;
wire   [1:0] select_ln52_fu_1155_p3;
wire   [0:0] and_ln52_2_fu_1243_p2;
wire   [0:0] or_ln53_fu_1255_p2;
wire   [1:0] kw_fu_1249_p2;
wire   [4:0] zext_ln52_2_fu_1183_p1;
wire   [4:0] zext_ln53_7_fu_1285_p1;
wire   [4:0] add_ln58_5_fu_1289_p2;
wire   [3:0] trunc_ln58_fu_1295_p1;
wire   [6:0] tmp_274_fu_1307_p3;
wire   [7:0] p_shl17_cast_fu_1299_p3;
wire   [7:0] zext_ln58_fu_1315_p1;
wire   [5:0] zext_ln52_1_fu_1171_p1;
wire   [5:0] select_ln52_2_fu_1191_p3;
wire   [3:0] zext_ln53_6_fu_1281_p1;
wire   [3:0] select_ln52_3_fu_1199_p3;
wire   [0:0] xor_ln53_fu_1341_p2;
wire   [0:0] and_ln52_fu_1219_p2;
wire   [0:0] or_ln53_1_fu_1347_p2;
wire   [0:0] and_ln52_1_fu_1231_p2;
wire   [5:0] select_ln53_fu_1261_p3;
wire   [0:0] and_ln53_1_fu_1359_p2;
wire   [0:0] or_ln58_fu_1371_p2;
wire   [0:0] or_ln58_2_fu_1377_p2;
wire   [5:0] oh_4_fu_1365_p2;
wire   [5:0] add_ln58_6_fu_1399_p2;
wire   [5:0] select_ln53_5_fu_1325_p3;
wire   [5:0] select_ln58_5_fu_1405_p3;
wire   [8:0] tmp_276_fu_1417_p3;
wire   [63:0] zext_ln58_13_fu_1413_p1;
wire   [63:0] zext_ln58_14_fu_1425_p1;
wire   [3:0] zext_ln53_5_fu_1277_p1;
wire   [3:0] select_ln53_6_fu_1333_p3;
wire   [0:0] and_ln53_fu_1353_p2;
wire   [0:0] xor_ln58_fu_1443_p2;
wire   [3:0] select_ln58_fu_1383_p3;
wire   [0:0] and_ln58_fu_1449_p2;
wire   [0:0] or_ln58_3_fu_1461_p2;
wire   [0:0] or_ln58_4_fu_1467_p2;
wire   [3:0] ow_1_fu_1455_p2;
wire   [3:0] add_ln58_9_fu_1489_p2;
wire   [3:0] select_ln58_6_fu_1435_p3;
wire   [3:0] select_ln58_9_fu_1495_p3;
wire   [63:0] add_ln58_7_fu_1429_p2;
wire   [63:0] zext_ln58_16_fu_1503_p1;
wire   [63:0] add_ln58_10_fu_1507_p2;
wire   [9:0] trunc_ln58_3_fu_1513_p1;
wire   [11:0] trunc_ln58_4_fu_1525_p1;
wire   [13:0] p_shl22_cast_fu_1517_p3;
wire   [13:0] p_shl23_cast_fu_1529_p3;
wire   [5:0] select_ln58_7_fu_1473_p3;
wire   [3:0] tmp_277_fu_1547_p4;
wire   [7:0] sub_ln58_fu_1319_p2;
wire   [7:0] zext_ln58_18_fu_1561_p1;
wire   [7:0] add_ln58_11_fu_1565_p2;
wire   [13:0] sub_ln58_4_fu_1537_p2;
wire   [13:0] add_ln58_12_fu_1579_p2;
wire   [9:0] add_ln55_1_fu_1599_p2;
wire   [14:0] add_ln54_1_fu_1613_p2;
wire   [16:0] add_ln53_3_fu_1627_p2;
wire   [8:0] tmp_275_fu_1674_p3;
wire   [63:0] zext_ln58_12_fu_1681_p1;
wire   [63:0] zext_ln58_15_fu_1685_p1;
wire   [63:0] add_ln58_8_fu_1688_p2;
wire   [9:0] trunc_ln58_1_fu_1694_p1;
wire   [11:0] trunc_ln58_2_fu_1706_p1;
wire   [13:0] p_shl20_cast_fu_1698_p3;
wire   [13:0] p_shl21_cast_fu_1710_p3;
wire   [13:0] sub_ln58_3_fu_1718_p2;
wire   [13:0] add_ln58_13_fu_1724_p2;
wire   [0:0] icmp_ln66_fu_1769_p2;
wire   [5:0] oh_3_fu_1763_p2;
wire   [8:0] tmp_278_fu_1791_p3;
wire   [0:0] icmp_ln67_fu_1809_p2;
wire   [0:0] xor_ln69_fu_1803_p2;
wire   [3:0] select_ln69_fu_1775_p3;
wire   [0:0] and_ln69_fu_1815_p2;
wire   [0:0] or_ln69_fu_1827_p2;
wire   [3:0] ow_2_fu_1821_p2;
wire   [9:0] zext_ln69_1_fu_1849_p1;
wire   [9:0] zext_ln69_fu_1799_p1;
wire   [9:0] add_ln69_fu_1853_p2;
wire   [11:0] tmp_279_fu_1867_p3;
wire   [13:0] p_shl24_cast_fu_1859_p3;
wire   [13:0] zext_ln69_3_fu_1875_p1;
wire   [5:0] select_ln69_2_fu_1833_p3;
wire   [3:0] tmp_280_fu_1889_p4;
wire   [13:0] zext_ln69_4_fu_1899_p1;
wire   [13:0] sub_ln69_fu_1879_p2;
wire   [13:0] add_ln69_1_fu_1903_p2;
wire   [9:0] add_ln66_1_fu_1923_p2;
wire   [31:0] outprepare_fu_1940_p5;
wire    ap_CS_fsm_state19;
reg   [12:0] ap_NS_fsm;
wire    ap_block_pp2_stage1_subdone;
wire    ap_block_state9_pp2_stage2_iter0;
wire    ap_block_state14_pp2_stage2_iter1;
wire    ap_block_pp2_stage2_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;

// power-on initialization
initial begin
#0 ap_CS_fsm = 13'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
end

dw_layer2_y_6_0 #(
    .DataWidth( 32 ),
    .AddressRange( 4128 ),
    .AddressWidth( 13 ))
y_6_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(y_6_0_address0),
    .ce0(y_6_0_ce0),
    .we0(y_6_0_we0),
    .d0(y_6_0_d0),
    .q0(y_6_0_q0)
);

dw_layer2_y_6_0 #(
    .DataWidth( 32 ),
    .AddressRange( 4128 ),
    .AddressWidth( 13 ))
y_6_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(y_6_1_address0),
    .ce0(y_6_1_ce0),
    .we0(y_6_1_we0),
    .d0(y_6_1_d0),
    .q0(y_6_1_q0)
);

dw_layer2_y_6_0 #(
    .DataWidth( 32 ),
    .AddressRange( 4128 ),
    .AddressWidth( 13 ))
y_6_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(y_6_2_address0),
    .ce0(y_6_2_ce0),
    .we0(y_6_2_we0),
    .d0(y_6_2_d0),
    .q0(y_6_2_q0)
);

dw_layer2_y_6_0 #(
    .DataWidth( 32 ),
    .AddressRange( 4128 ),
    .AddressWidth( 13 ))
y_6_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(y_6_3_address0),
    .ce0(y_6_3_ce0),
    .we0(y_6_3_we0),
    .d0(y_6_3_d0),
    .q0(y_6_3_q0)
);

pw_layer1_y_9_0 #(
    .DataWidth( 32 ),
    .AddressRange( 4968 ),
    .AddressWidth( 13 ))
x_7_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(x_7_0_address0),
    .ce0(x_7_0_ce0),
    .we0(x_7_0_we0),
    .d0(in_stream_V_dout),
    .q0(x_7_0_q0)
);

pw_layer1_y_9_0 #(
    .DataWidth( 32 ),
    .AddressRange( 4968 ),
    .AddressWidth( 13 ))
x_7_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(x_7_1_address0),
    .ce0(x_7_1_ce0),
    .we0(x_7_1_we0),
    .d0(in_stream_V_dout),
    .q0(x_7_1_q0)
);

pw_layer1_y_9_0 #(
    .DataWidth( 32 ),
    .AddressRange( 4968 ),
    .AddressWidth( 13 ))
x_7_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(x_7_2_address0),
    .ce0(x_7_2_ce0),
    .we0(x_7_2_we0),
    .d0(in_stream_V_dout),
    .q0(x_7_2_q0)
);

pw_layer1_y_9_0 #(
    .DataWidth( 32 ),
    .AddressRange( 4968 ),
    .AddressWidth( 13 ))
x_7_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(x_7_3_address0),
    .ce0(x_7_3_ce0),
    .we0(x_7_3_we0),
    .d0(in_stream_V_dout),
    .q0(x_7_3_q0)
);

kws_fadd_32ns_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kws_fadd_32ns_32ndEe_U31(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_228_fu_1737_p6),
    .din1(tmp_s_reg_2163),
    .ce(1'b1),
    .dout(grp_fu_721_p2)
);

kws_fmul_32ns_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kws_fmul_32ns_32ncud_U32(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_229_fu_1644_p6),
    .din1(tmp_230_fu_1659_p6),
    .ce(1'b1),
    .dout(grp_fu_729_p2)
);

kws_mux_432_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kws_mux_432_32_1_1_U33(
    .din0(x_7_0_q0),
    .din1(x_7_1_q0),
    .din2(x_7_2_q0),
    .din3(x_7_3_q0),
    .din4(zext_ln58_10_fu_1641_p1),
    .dout(tmp_229_fu_1644_p6)
);

kws_mux_432_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kws_mux_432_32_1_1_U34(
    .din0(dw_weight2_0_q0),
    .din1(dw_weight2_1_q0),
    .din2(dw_weight2_2_q0),
    .din3(dw_weight2_3_q0),
    .din4(zext_ln58_10_fu_1641_p1),
    .dout(tmp_230_fu_1659_p6)
);

kws_mux_432_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kws_mux_432_32_1_1_U35(
    .din0(y_6_0_q0),
    .din1(y_6_1_q0),
    .din2(y_6_2_q0),
    .din3(y_6_3_q0),
    .din4(zext_ln58_10_reg_2128),
    .dout(tmp_228_fu_1737_p6)
);

kws_mux_432_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kws_mux_432_32_1_1_U36(
    .din0(y_6_0_q0),
    .din1(y_6_1_q0),
    .din2(y_6_2_q0),
    .din3(y_6_3_q0),
    .din4(outprepare_fu_1940_p5),
    .dout(outprepare_fu_1940_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state7) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp2_stage3_subdone) & (1'b1 == ap_CS_fsm_pp2_stage3)) | ((1'b0 == ap_block_pp2_stage4_subdone) & (1'b1 == ap_CS_fsm_pp2_stage4)))) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state17) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state16)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state17))) begin
            ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state17);
        end else if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end else if ((1'b1 == ap_CS_fsm_state16)) begin
            ap_enable_reg_pp3_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln33_fu_733_p2 == 1'd0))) begin
        d_0_reg_501 <= d_fu_833_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        d_0_reg_501 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln33_reg_1955 == 1'd0))) begin
        h_0_reg_468 <= select_ln38_1_reg_1964;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        h_0_reg_468 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        id3_0_reg_655 <= 6'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln52_reg_2027 == 1'd0))) begin
        id3_0_reg_655 <= id_2_reg_2108;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        id6_0_reg_710 <= 6'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln65_fu_1751_p2 == 1'd0))) begin
        id6_0_reg_710 <= id_1_fu_1917_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        id_0_reg_556 <= 6'd0;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln43_fu_925_p2 == 1'd0))) begin
        id_0_reg_556 <= id_fu_1091_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        indvar_flatten135_reg_567 <= 18'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln52_reg_2027 == 1'd0))) begin
        indvar_flatten135_reg_567 <= add_ln52_reg_2031;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln33_fu_733_p2 == 1'd0))) begin
        indvar_flatten13_reg_457 <= add_ln33_fu_739_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten13_reg_457 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        indvar_flatten142_reg_688 <= 10'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln65_fu_1751_p2 == 1'd0))) begin
        indvar_flatten142_reg_688 <= select_ln66_fu_1929_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        indvar_flatten156_reg_666 <= 15'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln65_fu_1751_p2 == 1'd0))) begin
        indvar_flatten156_reg_666 <= add_ln65_fu_1757_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        indvar_flatten20_reg_534 <= 10'd0;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln43_fu_925_p2 == 1'd0))) begin
        indvar_flatten20_reg_534 <= select_ln44_fu_1103_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        indvar_flatten34_reg_512 <= 15'd0;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln43_fu_925_p2 == 1'd0))) begin
        indvar_flatten34_reg_512 <= add_ln43_fu_931_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        indvar_flatten41_reg_633 <= 10'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln52_reg_2027 == 1'd0))) begin
        indvar_flatten41_reg_633 <= select_ln55_reg_2113;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        indvar_flatten59_reg_611 <= 15'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln52_reg_2027 == 1'd0))) begin
        indvar_flatten59_reg_611 <= select_ln54_reg_2118;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        indvar_flatten91_reg_589 <= 17'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln52_reg_2027 == 1'd0))) begin
        indvar_flatten91_reg_589 <= select_ln53_7_reg_2123;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln33_fu_733_p2 == 1'd0))) begin
        indvar_flatten_reg_479 <= select_ln34_fu_845_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_479 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        kh_0_reg_578 <= 3'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln52_reg_2027 == 1'd0))) begin
        kh_0_reg_578 <= select_ln52_1_reg_2036;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        kw_0_reg_600 <= 2'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln52_reg_2027 == 1'd0))) begin
        kw_0_reg_600 <= select_ln53_4_reg_2041;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        oh1_0_reg_622 <= 6'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln52_reg_2027 == 1'd0))) begin
        oh1_0_reg_622 <= select_ln58_4_reg_2046;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        oh4_0_reg_677 <= 6'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln65_reg_2173 == 1'd0))) begin
        oh4_0_reg_677 <= select_ln69_1_reg_2182;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        oh_0_reg_523 <= 6'd0;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln43_fu_925_p2 == 1'd0))) begin
        oh_0_reg_523 <= select_ln47_1_fu_957_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ow2_0_reg_644 <= 4'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln52_reg_2027 == 1'd0))) begin
        ow2_0_reg_644 <= select_ln58_8_reg_2052;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        ow5_0_reg_699 <= 4'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln65_reg_2173 == 1'd0))) begin
        ow5_0_reg_699 <= select_ln69_3_reg_2187;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ow_0_reg_545 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln43_fu_925_p2 == 1'd0))) begin
        ow_0_reg_545 <= select_ln47_3_fu_1015_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln33_reg_1955 == 1'd0))) begin
        w_0_reg_490 <= select_ln38_3_reg_1971;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        w_0_reg_490 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        add_ln52_reg_2031 <= add_ln52_fu_1137_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln33_reg_1955 <= icmp_ln33_fu_733_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln52_reg_2027 <= icmp_ln52_fu_1131_p2;
        trunc_ln58_5_reg_2058_pp2_iter1_reg <= trunc_ln58_5_reg_2058;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        icmp_ln65_reg_2173 <= icmp_ln65_fu_1751_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln52_fu_1131_p2 == 1'd0))) begin
        id_2_reg_2108 <= id_2_fu_1593_p2;
        select_ln52_1_reg_2036 <= select_ln52_1_fu_1163_p3;
        select_ln53_4_reg_2041 <= select_ln53_4_fu_1269_p3;
        select_ln53_7_reg_2123 <= select_ln53_7_fu_1633_p3;
        select_ln54_reg_2118 <= select_ln54_fu_1619_p3;
        select_ln55_reg_2113 <= select_ln55_fu_1605_p3;
        select_ln58_4_reg_2046 <= select_ln58_4_fu_1391_p3;
        select_ln58_8_reg_2052 <= select_ln58_8_fu_1481_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln33_fu_733_p2 == 1'd0))) begin
        select_ln38_1_reg_1964 <= select_ln38_1_fu_765_p3;
        select_ln38_3_reg_1971 <= select_ln38_3_fu_811_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln65_fu_1751_p2 == 1'd0))) begin
        select_ln69_1_reg_2182 <= select_ln69_1_fu_1783_p3;
        select_ln69_3_reg_2187 <= select_ln69_3_fu_1841_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln33_fu_733_p2 == 1'd0))) begin
        tmp_269_reg_1981 <= {{select_ln38_2_fu_803_p3[5:2]}};
        trunc_ln38_reg_1977 <= trunc_ln38_fu_819_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage4_11001) & (1'b1 == ap_CS_fsm_pp2_stage4) & (icmp_ln52_reg_2027 == 1'd0))) begin
        tmp_s_reg_2163 <= grp_fu_729_p2;
        y_6_0_addr_1_reg_2143 <= zext_ln58_21_fu_1729_p1;
        y_6_1_addr_1_reg_2148 <= zext_ln58_21_fu_1729_p1;
        y_6_2_addr_1_reg_2153 <= zext_ln58_21_fu_1729_p1;
        y_6_3_addr_1_reg_2158 <= zext_ln58_21_fu_1729_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln52_fu_1131_p2 == 1'd0))) begin
        trunc_ln58_5_reg_2058 <= trunc_ln58_5_fu_1543_p1;
        zext_ln58_17_reg_2063[3 : 0] <= zext_ln58_17_fu_1557_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln65_fu_1751_p2 == 1'd0))) begin
        trunc_ln69_reg_2192 <= trunc_ln69_fu_1885_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1) & (icmp_ln52_reg_2027 == 1'd0))) begin
        zext_ln58_10_reg_2128[1 : 0] <= zext_ln58_10_fu_1641_p1[1 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln33_fu_733_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln52_fu_1131_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state7 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state7 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln65_fu_1751_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state17 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state17 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln33_reg_1955 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_h_0_phi_fu_472_p4 = select_ln38_1_reg_1964;
    end else begin
        ap_phi_mux_h_0_phi_fu_472_p4 = h_0_reg_468;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln52_reg_2027 == 1'd0))) begin
        ap_phi_mux_id3_0_phi_fu_659_p4 = id_2_reg_2108;
    end else begin
        ap_phi_mux_id3_0_phi_fu_659_p4 = id3_0_reg_655;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln52_reg_2027 == 1'd0))) begin
        ap_phi_mux_indvar_flatten135_phi_fu_571_p4 = add_ln52_reg_2031;
    end else begin
        ap_phi_mux_indvar_flatten135_phi_fu_571_p4 = indvar_flatten135_reg_567;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln52_reg_2027 == 1'd0))) begin
        ap_phi_mux_indvar_flatten41_phi_fu_637_p4 = select_ln55_reg_2113;
    end else begin
        ap_phi_mux_indvar_flatten41_phi_fu_637_p4 = indvar_flatten41_reg_633;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln52_reg_2027 == 1'd0))) begin
        ap_phi_mux_indvar_flatten59_phi_fu_615_p4 = select_ln54_reg_2118;
    end else begin
        ap_phi_mux_indvar_flatten59_phi_fu_615_p4 = indvar_flatten59_reg_611;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln52_reg_2027 == 1'd0))) begin
        ap_phi_mux_indvar_flatten91_phi_fu_593_p4 = select_ln53_7_reg_2123;
    end else begin
        ap_phi_mux_indvar_flatten91_phi_fu_593_p4 = indvar_flatten91_reg_589;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln52_reg_2027 == 1'd0))) begin
        ap_phi_mux_kh_0_phi_fu_582_p4 = select_ln52_1_reg_2036;
    end else begin
        ap_phi_mux_kh_0_phi_fu_582_p4 = kh_0_reg_578;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln52_reg_2027 == 1'd0))) begin
        ap_phi_mux_kw_0_phi_fu_604_p4 = select_ln53_4_reg_2041;
    end else begin
        ap_phi_mux_kw_0_phi_fu_604_p4 = kw_0_reg_600;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln52_reg_2027 == 1'd0))) begin
        ap_phi_mux_oh1_0_phi_fu_626_p4 = select_ln58_4_reg_2046;
    end else begin
        ap_phi_mux_oh1_0_phi_fu_626_p4 = oh1_0_reg_622;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0) & (icmp_ln65_reg_2173 == 1'd0))) begin
        ap_phi_mux_oh4_0_phi_fu_681_p4 = select_ln69_1_reg_2182;
    end else begin
        ap_phi_mux_oh4_0_phi_fu_681_p4 = oh4_0_reg_677;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln52_reg_2027 == 1'd0))) begin
        ap_phi_mux_ow2_0_phi_fu_648_p4 = select_ln58_8_reg_2052;
    end else begin
        ap_phi_mux_ow2_0_phi_fu_648_p4 = ow2_0_reg_644;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0) & (icmp_ln65_reg_2173 == 1'd0))) begin
        ap_phi_mux_ow5_0_phi_fu_703_p4 = select_ln69_3_reg_2187;
    end else begin
        ap_phi_mux_ow5_0_phi_fu_703_p4 = ow5_0_reg_699;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln33_reg_1955 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_w_0_phi_fu_494_p4 = select_ln38_3_reg_1971;
    end else begin
        ap_phi_mux_w_0_phi_fu_494_p4 = w_0_reg_490;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        dw_weight2_0_ce0 = 1'b1;
    end else begin
        dw_weight2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        dw_weight2_1_ce0 = 1'b1;
    end else begin
        dw_weight2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        dw_weight2_2_ce0 = 1'b1;
    end else begin
        dw_weight2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        dw_weight2_3_ce0 = 1'b1;
    end else begin
        dw_weight2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln33_reg_1955 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        in_stream_V_blk_n = in_stream_V_empty_n;
    end else begin
        in_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln33_reg_1955 == 1'd0))) begin
        in_stream_V_read = 1'b1;
    end else begin
        in_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0) & (icmp_ln65_reg_2173 == 1'd0))) begin
        out_stream_V_blk_n = out_stream_V_full_n;
    end else begin
        out_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln65_reg_2173 == 1'd0))) begin
        out_stream_V_write = 1'b1;
    end else begin
        out_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        x_7_0_address0 = zext_ln58_20_fu_1585_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        x_7_0_address0 = zext_ln38_5_fu_917_p1;
    end else begin
        x_7_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        x_7_0_ce0 = 1'b1;
    end else begin
        x_7_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln38_reg_1977 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x_7_0_we0 = 1'b1;
    end else begin
        x_7_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        x_7_1_address0 = zext_ln58_20_fu_1585_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        x_7_1_address0 = zext_ln38_5_fu_917_p1;
    end else begin
        x_7_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        x_7_1_ce0 = 1'b1;
    end else begin
        x_7_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln38_reg_1977 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x_7_1_we0 = 1'b1;
    end else begin
        x_7_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        x_7_2_address0 = zext_ln58_20_fu_1585_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        x_7_2_address0 = zext_ln38_5_fu_917_p1;
    end else begin
        x_7_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        x_7_2_ce0 = 1'b1;
    end else begin
        x_7_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln38_reg_1977 == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x_7_2_we0 = 1'b1;
    end else begin
        x_7_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        x_7_3_address0 = zext_ln58_20_fu_1585_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        x_7_3_address0 = zext_ln38_5_fu_917_p1;
    end else begin
        x_7_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        x_7_3_ce0 = 1'b1;
    end else begin
        x_7_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln38_reg_1977 == 2'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x_7_3_we0 = 1'b1;
    end else begin
        x_7_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        y_6_0_address0 = zext_ln69_5_fu_1909_p1;
    end else if (((1'b0 == ap_block_pp2_stage3) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        y_6_0_address0 = y_6_0_addr_1_reg_2143;
    end else if (((1'b0 == ap_block_pp2_stage4) & (1'b1 == ap_CS_fsm_pp2_stage4) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        y_6_0_address0 = zext_ln58_21_fu_1729_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        y_6_0_address0 = zext_ln47_4_fu_1083_p1;
    end else begin
        y_6_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((1'b0 == ap_block_pp2_stage3_11001) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((1'b0 == ap_block_pp2_stage4_11001) & (1'b1 == ap_CS_fsm_pp2_stage4) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        y_6_0_ce0 = 1'b1;
    end else begin
        y_6_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage3) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        y_6_0_d0 = grp_fu_721_p2;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        y_6_0_d0 = 32'd0;
    end else begin
        y_6_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage3_11001) & (trunc_ln58_5_reg_2058_pp2_iter1_reg == 2'd0) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((trunc_ln47_fu_1059_p1 == 2'd0) & (1'b1 == ap_CS_fsm_state5) & (icmp_ln43_fu_925_p2 == 1'd0)))) begin
        y_6_0_we0 = 1'b1;
    end else begin
        y_6_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        y_6_1_address0 = zext_ln69_5_fu_1909_p1;
    end else if (((1'b0 == ap_block_pp2_stage3) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        y_6_1_address0 = y_6_1_addr_1_reg_2148;
    end else if (((1'b0 == ap_block_pp2_stage4) & (1'b1 == ap_CS_fsm_pp2_stage4) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        y_6_1_address0 = zext_ln58_21_fu_1729_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        y_6_1_address0 = zext_ln47_4_fu_1083_p1;
    end else begin
        y_6_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((1'b0 == ap_block_pp2_stage3_11001) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((1'b0 == ap_block_pp2_stage4_11001) & (1'b1 == ap_CS_fsm_pp2_stage4) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        y_6_1_ce0 = 1'b1;
    end else begin
        y_6_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage3) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        y_6_1_d0 = grp_fu_721_p2;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        y_6_1_d0 = 32'd0;
    end else begin
        y_6_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage3_11001) & (trunc_ln58_5_reg_2058_pp2_iter1_reg == 2'd1) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((trunc_ln47_fu_1059_p1 == 2'd1) & (1'b1 == ap_CS_fsm_state5) & (icmp_ln43_fu_925_p2 == 1'd0)))) begin
        y_6_1_we0 = 1'b1;
    end else begin
        y_6_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        y_6_2_address0 = zext_ln69_5_fu_1909_p1;
    end else if (((1'b0 == ap_block_pp2_stage3) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        y_6_2_address0 = y_6_2_addr_1_reg_2153;
    end else if (((1'b0 == ap_block_pp2_stage4) & (1'b1 == ap_CS_fsm_pp2_stage4) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        y_6_2_address0 = zext_ln58_21_fu_1729_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        y_6_2_address0 = zext_ln47_4_fu_1083_p1;
    end else begin
        y_6_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((1'b0 == ap_block_pp2_stage3_11001) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((1'b0 == ap_block_pp2_stage4_11001) & (1'b1 == ap_CS_fsm_pp2_stage4) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        y_6_2_ce0 = 1'b1;
    end else begin
        y_6_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage3) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        y_6_2_d0 = grp_fu_721_p2;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        y_6_2_d0 = 32'd0;
    end else begin
        y_6_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage3_11001) & (trunc_ln58_5_reg_2058_pp2_iter1_reg == 2'd2) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((trunc_ln47_fu_1059_p1 == 2'd2) & (1'b1 == ap_CS_fsm_state5) & (icmp_ln43_fu_925_p2 == 1'd0)))) begin
        y_6_2_we0 = 1'b1;
    end else begin
        y_6_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        y_6_3_address0 = zext_ln69_5_fu_1909_p1;
    end else if (((1'b0 == ap_block_pp2_stage3) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        y_6_3_address0 = y_6_3_addr_1_reg_2158;
    end else if (((1'b0 == ap_block_pp2_stage4) & (1'b1 == ap_CS_fsm_pp2_stage4) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        y_6_3_address0 = zext_ln58_21_fu_1729_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        y_6_3_address0 = zext_ln47_4_fu_1083_p1;
    end else begin
        y_6_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((1'b0 == ap_block_pp2_stage3_11001) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((1'b0 == ap_block_pp2_stage4_11001) & (1'b1 == ap_CS_fsm_pp2_stage4) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        y_6_3_ce0 = 1'b1;
    end else begin
        y_6_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage3) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        y_6_3_d0 = grp_fu_721_p2;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        y_6_3_d0 = 32'd0;
    end else begin
        y_6_3_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage3_11001) & (trunc_ln58_5_reg_2058_pp2_iter1_reg == 2'd3) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((trunc_ln47_fu_1059_p1 == 2'd3) & (1'b1 == ap_CS_fsm_state5) & (icmp_ln43_fu_925_p2 == 1'd0)))) begin
        y_6_3_we0 = 1'b1;
    end else begin
        y_6_3_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln33_fu_733_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln33_fu_733_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln43_fu_925_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln52_fu_1131_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end else if (((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln52_fu_1131_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage1 : begin
            if ((1'b0 == ap_block_pp2_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end
        end
        ap_ST_fsm_pp2_stage2 : begin
            if ((1'b0 == ap_block_pp2_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage2;
            end
        end
        ap_ST_fsm_pp2_stage3 : begin
            if ((~((1'b0 == ap_block_pp2_stage3_subdone) & (ap_enable_reg_pp2_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter1 == 1'b1)) & (1'b0 == ap_block_pp2_stage3_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage4;
            end else if (((1'b0 == ap_block_pp2_stage3_subdone) & (ap_enable_reg_pp2_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage3;
            end
        end
        ap_ST_fsm_pp2_stage4 : begin
            if ((1'b0 == ap_block_pp2_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage4;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if (~((1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln65_fu_1751_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if (((1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln65_fu_1751_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln33_fu_739_p2 = (indvar_flatten13_reg_457 + 15'd1);

assign add_ln34_1_fu_839_p2 = (indvar_flatten_reg_479 + 10'd1);

assign add_ln38_2_fu_876_p2 = (add_ln38_fu_867_p2 + zext_ln38_2_fu_873_p1);

assign add_ln38_3_fu_911_p2 = (sub_ln38_fu_902_p2 + zext_ln38_4_fu_908_p1);

assign add_ln38_fu_867_p2 = (zext_ln38_fu_853_p1 + zext_ln38_1_fu_863_p1);

assign add_ln43_fu_931_p2 = (indvar_flatten34_reg_512 + 15'd1);

assign add_ln44_2_fu_1097_p2 = (indvar_flatten20_reg_534 + 10'd1);

assign add_ln47_1_fu_1077_p2 = (zext_ln47_3_fu_1073_p1 + sub_ln47_fu_1053_p2);

assign add_ln47_fu_1027_p2 = (zext_ln47_1_fu_1023_p1 + zext_ln47_fu_973_p1);

assign add_ln52_fu_1137_p2 = (ap_phi_mux_indvar_flatten135_phi_fu_571_p4 + 18'd1);

assign add_ln53_3_fu_1627_p2 = (ap_phi_mux_indvar_flatten91_phi_fu_593_p4 + 17'd1);

assign add_ln54_1_fu_1613_p2 = (ap_phi_mux_indvar_flatten59_phi_fu_615_p4 + 15'd1);

assign add_ln55_1_fu_1599_p2 = (ap_phi_mux_indvar_flatten41_phi_fu_637_p4 + 10'd1);

assign add_ln58_10_fu_1507_p2 = (add_ln58_7_fu_1429_p2 + zext_ln58_16_fu_1503_p1);

assign add_ln58_11_fu_1565_p2 = (sub_ln58_fu_1319_p2 + zext_ln58_18_fu_1561_p1);

assign add_ln58_12_fu_1579_p2 = (sub_ln58_4_fu_1537_p2 + zext_ln58_17_fu_1557_p1);

assign add_ln58_13_fu_1724_p2 = (sub_ln58_3_fu_1718_p2 + zext_ln58_17_reg_2063);

assign add_ln58_1_fu_1125_p2 = (ap_phi_mux_ow2_0_phi_fu_648_p4 + zext_ln53_fu_1115_p1);

assign add_ln58_5_fu_1289_p2 = (zext_ln52_2_fu_1183_p1 + zext_ln53_7_fu_1285_p1);

assign add_ln58_6_fu_1399_p2 = (oh_4_fu_1365_p2 + zext_ln52_1_fu_1171_p1);

assign add_ln58_7_fu_1429_p2 = (zext_ln58_13_fu_1413_p1 + zext_ln58_14_fu_1425_p1);

assign add_ln58_8_fu_1688_p2 = (zext_ln58_12_fu_1681_p1 + zext_ln58_15_fu_1685_p1);

assign add_ln58_9_fu_1489_p2 = (ow_1_fu_1455_p2 + zext_ln53_5_fu_1277_p1);

assign add_ln58_fu_1119_p2 = (ap_phi_mux_oh1_0_phi_fu_626_p4 + zext_ln52_fu_1111_p1);

assign add_ln65_fu_1757_p2 = (indvar_flatten156_reg_666 + 15'd1);

assign add_ln66_1_fu_1923_p2 = (10'd1 + indvar_flatten142_reg_688);

assign add_ln69_1_fu_1903_p2 = (zext_ln69_4_fu_1899_p1 + sub_ln69_fu_1879_p2);

assign add_ln69_fu_1853_p2 = (zext_ln69_1_fu_1849_p1 + zext_ln69_fu_1799_p1);

assign and_ln38_fu_785_p2 = (xor_ln38_fu_773_p2 & icmp_ln35_fu_779_p2);

assign and_ln47_fu_989_p2 = (xor_ln47_fu_977_p2 & icmp_ln45_fu_983_p2);

assign and_ln52_1_fu_1231_p2 = (xor_ln52_fu_1207_p2 & icmp_ln55_fu_1225_p2);

assign and_ln52_2_fu_1243_p2 = (xor_ln52_fu_1207_p2 & icmp_ln54_fu_1237_p2);

assign and_ln52_fu_1219_p2 = (xor_ln52_fu_1207_p2 & icmp_ln56_fu_1213_p2);

assign and_ln53_1_fu_1359_p2 = (or_ln53_1_fu_1347_p2 & and_ln52_1_fu_1231_p2);

assign and_ln53_fu_1353_p2 = (or_ln53_1_fu_1347_p2 & and_ln52_fu_1219_p2);

assign and_ln58_fu_1449_p2 = (xor_ln58_fu_1443_p2 & and_ln53_fu_1353_p2);

assign and_ln69_fu_1815_p2 = (xor_ln69_fu_1803_p2 & icmp_ln67_fu_1809_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp2_stage1 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp2_stage3 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp2_stage4 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((in_stream_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln33_reg_1955 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((in_stream_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln33_reg_1955 == 1'd0));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_01001 = ((out_stream_V_full_n == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln65_reg_2173 == 1'd0));
end

always @ (*) begin
    ap_block_pp3_stage0_11001 = ((out_stream_V_full_n == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln65_reg_2173 == 1'd0));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = ((out_stream_V_full_n == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln65_reg_2173 == 1'd0));
end

assign ap_block_state10_pp2_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp2_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp2_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp2_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp2_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state18_pp3_stage0_iter1 = ((out_stream_V_full_n == 1'b0) & (icmp_ln65_reg_2173 == 1'd0));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((in_stream_V_empty_n == 1'b0) & (icmp_ln33_reg_1955 == 1'd0));
end

assign ap_block_state7_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp2_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp2_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign d_fu_833_p2 = (select_ln38_2_fu_803_p3 + 6'd1);

assign dw_weight2_0_address0 = zext_ln58_19_fu_1571_p1;

assign dw_weight2_1_address0 = zext_ln58_19_fu_1571_p1;

assign dw_weight2_2_address0 = zext_ln58_19_fu_1571_p1;

assign dw_weight2_3_address0 = zext_ln58_19_fu_1571_p1;

assign h_fu_745_p2 = (6'd1 + ap_phi_mux_h_0_phi_fu_472_p4);

assign icmp_ln33_fu_733_p2 = ((indvar_flatten13_reg_457 == 15'd19872) ? 1'b1 : 1'b0);

assign icmp_ln34_fu_751_p2 = ((indvar_flatten_reg_479 == 10'd432) ? 1'b1 : 1'b0);

assign icmp_ln35_fu_779_p2 = ((d_0_reg_501 == 6'd48) ? 1'b1 : 1'b0);

assign icmp_ln43_fu_925_p2 = ((indvar_flatten34_reg_512 == 15'd16512) ? 1'b1 : 1'b0);

assign icmp_ln44_fu_943_p2 = ((indvar_flatten20_reg_534 == 10'd384) ? 1'b1 : 1'b0);

assign icmp_ln45_fu_983_p2 = ((id_0_reg_556 == 6'd48) ? 1'b1 : 1'b0);

assign icmp_ln52_fu_1131_p2 = ((ap_phi_mux_indvar_flatten135_phi_fu_571_p4 == 18'd132096) ? 1'b1 : 1'b0);

assign icmp_ln53_fu_1149_p2 = ((ap_phi_mux_indvar_flatten91_phi_fu_593_p4 == 17'd33024) ? 1'b1 : 1'b0);

assign icmp_ln54_fu_1237_p2 = ((ap_phi_mux_indvar_flatten59_phi_fu_615_p4 == 15'd16512) ? 1'b1 : 1'b0);

assign icmp_ln55_fu_1225_p2 = ((ap_phi_mux_indvar_flatten41_phi_fu_637_p4 == 10'd384) ? 1'b1 : 1'b0);

assign icmp_ln56_fu_1213_p2 = ((ap_phi_mux_id3_0_phi_fu_659_p4 == 6'd48) ? 1'b1 : 1'b0);

assign icmp_ln65_fu_1751_p2 = ((indvar_flatten156_reg_666 == 15'd16512) ? 1'b1 : 1'b0);

assign icmp_ln66_fu_1769_p2 = ((indvar_flatten142_reg_688 == 10'd384) ? 1'b1 : 1'b0);

assign icmp_ln67_fu_1809_p2 = ((id6_0_reg_710 == 6'd48) ? 1'b1 : 1'b0);

assign id_1_fu_1917_p2 = (6'd1 + select_ln69_2_fu_1833_p3);

assign id_2_fu_1593_p2 = (select_ln58_7_fu_1473_p3 + 6'd1);

assign id_fu_1091_p2 = (select_ln47_2_fu_1007_p3 + 6'd1);

assign kh_fu_1143_p2 = (3'd1 + ap_phi_mux_kh_0_phi_fu_582_p4);

assign kw_fu_1249_p2 = (2'd1 + select_ln52_fu_1155_p3);

assign oh_3_fu_1763_p2 = (6'd1 + ap_phi_mux_oh4_0_phi_fu_681_p4);

assign oh_4_fu_1365_p2 = (6'd1 + select_ln53_fu_1261_p3);

assign oh_fu_937_p2 = (6'd1 + oh_0_reg_523);

assign or_ln38_fu_797_p2 = (icmp_ln34_fu_751_p2 | and_ln38_fu_785_p2);

assign or_ln47_fu_1001_p2 = (icmp_ln44_fu_943_p2 | and_ln47_fu_989_p2);

assign or_ln53_1_fu_1347_p2 = (xor_ln53_fu_1341_p2 | icmp_ln53_fu_1149_p2);

assign or_ln53_fu_1255_p2 = (icmp_ln53_fu_1149_p2 | and_ln52_2_fu_1243_p2);

assign or_ln58_2_fu_1377_p2 = (or_ln58_fu_1371_p2 | icmp_ln53_fu_1149_p2);

assign or_ln58_3_fu_1461_p2 = (and_ln58_fu_1449_p2 | and_ln53_1_fu_1359_p2);

assign or_ln58_4_fu_1467_p2 = (or_ln58_3_fu_1461_p2 | or_ln53_fu_1255_p2);

assign or_ln58_fu_1371_p2 = (and_ln53_1_fu_1359_p2 | and_ln52_2_fu_1243_p2);

assign or_ln69_fu_1827_p2 = (icmp_ln66_fu_1769_p2 | and_ln69_fu_1815_p2);

assign out_stream_V_din = outprepare_fu_1940_p6;

assign outprepare_fu_1940_p5 = trunc_ln69_reg_2192;

assign ow_1_fu_1455_p2 = (4'd1 + select_ln58_fu_1383_p3);

assign ow_2_fu_1821_p2 = (4'd1 + select_ln69_fu_1775_p3);

assign ow_fu_995_p2 = (4'd1 + select_ln47_fu_949_p3);

assign p_shl15_cast_fu_1033_p3 = {{add_ln47_fu_1027_p2}, {4'd0}};

assign p_shl17_cast_fu_1299_p3 = {{trunc_ln58_fu_1295_p1}, {4'd0}};

assign p_shl20_cast_fu_1698_p3 = {{trunc_ln58_1_fu_1694_p1}, {4'd0}};

assign p_shl21_cast_fu_1710_p3 = {{trunc_ln58_2_fu_1706_p1}, {2'd0}};

assign p_shl22_cast_fu_1517_p3 = {{trunc_ln58_3_fu_1513_p1}, {4'd0}};

assign p_shl23_cast_fu_1529_p3 = {{trunc_ln58_4_fu_1525_p1}, {2'd0}};

assign p_shl24_cast_fu_1859_p3 = {{add_ln69_fu_1853_p2}, {4'd0}};

assign p_shl_cast_fu_882_p3 = {{add_ln38_2_fu_876_p2}, {4'd0}};

assign select_ln34_fu_845_p3 = ((icmp_ln34_fu_751_p2[0:0] === 1'b1) ? 10'd1 : add_ln34_1_fu_839_p2);

assign select_ln38_1_fu_765_p3 = ((icmp_ln34_fu_751_p2[0:0] === 1'b1) ? h_fu_745_p2 : ap_phi_mux_h_0_phi_fu_472_p4);

assign select_ln38_2_fu_803_p3 = ((or_ln38_fu_797_p2[0:0] === 1'b1) ? 6'd0 : d_0_reg_501);

assign select_ln38_3_fu_811_p3 = ((and_ln38_fu_785_p2[0:0] === 1'b1) ? w_fu_791_p2 : select_ln38_fu_757_p3);

assign select_ln38_fu_757_p3 = ((icmp_ln34_fu_751_p2[0:0] === 1'b1) ? 4'd0 : ap_phi_mux_w_0_phi_fu_494_p4);

assign select_ln44_fu_1103_p3 = ((icmp_ln44_fu_943_p2[0:0] === 1'b1) ? 10'd1 : add_ln44_2_fu_1097_p2);

assign select_ln47_1_fu_957_p3 = ((icmp_ln44_fu_943_p2[0:0] === 1'b1) ? oh_fu_937_p2 : oh_0_reg_523);

assign select_ln47_2_fu_1007_p3 = ((or_ln47_fu_1001_p2[0:0] === 1'b1) ? 6'd0 : id_0_reg_556);

assign select_ln47_3_fu_1015_p3 = ((and_ln47_fu_989_p2[0:0] === 1'b1) ? ow_fu_995_p2 : select_ln47_fu_949_p3);

assign select_ln47_fu_949_p3 = ((icmp_ln44_fu_943_p2[0:0] === 1'b1) ? 4'd0 : ow_0_reg_545);

assign select_ln52_1_fu_1163_p3 = ((icmp_ln53_fu_1149_p2[0:0] === 1'b1) ? kh_fu_1143_p2 : ap_phi_mux_kh_0_phi_fu_582_p4);

assign select_ln52_2_fu_1191_p3 = ((icmp_ln53_fu_1149_p2[0:0] === 1'b1) ? zext_ln52_3_fu_1187_p1 : add_ln58_fu_1119_p2);

assign select_ln52_3_fu_1199_p3 = ((icmp_ln53_fu_1149_p2[0:0] === 1'b1) ? 4'd0 : add_ln58_1_fu_1125_p2);

assign select_ln52_fu_1155_p3 = ((icmp_ln53_fu_1149_p2[0:0] === 1'b1) ? 2'd0 : ap_phi_mux_kw_0_phi_fu_604_p4);

assign select_ln53_4_fu_1269_p3 = ((and_ln52_2_fu_1243_p2[0:0] === 1'b1) ? kw_fu_1249_p2 : select_ln52_fu_1155_p3);

assign select_ln53_5_fu_1325_p3 = ((and_ln52_2_fu_1243_p2[0:0] === 1'b1) ? zext_ln52_1_fu_1171_p1 : select_ln52_2_fu_1191_p3);

assign select_ln53_6_fu_1333_p3 = ((and_ln52_2_fu_1243_p2[0:0] === 1'b1) ? zext_ln53_6_fu_1281_p1 : select_ln52_3_fu_1199_p3);

assign select_ln53_7_fu_1633_p3 = ((icmp_ln53_fu_1149_p2[0:0] === 1'b1) ? 17'd1 : add_ln53_3_fu_1627_p2);

assign select_ln53_fu_1261_p3 = ((or_ln53_fu_1255_p2[0:0] === 1'b1) ? 6'd0 : ap_phi_mux_oh1_0_phi_fu_626_p4);

assign select_ln54_fu_1619_p3 = ((or_ln53_fu_1255_p2[0:0] === 1'b1) ? 15'd1 : add_ln54_1_fu_1613_p2);

assign select_ln55_fu_1605_p3 = ((or_ln58_2_fu_1377_p2[0:0] === 1'b1) ? 10'd1 : add_ln55_1_fu_1599_p2);

assign select_ln58_4_fu_1391_p3 = ((and_ln53_1_fu_1359_p2[0:0] === 1'b1) ? oh_4_fu_1365_p2 : select_ln53_fu_1261_p3);

assign select_ln58_5_fu_1405_p3 = ((and_ln53_1_fu_1359_p2[0:0] === 1'b1) ? add_ln58_6_fu_1399_p2 : select_ln53_5_fu_1325_p3);

assign select_ln58_6_fu_1435_p3 = ((and_ln53_1_fu_1359_p2[0:0] === 1'b1) ? zext_ln53_5_fu_1277_p1 : select_ln53_6_fu_1333_p3);

assign select_ln58_7_fu_1473_p3 = ((or_ln58_4_fu_1467_p2[0:0] === 1'b1) ? 6'd0 : ap_phi_mux_id3_0_phi_fu_659_p4);

assign select_ln58_8_fu_1481_p3 = ((and_ln58_fu_1449_p2[0:0] === 1'b1) ? ow_1_fu_1455_p2 : select_ln58_fu_1383_p3);

assign select_ln58_9_fu_1495_p3 = ((and_ln58_fu_1449_p2[0:0] === 1'b1) ? add_ln58_9_fu_1489_p2 : select_ln58_6_fu_1435_p3);

assign select_ln58_fu_1383_p3 = ((or_ln58_2_fu_1377_p2[0:0] === 1'b1) ? 4'd0 : ap_phi_mux_ow2_0_phi_fu_648_p4);

assign select_ln66_fu_1929_p3 = ((icmp_ln66_fu_1769_p2[0:0] === 1'b1) ? 10'd1 : add_ln66_1_fu_1923_p2);

assign select_ln69_1_fu_1783_p3 = ((icmp_ln66_fu_1769_p2[0:0] === 1'b1) ? oh_3_fu_1763_p2 : ap_phi_mux_oh4_0_phi_fu_681_p4);

assign select_ln69_2_fu_1833_p3 = ((or_ln69_fu_1827_p2[0:0] === 1'b1) ? 6'd0 : id6_0_reg_710);

assign select_ln69_3_fu_1841_p3 = ((and_ln69_fu_1815_p2[0:0] === 1'b1) ? ow_2_fu_1821_p2 : select_ln69_fu_1775_p3);

assign select_ln69_fu_1775_p3 = ((icmp_ln66_fu_1769_p2[0:0] === 1'b1) ? 4'd0 : ap_phi_mux_ow5_0_phi_fu_703_p4);

assign sub_ln38_fu_902_p2 = (p_shl_cast_fu_882_p3 - zext_ln38_3_fu_898_p1);

assign sub_ln47_fu_1053_p2 = (p_shl15_cast_fu_1033_p3 - zext_ln47_2_fu_1049_p1);

assign sub_ln58_3_fu_1718_p2 = (p_shl20_cast_fu_1698_p3 - p_shl21_cast_fu_1710_p3);

assign sub_ln58_4_fu_1537_p2 = (p_shl22_cast_fu_1517_p3 - p_shl23_cast_fu_1529_p3);

assign sub_ln58_fu_1319_p2 = (p_shl17_cast_fu_1299_p3 - zext_ln58_fu_1315_p1);

assign sub_ln69_fu_1879_p2 = (p_shl24_cast_fu_1859_p3 - zext_ln69_3_fu_1875_p1);

assign tmp_267_fu_856_p3 = {{select_ln38_1_reg_1964}, {3'd0}};

assign tmp_270_fu_965_p3 = {{select_ln47_1_fu_957_p3}, {3'd0}};

assign tmp_271_fu_1041_p3 = {{add_ln47_fu_1027_p2}, {2'd0}};

assign tmp_272_fu_1063_p4 = {{select_ln47_2_fu_1007_p3[5:2]}};

assign tmp_273_fu_1175_p3 = {{select_ln52_1_fu_1163_p3}, {1'd0}};

assign tmp_274_fu_1307_p3 = {{add_ln58_5_fu_1289_p2}, {2'd0}};

assign tmp_275_fu_1674_p3 = {{select_ln58_4_reg_2046}, {3'd0}};

assign tmp_276_fu_1417_p3 = {{select_ln58_5_fu_1405_p3}, {3'd0}};

assign tmp_277_fu_1547_p4 = {{select_ln58_7_fu_1473_p3[5:2]}};

assign tmp_278_fu_1791_p3 = {{select_ln69_1_fu_1783_p3}, {3'd0}};

assign tmp_279_fu_1867_p3 = {{add_ln69_fu_1853_p2}, {2'd0}};

assign tmp_280_fu_1889_p4 = {{select_ln69_2_fu_1833_p3[5:2]}};

assign tmp_fu_890_p3 = {{add_ln38_2_fu_876_p2}, {2'd0}};

assign trunc_ln38_fu_819_p1 = select_ln38_2_fu_803_p3[1:0];

assign trunc_ln47_fu_1059_p1 = select_ln47_2_fu_1007_p3[1:0];

assign trunc_ln58_1_fu_1694_p1 = add_ln58_8_fu_1688_p2[9:0];

assign trunc_ln58_2_fu_1706_p1 = add_ln58_8_fu_1688_p2[11:0];

assign trunc_ln58_3_fu_1513_p1 = add_ln58_10_fu_1507_p2[9:0];

assign trunc_ln58_4_fu_1525_p1 = add_ln58_10_fu_1507_p2[11:0];

assign trunc_ln58_5_fu_1543_p1 = select_ln58_7_fu_1473_p3[1:0];

assign trunc_ln58_fu_1295_p1 = add_ln58_5_fu_1289_p2[3:0];

assign trunc_ln69_fu_1885_p1 = select_ln69_2_fu_1833_p3[1:0];

assign w_fu_791_p2 = (4'd1 + select_ln38_fu_757_p3);

assign xor_ln38_fu_773_p2 = (icmp_ln34_fu_751_p2 ^ 1'd1);

assign xor_ln47_fu_977_p2 = (icmp_ln44_fu_943_p2 ^ 1'd1);

assign xor_ln52_fu_1207_p2 = (icmp_ln53_fu_1149_p2 ^ 1'd1);

assign xor_ln53_fu_1341_p2 = (icmp_ln54_fu_1237_p2 ^ 1'd1);

assign xor_ln58_fu_1443_p2 = (1'd1 ^ and_ln53_1_fu_1359_p2);

assign xor_ln69_fu_1803_p2 = (icmp_ln66_fu_1769_p2 ^ 1'd1);

assign zext_ln38_1_fu_863_p1 = tmp_267_fu_856_p3;

assign zext_ln38_2_fu_873_p1 = select_ln38_3_reg_1971;

assign zext_ln38_3_fu_898_p1 = tmp_fu_890_p3;

assign zext_ln38_4_fu_908_p1 = tmp_269_reg_1981;

assign zext_ln38_5_fu_917_p1 = add_ln38_3_fu_911_p2;

assign zext_ln38_fu_853_p1 = select_ln38_1_reg_1964;

assign zext_ln47_1_fu_1023_p1 = select_ln47_3_fu_1015_p3;

assign zext_ln47_2_fu_1049_p1 = tmp_271_fu_1041_p3;

assign zext_ln47_3_fu_1073_p1 = tmp_272_fu_1063_p4;

assign zext_ln47_4_fu_1083_p1 = add_ln47_1_fu_1077_p2;

assign zext_ln47_fu_973_p1 = tmp_270_fu_965_p3;

assign zext_ln52_1_fu_1171_p1 = select_ln52_1_fu_1163_p3;

assign zext_ln52_2_fu_1183_p1 = tmp_273_fu_1175_p3;

assign zext_ln52_3_fu_1187_p1 = kh_fu_1143_p2;

assign zext_ln52_fu_1111_p1 = ap_phi_mux_kh_0_phi_fu_582_p4;

assign zext_ln53_5_fu_1277_p1 = select_ln53_4_fu_1269_p3;

assign zext_ln53_6_fu_1281_p1 = kw_fu_1249_p2;

assign zext_ln53_7_fu_1285_p1 = select_ln53_4_fu_1269_p3;

assign zext_ln53_fu_1115_p1 = ap_phi_mux_kw_0_phi_fu_604_p4;

assign zext_ln58_10_fu_1641_p1 = trunc_ln58_5_reg_2058;

assign zext_ln58_12_fu_1681_p1 = tmp_275_fu_1674_p3;

assign zext_ln58_13_fu_1413_p1 = select_ln58_5_fu_1405_p3;

assign zext_ln58_14_fu_1425_p1 = tmp_276_fu_1417_p3;

assign zext_ln58_15_fu_1685_p1 = select_ln58_8_reg_2052;

assign zext_ln58_16_fu_1503_p1 = select_ln58_9_fu_1495_p3;

assign zext_ln58_17_fu_1557_p1 = tmp_277_fu_1547_p4;

assign zext_ln58_18_fu_1561_p1 = tmp_277_fu_1547_p4;

assign zext_ln58_19_fu_1571_p1 = add_ln58_11_fu_1565_p2;

assign zext_ln58_20_fu_1585_p1 = add_ln58_12_fu_1579_p2;

assign zext_ln58_21_fu_1729_p1 = add_ln58_13_fu_1724_p2;

assign zext_ln58_fu_1315_p1 = tmp_274_fu_1307_p3;

assign zext_ln69_1_fu_1849_p1 = select_ln69_3_fu_1841_p3;

assign zext_ln69_3_fu_1875_p1 = tmp_279_fu_1867_p3;

assign zext_ln69_4_fu_1899_p1 = tmp_280_fu_1889_p4;

assign zext_ln69_5_fu_1909_p1 = add_ln69_1_fu_1903_p2;

assign zext_ln69_fu_1799_p1 = tmp_278_fu_1791_p3;

always @ (posedge ap_clk) begin
    zext_ln58_17_reg_2063[13:4] <= 10'b0000000000;
    zext_ln58_10_reg_2128[31:2] <= 30'b000000000000000000000000000000;
end

endmodule //dw_layer2
