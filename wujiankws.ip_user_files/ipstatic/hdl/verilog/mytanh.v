// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module mytanh (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_var,
        ap_return
);

parameter    ap_ST_fsm_state1 = 110'd1;
parameter    ap_ST_fsm_state2 = 110'd2;
parameter    ap_ST_fsm_state3 = 110'd4;
parameter    ap_ST_fsm_state4 = 110'd8;
parameter    ap_ST_fsm_state5 = 110'd16;
parameter    ap_ST_fsm_state6 = 110'd32;
parameter    ap_ST_fsm_state7 = 110'd64;
parameter    ap_ST_fsm_state8 = 110'd128;
parameter    ap_ST_fsm_state9 = 110'd256;
parameter    ap_ST_fsm_state10 = 110'd512;
parameter    ap_ST_fsm_state11 = 110'd1024;
parameter    ap_ST_fsm_state12 = 110'd2048;
parameter    ap_ST_fsm_state13 = 110'd4096;
parameter    ap_ST_fsm_state14 = 110'd8192;
parameter    ap_ST_fsm_state15 = 110'd16384;
parameter    ap_ST_fsm_state16 = 110'd32768;
parameter    ap_ST_fsm_state17 = 110'd65536;
parameter    ap_ST_fsm_state18 = 110'd131072;
parameter    ap_ST_fsm_state19 = 110'd262144;
parameter    ap_ST_fsm_state20 = 110'd524288;
parameter    ap_ST_fsm_state21 = 110'd1048576;
parameter    ap_ST_fsm_state22 = 110'd2097152;
parameter    ap_ST_fsm_state23 = 110'd4194304;
parameter    ap_ST_fsm_state24 = 110'd8388608;
parameter    ap_ST_fsm_state25 = 110'd16777216;
parameter    ap_ST_fsm_state26 = 110'd33554432;
parameter    ap_ST_fsm_state27 = 110'd67108864;
parameter    ap_ST_fsm_state28 = 110'd134217728;
parameter    ap_ST_fsm_state29 = 110'd268435456;
parameter    ap_ST_fsm_state30 = 110'd536870912;
parameter    ap_ST_fsm_state31 = 110'd1073741824;
parameter    ap_ST_fsm_state32 = 110'd2147483648;
parameter    ap_ST_fsm_state33 = 110'd4294967296;
parameter    ap_ST_fsm_state34 = 110'd8589934592;
parameter    ap_ST_fsm_state35 = 110'd17179869184;
parameter    ap_ST_fsm_state36 = 110'd34359738368;
parameter    ap_ST_fsm_state37 = 110'd68719476736;
parameter    ap_ST_fsm_state38 = 110'd137438953472;
parameter    ap_ST_fsm_state39 = 110'd274877906944;
parameter    ap_ST_fsm_state40 = 110'd549755813888;
parameter    ap_ST_fsm_state41 = 110'd1099511627776;
parameter    ap_ST_fsm_state42 = 110'd2199023255552;
parameter    ap_ST_fsm_state43 = 110'd4398046511104;
parameter    ap_ST_fsm_state44 = 110'd8796093022208;
parameter    ap_ST_fsm_state45 = 110'd17592186044416;
parameter    ap_ST_fsm_state46 = 110'd35184372088832;
parameter    ap_ST_fsm_state47 = 110'd70368744177664;
parameter    ap_ST_fsm_state48 = 110'd140737488355328;
parameter    ap_ST_fsm_state49 = 110'd281474976710656;
parameter    ap_ST_fsm_state50 = 110'd562949953421312;
parameter    ap_ST_fsm_state51 = 110'd1125899906842624;
parameter    ap_ST_fsm_state52 = 110'd2251799813685248;
parameter    ap_ST_fsm_state53 = 110'd4503599627370496;
parameter    ap_ST_fsm_state54 = 110'd9007199254740992;
parameter    ap_ST_fsm_state55 = 110'd18014398509481984;
parameter    ap_ST_fsm_state56 = 110'd36028797018963968;
parameter    ap_ST_fsm_state57 = 110'd72057594037927936;
parameter    ap_ST_fsm_state58 = 110'd144115188075855872;
parameter    ap_ST_fsm_state59 = 110'd288230376151711744;
parameter    ap_ST_fsm_state60 = 110'd576460752303423488;
parameter    ap_ST_fsm_state61 = 110'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 110'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 110'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 110'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 110'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 110'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 110'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 110'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 110'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 110'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 110'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 110'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 110'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 110'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 110'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 110'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 110'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 110'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 110'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 110'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 110'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 110'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 110'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 110'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 110'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 110'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 110'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 110'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 110'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 110'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 110'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 110'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 110'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 110'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 110'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 110'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 110'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 110'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 110'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 110'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 110'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 110'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 110'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 110'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 110'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 110'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 110'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 110'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 110'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 110'd649037107316853453566312041152512;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] in_var;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[31:0] ap_return;

(* fsm_encoding = "none" *) reg   [109:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [31:0] grp_fu_135_p2;
reg   [31:0] reg_178;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state57;
wire    ap_CS_fsm_state65;
wire    ap_CS_fsm_state73;
wire    ap_CS_fsm_state81;
wire    ap_CS_fsm_state89;
wire    ap_CS_fsm_state97;
wire    ap_CS_fsm_state105;
wire   [0:0] or_ln196_fu_212_p2;
reg   [0:0] or_ln196_reg_364;
wire    ap_CS_fsm_state2;
wire   [0:0] and_ln196_fu_218_p2;
reg   [0:0] and_ln196_reg_380;
wire   [0:0] and_ln198_1_fu_229_p2;
reg   [0:0] and_ln198_1_reg_384;
wire    ap_CS_fsm_state3;
wire   [0:0] and_ln200_1_fu_240_p2;
reg   [0:0] and_ln200_1_reg_388;
wire    ap_CS_fsm_state4;
wire   [0:0] and_ln202_1_fu_251_p2;
reg   [0:0] and_ln202_1_reg_392;
wire    ap_CS_fsm_state5;
wire   [0:0] and_ln204_1_fu_262_p2;
reg   [0:0] and_ln204_1_reg_396;
wire    ap_CS_fsm_state6;
wire   [0:0] and_ln206_1_fu_273_p2;
reg   [0:0] and_ln206_1_reg_400;
wire    ap_CS_fsm_state7;
wire   [0:0] and_ln208_1_fu_284_p2;
reg   [0:0] and_ln208_1_reg_404;
wire    ap_CS_fsm_state8;
wire   [0:0] and_ln210_1_fu_295_p2;
reg   [0:0] and_ln210_1_reg_408;
wire    ap_CS_fsm_state9;
wire   [0:0] and_ln212_1_fu_306_p2;
reg   [0:0] and_ln212_1_reg_412;
wire    ap_CS_fsm_state10;
wire   [0:0] and_ln214_1_fu_317_p2;
reg   [0:0] and_ln214_1_reg_416;
wire    ap_CS_fsm_state11;
wire   [0:0] and_ln216_1_fu_328_p2;
reg   [0:0] and_ln216_1_reg_420;
wire    ap_CS_fsm_state12;
wire   [0:0] and_ln218_1_fu_339_p2;
reg   [0:0] and_ln218_1_reg_424;
wire    ap_CS_fsm_state13;
wire   [0:0] and_ln220_1_fu_350_p2;
reg   [0:0] and_ln220_1_reg_428;
wire    ap_CS_fsm_state14;
wire   [31:0] grp_fu_119_p2;
reg   [31:0] tmp_45_reg_432;
wire    ap_CS_fsm_state21;
reg   [31:0] tmp_43_reg_437;
wire    ap_CS_fsm_state29;
reg   [31:0] tmp_41_reg_442;
wire    ap_CS_fsm_state37;
reg   [31:0] tmp_37_reg_447;
wire    ap_CS_fsm_state45;
reg   [31:0] tmp_33_reg_452;
wire    ap_CS_fsm_state53;
reg   [31:0] tmp_29_reg_457;
wire    ap_CS_fsm_state61;
reg   [31:0] tmp_25_reg_462;
wire    ap_CS_fsm_state69;
reg   [31:0] tmp_21_reg_467;
wire    ap_CS_fsm_state77;
reg   [31:0] tmp_17_reg_472;
wire    ap_CS_fsm_state85;
reg   [31:0] tmp_13_reg_477;
wire    ap_CS_fsm_state93;
reg   [31:0] tmp_5_reg_482;
wire    ap_CS_fsm_state101;
reg   [31:0] tmp_1_reg_487;
wire    ap_CS_fsm_state109;
reg   [31:0] ap_phi_mux_p_0_phi_fu_87_p28;
reg   [31:0] p_0_reg_82;
wire    ap_CS_fsm_state110;
wire    ap_CS_fsm_state102;
wire    ap_CS_fsm_state94;
wire    ap_CS_fsm_state86;
wire    ap_CS_fsm_state78;
wire    ap_CS_fsm_state70;
wire    ap_CS_fsm_state62;
wire    ap_CS_fsm_state54;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state22;
reg   [31:0] grp_fu_119_p1;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state50;
wire    ap_CS_fsm_state58;
wire    ap_CS_fsm_state66;
wire    ap_CS_fsm_state74;
wire    ap_CS_fsm_state82;
wire    ap_CS_fsm_state90;
wire    ap_CS_fsm_state98;
wire    ap_CS_fsm_state106;
reg   [31:0] grp_fu_135_p1;
reg   [31:0] grp_fu_145_p1;
reg   [31:0] grp_fu_151_p1;
wire   [31:0] bitcast_ln196_fu_183_p1;
wire   [7:0] tmp_fu_186_p4;
wire   [22:0] trunc_ln196_fu_196_p1;
wire   [0:0] icmp_ln196_1_fu_206_p2;
wire   [0:0] icmp_ln196_fu_200_p2;
wire   [0:0] grp_fu_145_p2;
wire   [0:0] and_ln198_fu_224_p2;
wire   [0:0] grp_fu_151_p2;
wire   [0:0] and_ln200_fu_235_p2;
wire   [0:0] and_ln202_fu_246_p2;
wire   [0:0] and_ln204_fu_257_p2;
wire   [0:0] and_ln206_fu_268_p2;
wire   [0:0] and_ln208_fu_279_p2;
wire   [0:0] and_ln210_fu_290_p2;
wire   [0:0] and_ln212_fu_301_p2;
wire   [0:0] and_ln214_fu_312_p2;
wire   [0:0] and_ln216_fu_323_p2;
wire   [0:0] and_ln218_fu_334_p2;
wire   [0:0] and_ln220_fu_345_p2;
reg   [4:0] grp_fu_145_opcode;
reg   [31:0] ap_return_preg;
reg   [109:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 110'd1;
#0 ap_return_preg = 32'd0;
end

kws_fadd_32ns_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kws_fadd_32ns_32nbkb_U63(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_178),
    .din1(grp_fu_119_p1),
    .ce(1'b1),
    .dout(grp_fu_119_p2)
);

kws_fmul_32ns_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kws_fmul_32ns_32ncud_U64(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(in_var),
    .din1(grp_fu_135_p1),
    .ce(1'b1),
    .dout(grp_fu_135_p2)
);

kws_fcmp_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
kws_fcmp_32ns_32neOg_U65(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(in_var),
    .din1(grp_fu_145_p1),
    .ce(1'b1),
    .opcode(grp_fu_145_opcode),
    .dout(grp_fu_145_p2)
);

kws_fcmp_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
kws_fcmp_32ns_32neOg_U66(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(in_var),
    .din1(grp_fu_151_p1),
    .ce(1'b1),
    .opcode(5'd5),
    .dout(grp_fu_151_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state22)) begin
            ap_return_preg <= ap_phi_mux_p_0_phi_fu_87_p28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln220_1_fu_350_p2) & (1'b1 == ap_CS_fsm_state14))) begin
        p_0_reg_82 <= 32'd1065353216;
    end else if (((1'd1 == and_ln196_fu_218_p2) & (1'b1 == ap_CS_fsm_state2))) begin
        p_0_reg_82 <= 32'd3212836864;
    end else if (((1'd1 == and_ln220_1_reg_428) & (1'd0 == and_ln218_1_reg_424) & (1'd0 == and_ln216_1_reg_420) & (1'd0 == and_ln214_1_reg_416) & (1'd0 == and_ln212_1_reg_412) & (1'd0 == and_ln210_1_reg_408) & (1'd0 == and_ln208_1_reg_404) & (1'd0 == and_ln206_1_reg_400) & (1'd0 == and_ln204_1_reg_396) & (1'd0 == and_ln202_1_reg_392) & (1'd0 == and_ln200_1_reg_388) & (1'd0 == and_ln198_1_reg_384) & (1'd0 == and_ln196_reg_380) & (1'b1 == ap_CS_fsm_state22))) begin
        p_0_reg_82 <= tmp_45_reg_432;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        p_0_reg_82 <= tmp_43_reg_437;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        p_0_reg_82 <= tmp_41_reg_442;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        p_0_reg_82 <= tmp_37_reg_447;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        p_0_reg_82 <= tmp_33_reg_452;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        p_0_reg_82 <= tmp_29_reg_457;
    end else if ((1'b1 == ap_CS_fsm_state70)) begin
        p_0_reg_82 <= tmp_25_reg_462;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        p_0_reg_82 <= tmp_21_reg_467;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        p_0_reg_82 <= tmp_17_reg_472;
    end else if ((1'b1 == ap_CS_fsm_state94)) begin
        p_0_reg_82 <= tmp_13_reg_477;
    end else if ((1'b1 == ap_CS_fsm_state102)) begin
        p_0_reg_82 <= tmp_5_reg_482;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        p_0_reg_82 <= tmp_1_reg_487;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        and_ln196_reg_380 <= and_ln196_fu_218_p2;
        or_ln196_reg_364 <= or_ln196_fu_212_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        and_ln198_1_reg_384 <= and_ln198_1_fu_229_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        and_ln200_1_reg_388 <= and_ln200_1_fu_240_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        and_ln202_1_reg_392 <= and_ln202_1_fu_251_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        and_ln204_1_reg_396 <= and_ln204_1_fu_262_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        and_ln206_1_reg_400 <= and_ln206_1_fu_273_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        and_ln208_1_reg_404 <= and_ln208_1_fu_284_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        and_ln210_1_reg_408 <= and_ln210_1_fu_295_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        and_ln212_1_reg_412 <= and_ln212_1_fu_306_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        and_ln214_1_reg_416 <= and_ln214_1_fu_317_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        and_ln216_1_reg_420 <= and_ln216_1_fu_328_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        and_ln218_1_reg_424 <= and_ln218_1_fu_339_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        and_ln220_1_reg_428 <= and_ln220_1_fu_350_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state17))) begin
        reg_178 <= grp_fu_135_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state93)) begin
        tmp_13_reg_477 <= grp_fu_119_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        tmp_17_reg_472 <= grp_fu_119_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        tmp_1_reg_487 <= grp_fu_119_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        tmp_21_reg_467 <= grp_fu_119_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        tmp_25_reg_462 <= grp_fu_119_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        tmp_29_reg_457 <= grp_fu_119_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        tmp_33_reg_452 <= grp_fu_119_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        tmp_37_reg_447 <= grp_fu_119_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        tmp_41_reg_442 <= grp_fu_119_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        tmp_43_reg_437 <= grp_fu_119_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        tmp_45_reg_432 <= grp_fu_119_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        tmp_5_reg_482 <= grp_fu_119_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln220_1_reg_428) & (1'd0 == and_ln218_1_reg_424) & (1'd0 == and_ln216_1_reg_420) & (1'd0 == and_ln214_1_reg_416) & (1'd0 == and_ln212_1_reg_412) & (1'd0 == and_ln210_1_reg_408) & (1'd0 == and_ln208_1_reg_404) & (1'd0 == and_ln206_1_reg_400) & (1'd0 == and_ln204_1_reg_396) & (1'd0 == and_ln202_1_reg_392) & (1'd0 == and_ln200_1_reg_388) & (1'd0 == and_ln198_1_reg_384) & (1'd0 == and_ln196_reg_380) & (1'b1 == ap_CS_fsm_state22))) begin
        ap_phi_mux_p_0_phi_fu_87_p28 = tmp_45_reg_432;
    end else begin
        ap_phi_mux_p_0_phi_fu_87_p28 = p_0_reg_82;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        ap_return = ap_phi_mux_p_0_phi_fu_87_p28;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state106)) begin
        grp_fu_119_p1 = 32'd3212830153;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        grp_fu_119_p1 = 32'd3212791566;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        grp_fu_119_p1 = 32'd3212565073;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        grp_fu_119_p1 = 32'd3211345369;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        grp_fu_119_p1 = 32'd3206124300;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        grp_fu_119_p1 = 32'd3175255900;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        grp_fu_119_p1 = 32'd1027772252;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        grp_fu_119_p1 = 32'd1058640652;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_119_p1 = 32'd1063861721;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_fu_119_p1 = 32'd1065081425;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_119_p1 = 32'd1065307918;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_119_p1 = 32'd1065346505;
    end else begin
        grp_fu_119_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_fu_135_p1 = 32'd1061517944;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state7))) begin
        grp_fu_135_p1 = 32'd1044817904;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state6))) begin
        grp_fu_135_p1 = 32'd1022363278;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state5))) begin
        grp_fu_135_p1 = 32'd998445679;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state4))) begin
        grp_fu_135_p1 = 32'd973279855;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state3))) begin
        grp_fu_135_p1 = 32'd953267991;
    end else begin
        grp_fu_135_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd0 == and_ln218_1_fu_339_p2) & (1'b1 == ap_CS_fsm_state13)) | ((1'd0 == and_ln216_1_fu_328_p2) & (1'b1 == ap_CS_fsm_state12)) | ((1'd0 == and_ln214_1_fu_317_p2) & (1'b1 == ap_CS_fsm_state11)) | ((1'd0 == and_ln212_1_fu_306_p2) & (1'b1 == ap_CS_fsm_state10)) | ((1'd0 == and_ln210_1_fu_295_p2) & (1'b1 == ap_CS_fsm_state9)) | ((1'd0 == and_ln208_1_fu_284_p2) & (1'b1 == ap_CS_fsm_state8)) | ((1'd0 == and_ln206_1_fu_273_p2) & (1'b1 == ap_CS_fsm_state7)) | ((1'd0 == and_ln204_1_fu_262_p2) & (1'b1 == ap_CS_fsm_state6)) | ((1'd0 == and_ln202_1_fu_251_p2) & (1'b1 == ap_CS_fsm_state5)) | ((1'd0 == and_ln200_1_fu_240_p2) & (1'b1 == ap_CS_fsm_state4)) | ((1'd0 == and_ln198_1_fu_229_p2) & (1'b1 == ap_CS_fsm_state3)) | ((1'd0 == and_ln196_fu_218_p2) & (1'b1 == ap_CS_fsm_state2)))) begin
        grp_fu_145_opcode = 5'd2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        grp_fu_145_opcode = 5'd5;
    end else begin
        grp_fu_145_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_145_p1 = 32'd1084227584;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_145_p1 = 32'd1082130432;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_145_p1 = 32'd1077936128;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_145_p1 = 32'd1073741824;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_145_p1 = 32'd1065353216;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_145_p1 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_145_p1 = 32'd3212836864;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_145_p1 = 32'd3221225472;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_145_p1 = 32'd3225419776;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_145_p1 = 32'd3229614080;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_145_p1 = 32'd3231711232;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        grp_fu_145_p1 = 32'd3233808384;
    end else begin
        grp_fu_145_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_151_p1 = 32'd1086324736;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_151_p1 = 32'd1084227584;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_151_p1 = 32'd1082130432;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_151_p1 = 32'd1077936128;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_151_p1 = 32'd1073741824;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_151_p1 = 32'd1065353216;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_151_p1 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_151_p1 = 32'd3212836864;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_151_p1 = 32'd3221225472;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_151_p1 = 32'd3225419776;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_151_p1 = 32'd3229614080;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_151_p1 = 32'd3231711232;
    end else begin
        grp_fu_151_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'd1 == and_ln196_fu_218_p2) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'd1 == and_ln198_1_fu_229_p2) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state103;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'd1 == and_ln200_1_fu_240_p2) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state95;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'd1 == and_ln202_1_fu_251_p2) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state87;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'd1 == and_ln204_1_fu_262_p2) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state79;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'd1 == and_ln206_1_fu_273_p2) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'd1 == and_ln208_1_fu_284_p2) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'd1 == and_ln210_1_fu_295_p2) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((1'd1 == and_ln212_1_fu_306_p2) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((1'd1 == and_ln214_1_fu_317_p2) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((1'd1 == and_ln216_1_fu_328_p2) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((1'd1 == and_ln218_1_fu_339_p2) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((1'd0 == and_ln220_1_fu_350_p2) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln196_fu_218_p2 = (or_ln196_fu_212_p2 & grp_fu_145_p2);

assign and_ln198_1_fu_229_p2 = (grp_fu_151_p2 & and_ln198_fu_224_p2);

assign and_ln198_fu_224_p2 = (or_ln196_reg_364 & grp_fu_145_p2);

assign and_ln200_1_fu_240_p2 = (grp_fu_151_p2 & and_ln200_fu_235_p2);

assign and_ln200_fu_235_p2 = (or_ln196_reg_364 & grp_fu_145_p2);

assign and_ln202_1_fu_251_p2 = (grp_fu_151_p2 & and_ln202_fu_246_p2);

assign and_ln202_fu_246_p2 = (or_ln196_reg_364 & grp_fu_145_p2);

assign and_ln204_1_fu_262_p2 = (grp_fu_151_p2 & and_ln204_fu_257_p2);

assign and_ln204_fu_257_p2 = (or_ln196_reg_364 & grp_fu_145_p2);

assign and_ln206_1_fu_273_p2 = (grp_fu_151_p2 & and_ln206_fu_268_p2);

assign and_ln206_fu_268_p2 = (or_ln196_reg_364 & grp_fu_145_p2);

assign and_ln208_1_fu_284_p2 = (grp_fu_151_p2 & and_ln208_fu_279_p2);

assign and_ln208_fu_279_p2 = (or_ln196_reg_364 & grp_fu_145_p2);

assign and_ln210_1_fu_295_p2 = (grp_fu_151_p2 & and_ln210_fu_290_p2);

assign and_ln210_fu_290_p2 = (or_ln196_reg_364 & grp_fu_145_p2);

assign and_ln212_1_fu_306_p2 = (grp_fu_151_p2 & and_ln212_fu_301_p2);

assign and_ln212_fu_301_p2 = (or_ln196_reg_364 & grp_fu_145_p2);

assign and_ln214_1_fu_317_p2 = (grp_fu_151_p2 & and_ln214_fu_312_p2);

assign and_ln214_fu_312_p2 = (or_ln196_reg_364 & grp_fu_145_p2);

assign and_ln216_1_fu_328_p2 = (grp_fu_151_p2 & and_ln216_fu_323_p2);

assign and_ln216_fu_323_p2 = (or_ln196_reg_364 & grp_fu_145_p2);

assign and_ln218_1_fu_339_p2 = (grp_fu_151_p2 & and_ln218_fu_334_p2);

assign and_ln218_fu_334_p2 = (or_ln196_reg_364 & grp_fu_145_p2);

assign and_ln220_1_fu_350_p2 = (grp_fu_151_p2 & and_ln220_fu_345_p2);

assign and_ln220_fu_345_p2 = (or_ln196_reg_364 & grp_fu_145_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state101 = ap_CS_fsm[32'd100];

assign ap_CS_fsm_state102 = ap_CS_fsm[32'd101];

assign ap_CS_fsm_state105 = ap_CS_fsm[32'd104];

assign ap_CS_fsm_state106 = ap_CS_fsm[32'd105];

assign ap_CS_fsm_state109 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state110 = ap_CS_fsm[32'd109];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd93];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd97];

assign bitcast_ln196_fu_183_p1 = in_var;

assign icmp_ln196_1_fu_206_p2 = ((trunc_ln196_fu_196_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln196_fu_200_p2 = ((tmp_fu_186_p4 != 8'd255) ? 1'b1 : 1'b0);

assign or_ln196_fu_212_p2 = (icmp_ln196_fu_200_p2 | icmp_ln196_1_fu_206_p2);

assign tmp_fu_186_p4 = {{bitcast_ln196_fu_183_p1[30:23]}};

assign trunc_ln196_fu_196_p1 = bitcast_ln196_fu_183_p1[22:0];

endmodule //mytanh
