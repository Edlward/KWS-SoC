// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="kws,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu7ev-ffvc1156-2-e,HLS_INPUT_CLOCK=8.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.788000,HLS_SYN_LAT=4078378,HLS_SYN_TPT=none,HLS_SYN_MEM=413,HLS_SYN_DSP=61,HLS_SYN_FF=19733,HLS_SYN_LUT=61074,HLS_VERSION=2019_2}" *)

module kws (
        ap_clk,
        ap_rst_n,
        data_in_TDATA,
        data_in_TVALID,
        data_in_TREADY,
        data_in_TLAST,
        weight_in_TDATA,
        weight_in_TVALID,
        weight_in_TREADY,
        weight_in_TLAST,
        control_in_TDATA,
        control_in_TVALID,
        control_in_TREADY,
        control_in_TLAST,
        data_out_TDATA,
        data_out_TVALID,
        data_out_TREADY,
        data_out_TLAST
);

parameter    ap_ST_fsm_state1 = 20'd1;
parameter    ap_ST_fsm_state2 = 20'd2;
parameter    ap_ST_fsm_state3 = 20'd4;
parameter    ap_ST_fsm_state4 = 20'd8;
parameter    ap_ST_fsm_state5 = 20'd16;
parameter    ap_ST_fsm_state6 = 20'd32;
parameter    ap_ST_fsm_state7 = 20'd64;
parameter    ap_ST_fsm_state8 = 20'd128;
parameter    ap_ST_fsm_state9 = 20'd256;
parameter    ap_ST_fsm_state10 = 20'd512;
parameter    ap_ST_fsm_state11 = 20'd1024;
parameter    ap_ST_fsm_state12 = 20'd2048;
parameter    ap_ST_fsm_state13 = 20'd4096;
parameter    ap_ST_fsm_state14 = 20'd8192;
parameter    ap_ST_fsm_state15 = 20'd16384;
parameter    ap_ST_fsm_state16 = 20'd32768;
parameter    ap_ST_fsm_state17 = 20'd65536;
parameter    ap_ST_fsm_state18 = 20'd131072;
parameter    ap_ST_fsm_state19 = 20'd262144;
parameter    ap_ST_fsm_state20 = 20'd524288;

input   ap_clk;
input   ap_rst_n;
input  [31:0] data_in_TDATA;
input   data_in_TVALID;
output   data_in_TREADY;
input   data_in_TLAST;
input  [31:0] weight_in_TDATA;
input   weight_in_TVALID;
output   weight_in_TREADY;
input   weight_in_TLAST;
input  [31:0] control_in_TDATA;
input   control_in_TVALID;
output   control_in_TREADY;
input   control_in_TLAST;
output  [31:0] data_out_TDATA;
output   data_out_TVALID;
input   data_out_TREADY;
output   data_out_TLAST;

reg data_in_TREADY;
reg weight_in_TREADY;
reg control_in_TREADY;

 reg    ap_rst_n_inv;
reg    weights_ru_0_ce0;
wire   [31:0] weights_ru_0_q0;
reg   [11:0] weights_ru_0_address1;
reg    weights_ru_0_ce1;
reg    weights_ru_0_we1;
wire   [31:0] weights_ru_0_q1;
reg    weights_ru_1_ce0;
wire   [31:0] weights_ru_1_q0;
reg   [11:0] weights_ru_1_address1;
reg    weights_ru_1_ce1;
reg    weights_ru_1_we1;
wire   [31:0] weights_ru_1_q1;
reg    weights_ru_2_ce0;
wire   [31:0] weights_ru_2_q0;
reg   [11:0] weights_ru_2_address1;
reg    weights_ru_2_ce1;
reg    weights_ru_2_we1;
wire   [31:0] weights_ru_2_q1;
reg    weights_ru_3_ce0;
wire   [31:0] weights_ru_3_q0;
reg   [11:0] weights_ru_3_address1;
reg    weights_ru_3_ce1;
reg    weights_ru_3_we1;
wire   [31:0] weights_ru_3_q1;
reg    weights_zu_0_ce0;
wire   [31:0] weights_zu_0_q0;
reg   [11:0] weights_zu_0_address1;
reg    weights_zu_0_ce1;
reg    weights_zu_0_we1;
wire   [31:0] weights_zu_0_q1;
reg    weights_zu_1_ce0;
wire   [31:0] weights_zu_1_q0;
reg   [11:0] weights_zu_1_address1;
reg    weights_zu_1_ce1;
reg    weights_zu_1_we1;
wire   [31:0] weights_zu_1_q1;
reg    weights_zu_2_ce0;
wire   [31:0] weights_zu_2_q0;
reg   [11:0] weights_zu_2_address1;
reg    weights_zu_2_ce1;
reg    weights_zu_2_we1;
wire   [31:0] weights_zu_2_q1;
reg    weights_zu_3_ce0;
wire   [31:0] weights_zu_3_q0;
reg   [11:0] weights_zu_3_address1;
reg    weights_zu_3_ce1;
reg    weights_zu_3_we1;
wire   [31:0] weights_zu_3_q1;
reg    weights_hu_0_ce0;
wire   [31:0] weights_hu_0_q0;
reg   [11:0] weights_hu_0_address1;
reg    weights_hu_0_ce1;
reg    weights_hu_0_we1;
wire   [31:0] weights_hu_0_q1;
reg    weights_hu_1_ce0;
wire   [31:0] weights_hu_1_q0;
reg   [11:0] weights_hu_1_address1;
reg    weights_hu_1_ce1;
reg    weights_hu_1_we1;
wire   [31:0] weights_hu_1_q1;
reg    weights_hu_2_ce0;
wire   [31:0] weights_hu_2_q0;
reg   [11:0] weights_hu_2_address1;
reg    weights_hu_2_ce1;
reg    weights_hu_2_we1;
wire   [31:0] weights_hu_2_q1;
reg    weights_hu_3_ce0;
wire   [31:0] weights_hu_3_q0;
reg   [11:0] weights_hu_3_address1;
reg    weights_hu_3_ce1;
reg    weights_hu_3_we1;
wire   [31:0] weights_hu_3_q1;
reg   [2:0] dw_weight1_address0;
reg    dw_weight1_ce0;
reg    dw_weight1_we0;
wire   [31:0] dw_weight1_q0;
reg   [3:0] pw_weight1_0_address0;
reg    pw_weight1_0_ce0;
reg    pw_weight1_0_we0;
wire   [31:0] pw_weight1_0_q0;
reg   [3:0] pw_weight1_1_address0;
reg    pw_weight1_1_ce0;
reg    pw_weight1_1_we0;
wire   [31:0] pw_weight1_1_q0;
reg   [3:0] pw_weight1_2_address0;
reg    pw_weight1_2_ce0;
reg    pw_weight1_2_we0;
wire   [31:0] pw_weight1_2_q0;
reg   [3:0] pw_weight1_3_address0;
reg    pw_weight1_3_ce0;
reg    pw_weight1_3_we0;
wire   [31:0] pw_weight1_3_q0;
reg   [5:0] bn_bias1_address0;
reg    bn_bias1_ce0;
reg    bn_bias1_we0;
wire   [31:0] bn_bias1_q0;
reg    dw_weight2_0_ce0;
wire   [31:0] dw_weight2_0_q0;
reg    dw_weight2_0_ce1;
reg    dw_weight2_0_we1;
reg    dw_weight2_1_ce0;
wire   [31:0] dw_weight2_1_q0;
reg    dw_weight2_1_ce1;
reg    dw_weight2_1_we1;
reg    dw_weight2_2_ce0;
wire   [31:0] dw_weight2_2_q0;
reg    dw_weight2_2_ce1;
reg    dw_weight2_2_we1;
reg    dw_weight2_3_ce0;
wire   [31:0] dw_weight2_3_q0;
reg    dw_weight2_3_ce1;
reg    dw_weight2_3_we1;
reg   [9:0] pw_weight2_0_address0;
reg    pw_weight2_0_ce0;
reg    pw_weight2_0_we0;
wire   [31:0] pw_weight2_0_q0;
reg    pw_weight2_0_ce1;
wire   [31:0] pw_weight2_0_q1;
reg   [9:0] pw_weight2_1_address0;
reg    pw_weight2_1_ce0;
reg    pw_weight2_1_we0;
wire   [31:0] pw_weight2_1_q0;
reg    pw_weight2_1_ce1;
wire   [31:0] pw_weight2_1_q1;
reg   [9:0] pw_weight2_2_address0;
reg    pw_weight2_2_ce0;
reg    pw_weight2_2_we0;
wire   [31:0] pw_weight2_2_q0;
reg    pw_weight2_2_ce1;
wire   [31:0] pw_weight2_2_q1;
reg   [9:0] pw_weight2_3_address0;
reg    pw_weight2_3_ce0;
reg    pw_weight2_3_we0;
wire   [31:0] pw_weight2_3_q0;
reg    pw_weight2_3_ce1;
wire   [31:0] pw_weight2_3_q1;
reg   [5:0] bn_bias2_address0;
reg    bn_bias2_ce0;
reg    bn_bias2_we0;
wire   [31:0] bn_bias2_q0;
reg    weights_rw_ce0;
wire   [31:0] weights_rw_q0;
reg    weights_rw_ce1;
reg    weights_rw_we1;
reg   [5:0] bias_r_address0;
reg    bias_r_ce0;
reg    bias_r_we0;
wire   [31:0] bias_r_q0;
reg    weights_zw_ce0;
wire   [31:0] weights_zw_q0;
reg    weights_zw_ce1;
reg    weights_zw_we1;
reg   [5:0] bias_z_address0;
reg    bias_z_ce0;
reg    bias_z_we0;
wire   [31:0] bias_z_q0;
reg    weights_hw_ce0;
wire   [31:0] weights_hw_q0;
reg   [10:0] weights_hw_address1;
reg    weights_hw_ce1;
reg    weights_hw_we1;
wire   [31:0] weights_hw_q1;
reg   [5:0] bias_h_address0;
reg    bias_h_ce0;
reg    bias_h_we0;
wire   [31:0] bias_h_q0;
reg   [11:0] fc_weights1_address0;
reg    fc_weights1_ce0;
reg    fc_weights1_we0;
wire   [31:0] fc_weights1_q0;
reg   [5:0] fc_bias1_address0;
reg    fc_bias1_ce0;
reg    fc_bias1_we0;
wire   [31:0] fc_bias1_q0;
reg   [9:0] fc_weights2_address0;
reg    fc_weights2_ce0;
reg    fc_weights2_we0;
wire   [31:0] fc_weights2_q0;
reg   [3:0] fc_bias2_address0;
reg    fc_bias2_ce0;
reg    fc_bias2_we0;
wire   [31:0] fc_bias2_q0;
reg    control_in_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [19:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    grp_grucell_fu_408_ap_start;
wire    grp_grucell_fu_408_ap_done;
wire    grp_grucell_fu_408_ap_idle;
wire    grp_grucell_fu_408_ap_ready;
wire    grp_grucell_fu_408_in_stream_V_read;
wire   [31:0] grp_grucell_fu_408_out_stream_V_din;
wire    grp_grucell_fu_408_out_stream_V_write;
wire   [11:0] grp_grucell_fu_408_weights_zu_0_address0;
wire    grp_grucell_fu_408_weights_zu_0_ce0;
wire   [11:0] grp_grucell_fu_408_weights_zu_0_address1;
wire    grp_grucell_fu_408_weights_zu_0_ce1;
wire   [11:0] grp_grucell_fu_408_weights_zu_1_address0;
wire    grp_grucell_fu_408_weights_zu_1_ce0;
wire   [11:0] grp_grucell_fu_408_weights_zu_1_address1;
wire    grp_grucell_fu_408_weights_zu_1_ce1;
wire   [11:0] grp_grucell_fu_408_weights_zu_2_address0;
wire    grp_grucell_fu_408_weights_zu_2_ce0;
wire   [11:0] grp_grucell_fu_408_weights_zu_2_address1;
wire    grp_grucell_fu_408_weights_zu_2_ce1;
wire   [11:0] grp_grucell_fu_408_weights_zu_3_address0;
wire    grp_grucell_fu_408_weights_zu_3_ce0;
wire   [11:0] grp_grucell_fu_408_weights_zu_3_address1;
wire    grp_grucell_fu_408_weights_zu_3_ce1;
wire   [11:0] grp_grucell_fu_408_weights_ru_0_address0;
wire    grp_grucell_fu_408_weights_ru_0_ce0;
wire   [11:0] grp_grucell_fu_408_weights_ru_0_address1;
wire    grp_grucell_fu_408_weights_ru_0_ce1;
wire   [11:0] grp_grucell_fu_408_weights_ru_1_address0;
wire    grp_grucell_fu_408_weights_ru_1_ce0;
wire   [11:0] grp_grucell_fu_408_weights_ru_1_address1;
wire    grp_grucell_fu_408_weights_ru_1_ce1;
wire   [11:0] grp_grucell_fu_408_weights_ru_2_address0;
wire    grp_grucell_fu_408_weights_ru_2_ce0;
wire   [11:0] grp_grucell_fu_408_weights_ru_2_address1;
wire    grp_grucell_fu_408_weights_ru_2_ce1;
wire   [11:0] grp_grucell_fu_408_weights_ru_3_address0;
wire    grp_grucell_fu_408_weights_ru_3_ce0;
wire   [11:0] grp_grucell_fu_408_weights_ru_3_address1;
wire    grp_grucell_fu_408_weights_ru_3_ce1;
wire   [10:0] grp_grucell_fu_408_weights_zw_address0;
wire    grp_grucell_fu_408_weights_zw_ce0;
wire   [10:0] grp_grucell_fu_408_weights_rw_address0;
wire    grp_grucell_fu_408_weights_rw_ce0;
wire   [5:0] grp_grucell_fu_408_bias_z_address0;
wire    grp_grucell_fu_408_bias_z_ce0;
wire   [5:0] grp_grucell_fu_408_bias_r_address0;
wire    grp_grucell_fu_408_bias_r_ce0;
wire   [10:0] grp_grucell_fu_408_weights_hw_address0;
wire    grp_grucell_fu_408_weights_hw_ce0;
wire   [10:0] grp_grucell_fu_408_weights_hw_address1;
wire    grp_grucell_fu_408_weights_hw_ce1;
wire   [11:0] grp_grucell_fu_408_weights_hu_0_address0;
wire    grp_grucell_fu_408_weights_hu_0_ce0;
wire   [11:0] grp_grucell_fu_408_weights_hu_0_address1;
wire    grp_grucell_fu_408_weights_hu_0_ce1;
wire   [11:0] grp_grucell_fu_408_weights_hu_1_address0;
wire    grp_grucell_fu_408_weights_hu_1_ce0;
wire   [11:0] grp_grucell_fu_408_weights_hu_1_address1;
wire    grp_grucell_fu_408_weights_hu_1_ce1;
wire   [11:0] grp_grucell_fu_408_weights_hu_2_address0;
wire    grp_grucell_fu_408_weights_hu_2_ce0;
wire   [11:0] grp_grucell_fu_408_weights_hu_2_address1;
wire    grp_grucell_fu_408_weights_hu_2_ce1;
wire   [11:0] grp_grucell_fu_408_weights_hu_3_address0;
wire    grp_grucell_fu_408_weights_hu_3_ce0;
wire   [11:0] grp_grucell_fu_408_weights_hu_3_address1;
wire    grp_grucell_fu_408_weights_hu_3_ce1;
wire   [5:0] grp_grucell_fu_408_bias_h_address0;
wire    grp_grucell_fu_408_bias_h_ce0;
wire    grp_pw_layer2_fu_474_ap_start;
wire    grp_pw_layer2_fu_474_ap_done;
wire    grp_pw_layer2_fu_474_ap_idle;
wire    grp_pw_layer2_fu_474_ap_ready;
wire    grp_pw_layer2_fu_474_in_stream_V_read;
wire   [31:0] grp_pw_layer2_fu_474_out_stream_V_din;
wire    grp_pw_layer2_fu_474_out_stream_V_write;
wire   [9:0] grp_pw_layer2_fu_474_pw_weight2_0_address0;
wire    grp_pw_layer2_fu_474_pw_weight2_0_ce0;
wire   [9:0] grp_pw_layer2_fu_474_pw_weight2_0_address1;
wire    grp_pw_layer2_fu_474_pw_weight2_0_ce1;
wire   [9:0] grp_pw_layer2_fu_474_pw_weight2_1_address0;
wire    grp_pw_layer2_fu_474_pw_weight2_1_ce0;
wire   [9:0] grp_pw_layer2_fu_474_pw_weight2_1_address1;
wire    grp_pw_layer2_fu_474_pw_weight2_1_ce1;
wire   [9:0] grp_pw_layer2_fu_474_pw_weight2_2_address0;
wire    grp_pw_layer2_fu_474_pw_weight2_2_ce0;
wire   [9:0] grp_pw_layer2_fu_474_pw_weight2_2_address1;
wire    grp_pw_layer2_fu_474_pw_weight2_2_ce1;
wire   [9:0] grp_pw_layer2_fu_474_pw_weight2_3_address0;
wire    grp_pw_layer2_fu_474_pw_weight2_3_ce0;
wire   [9:0] grp_pw_layer2_fu_474_pw_weight2_3_address1;
wire    grp_pw_layer2_fu_474_pw_weight2_3_ce1;
wire   [5:0] grp_pw_layer2_fu_474_bn_bias2_address0;
wire    grp_pw_layer2_fu_474_bn_bias2_ce0;
wire    grp_dw_layer2_fu_506_ap_start;
wire    grp_dw_layer2_fu_506_ap_done;
wire    grp_dw_layer2_fu_506_ap_idle;
wire    grp_dw_layer2_fu_506_ap_ready;
wire    grp_dw_layer2_fu_506_in_stream_V_read;
wire   [31:0] grp_dw_layer2_fu_506_out_stream_V_din;
wire    grp_dw_layer2_fu_506_out_stream_V_write;
wire   [6:0] grp_dw_layer2_fu_506_dw_weight2_0_address0;
wire    grp_dw_layer2_fu_506_dw_weight2_0_ce0;
wire   [6:0] grp_dw_layer2_fu_506_dw_weight2_1_address0;
wire    grp_dw_layer2_fu_506_dw_weight2_1_ce0;
wire   [6:0] grp_dw_layer2_fu_506_dw_weight2_2_address0;
wire    grp_dw_layer2_fu_506_dw_weight2_2_ce0;
wire   [6:0] grp_dw_layer2_fu_506_dw_weight2_3_address0;
wire    grp_dw_layer2_fu_506_dw_weight2_3_ce0;
wire    grp_pw_layer1_fu_536_ap_start;
wire    grp_pw_layer1_fu_536_ap_done;
wire    grp_pw_layer1_fu_536_ap_idle;
wire    grp_pw_layer1_fu_536_ap_ready;
wire    grp_pw_layer1_fu_536_in_stream_V_read;
wire   [31:0] grp_pw_layer1_fu_536_out_stream_V_din;
wire    grp_pw_layer1_fu_536_out_stream_V_write;
wire   [3:0] grp_pw_layer1_fu_536_pw_weight1_3_address0;
wire    grp_pw_layer1_fu_536_pw_weight1_3_ce0;
wire   [3:0] grp_pw_layer1_fu_536_pw_weight1_0_address0;
wire    grp_pw_layer1_fu_536_pw_weight1_0_ce0;
wire   [3:0] grp_pw_layer1_fu_536_pw_weight1_1_address0;
wire    grp_pw_layer1_fu_536_pw_weight1_1_ce0;
wire   [3:0] grp_pw_layer1_fu_536_pw_weight1_2_address0;
wire    grp_pw_layer1_fu_536_pw_weight1_2_ce0;
wire   [5:0] grp_pw_layer1_fu_536_bn_bias1_address0;
wire    grp_pw_layer1_fu_536_bn_bias1_ce0;
wire    grp_weight_loader_fu_562_ap_start;
wire    grp_weight_loader_fu_562_ap_done;
wire    grp_weight_loader_fu_562_ap_idle;
wire    grp_weight_loader_fu_562_ap_ready;
wire    grp_weight_loader_fu_562_weight_in_TREADY;
wire   [2:0] grp_weight_loader_fu_562_dw_weight1_address0;
wire    grp_weight_loader_fu_562_dw_weight1_ce0;
wire    grp_weight_loader_fu_562_dw_weight1_we0;
wire   [31:0] grp_weight_loader_fu_562_dw_weight1_d0;
wire   [3:0] grp_weight_loader_fu_562_pw_weight1_0_address0;
wire    grp_weight_loader_fu_562_pw_weight1_0_ce0;
wire    grp_weight_loader_fu_562_pw_weight1_0_we0;
wire   [31:0] grp_weight_loader_fu_562_pw_weight1_0_d0;
wire   [3:0] grp_weight_loader_fu_562_pw_weight1_1_address0;
wire    grp_weight_loader_fu_562_pw_weight1_1_ce0;
wire    grp_weight_loader_fu_562_pw_weight1_1_we0;
wire   [31:0] grp_weight_loader_fu_562_pw_weight1_1_d0;
wire   [3:0] grp_weight_loader_fu_562_pw_weight1_2_address0;
wire    grp_weight_loader_fu_562_pw_weight1_2_ce0;
wire    grp_weight_loader_fu_562_pw_weight1_2_we0;
wire   [31:0] grp_weight_loader_fu_562_pw_weight1_2_d0;
wire   [3:0] grp_weight_loader_fu_562_pw_weight1_3_address0;
wire    grp_weight_loader_fu_562_pw_weight1_3_ce0;
wire    grp_weight_loader_fu_562_pw_weight1_3_we0;
wire   [31:0] grp_weight_loader_fu_562_pw_weight1_3_d0;
wire   [5:0] grp_weight_loader_fu_562_bn_bias1_address0;
wire    grp_weight_loader_fu_562_bn_bias1_ce0;
wire    grp_weight_loader_fu_562_bn_bias1_we0;
wire   [31:0] grp_weight_loader_fu_562_bn_bias1_d0;
wire   [6:0] grp_weight_loader_fu_562_dw_weight2_0_address1;
wire    grp_weight_loader_fu_562_dw_weight2_0_ce1;
wire    grp_weight_loader_fu_562_dw_weight2_0_we1;
wire   [31:0] grp_weight_loader_fu_562_dw_weight2_0_d1;
wire   [6:0] grp_weight_loader_fu_562_dw_weight2_1_address1;
wire    grp_weight_loader_fu_562_dw_weight2_1_ce1;
wire    grp_weight_loader_fu_562_dw_weight2_1_we1;
wire   [31:0] grp_weight_loader_fu_562_dw_weight2_1_d1;
wire   [6:0] grp_weight_loader_fu_562_dw_weight2_2_address1;
wire    grp_weight_loader_fu_562_dw_weight2_2_ce1;
wire    grp_weight_loader_fu_562_dw_weight2_2_we1;
wire   [31:0] grp_weight_loader_fu_562_dw_weight2_2_d1;
wire   [6:0] grp_weight_loader_fu_562_dw_weight2_3_address1;
wire    grp_weight_loader_fu_562_dw_weight2_3_ce1;
wire    grp_weight_loader_fu_562_dw_weight2_3_we1;
wire   [31:0] grp_weight_loader_fu_562_dw_weight2_3_d1;
wire   [9:0] grp_weight_loader_fu_562_pw_weight2_0_address0;
wire    grp_weight_loader_fu_562_pw_weight2_0_ce0;
wire    grp_weight_loader_fu_562_pw_weight2_0_we0;
wire   [31:0] grp_weight_loader_fu_562_pw_weight2_0_d0;
wire   [9:0] grp_weight_loader_fu_562_pw_weight2_1_address0;
wire    grp_weight_loader_fu_562_pw_weight2_1_ce0;
wire    grp_weight_loader_fu_562_pw_weight2_1_we0;
wire   [31:0] grp_weight_loader_fu_562_pw_weight2_1_d0;
wire   [9:0] grp_weight_loader_fu_562_pw_weight2_2_address0;
wire    grp_weight_loader_fu_562_pw_weight2_2_ce0;
wire    grp_weight_loader_fu_562_pw_weight2_2_we0;
wire   [31:0] grp_weight_loader_fu_562_pw_weight2_2_d0;
wire   [9:0] grp_weight_loader_fu_562_pw_weight2_3_address0;
wire    grp_weight_loader_fu_562_pw_weight2_3_ce0;
wire    grp_weight_loader_fu_562_pw_weight2_3_we0;
wire   [31:0] grp_weight_loader_fu_562_pw_weight2_3_d0;
wire   [5:0] grp_weight_loader_fu_562_bn_bias2_address0;
wire    grp_weight_loader_fu_562_bn_bias2_ce0;
wire    grp_weight_loader_fu_562_bn_bias2_we0;
wire   [31:0] grp_weight_loader_fu_562_bn_bias2_d0;
wire   [10:0] grp_weight_loader_fu_562_weights_rw_address1;
wire    grp_weight_loader_fu_562_weights_rw_ce1;
wire    grp_weight_loader_fu_562_weights_rw_we1;
wire   [31:0] grp_weight_loader_fu_562_weights_rw_d1;
wire   [5:0] grp_weight_loader_fu_562_bias_r_address0;
wire    grp_weight_loader_fu_562_bias_r_ce0;
wire    grp_weight_loader_fu_562_bias_r_we0;
wire   [31:0] grp_weight_loader_fu_562_bias_r_d0;
wire   [10:0] grp_weight_loader_fu_562_weights_zw_address1;
wire    grp_weight_loader_fu_562_weights_zw_ce1;
wire    grp_weight_loader_fu_562_weights_zw_we1;
wire   [31:0] grp_weight_loader_fu_562_weights_zw_d1;
wire   [5:0] grp_weight_loader_fu_562_bias_z_address0;
wire    grp_weight_loader_fu_562_bias_z_ce0;
wire    grp_weight_loader_fu_562_bias_z_we0;
wire   [31:0] grp_weight_loader_fu_562_bias_z_d0;
wire   [10:0] grp_weight_loader_fu_562_weights_hw_address1;
wire    grp_weight_loader_fu_562_weights_hw_ce1;
wire    grp_weight_loader_fu_562_weights_hw_we1;
wire   [31:0] grp_weight_loader_fu_562_weights_hw_d1;
wire   [5:0] grp_weight_loader_fu_562_bias_h_address0;
wire    grp_weight_loader_fu_562_bias_h_ce0;
wire    grp_weight_loader_fu_562_bias_h_we0;
wire   [31:0] grp_weight_loader_fu_562_bias_h_d0;
wire   [11:0] grp_weight_loader_fu_562_fc_weights1_address0;
wire    grp_weight_loader_fu_562_fc_weights1_ce0;
wire    grp_weight_loader_fu_562_fc_weights1_we0;
wire   [31:0] grp_weight_loader_fu_562_fc_weights1_d0;
wire   [5:0] grp_weight_loader_fu_562_fc_bias1_address0;
wire    grp_weight_loader_fu_562_fc_bias1_ce0;
wire    grp_weight_loader_fu_562_fc_bias1_we0;
wire   [31:0] grp_weight_loader_fu_562_fc_bias1_d0;
wire   [9:0] grp_weight_loader_fu_562_fc_weights2_address0;
wire    grp_weight_loader_fu_562_fc_weights2_ce0;
wire    grp_weight_loader_fu_562_fc_weights2_we0;
wire   [31:0] grp_weight_loader_fu_562_fc_weights2_d0;
wire   [3:0] grp_weight_loader_fu_562_fc_bias2_address0;
wire    grp_weight_loader_fu_562_fc_bias2_ce0;
wire    grp_weight_loader_fu_562_fc_bias2_we0;
wire   [31:0] grp_weight_loader_fu_562_fc_bias2_d0;
wire   [11:0] grp_weight_loader_fu_562_weights_ru_0_address1;
wire    grp_weight_loader_fu_562_weights_ru_0_ce1;
wire    grp_weight_loader_fu_562_weights_ru_0_we1;
wire   [31:0] grp_weight_loader_fu_562_weights_ru_0_d1;
wire   [11:0] grp_weight_loader_fu_562_weights_ru_1_address1;
wire    grp_weight_loader_fu_562_weights_ru_1_ce1;
wire    grp_weight_loader_fu_562_weights_ru_1_we1;
wire   [31:0] grp_weight_loader_fu_562_weights_ru_1_d1;
wire   [11:0] grp_weight_loader_fu_562_weights_ru_2_address1;
wire    grp_weight_loader_fu_562_weights_ru_2_ce1;
wire    grp_weight_loader_fu_562_weights_ru_2_we1;
wire   [31:0] grp_weight_loader_fu_562_weights_ru_2_d1;
wire   [11:0] grp_weight_loader_fu_562_weights_ru_3_address1;
wire    grp_weight_loader_fu_562_weights_ru_3_ce1;
wire    grp_weight_loader_fu_562_weights_ru_3_we1;
wire   [31:0] grp_weight_loader_fu_562_weights_ru_3_d1;
wire   [11:0] grp_weight_loader_fu_562_weights_zu_0_address1;
wire    grp_weight_loader_fu_562_weights_zu_0_ce1;
wire    grp_weight_loader_fu_562_weights_zu_0_we1;
wire   [31:0] grp_weight_loader_fu_562_weights_zu_0_d1;
wire   [11:0] grp_weight_loader_fu_562_weights_zu_1_address1;
wire    grp_weight_loader_fu_562_weights_zu_1_ce1;
wire    grp_weight_loader_fu_562_weights_zu_1_we1;
wire   [31:0] grp_weight_loader_fu_562_weights_zu_1_d1;
wire   [11:0] grp_weight_loader_fu_562_weights_zu_2_address1;
wire    grp_weight_loader_fu_562_weights_zu_2_ce1;
wire    grp_weight_loader_fu_562_weights_zu_2_we1;
wire   [31:0] grp_weight_loader_fu_562_weights_zu_2_d1;
wire   [11:0] grp_weight_loader_fu_562_weights_zu_3_address1;
wire    grp_weight_loader_fu_562_weights_zu_3_ce1;
wire    grp_weight_loader_fu_562_weights_zu_3_we1;
wire   [31:0] grp_weight_loader_fu_562_weights_zu_3_d1;
wire   [11:0] grp_weight_loader_fu_562_weights_hu_0_address1;
wire    grp_weight_loader_fu_562_weights_hu_0_ce1;
wire    grp_weight_loader_fu_562_weights_hu_0_we1;
wire   [31:0] grp_weight_loader_fu_562_weights_hu_0_d1;
wire   [11:0] grp_weight_loader_fu_562_weights_hu_1_address1;
wire    grp_weight_loader_fu_562_weights_hu_1_ce1;
wire    grp_weight_loader_fu_562_weights_hu_1_we1;
wire   [31:0] grp_weight_loader_fu_562_weights_hu_1_d1;
wire   [11:0] grp_weight_loader_fu_562_weights_hu_2_address1;
wire    grp_weight_loader_fu_562_weights_hu_2_ce1;
wire    grp_weight_loader_fu_562_weights_hu_2_we1;
wire   [31:0] grp_weight_loader_fu_562_weights_hu_2_d1;
wire   [11:0] grp_weight_loader_fu_562_weights_hu_3_address1;
wire    grp_weight_loader_fu_562_weights_hu_3_ce1;
wire    grp_weight_loader_fu_562_weights_hu_3_we1;
wire   [31:0] grp_weight_loader_fu_562_weights_hu_3_d1;
wire    grp_fc_relu6_fu_644_ap_start;
wire    grp_fc_relu6_fu_644_ap_done;
wire    grp_fc_relu6_fu_644_ap_idle;
wire    grp_fc_relu6_fu_644_ap_ready;
wire    grp_fc_relu6_fu_644_in_stream_V_read;
wire   [31:0] grp_fc_relu6_fu_644_out_stream_V_din;
wire    grp_fc_relu6_fu_644_out_stream_V_write;
wire   [5:0] grp_fc_relu6_fu_644_fc_bias1_address0;
wire    grp_fc_relu6_fu_644_fc_bias1_ce0;
wire   [11:0] grp_fc_relu6_fu_644_fc_weights1_address0;
wire    grp_fc_relu6_fu_644_fc_weights1_ce0;
wire    grp_fc_64u_12u_1u_s_fu_658_ap_start;
wire    grp_fc_64u_12u_1u_s_fu_658_ap_done;
wire    grp_fc_64u_12u_1u_s_fu_658_ap_idle;
wire    grp_fc_64u_12u_1u_s_fu_658_ap_ready;
wire    grp_fc_64u_12u_1u_s_fu_658_in_stream_V_read;
wire   [31:0] grp_fc_64u_12u_1u_s_fu_658_out_stream_V_din;
wire    grp_fc_64u_12u_1u_s_fu_658_out_stream_V_write;
wire   [3:0] grp_fc_64u_12u_1u_s_fu_658_fc_bias2_address0;
wire    grp_fc_64u_12u_1u_s_fu_658_fc_bias2_ce0;
wire   [9:0] grp_fc_64u_12u_1u_s_fu_658_fc_weights2_address0;
wire    grp_fc_64u_12u_1u_s_fu_658_fc_weights2_ce0;
wire    grp_dw_layer1_fu_672_ap_start;
wire    grp_dw_layer1_fu_672_ap_done;
wire    grp_dw_layer1_fu_672_ap_idle;
wire    grp_dw_layer1_fu_672_ap_ready;
wire    grp_dw_layer1_fu_672_in_stream_V_read;
wire   [31:0] grp_dw_layer1_fu_672_out_stream_V_din;
wire    grp_dw_layer1_fu_672_out_stream_V_write;
wire   [2:0] grp_dw_layer1_fu_672_dw_weight1_address0;
wire    grp_dw_layer1_fu_672_dw_weight1_ce0;
wire    grp_data_broadcaster_fu_684_ap_start;
wire    grp_data_broadcaster_fu_684_ap_done;
wire    grp_data_broadcaster_fu_684_ap_idle;
wire    grp_data_broadcaster_fu_684_ap_ready;
wire    grp_data_broadcaster_fu_684_data_in_TREADY;
wire   [31:0] grp_data_broadcaster_fu_684_data2dw1_V_din;
wire    grp_data_broadcaster_fu_684_data2dw1_V_write;
wire    grp_datastream_out_12u_s_fu_693_ap_start;
wire    grp_datastream_out_12u_s_fu_693_ap_done;
wire    grp_datastream_out_12u_s_fu_693_ap_idle;
wire    grp_datastream_out_12u_s_fu_693_ap_ready;
wire    grp_datastream_out_12u_s_fu_693_output_V_read;
wire   [31:0] grp_datastream_out_12u_s_fu_693_data_out_TDATA;
wire    grp_datastream_out_12u_s_fu_693_data_out_TVALID;
wire    grp_datastream_out_12u_s_fu_693_data_out_TREADY;
wire    grp_datastream_out_12u_s_fu_693_data_out_TLAST;
reg    grp_grucell_fu_408_ap_start_reg;
wire    ap_CS_fsm_state11;
wire   [31:0] pw22gru_V_dout;
wire    pw22gru_V_empty_n;
reg    pw22gru_V_read;
wire    ap_CS_fsm_state12;
wire    gru2fc_V_full_n;
reg    gru2fc_V_write;
reg    grp_pw_layer2_fu_474_ap_start_reg;
wire    ap_CS_fsm_state9;
wire   [31:0] dw22pw2_V_dout;
wire    dw22pw2_V_empty_n;
reg    dw22pw2_V_read;
wire    ap_CS_fsm_state10;
wire    pw22gru_V_full_n;
reg    pw22gru_V_write;
reg    grp_dw_layer2_fu_506_ap_start_reg;
wire    ap_CS_fsm_state7;
wire   [31:0] pw12dw2_V_dout;
wire    pw12dw2_V_empty_n;
reg    pw12dw2_V_read;
wire    ap_CS_fsm_state8;
wire    dw22pw2_V_full_n;
reg    dw22pw2_V_write;
reg    grp_pw_layer1_fu_536_ap_start_reg;
wire    ap_CS_fsm_state5;
wire   [31:0] dw12pw1_V_dout;
wire    dw12pw1_V_empty_n;
reg    dw12pw1_V_read;
wire    ap_CS_fsm_state6;
wire    pw12dw2_V_full_n;
reg    pw12dw2_V_write;
reg    grp_weight_loader_fu_562_ap_start_reg;
wire   [0:0] icmp_ln82_fu_706_p2;
wire    ap_CS_fsm_state19;
reg    grp_fc_relu6_fu_644_ap_start_reg;
wire    ap_CS_fsm_state13;
wire   [31:0] gru2fc_V_dout;
wire    gru2fc_V_empty_n;
reg    gru2fc_V_read;
wire    ap_CS_fsm_state14;
wire    fc2final_V_full_n;
reg    fc2final_V_write;
reg    grp_fc_64u_12u_1u_s_fu_658_ap_start_reg;
wire    ap_CS_fsm_state15;
wire   [31:0] fc2final_V_dout;
wire    fc2final_V_empty_n;
reg    fc2final_V_read;
wire    ap_CS_fsm_state16;
wire    output_V_full_n;
reg    output_V_write;
reg    grp_dw_layer1_fu_672_ap_start_reg;
wire    ap_CS_fsm_state3;
wire   [31:0] data2dw1_V_dout;
wire    data2dw1_V_empty_n;
reg    data2dw1_V_read;
wire    ap_CS_fsm_state4;
wire    dw12pw1_V_full_n;
reg    dw12pw1_V_write;
reg    grp_data_broadcaster_fu_684_ap_start_reg;
wire    ap_CS_fsm_state2;
wire    data2dw1_V_full_n;
reg    data2dw1_V_write;
reg    grp_datastream_out_12u_s_fu_693_ap_start_reg;
wire    ap_CS_fsm_state17;
wire   [31:0] output_V_dout;
wire    output_V_empty_n;
reg    output_V_read;
wire    ap_CS_fsm_state18;
reg   [19:0] ap_NS_fsm;
wire    ap_CS_fsm_state20;
wire    regslice_both_data_out_V_data_U_apdone_blk;
wire    regslice_both_data_in_V_data_U_apdone_blk;
wire   [31:0] data_in_TDATA_int;
wire    data_in_TVALID_int;
reg    data_in_TREADY_int;
wire    regslice_both_data_in_V_data_U_ack_in;
wire    regslice_both_w1_data_in_V_last_U_apdone_blk;
wire    data_in_TLAST_int;
wire    regslice_both_w1_data_in_V_last_U_vld_out;
wire    regslice_both_w1_data_in_V_last_U_ack_in;
wire    regslice_both_weight_in_V_data_U_apdone_blk;
wire   [31:0] weight_in_TDATA_int;
wire    weight_in_TVALID_int;
reg    weight_in_TREADY_int;
wire    regslice_both_weight_in_V_data_U_ack_in;
wire    regslice_both_w1_weight_in_V_last_U_apdone_blk;
wire    weight_in_TLAST_int;
wire    regslice_both_w1_weight_in_V_last_U_vld_out;
wire    regslice_both_w1_weight_in_V_last_U_ack_in;
wire    regslice_both_control_in_V_data_U_apdone_blk;
wire   [31:0] control_in_TDATA_int;
wire    control_in_TVALID_int;
reg    control_in_TREADY_int;
wire    regslice_both_control_in_V_data_U_ack_in;
wire    regslice_both_w1_control_in_V_last_U_apdone_blk;
wire    control_in_TLAST_int;
wire    regslice_both_w1_control_in_V_last_U_vld_out;
wire    regslice_both_w1_control_in_V_last_U_ack_in;
wire    data_out_TREADY_int;
wire    regslice_both_data_out_V_data_U_vld_out;
wire    regslice_both_w1_data_out_V_last_U_apdone_blk;
wire    regslice_both_w1_data_out_V_last_U_ack_in_dummy;
wire    regslice_both_w1_data_out_V_last_U_vld_out;

// power-on initialization
initial begin
#0 ap_CS_fsm = 20'd1;
#0 grp_grucell_fu_408_ap_start_reg = 1'b0;
#0 grp_pw_layer2_fu_474_ap_start_reg = 1'b0;
#0 grp_dw_layer2_fu_506_ap_start_reg = 1'b0;
#0 grp_pw_layer1_fu_536_ap_start_reg = 1'b0;
#0 grp_weight_loader_fu_562_ap_start_reg = 1'b0;
#0 grp_fc_relu6_fu_644_ap_start_reg = 1'b0;
#0 grp_fc_64u_12u_1u_s_fu_658_ap_start_reg = 1'b0;
#0 grp_dw_layer1_fu_672_ap_start_reg = 1'b0;
#0 grp_data_broadcaster_fu_684_ap_start_reg = 1'b0;
#0 grp_datastream_out_12u_s_fu_693_ap_start_reg = 1'b0;
end

kws_weights_ru_0 #(
    .DataWidth( 32 ),
    .AddressRange( 3840 ),
    .AddressWidth( 12 ))
weights_ru_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_grucell_fu_408_weights_ru_0_address0),
    .ce0(weights_ru_0_ce0),
    .q0(weights_ru_0_q0),
    .address1(weights_ru_0_address1),
    .ce1(weights_ru_0_ce1),
    .we1(weights_ru_0_we1),
    .d1(grp_weight_loader_fu_562_weights_ru_0_d1),
    .q1(weights_ru_0_q1)
);

kws_weights_ru_0 #(
    .DataWidth( 32 ),
    .AddressRange( 3840 ),
    .AddressWidth( 12 ))
weights_ru_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_grucell_fu_408_weights_ru_1_address0),
    .ce0(weights_ru_1_ce0),
    .q0(weights_ru_1_q0),
    .address1(weights_ru_1_address1),
    .ce1(weights_ru_1_ce1),
    .we1(weights_ru_1_we1),
    .d1(grp_weight_loader_fu_562_weights_ru_1_d1),
    .q1(weights_ru_1_q1)
);

kws_weights_ru_0 #(
    .DataWidth( 32 ),
    .AddressRange( 3840 ),
    .AddressWidth( 12 ))
weights_ru_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_grucell_fu_408_weights_ru_2_address0),
    .ce0(weights_ru_2_ce0),
    .q0(weights_ru_2_q0),
    .address1(weights_ru_2_address1),
    .ce1(weights_ru_2_ce1),
    .we1(weights_ru_2_we1),
    .d1(grp_weight_loader_fu_562_weights_ru_2_d1),
    .q1(weights_ru_2_q1)
);

kws_weights_ru_0 #(
    .DataWidth( 32 ),
    .AddressRange( 3840 ),
    .AddressWidth( 12 ))
weights_ru_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_grucell_fu_408_weights_ru_3_address0),
    .ce0(weights_ru_3_ce0),
    .q0(weights_ru_3_q0),
    .address1(weights_ru_3_address1),
    .ce1(weights_ru_3_ce1),
    .we1(weights_ru_3_we1),
    .d1(grp_weight_loader_fu_562_weights_ru_3_d1),
    .q1(weights_ru_3_q1)
);

kws_weights_ru_0 #(
    .DataWidth( 32 ),
    .AddressRange( 3840 ),
    .AddressWidth( 12 ))
weights_zu_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_grucell_fu_408_weights_zu_0_address0),
    .ce0(weights_zu_0_ce0),
    .q0(weights_zu_0_q0),
    .address1(weights_zu_0_address1),
    .ce1(weights_zu_0_ce1),
    .we1(weights_zu_0_we1),
    .d1(grp_weight_loader_fu_562_weights_zu_0_d1),
    .q1(weights_zu_0_q1)
);

kws_weights_ru_0 #(
    .DataWidth( 32 ),
    .AddressRange( 3840 ),
    .AddressWidth( 12 ))
weights_zu_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_grucell_fu_408_weights_zu_1_address0),
    .ce0(weights_zu_1_ce0),
    .q0(weights_zu_1_q0),
    .address1(weights_zu_1_address1),
    .ce1(weights_zu_1_ce1),
    .we1(weights_zu_1_we1),
    .d1(grp_weight_loader_fu_562_weights_zu_1_d1),
    .q1(weights_zu_1_q1)
);

kws_weights_ru_0 #(
    .DataWidth( 32 ),
    .AddressRange( 3840 ),
    .AddressWidth( 12 ))
weights_zu_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_grucell_fu_408_weights_zu_2_address0),
    .ce0(weights_zu_2_ce0),
    .q0(weights_zu_2_q0),
    .address1(weights_zu_2_address1),
    .ce1(weights_zu_2_ce1),
    .we1(weights_zu_2_we1),
    .d1(grp_weight_loader_fu_562_weights_zu_2_d1),
    .q1(weights_zu_2_q1)
);

kws_weights_ru_0 #(
    .DataWidth( 32 ),
    .AddressRange( 3840 ),
    .AddressWidth( 12 ))
weights_zu_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_grucell_fu_408_weights_zu_3_address0),
    .ce0(weights_zu_3_ce0),
    .q0(weights_zu_3_q0),
    .address1(weights_zu_3_address1),
    .ce1(weights_zu_3_ce1),
    .we1(weights_zu_3_we1),
    .d1(grp_weight_loader_fu_562_weights_zu_3_d1),
    .q1(weights_zu_3_q1)
);

kws_weights_ru_0 #(
    .DataWidth( 32 ),
    .AddressRange( 3840 ),
    .AddressWidth( 12 ))
weights_hu_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_grucell_fu_408_weights_hu_0_address0),
    .ce0(weights_hu_0_ce0),
    .q0(weights_hu_0_q0),
    .address1(weights_hu_0_address1),
    .ce1(weights_hu_0_ce1),
    .we1(weights_hu_0_we1),
    .d1(grp_weight_loader_fu_562_weights_hu_0_d1),
    .q1(weights_hu_0_q1)
);

kws_weights_ru_0 #(
    .DataWidth( 32 ),
    .AddressRange( 3840 ),
    .AddressWidth( 12 ))
weights_hu_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_grucell_fu_408_weights_hu_1_address0),
    .ce0(weights_hu_1_ce0),
    .q0(weights_hu_1_q0),
    .address1(weights_hu_1_address1),
    .ce1(weights_hu_1_ce1),
    .we1(weights_hu_1_we1),
    .d1(grp_weight_loader_fu_562_weights_hu_1_d1),
    .q1(weights_hu_1_q1)
);

kws_weights_ru_0 #(
    .DataWidth( 32 ),
    .AddressRange( 3840 ),
    .AddressWidth( 12 ))
weights_hu_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_grucell_fu_408_weights_hu_2_address0),
    .ce0(weights_hu_2_ce0),
    .q0(weights_hu_2_q0),
    .address1(weights_hu_2_address1),
    .ce1(weights_hu_2_ce1),
    .we1(weights_hu_2_we1),
    .d1(grp_weight_loader_fu_562_weights_hu_2_d1),
    .q1(weights_hu_2_q1)
);

kws_weights_ru_0 #(
    .DataWidth( 32 ),
    .AddressRange( 3840 ),
    .AddressWidth( 12 ))
weights_hu_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_grucell_fu_408_weights_hu_3_address0),
    .ce0(weights_hu_3_ce0),
    .q0(weights_hu_3_q0),
    .address1(weights_hu_3_address1),
    .ce1(weights_hu_3_ce1),
    .we1(weights_hu_3_we1),
    .d1(grp_weight_loader_fu_562_weights_hu_3_d1),
    .q1(weights_hu_3_q1)
);

kws_dw_weight1 #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dw_weight1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dw_weight1_address0),
    .ce0(dw_weight1_ce0),
    .we0(dw_weight1_we0),
    .d0(grp_weight_loader_fu_562_dw_weight1_d0),
    .q0(dw_weight1_q0)
);

fc_64u_12u_1u_s_y_4 #(
    .DataWidth( 32 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
pw_weight1_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(pw_weight1_0_address0),
    .ce0(pw_weight1_0_ce0),
    .we0(pw_weight1_0_we0),
    .d0(grp_weight_loader_fu_562_pw_weight1_0_d0),
    .q0(pw_weight1_0_q0)
);

fc_64u_12u_1u_s_y_4 #(
    .DataWidth( 32 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
pw_weight1_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(pw_weight1_1_address0),
    .ce0(pw_weight1_1_ce0),
    .we0(pw_weight1_1_we0),
    .d0(grp_weight_loader_fu_562_pw_weight1_1_d0),
    .q0(pw_weight1_1_q0)
);

fc_64u_12u_1u_s_y_4 #(
    .DataWidth( 32 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
pw_weight1_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(pw_weight1_2_address0),
    .ce0(pw_weight1_2_ce0),
    .we0(pw_weight1_2_we0),
    .d0(grp_weight_loader_fu_562_pw_weight1_2_d0),
    .q0(pw_weight1_2_q0)
);

fc_64u_12u_1u_s_y_4 #(
    .DataWidth( 32 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
pw_weight1_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(pw_weight1_3_address0),
    .ce0(pw_weight1_3_ce0),
    .we0(pw_weight1_3_we0),
    .d0(grp_weight_loader_fu_562_pw_weight1_3_d0),
    .q0(pw_weight1_3_q0)
);

kws_bn_bias1 #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
bn_bias1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(bn_bias1_address0),
    .ce0(bn_bias1_ce0),
    .we0(bn_bias1_we0),
    .d0(grp_weight_loader_fu_562_bn_bias1_d0),
    .q0(bn_bias1_q0)
);

kws_dw_weight2_0 #(
    .DataWidth( 32 ),
    .AddressRange( 96 ),
    .AddressWidth( 7 ))
dw_weight2_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_dw_layer2_fu_506_dw_weight2_0_address0),
    .ce0(dw_weight2_0_ce0),
    .q0(dw_weight2_0_q0),
    .address1(grp_weight_loader_fu_562_dw_weight2_0_address1),
    .ce1(dw_weight2_0_ce1),
    .we1(dw_weight2_0_we1),
    .d1(grp_weight_loader_fu_562_dw_weight2_0_d1)
);

kws_dw_weight2_0 #(
    .DataWidth( 32 ),
    .AddressRange( 96 ),
    .AddressWidth( 7 ))
dw_weight2_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_dw_layer2_fu_506_dw_weight2_1_address0),
    .ce0(dw_weight2_1_ce0),
    .q0(dw_weight2_1_q0),
    .address1(grp_weight_loader_fu_562_dw_weight2_1_address1),
    .ce1(dw_weight2_1_ce1),
    .we1(dw_weight2_1_we1),
    .d1(grp_weight_loader_fu_562_dw_weight2_1_d1)
);

kws_dw_weight2_0 #(
    .DataWidth( 32 ),
    .AddressRange( 96 ),
    .AddressWidth( 7 ))
dw_weight2_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_dw_layer2_fu_506_dw_weight2_2_address0),
    .ce0(dw_weight2_2_ce0),
    .q0(dw_weight2_2_q0),
    .address1(grp_weight_loader_fu_562_dw_weight2_2_address1),
    .ce1(dw_weight2_2_ce1),
    .we1(dw_weight2_2_we1),
    .d1(grp_weight_loader_fu_562_dw_weight2_2_d1)
);

kws_dw_weight2_0 #(
    .DataWidth( 32 ),
    .AddressRange( 96 ),
    .AddressWidth( 7 ))
dw_weight2_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_dw_layer2_fu_506_dw_weight2_3_address0),
    .ce0(dw_weight2_3_ce0),
    .q0(dw_weight2_3_q0),
    .address1(grp_weight_loader_fu_562_dw_weight2_3_address1),
    .ce1(dw_weight2_3_ce1),
    .we1(dw_weight2_3_we1),
    .d1(grp_weight_loader_fu_562_dw_weight2_3_d1)
);

kws_pw_weight2_0 #(
    .DataWidth( 32 ),
    .AddressRange( 576 ),
    .AddressWidth( 10 ))
pw_weight2_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(pw_weight2_0_address0),
    .ce0(pw_weight2_0_ce0),
    .we0(pw_weight2_0_we0),
    .d0(grp_weight_loader_fu_562_pw_weight2_0_d0),
    .q0(pw_weight2_0_q0),
    .address1(grp_pw_layer2_fu_474_pw_weight2_0_address1),
    .ce1(pw_weight2_0_ce1),
    .q1(pw_weight2_0_q1)
);

kws_pw_weight2_0 #(
    .DataWidth( 32 ),
    .AddressRange( 576 ),
    .AddressWidth( 10 ))
pw_weight2_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(pw_weight2_1_address0),
    .ce0(pw_weight2_1_ce0),
    .we0(pw_weight2_1_we0),
    .d0(grp_weight_loader_fu_562_pw_weight2_1_d0),
    .q0(pw_weight2_1_q0),
    .address1(grp_pw_layer2_fu_474_pw_weight2_1_address1),
    .ce1(pw_weight2_1_ce1),
    .q1(pw_weight2_1_q1)
);

kws_pw_weight2_0 #(
    .DataWidth( 32 ),
    .AddressRange( 576 ),
    .AddressWidth( 10 ))
pw_weight2_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(pw_weight2_2_address0),
    .ce0(pw_weight2_2_ce0),
    .we0(pw_weight2_2_we0),
    .d0(grp_weight_loader_fu_562_pw_weight2_2_d0),
    .q0(pw_weight2_2_q0),
    .address1(grp_pw_layer2_fu_474_pw_weight2_2_address1),
    .ce1(pw_weight2_2_ce1),
    .q1(pw_weight2_2_q1)
);

kws_pw_weight2_0 #(
    .DataWidth( 32 ),
    .AddressRange( 576 ),
    .AddressWidth( 10 ))
pw_weight2_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(pw_weight2_3_address0),
    .ce0(pw_weight2_3_ce0),
    .we0(pw_weight2_3_we0),
    .d0(grp_weight_loader_fu_562_pw_weight2_3_d0),
    .q0(pw_weight2_3_q0),
    .address1(grp_pw_layer2_fu_474_pw_weight2_3_address1),
    .ce1(pw_weight2_3_ce1),
    .q1(pw_weight2_3_q1)
);

kws_bn_bias1 #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
bn_bias2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(bn_bias2_address0),
    .ce0(bn_bias2_ce0),
    .we0(bn_bias2_we0),
    .d0(grp_weight_loader_fu_562_bn_bias2_d0),
    .q0(bn_bias2_q0)
);

kws_weights_rw #(
    .DataWidth( 32 ),
    .AddressRange( 1600 ),
    .AddressWidth( 11 ))
weights_rw_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_grucell_fu_408_weights_rw_address0),
    .ce0(weights_rw_ce0),
    .q0(weights_rw_q0),
    .address1(grp_weight_loader_fu_562_weights_rw_address1),
    .ce1(weights_rw_ce1),
    .we1(weights_rw_we1),
    .d1(grp_weight_loader_fu_562_weights_rw_d1)
);

fc_relu6_x #(
    .DataWidth( 32 ),
    .AddressRange( 40 ),
    .AddressWidth( 6 ))
bias_r_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(bias_r_address0),
    .ce0(bias_r_ce0),
    .we0(bias_r_we0),
    .d0(grp_weight_loader_fu_562_bias_r_d0),
    .q0(bias_r_q0)
);

kws_weights_rw #(
    .DataWidth( 32 ),
    .AddressRange( 1600 ),
    .AddressWidth( 11 ))
weights_zw_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_grucell_fu_408_weights_zw_address0),
    .ce0(weights_zw_ce0),
    .q0(weights_zw_q0),
    .address1(grp_weight_loader_fu_562_weights_zw_address1),
    .ce1(weights_zw_ce1),
    .we1(weights_zw_we1),
    .d1(grp_weight_loader_fu_562_weights_zw_d1)
);

fc_relu6_x #(
    .DataWidth( 32 ),
    .AddressRange( 40 ),
    .AddressWidth( 6 ))
bias_z_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(bias_z_address0),
    .ce0(bias_z_ce0),
    .we0(bias_z_we0),
    .d0(grp_weight_loader_fu_562_bias_z_d0),
    .q0(bias_z_q0)
);

kws_weights_hw #(
    .DataWidth( 32 ),
    .AddressRange( 1600 ),
    .AddressWidth( 11 ))
weights_hw_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_grucell_fu_408_weights_hw_address0),
    .ce0(weights_hw_ce0),
    .q0(weights_hw_q0),
    .address1(weights_hw_address1),
    .ce1(weights_hw_ce1),
    .we1(weights_hw_we1),
    .d1(grp_weight_loader_fu_562_weights_hw_d1),
    .q1(weights_hw_q1)
);

fc_relu6_x #(
    .DataWidth( 32 ),
    .AddressRange( 40 ),
    .AddressWidth( 6 ))
bias_h_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(bias_h_address0),
    .ce0(bias_h_ce0),
    .we0(bias_h_we0),
    .d0(grp_weight_loader_fu_562_bias_h_d0),
    .q0(bias_h_q0)
);

kws_fc_weights1 #(
    .DataWidth( 32 ),
    .AddressRange( 2560 ),
    .AddressWidth( 12 ))
fc_weights1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(fc_weights1_address0),
    .ce0(fc_weights1_ce0),
    .we0(fc_weights1_we0),
    .d0(grp_weight_loader_fu_562_fc_weights1_d0),
    .q0(fc_weights1_q0)
);

fc_relu6_y #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
fc_bias1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(fc_bias1_address0),
    .ce0(fc_bias1_ce0),
    .we0(fc_bias1_we0),
    .d0(grp_weight_loader_fu_562_fc_bias1_d0),
    .q0(fc_bias1_q0)
);

kws_fc_weights2 #(
    .DataWidth( 32 ),
    .AddressRange( 768 ),
    .AddressWidth( 10 ))
fc_weights2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(fc_weights2_address0),
    .ce0(fc_weights2_ce0),
    .we0(fc_weights2_we0),
    .d0(grp_weight_loader_fu_562_fc_weights2_d0),
    .q0(fc_weights2_q0)
);

fc_64u_12u_1u_s_y_4 #(
    .DataWidth( 32 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
fc_bias2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(fc_bias2_address0),
    .ce0(fc_bias2_ce0),
    .we0(fc_bias2_we0),
    .d0(grp_weight_loader_fu_562_fc_bias2_d0),
    .q0(fc_bias2_q0)
);

grucell grp_grucell_fu_408(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_grucell_fu_408_ap_start),
    .ap_done(grp_grucell_fu_408_ap_done),
    .ap_idle(grp_grucell_fu_408_ap_idle),
    .ap_ready(grp_grucell_fu_408_ap_ready),
    .in_stream_V_dout(pw22gru_V_dout),
    .in_stream_V_empty_n(pw22gru_V_empty_n),
    .in_stream_V_read(grp_grucell_fu_408_in_stream_V_read),
    .out_stream_V_din(grp_grucell_fu_408_out_stream_V_din),
    .out_stream_V_full_n(gru2fc_V_full_n),
    .out_stream_V_write(grp_grucell_fu_408_out_stream_V_write),
    .weights_zu_0_address0(grp_grucell_fu_408_weights_zu_0_address0),
    .weights_zu_0_ce0(grp_grucell_fu_408_weights_zu_0_ce0),
    .weights_zu_0_q0(weights_zu_0_q0),
    .weights_zu_0_address1(grp_grucell_fu_408_weights_zu_0_address1),
    .weights_zu_0_ce1(grp_grucell_fu_408_weights_zu_0_ce1),
    .weights_zu_0_q1(weights_zu_0_q1),
    .weights_zu_1_address0(grp_grucell_fu_408_weights_zu_1_address0),
    .weights_zu_1_ce0(grp_grucell_fu_408_weights_zu_1_ce0),
    .weights_zu_1_q0(weights_zu_1_q0),
    .weights_zu_1_address1(grp_grucell_fu_408_weights_zu_1_address1),
    .weights_zu_1_ce1(grp_grucell_fu_408_weights_zu_1_ce1),
    .weights_zu_1_q1(weights_zu_1_q1),
    .weights_zu_2_address0(grp_grucell_fu_408_weights_zu_2_address0),
    .weights_zu_2_ce0(grp_grucell_fu_408_weights_zu_2_ce0),
    .weights_zu_2_q0(weights_zu_2_q0),
    .weights_zu_2_address1(grp_grucell_fu_408_weights_zu_2_address1),
    .weights_zu_2_ce1(grp_grucell_fu_408_weights_zu_2_ce1),
    .weights_zu_2_q1(weights_zu_2_q1),
    .weights_zu_3_address0(grp_grucell_fu_408_weights_zu_3_address0),
    .weights_zu_3_ce0(grp_grucell_fu_408_weights_zu_3_ce0),
    .weights_zu_3_q0(weights_zu_3_q0),
    .weights_zu_3_address1(grp_grucell_fu_408_weights_zu_3_address1),
    .weights_zu_3_ce1(grp_grucell_fu_408_weights_zu_3_ce1),
    .weights_zu_3_q1(weights_zu_3_q1),
    .weights_ru_0_address0(grp_grucell_fu_408_weights_ru_0_address0),
    .weights_ru_0_ce0(grp_grucell_fu_408_weights_ru_0_ce0),
    .weights_ru_0_q0(weights_ru_0_q0),
    .weights_ru_0_address1(grp_grucell_fu_408_weights_ru_0_address1),
    .weights_ru_0_ce1(grp_grucell_fu_408_weights_ru_0_ce1),
    .weights_ru_0_q1(weights_ru_0_q1),
    .weights_ru_1_address0(grp_grucell_fu_408_weights_ru_1_address0),
    .weights_ru_1_ce0(grp_grucell_fu_408_weights_ru_1_ce0),
    .weights_ru_1_q0(weights_ru_1_q0),
    .weights_ru_1_address1(grp_grucell_fu_408_weights_ru_1_address1),
    .weights_ru_1_ce1(grp_grucell_fu_408_weights_ru_1_ce1),
    .weights_ru_1_q1(weights_ru_1_q1),
    .weights_ru_2_address0(grp_grucell_fu_408_weights_ru_2_address0),
    .weights_ru_2_ce0(grp_grucell_fu_408_weights_ru_2_ce0),
    .weights_ru_2_q0(weights_ru_2_q0),
    .weights_ru_2_address1(grp_grucell_fu_408_weights_ru_2_address1),
    .weights_ru_2_ce1(grp_grucell_fu_408_weights_ru_2_ce1),
    .weights_ru_2_q1(weights_ru_2_q1),
    .weights_ru_3_address0(grp_grucell_fu_408_weights_ru_3_address0),
    .weights_ru_3_ce0(grp_grucell_fu_408_weights_ru_3_ce0),
    .weights_ru_3_q0(weights_ru_3_q0),
    .weights_ru_3_address1(grp_grucell_fu_408_weights_ru_3_address1),
    .weights_ru_3_ce1(grp_grucell_fu_408_weights_ru_3_ce1),
    .weights_ru_3_q1(weights_ru_3_q1),
    .weights_zw_address0(grp_grucell_fu_408_weights_zw_address0),
    .weights_zw_ce0(grp_grucell_fu_408_weights_zw_ce0),
    .weights_zw_q0(weights_zw_q0),
    .weights_rw_address0(grp_grucell_fu_408_weights_rw_address0),
    .weights_rw_ce0(grp_grucell_fu_408_weights_rw_ce0),
    .weights_rw_q0(weights_rw_q0),
    .bias_z_address0(grp_grucell_fu_408_bias_z_address0),
    .bias_z_ce0(grp_grucell_fu_408_bias_z_ce0),
    .bias_z_q0(bias_z_q0),
    .bias_r_address0(grp_grucell_fu_408_bias_r_address0),
    .bias_r_ce0(grp_grucell_fu_408_bias_r_ce0),
    .bias_r_q0(bias_r_q0),
    .weights_hw_address0(grp_grucell_fu_408_weights_hw_address0),
    .weights_hw_ce0(grp_grucell_fu_408_weights_hw_ce0),
    .weights_hw_q0(weights_hw_q0),
    .weights_hw_address1(grp_grucell_fu_408_weights_hw_address1),
    .weights_hw_ce1(grp_grucell_fu_408_weights_hw_ce1),
    .weights_hw_q1(weights_hw_q1),
    .weights_hu_0_address0(grp_grucell_fu_408_weights_hu_0_address0),
    .weights_hu_0_ce0(grp_grucell_fu_408_weights_hu_0_ce0),
    .weights_hu_0_q0(weights_hu_0_q0),
    .weights_hu_0_address1(grp_grucell_fu_408_weights_hu_0_address1),
    .weights_hu_0_ce1(grp_grucell_fu_408_weights_hu_0_ce1),
    .weights_hu_0_q1(weights_hu_0_q1),
    .weights_hu_1_address0(grp_grucell_fu_408_weights_hu_1_address0),
    .weights_hu_1_ce0(grp_grucell_fu_408_weights_hu_1_ce0),
    .weights_hu_1_q0(weights_hu_1_q0),
    .weights_hu_1_address1(grp_grucell_fu_408_weights_hu_1_address1),
    .weights_hu_1_ce1(grp_grucell_fu_408_weights_hu_1_ce1),
    .weights_hu_1_q1(weights_hu_1_q1),
    .weights_hu_2_address0(grp_grucell_fu_408_weights_hu_2_address0),
    .weights_hu_2_ce0(grp_grucell_fu_408_weights_hu_2_ce0),
    .weights_hu_2_q0(weights_hu_2_q0),
    .weights_hu_2_address1(grp_grucell_fu_408_weights_hu_2_address1),
    .weights_hu_2_ce1(grp_grucell_fu_408_weights_hu_2_ce1),
    .weights_hu_2_q1(weights_hu_2_q1),
    .weights_hu_3_address0(grp_grucell_fu_408_weights_hu_3_address0),
    .weights_hu_3_ce0(grp_grucell_fu_408_weights_hu_3_ce0),
    .weights_hu_3_q0(weights_hu_3_q0),
    .weights_hu_3_address1(grp_grucell_fu_408_weights_hu_3_address1),
    .weights_hu_3_ce1(grp_grucell_fu_408_weights_hu_3_ce1),
    .weights_hu_3_q1(weights_hu_3_q1),
    .bias_h_address0(grp_grucell_fu_408_bias_h_address0),
    .bias_h_ce0(grp_grucell_fu_408_bias_h_ce0),
    .bias_h_q0(bias_h_q0)
);

pw_layer2 grp_pw_layer2_fu_474(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_pw_layer2_fu_474_ap_start),
    .ap_done(grp_pw_layer2_fu_474_ap_done),
    .ap_idle(grp_pw_layer2_fu_474_ap_idle),
    .ap_ready(grp_pw_layer2_fu_474_ap_ready),
    .in_stream_V_dout(dw22pw2_V_dout),
    .in_stream_V_empty_n(dw22pw2_V_empty_n),
    .in_stream_V_read(grp_pw_layer2_fu_474_in_stream_V_read),
    .out_stream_V_din(grp_pw_layer2_fu_474_out_stream_V_din),
    .out_stream_V_full_n(pw22gru_V_full_n),
    .out_stream_V_write(grp_pw_layer2_fu_474_out_stream_V_write),
    .pw_weight2_0_address0(grp_pw_layer2_fu_474_pw_weight2_0_address0),
    .pw_weight2_0_ce0(grp_pw_layer2_fu_474_pw_weight2_0_ce0),
    .pw_weight2_0_q0(pw_weight2_0_q0),
    .pw_weight2_0_address1(grp_pw_layer2_fu_474_pw_weight2_0_address1),
    .pw_weight2_0_ce1(grp_pw_layer2_fu_474_pw_weight2_0_ce1),
    .pw_weight2_0_q1(pw_weight2_0_q1),
    .pw_weight2_1_address0(grp_pw_layer2_fu_474_pw_weight2_1_address0),
    .pw_weight2_1_ce0(grp_pw_layer2_fu_474_pw_weight2_1_ce0),
    .pw_weight2_1_q0(pw_weight2_1_q0),
    .pw_weight2_1_address1(grp_pw_layer2_fu_474_pw_weight2_1_address1),
    .pw_weight2_1_ce1(grp_pw_layer2_fu_474_pw_weight2_1_ce1),
    .pw_weight2_1_q1(pw_weight2_1_q1),
    .pw_weight2_2_address0(grp_pw_layer2_fu_474_pw_weight2_2_address0),
    .pw_weight2_2_ce0(grp_pw_layer2_fu_474_pw_weight2_2_ce0),
    .pw_weight2_2_q0(pw_weight2_2_q0),
    .pw_weight2_2_address1(grp_pw_layer2_fu_474_pw_weight2_2_address1),
    .pw_weight2_2_ce1(grp_pw_layer2_fu_474_pw_weight2_2_ce1),
    .pw_weight2_2_q1(pw_weight2_2_q1),
    .pw_weight2_3_address0(grp_pw_layer2_fu_474_pw_weight2_3_address0),
    .pw_weight2_3_ce0(grp_pw_layer2_fu_474_pw_weight2_3_ce0),
    .pw_weight2_3_q0(pw_weight2_3_q0),
    .pw_weight2_3_address1(grp_pw_layer2_fu_474_pw_weight2_3_address1),
    .pw_weight2_3_ce1(grp_pw_layer2_fu_474_pw_weight2_3_ce1),
    .pw_weight2_3_q1(pw_weight2_3_q1),
    .bn_bias2_address0(grp_pw_layer2_fu_474_bn_bias2_address0),
    .bn_bias2_ce0(grp_pw_layer2_fu_474_bn_bias2_ce0),
    .bn_bias2_q0(bn_bias2_q0)
);

dw_layer2 grp_dw_layer2_fu_506(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_dw_layer2_fu_506_ap_start),
    .ap_done(grp_dw_layer2_fu_506_ap_done),
    .ap_idle(grp_dw_layer2_fu_506_ap_idle),
    .ap_ready(grp_dw_layer2_fu_506_ap_ready),
    .in_stream_V_dout(pw12dw2_V_dout),
    .in_stream_V_empty_n(pw12dw2_V_empty_n),
    .in_stream_V_read(grp_dw_layer2_fu_506_in_stream_V_read),
    .out_stream_V_din(grp_dw_layer2_fu_506_out_stream_V_din),
    .out_stream_V_full_n(dw22pw2_V_full_n),
    .out_stream_V_write(grp_dw_layer2_fu_506_out_stream_V_write),
    .dw_weight2_0_address0(grp_dw_layer2_fu_506_dw_weight2_0_address0),
    .dw_weight2_0_ce0(grp_dw_layer2_fu_506_dw_weight2_0_ce0),
    .dw_weight2_0_q0(dw_weight2_0_q0),
    .dw_weight2_1_address0(grp_dw_layer2_fu_506_dw_weight2_1_address0),
    .dw_weight2_1_ce0(grp_dw_layer2_fu_506_dw_weight2_1_ce0),
    .dw_weight2_1_q0(dw_weight2_1_q0),
    .dw_weight2_2_address0(grp_dw_layer2_fu_506_dw_weight2_2_address0),
    .dw_weight2_2_ce0(grp_dw_layer2_fu_506_dw_weight2_2_ce0),
    .dw_weight2_2_q0(dw_weight2_2_q0),
    .dw_weight2_3_address0(grp_dw_layer2_fu_506_dw_weight2_3_address0),
    .dw_weight2_3_ce0(grp_dw_layer2_fu_506_dw_weight2_3_ce0),
    .dw_weight2_3_q0(dw_weight2_3_q0)
);

pw_layer1 grp_pw_layer1_fu_536(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_pw_layer1_fu_536_ap_start),
    .ap_done(grp_pw_layer1_fu_536_ap_done),
    .ap_idle(grp_pw_layer1_fu_536_ap_idle),
    .ap_ready(grp_pw_layer1_fu_536_ap_ready),
    .in_stream_V_dout(dw12pw1_V_dout),
    .in_stream_V_empty_n(dw12pw1_V_empty_n),
    .in_stream_V_read(grp_pw_layer1_fu_536_in_stream_V_read),
    .out_stream_V_din(grp_pw_layer1_fu_536_out_stream_V_din),
    .out_stream_V_full_n(pw12dw2_V_full_n),
    .out_stream_V_write(grp_pw_layer1_fu_536_out_stream_V_write),
    .pw_weight1_3_address0(grp_pw_layer1_fu_536_pw_weight1_3_address0),
    .pw_weight1_3_ce0(grp_pw_layer1_fu_536_pw_weight1_3_ce0),
    .pw_weight1_3_q0(pw_weight1_3_q0),
    .pw_weight1_0_address0(grp_pw_layer1_fu_536_pw_weight1_0_address0),
    .pw_weight1_0_ce0(grp_pw_layer1_fu_536_pw_weight1_0_ce0),
    .pw_weight1_0_q0(pw_weight1_0_q0),
    .pw_weight1_1_address0(grp_pw_layer1_fu_536_pw_weight1_1_address0),
    .pw_weight1_1_ce0(grp_pw_layer1_fu_536_pw_weight1_1_ce0),
    .pw_weight1_1_q0(pw_weight1_1_q0),
    .pw_weight1_2_address0(grp_pw_layer1_fu_536_pw_weight1_2_address0),
    .pw_weight1_2_ce0(grp_pw_layer1_fu_536_pw_weight1_2_ce0),
    .pw_weight1_2_q0(pw_weight1_2_q0),
    .bn_bias1_address0(grp_pw_layer1_fu_536_bn_bias1_address0),
    .bn_bias1_ce0(grp_pw_layer1_fu_536_bn_bias1_ce0),
    .bn_bias1_q0(bn_bias1_q0)
);

weight_loader grp_weight_loader_fu_562(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_weight_loader_fu_562_ap_start),
    .ap_done(grp_weight_loader_fu_562_ap_done),
    .ap_idle(grp_weight_loader_fu_562_ap_idle),
    .ap_ready(grp_weight_loader_fu_562_ap_ready),
    .weight_in_TDATA(weight_in_TDATA_int),
    .weight_in_TVALID(weight_in_TVALID_int),
    .weight_in_TREADY(grp_weight_loader_fu_562_weight_in_TREADY),
    .weight_in_TLAST(weight_in_TLAST_int),
    .dw_weight1_address0(grp_weight_loader_fu_562_dw_weight1_address0),
    .dw_weight1_ce0(grp_weight_loader_fu_562_dw_weight1_ce0),
    .dw_weight1_we0(grp_weight_loader_fu_562_dw_weight1_we0),
    .dw_weight1_d0(grp_weight_loader_fu_562_dw_weight1_d0),
    .pw_weight1_0_address0(grp_weight_loader_fu_562_pw_weight1_0_address0),
    .pw_weight1_0_ce0(grp_weight_loader_fu_562_pw_weight1_0_ce0),
    .pw_weight1_0_we0(grp_weight_loader_fu_562_pw_weight1_0_we0),
    .pw_weight1_0_d0(grp_weight_loader_fu_562_pw_weight1_0_d0),
    .pw_weight1_1_address0(grp_weight_loader_fu_562_pw_weight1_1_address0),
    .pw_weight1_1_ce0(grp_weight_loader_fu_562_pw_weight1_1_ce0),
    .pw_weight1_1_we0(grp_weight_loader_fu_562_pw_weight1_1_we0),
    .pw_weight1_1_d0(grp_weight_loader_fu_562_pw_weight1_1_d0),
    .pw_weight1_2_address0(grp_weight_loader_fu_562_pw_weight1_2_address0),
    .pw_weight1_2_ce0(grp_weight_loader_fu_562_pw_weight1_2_ce0),
    .pw_weight1_2_we0(grp_weight_loader_fu_562_pw_weight1_2_we0),
    .pw_weight1_2_d0(grp_weight_loader_fu_562_pw_weight1_2_d0),
    .pw_weight1_3_address0(grp_weight_loader_fu_562_pw_weight1_3_address0),
    .pw_weight1_3_ce0(grp_weight_loader_fu_562_pw_weight1_3_ce0),
    .pw_weight1_3_we0(grp_weight_loader_fu_562_pw_weight1_3_we0),
    .pw_weight1_3_d0(grp_weight_loader_fu_562_pw_weight1_3_d0),
    .bn_bias1_address0(grp_weight_loader_fu_562_bn_bias1_address0),
    .bn_bias1_ce0(grp_weight_loader_fu_562_bn_bias1_ce0),
    .bn_bias1_we0(grp_weight_loader_fu_562_bn_bias1_we0),
    .bn_bias1_d0(grp_weight_loader_fu_562_bn_bias1_d0),
    .dw_weight2_0_address1(grp_weight_loader_fu_562_dw_weight2_0_address1),
    .dw_weight2_0_ce1(grp_weight_loader_fu_562_dw_weight2_0_ce1),
    .dw_weight2_0_we1(grp_weight_loader_fu_562_dw_weight2_0_we1),
    .dw_weight2_0_d1(grp_weight_loader_fu_562_dw_weight2_0_d1),
    .dw_weight2_1_address1(grp_weight_loader_fu_562_dw_weight2_1_address1),
    .dw_weight2_1_ce1(grp_weight_loader_fu_562_dw_weight2_1_ce1),
    .dw_weight2_1_we1(grp_weight_loader_fu_562_dw_weight2_1_we1),
    .dw_weight2_1_d1(grp_weight_loader_fu_562_dw_weight2_1_d1),
    .dw_weight2_2_address1(grp_weight_loader_fu_562_dw_weight2_2_address1),
    .dw_weight2_2_ce1(grp_weight_loader_fu_562_dw_weight2_2_ce1),
    .dw_weight2_2_we1(grp_weight_loader_fu_562_dw_weight2_2_we1),
    .dw_weight2_2_d1(grp_weight_loader_fu_562_dw_weight2_2_d1),
    .dw_weight2_3_address1(grp_weight_loader_fu_562_dw_weight2_3_address1),
    .dw_weight2_3_ce1(grp_weight_loader_fu_562_dw_weight2_3_ce1),
    .dw_weight2_3_we1(grp_weight_loader_fu_562_dw_weight2_3_we1),
    .dw_weight2_3_d1(grp_weight_loader_fu_562_dw_weight2_3_d1),
    .pw_weight2_0_address0(grp_weight_loader_fu_562_pw_weight2_0_address0),
    .pw_weight2_0_ce0(grp_weight_loader_fu_562_pw_weight2_0_ce0),
    .pw_weight2_0_we0(grp_weight_loader_fu_562_pw_weight2_0_we0),
    .pw_weight2_0_d0(grp_weight_loader_fu_562_pw_weight2_0_d0),
    .pw_weight2_1_address0(grp_weight_loader_fu_562_pw_weight2_1_address0),
    .pw_weight2_1_ce0(grp_weight_loader_fu_562_pw_weight2_1_ce0),
    .pw_weight2_1_we0(grp_weight_loader_fu_562_pw_weight2_1_we0),
    .pw_weight2_1_d0(grp_weight_loader_fu_562_pw_weight2_1_d0),
    .pw_weight2_2_address0(grp_weight_loader_fu_562_pw_weight2_2_address0),
    .pw_weight2_2_ce0(grp_weight_loader_fu_562_pw_weight2_2_ce0),
    .pw_weight2_2_we0(grp_weight_loader_fu_562_pw_weight2_2_we0),
    .pw_weight2_2_d0(grp_weight_loader_fu_562_pw_weight2_2_d0),
    .pw_weight2_3_address0(grp_weight_loader_fu_562_pw_weight2_3_address0),
    .pw_weight2_3_ce0(grp_weight_loader_fu_562_pw_weight2_3_ce0),
    .pw_weight2_3_we0(grp_weight_loader_fu_562_pw_weight2_3_we0),
    .pw_weight2_3_d0(grp_weight_loader_fu_562_pw_weight2_3_d0),
    .bn_bias2_address0(grp_weight_loader_fu_562_bn_bias2_address0),
    .bn_bias2_ce0(grp_weight_loader_fu_562_bn_bias2_ce0),
    .bn_bias2_we0(grp_weight_loader_fu_562_bn_bias2_we0),
    .bn_bias2_d0(grp_weight_loader_fu_562_bn_bias2_d0),
    .weights_rw_address1(grp_weight_loader_fu_562_weights_rw_address1),
    .weights_rw_ce1(grp_weight_loader_fu_562_weights_rw_ce1),
    .weights_rw_we1(grp_weight_loader_fu_562_weights_rw_we1),
    .weights_rw_d1(grp_weight_loader_fu_562_weights_rw_d1),
    .bias_r_address0(grp_weight_loader_fu_562_bias_r_address0),
    .bias_r_ce0(grp_weight_loader_fu_562_bias_r_ce0),
    .bias_r_we0(grp_weight_loader_fu_562_bias_r_we0),
    .bias_r_d0(grp_weight_loader_fu_562_bias_r_d0),
    .weights_zw_address1(grp_weight_loader_fu_562_weights_zw_address1),
    .weights_zw_ce1(grp_weight_loader_fu_562_weights_zw_ce1),
    .weights_zw_we1(grp_weight_loader_fu_562_weights_zw_we1),
    .weights_zw_d1(grp_weight_loader_fu_562_weights_zw_d1),
    .bias_z_address0(grp_weight_loader_fu_562_bias_z_address0),
    .bias_z_ce0(grp_weight_loader_fu_562_bias_z_ce0),
    .bias_z_we0(grp_weight_loader_fu_562_bias_z_we0),
    .bias_z_d0(grp_weight_loader_fu_562_bias_z_d0),
    .weights_hw_address1(grp_weight_loader_fu_562_weights_hw_address1),
    .weights_hw_ce1(grp_weight_loader_fu_562_weights_hw_ce1),
    .weights_hw_we1(grp_weight_loader_fu_562_weights_hw_we1),
    .weights_hw_d1(grp_weight_loader_fu_562_weights_hw_d1),
    .bias_h_address0(grp_weight_loader_fu_562_bias_h_address0),
    .bias_h_ce0(grp_weight_loader_fu_562_bias_h_ce0),
    .bias_h_we0(grp_weight_loader_fu_562_bias_h_we0),
    .bias_h_d0(grp_weight_loader_fu_562_bias_h_d0),
    .fc_weights1_address0(grp_weight_loader_fu_562_fc_weights1_address0),
    .fc_weights1_ce0(grp_weight_loader_fu_562_fc_weights1_ce0),
    .fc_weights1_we0(grp_weight_loader_fu_562_fc_weights1_we0),
    .fc_weights1_d0(grp_weight_loader_fu_562_fc_weights1_d0),
    .fc_bias1_address0(grp_weight_loader_fu_562_fc_bias1_address0),
    .fc_bias1_ce0(grp_weight_loader_fu_562_fc_bias1_ce0),
    .fc_bias1_we0(grp_weight_loader_fu_562_fc_bias1_we0),
    .fc_bias1_d0(grp_weight_loader_fu_562_fc_bias1_d0),
    .fc_weights2_address0(grp_weight_loader_fu_562_fc_weights2_address0),
    .fc_weights2_ce0(grp_weight_loader_fu_562_fc_weights2_ce0),
    .fc_weights2_we0(grp_weight_loader_fu_562_fc_weights2_we0),
    .fc_weights2_d0(grp_weight_loader_fu_562_fc_weights2_d0),
    .fc_bias2_address0(grp_weight_loader_fu_562_fc_bias2_address0),
    .fc_bias2_ce0(grp_weight_loader_fu_562_fc_bias2_ce0),
    .fc_bias2_we0(grp_weight_loader_fu_562_fc_bias2_we0),
    .fc_bias2_d0(grp_weight_loader_fu_562_fc_bias2_d0),
    .weights_ru_0_address1(grp_weight_loader_fu_562_weights_ru_0_address1),
    .weights_ru_0_ce1(grp_weight_loader_fu_562_weights_ru_0_ce1),
    .weights_ru_0_we1(grp_weight_loader_fu_562_weights_ru_0_we1),
    .weights_ru_0_d1(grp_weight_loader_fu_562_weights_ru_0_d1),
    .weights_ru_1_address1(grp_weight_loader_fu_562_weights_ru_1_address1),
    .weights_ru_1_ce1(grp_weight_loader_fu_562_weights_ru_1_ce1),
    .weights_ru_1_we1(grp_weight_loader_fu_562_weights_ru_1_we1),
    .weights_ru_1_d1(grp_weight_loader_fu_562_weights_ru_1_d1),
    .weights_ru_2_address1(grp_weight_loader_fu_562_weights_ru_2_address1),
    .weights_ru_2_ce1(grp_weight_loader_fu_562_weights_ru_2_ce1),
    .weights_ru_2_we1(grp_weight_loader_fu_562_weights_ru_2_we1),
    .weights_ru_2_d1(grp_weight_loader_fu_562_weights_ru_2_d1),
    .weights_ru_3_address1(grp_weight_loader_fu_562_weights_ru_3_address1),
    .weights_ru_3_ce1(grp_weight_loader_fu_562_weights_ru_3_ce1),
    .weights_ru_3_we1(grp_weight_loader_fu_562_weights_ru_3_we1),
    .weights_ru_3_d1(grp_weight_loader_fu_562_weights_ru_3_d1),
    .weights_zu_0_address1(grp_weight_loader_fu_562_weights_zu_0_address1),
    .weights_zu_0_ce1(grp_weight_loader_fu_562_weights_zu_0_ce1),
    .weights_zu_0_we1(grp_weight_loader_fu_562_weights_zu_0_we1),
    .weights_zu_0_d1(grp_weight_loader_fu_562_weights_zu_0_d1),
    .weights_zu_1_address1(grp_weight_loader_fu_562_weights_zu_1_address1),
    .weights_zu_1_ce1(grp_weight_loader_fu_562_weights_zu_1_ce1),
    .weights_zu_1_we1(grp_weight_loader_fu_562_weights_zu_1_we1),
    .weights_zu_1_d1(grp_weight_loader_fu_562_weights_zu_1_d1),
    .weights_zu_2_address1(grp_weight_loader_fu_562_weights_zu_2_address1),
    .weights_zu_2_ce1(grp_weight_loader_fu_562_weights_zu_2_ce1),
    .weights_zu_2_we1(grp_weight_loader_fu_562_weights_zu_2_we1),
    .weights_zu_2_d1(grp_weight_loader_fu_562_weights_zu_2_d1),
    .weights_zu_3_address1(grp_weight_loader_fu_562_weights_zu_3_address1),
    .weights_zu_3_ce1(grp_weight_loader_fu_562_weights_zu_3_ce1),
    .weights_zu_3_we1(grp_weight_loader_fu_562_weights_zu_3_we1),
    .weights_zu_3_d1(grp_weight_loader_fu_562_weights_zu_3_d1),
    .weights_hu_0_address1(grp_weight_loader_fu_562_weights_hu_0_address1),
    .weights_hu_0_ce1(grp_weight_loader_fu_562_weights_hu_0_ce1),
    .weights_hu_0_we1(grp_weight_loader_fu_562_weights_hu_0_we1),
    .weights_hu_0_d1(grp_weight_loader_fu_562_weights_hu_0_d1),
    .weights_hu_1_address1(grp_weight_loader_fu_562_weights_hu_1_address1),
    .weights_hu_1_ce1(grp_weight_loader_fu_562_weights_hu_1_ce1),
    .weights_hu_1_we1(grp_weight_loader_fu_562_weights_hu_1_we1),
    .weights_hu_1_d1(grp_weight_loader_fu_562_weights_hu_1_d1),
    .weights_hu_2_address1(grp_weight_loader_fu_562_weights_hu_2_address1),
    .weights_hu_2_ce1(grp_weight_loader_fu_562_weights_hu_2_ce1),
    .weights_hu_2_we1(grp_weight_loader_fu_562_weights_hu_2_we1),
    .weights_hu_2_d1(grp_weight_loader_fu_562_weights_hu_2_d1),
    .weights_hu_3_address1(grp_weight_loader_fu_562_weights_hu_3_address1),
    .weights_hu_3_ce1(grp_weight_loader_fu_562_weights_hu_3_ce1),
    .weights_hu_3_we1(grp_weight_loader_fu_562_weights_hu_3_we1),
    .weights_hu_3_d1(grp_weight_loader_fu_562_weights_hu_3_d1)
);

fc_relu6 grp_fc_relu6_fu_644(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_fc_relu6_fu_644_ap_start),
    .ap_done(grp_fc_relu6_fu_644_ap_done),
    .ap_idle(grp_fc_relu6_fu_644_ap_idle),
    .ap_ready(grp_fc_relu6_fu_644_ap_ready),
    .in_stream_V_dout(gru2fc_V_dout),
    .in_stream_V_empty_n(gru2fc_V_empty_n),
    .in_stream_V_read(grp_fc_relu6_fu_644_in_stream_V_read),
    .out_stream_V_din(grp_fc_relu6_fu_644_out_stream_V_din),
    .out_stream_V_full_n(fc2final_V_full_n),
    .out_stream_V_write(grp_fc_relu6_fu_644_out_stream_V_write),
    .fc_bias1_address0(grp_fc_relu6_fu_644_fc_bias1_address0),
    .fc_bias1_ce0(grp_fc_relu6_fu_644_fc_bias1_ce0),
    .fc_bias1_q0(fc_bias1_q0),
    .fc_weights1_address0(grp_fc_relu6_fu_644_fc_weights1_address0),
    .fc_weights1_ce0(grp_fc_relu6_fu_644_fc_weights1_ce0),
    .fc_weights1_q0(fc_weights1_q0)
);

fc_64u_12u_1u_s grp_fc_64u_12u_1u_s_fu_658(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_fc_64u_12u_1u_s_fu_658_ap_start),
    .ap_done(grp_fc_64u_12u_1u_s_fu_658_ap_done),
    .ap_idle(grp_fc_64u_12u_1u_s_fu_658_ap_idle),
    .ap_ready(grp_fc_64u_12u_1u_s_fu_658_ap_ready),
    .in_stream_V_dout(fc2final_V_dout),
    .in_stream_V_empty_n(fc2final_V_empty_n),
    .in_stream_V_read(grp_fc_64u_12u_1u_s_fu_658_in_stream_V_read),
    .out_stream_V_din(grp_fc_64u_12u_1u_s_fu_658_out_stream_V_din),
    .out_stream_V_full_n(output_V_full_n),
    .out_stream_V_write(grp_fc_64u_12u_1u_s_fu_658_out_stream_V_write),
    .fc_bias2_address0(grp_fc_64u_12u_1u_s_fu_658_fc_bias2_address0),
    .fc_bias2_ce0(grp_fc_64u_12u_1u_s_fu_658_fc_bias2_ce0),
    .fc_bias2_q0(fc_bias2_q0),
    .fc_weights2_address0(grp_fc_64u_12u_1u_s_fu_658_fc_weights2_address0),
    .fc_weights2_ce0(grp_fc_64u_12u_1u_s_fu_658_fc_weights2_ce0),
    .fc_weights2_q0(fc_weights2_q0)
);

dw_layer1 grp_dw_layer1_fu_672(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_dw_layer1_fu_672_ap_start),
    .ap_done(grp_dw_layer1_fu_672_ap_done),
    .ap_idle(grp_dw_layer1_fu_672_ap_idle),
    .ap_ready(grp_dw_layer1_fu_672_ap_ready),
    .in_stream_V_dout(data2dw1_V_dout),
    .in_stream_V_empty_n(data2dw1_V_empty_n),
    .in_stream_V_read(grp_dw_layer1_fu_672_in_stream_V_read),
    .out_stream_V_din(grp_dw_layer1_fu_672_out_stream_V_din),
    .out_stream_V_full_n(dw12pw1_V_full_n),
    .out_stream_V_write(grp_dw_layer1_fu_672_out_stream_V_write),
    .dw_weight1_address0(grp_dw_layer1_fu_672_dw_weight1_address0),
    .dw_weight1_ce0(grp_dw_layer1_fu_672_dw_weight1_ce0),
    .dw_weight1_q0(dw_weight1_q0)
);

data_broadcaster grp_data_broadcaster_fu_684(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_data_broadcaster_fu_684_ap_start),
    .ap_done(grp_data_broadcaster_fu_684_ap_done),
    .ap_idle(grp_data_broadcaster_fu_684_ap_idle),
    .ap_ready(grp_data_broadcaster_fu_684_ap_ready),
    .data_in_TDATA(data_in_TDATA_int),
    .data_in_TVALID(data_in_TVALID_int),
    .data_in_TREADY(grp_data_broadcaster_fu_684_data_in_TREADY),
    .data_in_TLAST(data_in_TLAST_int),
    .data2dw1_V_din(grp_data_broadcaster_fu_684_data2dw1_V_din),
    .data2dw1_V_full_n(data2dw1_V_full_n),
    .data2dw1_V_write(grp_data_broadcaster_fu_684_data2dw1_V_write)
);

datastream_out_12u_s grp_datastream_out_12u_s_fu_693(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_datastream_out_12u_s_fu_693_ap_start),
    .ap_done(grp_datastream_out_12u_s_fu_693_ap_done),
    .ap_idle(grp_datastream_out_12u_s_fu_693_ap_idle),
    .ap_ready(grp_datastream_out_12u_s_fu_693_ap_ready),
    .output_V_dout(output_V_dout),
    .output_V_empty_n(output_V_empty_n),
    .output_V_read(grp_datastream_out_12u_s_fu_693_output_V_read),
    .data_out_TDATA(grp_datastream_out_12u_s_fu_693_data_out_TDATA),
    .data_out_TVALID(grp_datastream_out_12u_s_fu_693_data_out_TVALID),
    .data_out_TREADY(grp_datastream_out_12u_s_fu_693_data_out_TREADY),
    .data_out_TLAST(grp_datastream_out_12u_s_fu_693_data_out_TLAST)
);

fifo_w32_d500_A data2dw1_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_data_broadcaster_fu_684_data2dw1_V_din),
    .if_full_n(data2dw1_V_full_n),
    .if_write(data2dw1_V_write),
    .if_dout(data2dw1_V_dout),
    .if_empty_n(data2dw1_V_empty_n),
    .if_read(data2dw1_V_read)
);

fifo_w32_d414_A dw12pw1_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_dw_layer1_fu_672_out_stream_V_din),
    .if_full_n(dw12pw1_V_full_n),
    .if_write(dw12pw1_V_write),
    .if_dout(dw12pw1_V_dout),
    .if_empty_n(dw12pw1_V_empty_n),
    .if_read(dw12pw1_V_read)
);

fifo_w32_d19872_A pw12dw2_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_pw_layer1_fu_536_out_stream_V_din),
    .if_full_n(pw12dw2_V_full_n),
    .if_write(pw12dw2_V_write),
    .if_dout(pw12dw2_V_dout),
    .if_empty_n(pw12dw2_V_empty_n),
    .if_read(pw12dw2_V_read)
);

fifo_w32_d16512_A dw22pw2_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_dw_layer2_fu_506_out_stream_V_din),
    .if_full_n(dw22pw2_V_full_n),
    .if_write(dw22pw2_V_write),
    .if_dout(dw22pw2_V_dout),
    .if_empty_n(dw22pw2_V_empty_n),
    .if_read(dw22pw2_V_read)
);

fifo_w32_d16512_A pw22gru_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_pw_layer2_fu_474_out_stream_V_din),
    .if_full_n(pw22gru_V_full_n),
    .if_write(pw22gru_V_write),
    .if_dout(pw22gru_V_dout),
    .if_empty_n(pw22gru_V_empty_n),
    .if_read(pw22gru_V_read)
);

fifo_w32_d40_A gru2fc_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_grucell_fu_408_out_stream_V_din),
    .if_full_n(gru2fc_V_full_n),
    .if_write(gru2fc_V_write),
    .if_dout(gru2fc_V_dout),
    .if_empty_n(gru2fc_V_empty_n),
    .if_read(gru2fc_V_read)
);

fifo_w32_d64_A fc2final_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_fc_relu6_fu_644_out_stream_V_din),
    .if_full_n(fc2final_V_full_n),
    .if_write(fc2final_V_write),
    .if_dout(fc2final_V_dout),
    .if_empty_n(fc2final_V_empty_n),
    .if_read(fc2final_V_read)
);

fifo_w32_d12_A output_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_fc_64u_12u_1u_s_fu_658_out_stream_V_din),
    .if_full_n(output_V_full_n),
    .if_write(output_V_write),
    .if_dout(output_V_dout),
    .if_empty_n(output_V_empty_n),
    .if_read(output_V_read)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_data_in_V_data_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(data_in_TDATA),
    .vld_in(data_in_TVALID),
    .ack_in(regslice_both_data_in_V_data_U_ack_in),
    .data_out(data_in_TDATA_int),
    .vld_out(data_in_TVALID_int),
    .ack_out(data_in_TREADY_int),
    .apdone_blk(regslice_both_data_in_V_data_U_apdone_blk)
);

regslice_both_w1 #(
    .DataWidth( 1 ))
regslice_both_w1_data_in_V_last_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(data_in_TLAST),
    .vld_in(data_in_TVALID),
    .ack_in(regslice_both_w1_data_in_V_last_U_ack_in),
    .data_out(data_in_TLAST_int),
    .vld_out(regslice_both_w1_data_in_V_last_U_vld_out),
    .ack_out(data_in_TREADY_int),
    .apdone_blk(regslice_both_w1_data_in_V_last_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_weight_in_V_data_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(weight_in_TDATA),
    .vld_in(weight_in_TVALID),
    .ack_in(regslice_both_weight_in_V_data_U_ack_in),
    .data_out(weight_in_TDATA_int),
    .vld_out(weight_in_TVALID_int),
    .ack_out(weight_in_TREADY_int),
    .apdone_blk(regslice_both_weight_in_V_data_U_apdone_blk)
);

regslice_both_w1 #(
    .DataWidth( 1 ))
regslice_both_w1_weight_in_V_last_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(weight_in_TLAST),
    .vld_in(weight_in_TVALID),
    .ack_in(regslice_both_w1_weight_in_V_last_U_ack_in),
    .data_out(weight_in_TLAST_int),
    .vld_out(regslice_both_w1_weight_in_V_last_U_vld_out),
    .ack_out(weight_in_TREADY_int),
    .apdone_blk(regslice_both_w1_weight_in_V_last_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_control_in_V_data_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(control_in_TDATA),
    .vld_in(control_in_TVALID),
    .ack_in(regslice_both_control_in_V_data_U_ack_in),
    .data_out(control_in_TDATA_int),
    .vld_out(control_in_TVALID_int),
    .ack_out(control_in_TREADY_int),
    .apdone_blk(regslice_both_control_in_V_data_U_apdone_blk)
);

regslice_both_w1 #(
    .DataWidth( 1 ))
regslice_both_w1_control_in_V_last_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(control_in_TLAST),
    .vld_in(control_in_TVALID),
    .ack_in(regslice_both_w1_control_in_V_last_U_ack_in),
    .data_out(control_in_TLAST_int),
    .vld_out(regslice_both_w1_control_in_V_last_U_vld_out),
    .ack_out(control_in_TREADY_int),
    .apdone_blk(regslice_both_w1_control_in_V_last_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_data_out_V_data_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_datastream_out_12u_s_fu_693_data_out_TDATA),
    .vld_in(grp_datastream_out_12u_s_fu_693_data_out_TVALID),
    .ack_in(data_out_TREADY_int),
    .data_out(data_out_TDATA),
    .vld_out(regslice_both_data_out_V_data_U_vld_out),
    .ack_out(data_out_TREADY),
    .apdone_blk(regslice_both_data_out_V_data_U_apdone_blk)
);

regslice_both_w1 #(
    .DataWidth( 1 ))
regslice_both_w1_data_out_V_last_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_datastream_out_12u_s_fu_693_data_out_TLAST),
    .vld_in(grp_datastream_out_12u_s_fu_693_data_out_TVALID),
    .ack_in(regslice_both_w1_data_out_V_last_U_ack_in_dummy),
    .data_out(data_out_TLAST),
    .vld_out(regslice_both_w1_data_out_V_last_U_vld_out),
    .ack_out(data_out_TREADY),
    .apdone_blk(regslice_both_w1_data_out_V_last_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_data_broadcaster_fu_684_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (control_in_TVALID_int == 1'b1) & (icmp_ln82_fu_706_p2 == 1'd0))) begin
            grp_data_broadcaster_fu_684_ap_start_reg <= 1'b1;
        end else if ((grp_data_broadcaster_fu_684_ap_ready == 1'b1)) begin
            grp_data_broadcaster_fu_684_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_datastream_out_12u_s_fu_693_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state17)) begin
            grp_datastream_out_12u_s_fu_693_ap_start_reg <= 1'b1;
        end else if ((grp_datastream_out_12u_s_fu_693_ap_ready == 1'b1)) begin
            grp_datastream_out_12u_s_fu_693_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_dw_layer1_fu_672_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_dw_layer1_fu_672_ap_start_reg <= 1'b1;
        end else if ((grp_dw_layer1_fu_672_ap_ready == 1'b1)) begin
            grp_dw_layer1_fu_672_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_dw_layer2_fu_506_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            grp_dw_layer2_fu_506_ap_start_reg <= 1'b1;
        end else if ((grp_dw_layer2_fu_506_ap_ready == 1'b1)) begin
            grp_dw_layer2_fu_506_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_fc_64u_12u_1u_s_fu_658_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state15)) begin
            grp_fc_64u_12u_1u_s_fu_658_ap_start_reg <= 1'b1;
        end else if ((grp_fc_64u_12u_1u_s_fu_658_ap_ready == 1'b1)) begin
            grp_fc_64u_12u_1u_s_fu_658_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_fc_relu6_fu_644_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state13)) begin
            grp_fc_relu6_fu_644_ap_start_reg <= 1'b1;
        end else if ((grp_fc_relu6_fu_644_ap_ready == 1'b1)) begin
            grp_fc_relu6_fu_644_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_grucell_fu_408_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state11)) begin
            grp_grucell_fu_408_ap_start_reg <= 1'b1;
        end else if ((grp_grucell_fu_408_ap_ready == 1'b1)) begin
            grp_grucell_fu_408_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_pw_layer1_fu_536_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            grp_pw_layer1_fu_536_ap_start_reg <= 1'b1;
        end else if ((grp_pw_layer1_fu_536_ap_ready == 1'b1)) begin
            grp_pw_layer1_fu_536_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_pw_layer2_fu_474_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state9)) begin
            grp_pw_layer2_fu_474_ap_start_reg <= 1'b1;
        end else if ((grp_pw_layer2_fu_474_ap_ready == 1'b1)) begin
            grp_pw_layer2_fu_474_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_weight_loader_fu_562_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (control_in_TVALID_int == 1'b1) & (icmp_ln82_fu_706_p2 == 1'd1))) begin
            grp_weight_loader_fu_562_ap_start_reg <= 1'b1;
        end else if ((grp_weight_loader_fu_562_ap_ready == 1'b1)) begin
            grp_weight_loader_fu_562_ap_start_reg <= 1'b0;
        end
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        bias_h_address0 = grp_weight_loader_fu_562_bias_h_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        bias_h_address0 = grp_grucell_fu_408_bias_h_address0;
    end else begin
        bias_h_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        bias_h_ce0 = grp_weight_loader_fu_562_bias_h_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        bias_h_ce0 = grp_grucell_fu_408_bias_h_ce0;
    end else begin
        bias_h_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        bias_h_we0 = grp_weight_loader_fu_562_bias_h_we0;
    end else begin
        bias_h_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        bias_r_address0 = grp_weight_loader_fu_562_bias_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        bias_r_address0 = grp_grucell_fu_408_bias_r_address0;
    end else begin
        bias_r_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        bias_r_ce0 = grp_weight_loader_fu_562_bias_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        bias_r_ce0 = grp_grucell_fu_408_bias_r_ce0;
    end else begin
        bias_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        bias_r_we0 = grp_weight_loader_fu_562_bias_r_we0;
    end else begin
        bias_r_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        bias_z_address0 = grp_weight_loader_fu_562_bias_z_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        bias_z_address0 = grp_grucell_fu_408_bias_z_address0;
    end else begin
        bias_z_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        bias_z_ce0 = grp_weight_loader_fu_562_bias_z_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        bias_z_ce0 = grp_grucell_fu_408_bias_z_ce0;
    end else begin
        bias_z_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        bias_z_we0 = grp_weight_loader_fu_562_bias_z_we0;
    end else begin
        bias_z_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        bn_bias1_address0 = grp_weight_loader_fu_562_bn_bias1_address0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        bn_bias1_address0 = grp_pw_layer1_fu_536_bn_bias1_address0;
    end else begin
        bn_bias1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        bn_bias1_ce0 = grp_weight_loader_fu_562_bn_bias1_ce0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        bn_bias1_ce0 = grp_pw_layer1_fu_536_bn_bias1_ce0;
    end else begin
        bn_bias1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        bn_bias1_we0 = grp_weight_loader_fu_562_bn_bias1_we0;
    end else begin
        bn_bias1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        bn_bias2_address0 = grp_weight_loader_fu_562_bn_bias2_address0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        bn_bias2_address0 = grp_pw_layer2_fu_474_bn_bias2_address0;
    end else begin
        bn_bias2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        bn_bias2_ce0 = grp_weight_loader_fu_562_bn_bias2_ce0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        bn_bias2_ce0 = grp_pw_layer2_fu_474_bn_bias2_ce0;
    end else begin
        bn_bias2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        bn_bias2_we0 = grp_weight_loader_fu_562_bn_bias2_we0;
    end else begin
        bn_bias2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        control_in_TDATA_blk_n = control_in_TVALID_int;
    end else begin
        control_in_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((control_in_TVALID == 1'b1) & (regslice_both_control_in_V_data_U_ack_in == 1'b1))) begin
        control_in_TREADY = 1'b1;
    end else begin
        control_in_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (control_in_TVALID_int == 1'b1))) begin
        control_in_TREADY_int = 1'b1;
    end else begin
        control_in_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        data2dw1_V_read = grp_dw_layer1_fu_672_in_stream_V_read;
    end else begin
        data2dw1_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        data2dw1_V_write = grp_data_broadcaster_fu_684_data2dw1_V_write;
    end else begin
        data2dw1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((data_in_TVALID == 1'b1) & (regslice_both_data_in_V_data_U_ack_in == 1'b1))) begin
        data_in_TREADY = 1'b1;
    end else begin
        data_in_TREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        data_in_TREADY_int = grp_data_broadcaster_fu_684_data_in_TREADY;
    end else begin
        data_in_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        dw12pw1_V_read = grp_pw_layer1_fu_536_in_stream_V_read;
    end else begin
        dw12pw1_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        dw12pw1_V_write = grp_dw_layer1_fu_672_out_stream_V_write;
    end else begin
        dw12pw1_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        dw22pw2_V_read = grp_pw_layer2_fu_474_in_stream_V_read;
    end else begin
        dw22pw2_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        dw22pw2_V_write = grp_dw_layer2_fu_506_out_stream_V_write;
    end else begin
        dw22pw2_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        dw_weight1_address0 = grp_dw_layer1_fu_672_dw_weight1_address0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        dw_weight1_address0 = grp_weight_loader_fu_562_dw_weight1_address0;
    end else begin
        dw_weight1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        dw_weight1_ce0 = grp_dw_layer1_fu_672_dw_weight1_ce0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        dw_weight1_ce0 = grp_weight_loader_fu_562_dw_weight1_ce0;
    end else begin
        dw_weight1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        dw_weight1_we0 = grp_weight_loader_fu_562_dw_weight1_we0;
    end else begin
        dw_weight1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        dw_weight2_0_ce0 = grp_dw_layer2_fu_506_dw_weight2_0_ce0;
    end else begin
        dw_weight2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        dw_weight2_0_ce1 = grp_weight_loader_fu_562_dw_weight2_0_ce1;
    end else begin
        dw_weight2_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        dw_weight2_0_we1 = grp_weight_loader_fu_562_dw_weight2_0_we1;
    end else begin
        dw_weight2_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        dw_weight2_1_ce0 = grp_dw_layer2_fu_506_dw_weight2_1_ce0;
    end else begin
        dw_weight2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        dw_weight2_1_ce1 = grp_weight_loader_fu_562_dw_weight2_1_ce1;
    end else begin
        dw_weight2_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        dw_weight2_1_we1 = grp_weight_loader_fu_562_dw_weight2_1_we1;
    end else begin
        dw_weight2_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        dw_weight2_2_ce0 = grp_dw_layer2_fu_506_dw_weight2_2_ce0;
    end else begin
        dw_weight2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        dw_weight2_2_ce1 = grp_weight_loader_fu_562_dw_weight2_2_ce1;
    end else begin
        dw_weight2_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        dw_weight2_2_we1 = grp_weight_loader_fu_562_dw_weight2_2_we1;
    end else begin
        dw_weight2_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        dw_weight2_3_ce0 = grp_dw_layer2_fu_506_dw_weight2_3_ce0;
    end else begin
        dw_weight2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        dw_weight2_3_ce1 = grp_weight_loader_fu_562_dw_weight2_3_ce1;
    end else begin
        dw_weight2_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        dw_weight2_3_we1 = grp_weight_loader_fu_562_dw_weight2_3_we1;
    end else begin
        dw_weight2_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        fc2final_V_read = grp_fc_64u_12u_1u_s_fu_658_in_stream_V_read;
    end else begin
        fc2final_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        fc2final_V_write = grp_fc_relu6_fu_644_out_stream_V_write;
    end else begin
        fc2final_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        fc_bias1_address0 = grp_fc_relu6_fu_644_fc_bias1_address0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        fc_bias1_address0 = grp_weight_loader_fu_562_fc_bias1_address0;
    end else begin
        fc_bias1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        fc_bias1_ce0 = grp_fc_relu6_fu_644_fc_bias1_ce0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        fc_bias1_ce0 = grp_weight_loader_fu_562_fc_bias1_ce0;
    end else begin
        fc_bias1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        fc_bias1_we0 = grp_weight_loader_fu_562_fc_bias1_we0;
    end else begin
        fc_bias1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        fc_bias2_address0 = grp_fc_64u_12u_1u_s_fu_658_fc_bias2_address0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        fc_bias2_address0 = grp_weight_loader_fu_562_fc_bias2_address0;
    end else begin
        fc_bias2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        fc_bias2_ce0 = grp_fc_64u_12u_1u_s_fu_658_fc_bias2_ce0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        fc_bias2_ce0 = grp_weight_loader_fu_562_fc_bias2_ce0;
    end else begin
        fc_bias2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        fc_bias2_we0 = grp_weight_loader_fu_562_fc_bias2_we0;
    end else begin
        fc_bias2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        fc_weights1_address0 = grp_fc_relu6_fu_644_fc_weights1_address0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        fc_weights1_address0 = grp_weight_loader_fu_562_fc_weights1_address0;
    end else begin
        fc_weights1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        fc_weights1_ce0 = grp_fc_relu6_fu_644_fc_weights1_ce0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        fc_weights1_ce0 = grp_weight_loader_fu_562_fc_weights1_ce0;
    end else begin
        fc_weights1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        fc_weights1_we0 = grp_weight_loader_fu_562_fc_weights1_we0;
    end else begin
        fc_weights1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        fc_weights2_address0 = grp_fc_64u_12u_1u_s_fu_658_fc_weights2_address0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        fc_weights2_address0 = grp_weight_loader_fu_562_fc_weights2_address0;
    end else begin
        fc_weights2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        fc_weights2_ce0 = grp_fc_64u_12u_1u_s_fu_658_fc_weights2_ce0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        fc_weights2_ce0 = grp_weight_loader_fu_562_fc_weights2_ce0;
    end else begin
        fc_weights2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        fc_weights2_we0 = grp_weight_loader_fu_562_fc_weights2_we0;
    end else begin
        fc_weights2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        gru2fc_V_read = grp_fc_relu6_fu_644_in_stream_V_read;
    end else begin
        gru2fc_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        gru2fc_V_write = grp_grucell_fu_408_out_stream_V_write;
    end else begin
        gru2fc_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        output_V_read = grp_datastream_out_12u_s_fu_693_output_V_read;
    end else begin
        output_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        output_V_write = grp_fc_64u_12u_1u_s_fu_658_out_stream_V_write;
    end else begin
        output_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        pw12dw2_V_read = grp_dw_layer2_fu_506_in_stream_V_read;
    end else begin
        pw12dw2_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        pw12dw2_V_write = grp_pw_layer1_fu_536_out_stream_V_write;
    end else begin
        pw12dw2_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        pw22gru_V_read = grp_grucell_fu_408_in_stream_V_read;
    end else begin
        pw22gru_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        pw22gru_V_write = grp_pw_layer2_fu_474_out_stream_V_write;
    end else begin
        pw22gru_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        pw_weight1_0_address0 = grp_weight_loader_fu_562_pw_weight1_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        pw_weight1_0_address0 = grp_pw_layer1_fu_536_pw_weight1_0_address0;
    end else begin
        pw_weight1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        pw_weight1_0_ce0 = grp_weight_loader_fu_562_pw_weight1_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        pw_weight1_0_ce0 = grp_pw_layer1_fu_536_pw_weight1_0_ce0;
    end else begin
        pw_weight1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        pw_weight1_0_we0 = grp_weight_loader_fu_562_pw_weight1_0_we0;
    end else begin
        pw_weight1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        pw_weight1_1_address0 = grp_weight_loader_fu_562_pw_weight1_1_address0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        pw_weight1_1_address0 = grp_pw_layer1_fu_536_pw_weight1_1_address0;
    end else begin
        pw_weight1_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        pw_weight1_1_ce0 = grp_weight_loader_fu_562_pw_weight1_1_ce0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        pw_weight1_1_ce0 = grp_pw_layer1_fu_536_pw_weight1_1_ce0;
    end else begin
        pw_weight1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        pw_weight1_1_we0 = grp_weight_loader_fu_562_pw_weight1_1_we0;
    end else begin
        pw_weight1_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        pw_weight1_2_address0 = grp_weight_loader_fu_562_pw_weight1_2_address0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        pw_weight1_2_address0 = grp_pw_layer1_fu_536_pw_weight1_2_address0;
    end else begin
        pw_weight1_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        pw_weight1_2_ce0 = grp_weight_loader_fu_562_pw_weight1_2_ce0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        pw_weight1_2_ce0 = grp_pw_layer1_fu_536_pw_weight1_2_ce0;
    end else begin
        pw_weight1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        pw_weight1_2_we0 = grp_weight_loader_fu_562_pw_weight1_2_we0;
    end else begin
        pw_weight1_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        pw_weight1_3_address0 = grp_weight_loader_fu_562_pw_weight1_3_address0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        pw_weight1_3_address0 = grp_pw_layer1_fu_536_pw_weight1_3_address0;
    end else begin
        pw_weight1_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        pw_weight1_3_ce0 = grp_weight_loader_fu_562_pw_weight1_3_ce0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        pw_weight1_3_ce0 = grp_pw_layer1_fu_536_pw_weight1_3_ce0;
    end else begin
        pw_weight1_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        pw_weight1_3_we0 = grp_weight_loader_fu_562_pw_weight1_3_we0;
    end else begin
        pw_weight1_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        pw_weight2_0_address0 = grp_weight_loader_fu_562_pw_weight2_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        pw_weight2_0_address0 = grp_pw_layer2_fu_474_pw_weight2_0_address0;
    end else begin
        pw_weight2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        pw_weight2_0_ce0 = grp_weight_loader_fu_562_pw_weight2_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        pw_weight2_0_ce0 = grp_pw_layer2_fu_474_pw_weight2_0_ce0;
    end else begin
        pw_weight2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        pw_weight2_0_ce1 = grp_pw_layer2_fu_474_pw_weight2_0_ce1;
    end else begin
        pw_weight2_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        pw_weight2_0_we0 = grp_weight_loader_fu_562_pw_weight2_0_we0;
    end else begin
        pw_weight2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        pw_weight2_1_address0 = grp_weight_loader_fu_562_pw_weight2_1_address0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        pw_weight2_1_address0 = grp_pw_layer2_fu_474_pw_weight2_1_address0;
    end else begin
        pw_weight2_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        pw_weight2_1_ce0 = grp_weight_loader_fu_562_pw_weight2_1_ce0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        pw_weight2_1_ce0 = grp_pw_layer2_fu_474_pw_weight2_1_ce0;
    end else begin
        pw_weight2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        pw_weight2_1_ce1 = grp_pw_layer2_fu_474_pw_weight2_1_ce1;
    end else begin
        pw_weight2_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        pw_weight2_1_we0 = grp_weight_loader_fu_562_pw_weight2_1_we0;
    end else begin
        pw_weight2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        pw_weight2_2_address0 = grp_weight_loader_fu_562_pw_weight2_2_address0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        pw_weight2_2_address0 = grp_pw_layer2_fu_474_pw_weight2_2_address0;
    end else begin
        pw_weight2_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        pw_weight2_2_ce0 = grp_weight_loader_fu_562_pw_weight2_2_ce0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        pw_weight2_2_ce0 = grp_pw_layer2_fu_474_pw_weight2_2_ce0;
    end else begin
        pw_weight2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        pw_weight2_2_ce1 = grp_pw_layer2_fu_474_pw_weight2_2_ce1;
    end else begin
        pw_weight2_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        pw_weight2_2_we0 = grp_weight_loader_fu_562_pw_weight2_2_we0;
    end else begin
        pw_weight2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        pw_weight2_3_address0 = grp_weight_loader_fu_562_pw_weight2_3_address0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        pw_weight2_3_address0 = grp_pw_layer2_fu_474_pw_weight2_3_address0;
    end else begin
        pw_weight2_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        pw_weight2_3_ce0 = grp_weight_loader_fu_562_pw_weight2_3_ce0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        pw_weight2_3_ce0 = grp_pw_layer2_fu_474_pw_weight2_3_ce0;
    end else begin
        pw_weight2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        pw_weight2_3_ce1 = grp_pw_layer2_fu_474_pw_weight2_3_ce1;
    end else begin
        pw_weight2_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        pw_weight2_3_we0 = grp_weight_loader_fu_562_pw_weight2_3_we0;
    end else begin
        pw_weight2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((weight_in_TVALID == 1'b1) & (regslice_both_weight_in_V_data_U_ack_in == 1'b1))) begin
        weight_in_TREADY = 1'b1;
    end else begin
        weight_in_TREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_in_TREADY_int = grp_weight_loader_fu_562_weight_in_TREADY;
    end else begin
        weight_in_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weights_hu_0_address1 = grp_weight_loader_fu_562_weights_hu_0_address1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weights_hu_0_address1 = grp_grucell_fu_408_weights_hu_0_address1;
    end else begin
        weights_hu_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weights_hu_0_ce0 = grp_grucell_fu_408_weights_hu_0_ce0;
    end else begin
        weights_hu_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weights_hu_0_ce1 = grp_weight_loader_fu_562_weights_hu_0_ce1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weights_hu_0_ce1 = grp_grucell_fu_408_weights_hu_0_ce1;
    end else begin
        weights_hu_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weights_hu_0_we1 = grp_weight_loader_fu_562_weights_hu_0_we1;
    end else begin
        weights_hu_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weights_hu_1_address1 = grp_weight_loader_fu_562_weights_hu_1_address1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weights_hu_1_address1 = grp_grucell_fu_408_weights_hu_1_address1;
    end else begin
        weights_hu_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weights_hu_1_ce0 = grp_grucell_fu_408_weights_hu_1_ce0;
    end else begin
        weights_hu_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weights_hu_1_ce1 = grp_weight_loader_fu_562_weights_hu_1_ce1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weights_hu_1_ce1 = grp_grucell_fu_408_weights_hu_1_ce1;
    end else begin
        weights_hu_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weights_hu_1_we1 = grp_weight_loader_fu_562_weights_hu_1_we1;
    end else begin
        weights_hu_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weights_hu_2_address1 = grp_weight_loader_fu_562_weights_hu_2_address1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weights_hu_2_address1 = grp_grucell_fu_408_weights_hu_2_address1;
    end else begin
        weights_hu_2_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weights_hu_2_ce0 = grp_grucell_fu_408_weights_hu_2_ce0;
    end else begin
        weights_hu_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weights_hu_2_ce1 = grp_weight_loader_fu_562_weights_hu_2_ce1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weights_hu_2_ce1 = grp_grucell_fu_408_weights_hu_2_ce1;
    end else begin
        weights_hu_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weights_hu_2_we1 = grp_weight_loader_fu_562_weights_hu_2_we1;
    end else begin
        weights_hu_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weights_hu_3_address1 = grp_weight_loader_fu_562_weights_hu_3_address1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weights_hu_3_address1 = grp_grucell_fu_408_weights_hu_3_address1;
    end else begin
        weights_hu_3_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weights_hu_3_ce0 = grp_grucell_fu_408_weights_hu_3_ce0;
    end else begin
        weights_hu_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weights_hu_3_ce1 = grp_weight_loader_fu_562_weights_hu_3_ce1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weights_hu_3_ce1 = grp_grucell_fu_408_weights_hu_3_ce1;
    end else begin
        weights_hu_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weights_hu_3_we1 = grp_weight_loader_fu_562_weights_hu_3_we1;
    end else begin
        weights_hu_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weights_hw_address1 = grp_weight_loader_fu_562_weights_hw_address1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weights_hw_address1 = grp_grucell_fu_408_weights_hw_address1;
    end else begin
        weights_hw_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weights_hw_ce0 = grp_grucell_fu_408_weights_hw_ce0;
    end else begin
        weights_hw_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weights_hw_ce1 = grp_weight_loader_fu_562_weights_hw_ce1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weights_hw_ce1 = grp_grucell_fu_408_weights_hw_ce1;
    end else begin
        weights_hw_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weights_hw_we1 = grp_weight_loader_fu_562_weights_hw_we1;
    end else begin
        weights_hw_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weights_ru_0_address1 = grp_weight_loader_fu_562_weights_ru_0_address1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weights_ru_0_address1 = grp_grucell_fu_408_weights_ru_0_address1;
    end else begin
        weights_ru_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weights_ru_0_ce0 = grp_grucell_fu_408_weights_ru_0_ce0;
    end else begin
        weights_ru_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weights_ru_0_ce1 = grp_weight_loader_fu_562_weights_ru_0_ce1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weights_ru_0_ce1 = grp_grucell_fu_408_weights_ru_0_ce1;
    end else begin
        weights_ru_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weights_ru_0_we1 = grp_weight_loader_fu_562_weights_ru_0_we1;
    end else begin
        weights_ru_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weights_ru_1_address1 = grp_weight_loader_fu_562_weights_ru_1_address1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weights_ru_1_address1 = grp_grucell_fu_408_weights_ru_1_address1;
    end else begin
        weights_ru_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weights_ru_1_ce0 = grp_grucell_fu_408_weights_ru_1_ce0;
    end else begin
        weights_ru_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weights_ru_1_ce1 = grp_weight_loader_fu_562_weights_ru_1_ce1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weights_ru_1_ce1 = grp_grucell_fu_408_weights_ru_1_ce1;
    end else begin
        weights_ru_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weights_ru_1_we1 = grp_weight_loader_fu_562_weights_ru_1_we1;
    end else begin
        weights_ru_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weights_ru_2_address1 = grp_weight_loader_fu_562_weights_ru_2_address1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weights_ru_2_address1 = grp_grucell_fu_408_weights_ru_2_address1;
    end else begin
        weights_ru_2_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weights_ru_2_ce0 = grp_grucell_fu_408_weights_ru_2_ce0;
    end else begin
        weights_ru_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weights_ru_2_ce1 = grp_weight_loader_fu_562_weights_ru_2_ce1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weights_ru_2_ce1 = grp_grucell_fu_408_weights_ru_2_ce1;
    end else begin
        weights_ru_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weights_ru_2_we1 = grp_weight_loader_fu_562_weights_ru_2_we1;
    end else begin
        weights_ru_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weights_ru_3_address1 = grp_weight_loader_fu_562_weights_ru_3_address1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weights_ru_3_address1 = grp_grucell_fu_408_weights_ru_3_address1;
    end else begin
        weights_ru_3_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weights_ru_3_ce0 = grp_grucell_fu_408_weights_ru_3_ce0;
    end else begin
        weights_ru_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weights_ru_3_ce1 = grp_weight_loader_fu_562_weights_ru_3_ce1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weights_ru_3_ce1 = grp_grucell_fu_408_weights_ru_3_ce1;
    end else begin
        weights_ru_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weights_ru_3_we1 = grp_weight_loader_fu_562_weights_ru_3_we1;
    end else begin
        weights_ru_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weights_rw_ce0 = grp_grucell_fu_408_weights_rw_ce0;
    end else begin
        weights_rw_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weights_rw_ce1 = grp_weight_loader_fu_562_weights_rw_ce1;
    end else begin
        weights_rw_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weights_rw_we1 = grp_weight_loader_fu_562_weights_rw_we1;
    end else begin
        weights_rw_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weights_zu_0_address1 = grp_weight_loader_fu_562_weights_zu_0_address1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weights_zu_0_address1 = grp_grucell_fu_408_weights_zu_0_address1;
    end else begin
        weights_zu_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weights_zu_0_ce0 = grp_grucell_fu_408_weights_zu_0_ce0;
    end else begin
        weights_zu_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weights_zu_0_ce1 = grp_weight_loader_fu_562_weights_zu_0_ce1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weights_zu_0_ce1 = grp_grucell_fu_408_weights_zu_0_ce1;
    end else begin
        weights_zu_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weights_zu_0_we1 = grp_weight_loader_fu_562_weights_zu_0_we1;
    end else begin
        weights_zu_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weights_zu_1_address1 = grp_weight_loader_fu_562_weights_zu_1_address1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weights_zu_1_address1 = grp_grucell_fu_408_weights_zu_1_address1;
    end else begin
        weights_zu_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weights_zu_1_ce0 = grp_grucell_fu_408_weights_zu_1_ce0;
    end else begin
        weights_zu_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weights_zu_1_ce1 = grp_weight_loader_fu_562_weights_zu_1_ce1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weights_zu_1_ce1 = grp_grucell_fu_408_weights_zu_1_ce1;
    end else begin
        weights_zu_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weights_zu_1_we1 = grp_weight_loader_fu_562_weights_zu_1_we1;
    end else begin
        weights_zu_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weights_zu_2_address1 = grp_weight_loader_fu_562_weights_zu_2_address1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weights_zu_2_address1 = grp_grucell_fu_408_weights_zu_2_address1;
    end else begin
        weights_zu_2_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weights_zu_2_ce0 = grp_grucell_fu_408_weights_zu_2_ce0;
    end else begin
        weights_zu_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weights_zu_2_ce1 = grp_weight_loader_fu_562_weights_zu_2_ce1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weights_zu_2_ce1 = grp_grucell_fu_408_weights_zu_2_ce1;
    end else begin
        weights_zu_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weights_zu_2_we1 = grp_weight_loader_fu_562_weights_zu_2_we1;
    end else begin
        weights_zu_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weights_zu_3_address1 = grp_weight_loader_fu_562_weights_zu_3_address1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weights_zu_3_address1 = grp_grucell_fu_408_weights_zu_3_address1;
    end else begin
        weights_zu_3_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weights_zu_3_ce0 = grp_grucell_fu_408_weights_zu_3_ce0;
    end else begin
        weights_zu_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weights_zu_3_ce1 = grp_weight_loader_fu_562_weights_zu_3_ce1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weights_zu_3_ce1 = grp_grucell_fu_408_weights_zu_3_ce1;
    end else begin
        weights_zu_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weights_zu_3_we1 = grp_weight_loader_fu_562_weights_zu_3_we1;
    end else begin
        weights_zu_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weights_zw_ce0 = grp_grucell_fu_408_weights_zw_ce0;
    end else begin
        weights_zw_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weights_zw_ce1 = grp_weight_loader_fu_562_weights_zw_ce1;
    end else begin
        weights_zw_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weights_zw_we1 = grp_weight_loader_fu_562_weights_zw_we1;
    end else begin
        weights_zw_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (control_in_TVALID_int == 1'b1) & (icmp_ln82_fu_706_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else if (((1'b1 == ap_CS_fsm_state1) & (control_in_TVALID_int == 1'b1) & (icmp_ln82_fu_706_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_data_broadcaster_fu_684_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((grp_dw_layer1_fu_672_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((grp_pw_layer1_fu_536_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((grp_dw_layer2_fu_506_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((grp_pw_layer2_fu_474_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((grp_grucell_fu_408_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((grp_fc_relu6_fu_644_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((grp_fc_64u_12u_1u_s_fu_658_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if (((grp_datastream_out_12u_s_fu_693_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((grp_weight_loader_fu_562_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((1'b1 == ap_CS_fsm_state20) & (regslice_both_data_out_V_data_U_apdone_blk == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign data_out_TVALID = regslice_both_data_out_V_data_U_vld_out;

assign grp_data_broadcaster_fu_684_ap_start = grp_data_broadcaster_fu_684_ap_start_reg;

assign grp_datastream_out_12u_s_fu_693_ap_start = grp_datastream_out_12u_s_fu_693_ap_start_reg;

assign grp_datastream_out_12u_s_fu_693_data_out_TREADY = (data_out_TREADY_int & ap_CS_fsm_state18);

assign grp_dw_layer1_fu_672_ap_start = grp_dw_layer1_fu_672_ap_start_reg;

assign grp_dw_layer2_fu_506_ap_start = grp_dw_layer2_fu_506_ap_start_reg;

assign grp_fc_64u_12u_1u_s_fu_658_ap_start = grp_fc_64u_12u_1u_s_fu_658_ap_start_reg;

assign grp_fc_relu6_fu_644_ap_start = grp_fc_relu6_fu_644_ap_start_reg;

assign grp_grucell_fu_408_ap_start = grp_grucell_fu_408_ap_start_reg;

assign grp_pw_layer1_fu_536_ap_start = grp_pw_layer1_fu_536_ap_start_reg;

assign grp_pw_layer2_fu_474_ap_start = grp_pw_layer2_fu_474_ap_start_reg;

assign grp_weight_loader_fu_562_ap_start = grp_weight_loader_fu_562_ap_start_reg;

assign icmp_ln82_fu_706_p2 = ((control_in_TDATA_int == 32'd0) ? 1'b1 : 1'b0);

endmodule //kws
