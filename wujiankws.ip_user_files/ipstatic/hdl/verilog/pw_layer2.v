// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pw_layer2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_stream_V_dout,
        in_stream_V_empty_n,
        in_stream_V_read,
        out_stream_V_din,
        out_stream_V_full_n,
        out_stream_V_write,
        pw_weight2_0_address0,
        pw_weight2_0_ce0,
        pw_weight2_0_q0,
        pw_weight2_0_address1,
        pw_weight2_0_ce1,
        pw_weight2_0_q1,
        pw_weight2_1_address0,
        pw_weight2_1_ce0,
        pw_weight2_1_q0,
        pw_weight2_1_address1,
        pw_weight2_1_ce1,
        pw_weight2_1_q1,
        pw_weight2_2_address0,
        pw_weight2_2_ce0,
        pw_weight2_2_q0,
        pw_weight2_2_address1,
        pw_weight2_2_ce1,
        pw_weight2_2_q1,
        pw_weight2_3_address0,
        pw_weight2_3_ce0,
        pw_weight2_3_q0,
        pw_weight2_3_address1,
        pw_weight2_3_ce1,
        pw_weight2_3_q1,
        bn_bias2_address0,
        bn_bias2_ce0,
        bn_bias2_q0
);

parameter    ap_ST_fsm_state1 = 55'd1;
parameter    ap_ST_fsm_pp0_stage0 = 55'd2;
parameter    ap_ST_fsm_pp0_stage1 = 55'd4;
parameter    ap_ST_fsm_pp0_stage2 = 55'd8;
parameter    ap_ST_fsm_pp0_stage3 = 55'd16;
parameter    ap_ST_fsm_pp0_stage4 = 55'd32;
parameter    ap_ST_fsm_pp0_stage5 = 55'd64;
parameter    ap_ST_fsm_pp0_stage6 = 55'd128;
parameter    ap_ST_fsm_pp0_stage7 = 55'd256;
parameter    ap_ST_fsm_state11 = 55'd512;
parameter    ap_ST_fsm_state12 = 55'd1024;
parameter    ap_ST_fsm_state13 = 55'd2048;
parameter    ap_ST_fsm_state14 = 55'd4096;
parameter    ap_ST_fsm_pp2_stage0 = 55'd8192;
parameter    ap_ST_fsm_pp2_stage1 = 55'd16384;
parameter    ap_ST_fsm_pp2_stage2 = 55'd32768;
parameter    ap_ST_fsm_pp2_stage3 = 55'd65536;
parameter    ap_ST_fsm_pp2_stage4 = 55'd131072;
parameter    ap_ST_fsm_pp2_stage5 = 55'd262144;
parameter    ap_ST_fsm_pp2_stage6 = 55'd524288;
parameter    ap_ST_fsm_pp2_stage7 = 55'd1048576;
parameter    ap_ST_fsm_pp2_stage8 = 55'd2097152;
parameter    ap_ST_fsm_pp2_stage9 = 55'd4194304;
parameter    ap_ST_fsm_pp2_stage10 = 55'd8388608;
parameter    ap_ST_fsm_pp2_stage11 = 55'd16777216;
parameter    ap_ST_fsm_pp2_stage12 = 55'd33554432;
parameter    ap_ST_fsm_pp2_stage13 = 55'd67108864;
parameter    ap_ST_fsm_pp2_stage14 = 55'd134217728;
parameter    ap_ST_fsm_pp2_stage15 = 55'd268435456;
parameter    ap_ST_fsm_pp2_stage16 = 55'd536870912;
parameter    ap_ST_fsm_pp2_stage17 = 55'd1073741824;
parameter    ap_ST_fsm_pp2_stage18 = 55'd2147483648;
parameter    ap_ST_fsm_pp2_stage19 = 55'd4294967296;
parameter    ap_ST_fsm_pp2_stage20 = 55'd8589934592;
parameter    ap_ST_fsm_pp2_stage21 = 55'd17179869184;
parameter    ap_ST_fsm_pp2_stage22 = 55'd34359738368;
parameter    ap_ST_fsm_pp2_stage23 = 55'd68719476736;
parameter    ap_ST_fsm_pp2_stage24 = 55'd137438953472;
parameter    ap_ST_fsm_pp2_stage25 = 55'd274877906944;
parameter    ap_ST_fsm_state44 = 55'd549755813888;
parameter    ap_ST_fsm_state45 = 55'd1099511627776;
parameter    ap_ST_fsm_state46 = 55'd2199023255552;
parameter    ap_ST_fsm_state47 = 55'd4398046511104;
parameter    ap_ST_fsm_state48 = 55'd8796093022208;
parameter    ap_ST_fsm_state49 = 55'd17592186044416;
parameter    ap_ST_fsm_state50 = 55'd35184372088832;
parameter    ap_ST_fsm_pp3_stage0 = 55'd70368744177664;
parameter    ap_ST_fsm_pp3_stage1 = 55'd140737488355328;
parameter    ap_ST_fsm_pp3_stage2 = 55'd281474976710656;
parameter    ap_ST_fsm_pp3_stage3 = 55'd562949953421312;
parameter    ap_ST_fsm_pp3_stage4 = 55'd1125899906842624;
parameter    ap_ST_fsm_pp3_stage5 = 55'd2251799813685248;
parameter    ap_ST_fsm_pp3_stage6 = 55'd4503599627370496;
parameter    ap_ST_fsm_pp3_stage7 = 55'd9007199254740992;
parameter    ap_ST_fsm_state61 = 55'd18014398509481984;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] in_stream_V_dout;
input   in_stream_V_empty_n;
output   in_stream_V_read;
output  [31:0] out_stream_V_din;
input   out_stream_V_full_n;
output   out_stream_V_write;
output  [9:0] pw_weight2_0_address0;
output   pw_weight2_0_ce0;
input  [31:0] pw_weight2_0_q0;
output  [9:0] pw_weight2_0_address1;
output   pw_weight2_0_ce1;
input  [31:0] pw_weight2_0_q1;
output  [9:0] pw_weight2_1_address0;
output   pw_weight2_1_ce0;
input  [31:0] pw_weight2_1_q0;
output  [9:0] pw_weight2_1_address1;
output   pw_weight2_1_ce1;
input  [31:0] pw_weight2_1_q1;
output  [9:0] pw_weight2_2_address0;
output   pw_weight2_2_ce0;
input  [31:0] pw_weight2_2_q0;
output  [9:0] pw_weight2_2_address1;
output   pw_weight2_2_ce1;
input  [31:0] pw_weight2_2_q1;
output  [9:0] pw_weight2_3_address0;
output   pw_weight2_3_ce0;
input  [31:0] pw_weight2_3_q0;
output  [9:0] pw_weight2_3_address1;
output   pw_weight2_3_ce1;
input  [31:0] pw_weight2_3_q1;
output  [5:0] bn_bias2_address0;
output   bn_bias2_ce0;
input  [31:0] bn_bias2_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg in_stream_V_read;
reg[31:0] out_stream_V_din;
reg out_stream_V_write;
reg pw_weight2_0_ce0;
reg pw_weight2_0_ce1;
reg pw_weight2_1_ce0;
reg pw_weight2_1_ce1;
reg pw_weight2_2_ce0;
reg pw_weight2_2_ce1;
reg pw_weight2_3_ce0;
reg pw_weight2_3_ce1;
reg bn_bias2_ce0;

(* fsm_encoding = "none" *) reg   [54:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [12:0] x_0_address0;
reg    x_0_ce0;
reg    x_0_we0;
wire   [31:0] x_0_q0;
wire   [12:0] x_0_address1;
reg    x_0_ce1;
wire   [31:0] x_0_q1;
reg   [12:0] x_1_address0;
reg    x_1_ce0;
reg    x_1_we0;
wire   [31:0] x_1_q0;
wire   [12:0] x_1_address1;
reg    x_1_ce1;
wire   [31:0] x_1_q1;
reg   [12:0] x_2_address0;
reg    x_2_ce0;
reg    x_2_we0;
wire   [31:0] x_2_q0;
wire   [12:0] x_2_address1;
reg    x_2_ce1;
wire   [31:0] x_2_q1;
reg   [12:0] x_3_address0;
reg    x_3_ce0;
reg    x_3_we0;
wire   [31:0] x_3_q0;
wire   [12:0] x_3_address1;
reg    x_3_ce1;
wire   [31:0] x_3_q1;
reg   [12:0] y_0_address0;
reg    y_0_ce0;
reg    y_0_we0;
reg   [31:0] y_0_d0;
wire   [31:0] y_0_q0;
wire   [12:0] y_0_address1;
reg    y_0_ce1;
wire   [31:0] y_0_q1;
reg   [12:0] y_1_address0;
reg    y_1_ce0;
reg    y_1_we0;
reg   [31:0] y_1_d0;
wire   [31:0] y_1_q0;
wire   [12:0] y_1_address1;
reg    y_1_ce1;
wire   [31:0] y_1_q1;
reg   [12:0] y_2_address0;
reg    y_2_ce0;
reg    y_2_we0;
reg   [31:0] y_2_d0;
wire   [31:0] y_2_q0;
wire   [12:0] y_2_address1;
reg    y_2_ce1;
wire   [31:0] y_2_q1;
reg   [12:0] y_3_address0;
reg    y_3_ce0;
reg    y_3_we0;
reg   [31:0] y_3_d0;
wire   [31:0] y_3_q0;
wire   [12:0] y_3_address1;
reg    y_3_ce1;
wire   [31:0] y_3_q1;
reg    in_stream_V_blk_n;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage1;
reg   [0:0] icmp_ln29_reg_2516;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg    out_stream_V_blk_n;
wire    ap_CS_fsm_pp3_stage2;
reg    ap_enable_reg_pp3_iter0;
wire    ap_block_pp3_stage2;
reg   [0:0] icmp_ln66_reg_2900;
wire    ap_CS_fsm_pp3_stage3;
wire    ap_block_pp3_stage3;
wire    ap_CS_fsm_pp3_stage4;
wire    ap_block_pp3_stage4;
wire    ap_CS_fsm_pp3_stage5;
wire    ap_block_pp3_stage5;
wire    ap_CS_fsm_pp3_stage6;
wire    ap_block_pp3_stage6;
wire    ap_CS_fsm_pp3_stage7;
wire    ap_block_pp3_stage7;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter1;
wire    ap_block_pp3_stage0;
wire    ap_CS_fsm_pp3_stage1;
wire    ap_block_pp3_stage1;
reg   [0:0] icmp_ln66_reg_2900_pp3_iter1_reg;
reg   [11:0] indvar_flatten13_reg_640;
reg   [5:0] h_0_reg_651;
reg   [6:0] indvar_flatten_reg_662;
reg   [3:0] w_0_reg_673;
reg   [5:0] i_0_0_reg_684;
reg   [5:0] im_0_0_reg_806;
reg   [11:0] indvar_flatten76_reg_817;
reg   [5:0] ih4_0_reg_828;
reg   [6:0] indvar_flatten62_reg_839;
reg   [3:0] iw5_0_reg_850;
reg   [5:0] om6_0_0_reg_861;
wire   [31:0] grp_fu_885_p2;
reg   [31:0] reg_918;
wire    ap_CS_fsm_pp2_stage4;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_state19_pp2_stage4_iter0;
wire    ap_block_pp2_stage4_11001;
reg   [0:0] icmp_ln55_reg_2683;
wire    ap_CS_fsm_pp2_stage7;
wire    ap_block_state22_pp2_stage7_iter0;
wire    ap_block_pp2_stage7_11001;
wire   [31:0] grp_fu_904_p6;
reg   [31:0] reg_923;
wire    ap_CS_fsm_state45;
reg   [31:0] reg_929;
wire    ap_CS_fsm_pp2_stage5;
wire    ap_block_state20_pp2_stage5_iter0;
wire    ap_block_pp2_stage5_11001;
wire    ap_CS_fsm_pp2_stage10;
wire    ap_block_state25_pp2_stage10_iter0;
wire    ap_block_pp2_stage10_11001;
wire   [31:0] grp_fu_872_p2;
wire    ap_CS_fsm_pp2_stage13;
wire    ap_block_state28_pp2_stage13_iter0;
wire    ap_block_pp2_stage13_11001;
wire    ap_CS_fsm_pp2_stage16;
wire    ap_block_state31_pp2_stage16_iter0;
wire    ap_block_pp2_stage16_11001;
wire    ap_CS_fsm_pp2_stage19;
wire    ap_block_state34_pp2_stage19_iter0;
wire    ap_block_pp2_stage19_11001;
wire    ap_CS_fsm_pp2_stage22;
wire    ap_block_state37_pp2_stage22_iter0;
wire    ap_block_pp2_stage22_11001;
wire    ap_CS_fsm_pp2_stage25;
wire    ap_block_state40_pp2_stage25_iter0;
wire    ap_block_pp2_stage25_11001;
wire   [0:0] icmp_ln29_fu_939_p2;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state10_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [11:0] add_ln29_fu_945_p2;
reg   [11:0] add_ln29_reg_2520;
wire   [5:0] select_ln35_1_fu_971_p3;
reg   [5:0] select_ln35_1_reg_2525;
wire   [5:0] select_ln35_2_fu_1009_p3;
reg   [5:0] select_ln35_2_reg_2531;
wire   [3:0] select_ln35_3_fu_1017_p3;
reg   [3:0] select_ln35_3_reg_2536;
reg   [3:0] lshr_ln_reg_2542;
wire   [6:0] select_ln30_fu_1041_p3;
reg   [6:0] select_ln30_reg_2548;
wire   [63:0] zext_ln35_4_fu_1104_p1;
reg   [63:0] zext_ln35_4_reg_2553;
reg    ap_block_state3_pp0_stage1_iter0;
reg    ap_block_pp0_stage1_11001;
wire   [13:0] add_ln35_2_fu_1118_p2;
reg   [13:0] add_ln35_2_reg_2560;
wire   [63:0] zext_ln35_6_fu_1124_p1;
reg   [63:0] zext_ln35_6_reg_2565;
reg    ap_block_state7_pp0_stage5_iter0;
reg    ap_block_pp0_stage5_11001;
wire   [5:0] add_ln31_fu_1128_p2;
reg   [5:0] add_ln31_reg_2572;
reg    ap_block_state9_pp0_stage7_iter0;
reg    ap_block_pp0_stage7_11001;
wire   [14:0] add_ln40_fu_1139_p2;
wire    ap_CS_fsm_state12;
wire   [5:0] select_ln44_1_fu_1165_p3;
wire   [0:0] icmp_ln40_fu_1133_p2;
wire   [3:0] select_ln44_3_fu_1223_p3;
wire   [5:0] om_fu_1299_p2;
wire   [9:0] select_ln41_fu_1311_p3;
wire   [0:0] icmp_ln52_fu_1319_p2;
wire    ap_CS_fsm_state14;
wire   [14:0] add_ln52_fu_1325_p2;
reg   [14:0] add_ln52_reg_2612;
wire   [0:0] icmp_ln53_fu_1337_p2;
reg   [0:0] icmp_ln53_reg_2617;
wire   [5:0] select_ln58_1_fu_1351_p3;
reg   [5:0] select_ln58_1_reg_2622;
wire   [5:0] select_ln58_2_fu_1401_p3;
reg   [5:0] select_ln58_2_reg_2627;
wire   [3:0] select_ln58_3_fu_1409_p3;
reg   [3:0] select_ln58_3_reg_2632;
wire   [13:0] sub_ln58_fu_1447_p2;
reg   [13:0] sub_ln58_reg_2637;
wire   [63:0] zext_ln58_2_fu_1453_p1;
reg   [63:0] zext_ln58_2_reg_2643;
wire   [10:0] zext_ln59_1_fu_1457_p1;
reg   [10:0] zext_ln59_1_reg_2648;
wire   [1:0] trunc_ln59_fu_1461_p1;
reg   [1:0] trunc_ln59_reg_2654;
wire   [31:0] zext_ln59_fu_1465_p1;
reg   [31:0] zext_ln59_reg_2658;
reg   [12:0] y_0_addr_1_reg_2663;
reg   [12:0] y_1_addr_1_reg_2668;
reg   [12:0] y_2_addr_1_reg_2673;
reg   [12:0] y_3_addr_1_reg_2678;
wire   [0:0] icmp_ln55_fu_1497_p2;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state15_pp2_stage0_iter0;
wire    ap_block_state41_pp2_stage0_iter1;
wire    ap_block_pp2_stage0_11001;
wire   [5:0] add_ln55_fu_1639_p2;
reg   [5:0] add_ln55_reg_2767;
wire    ap_CS_fsm_pp2_stage1;
wire    ap_block_state16_pp2_stage1_iter0;
wire    ap_block_state42_pp2_stage1_iter1;
wire    ap_block_pp2_stage1_11001;
reg   [31:0] x_1_load_reg_2782;
reg   [31:0] pw_weight2_1_load_reg_2787;
reg   [31:0] x_2_load_reg_2792;
reg   [31:0] pw_weight2_2_load_reg_2797;
reg   [31:0] x_3_load_reg_2802;
reg   [31:0] pw_weight2_3_load_reg_2807;
reg   [31:0] x_0_load_1_reg_2812;
reg   [31:0] pw_weight2_0_load_1_reg_2817;
reg   [31:0] x_1_load_1_reg_2822;
reg   [31:0] pw_weight2_1_load_1_reg_2827;
reg   [31:0] x_2_load_1_reg_2832;
reg   [31:0] pw_weight2_2_load_1_reg_2837;
reg   [31:0] x_3_load_1_reg_2842;
reg   [31:0] pw_weight2_3_load_1_reg_2847;
reg   [31:0] y_i_2_reg_2852;
wire    ap_CS_fsm_pp2_stage6;
wire    ap_block_state21_pp2_stage6_iter0;
wire    ap_block_pp2_stage6_11001;
reg   [31:0] y_i_4_reg_2857;
wire    ap_CS_fsm_pp2_stage8;
wire    ap_block_state23_pp2_stage8_iter0;
wire    ap_block_pp2_stage8_11001;
reg   [31:0] y_i_5_reg_2862;
wire    ap_CS_fsm_pp2_stage9;
wire    ap_block_state24_pp2_stage9_iter0;
wire    ap_block_pp2_stage9_11001;
reg   [31:0] y_i_7_reg_2867;
wire    ap_CS_fsm_pp2_stage11;
wire    ap_block_state26_pp2_stage11_iter0;
wire    ap_block_pp2_stage11_11001;
wire    ap_CS_fsm_state44;
reg   [31:0] bn_bias2_load_reg_2877;
wire   [31:0] grp_fu_881_p2;
reg   [31:0] tmp_s_reg_2882;
wire    ap_CS_fsm_state49;
wire   [5:0] om_1_fu_1645_p2;
wire    ap_CS_fsm_state50;
wire   [9:0] select_ln53_fu_1656_p3;
wire   [0:0] icmp_ln66_fu_1663_p2;
wire    ap_block_state51_pp3_stage0_iter0;
reg    ap_block_state59_pp3_stage0_iter1;
reg    ap_block_pp3_stage0_11001;
wire   [11:0] add_ln66_fu_1669_p2;
reg   [11:0] add_ln66_reg_2904;
wire   [5:0] select_ln71_1_fu_1695_p3;
reg   [5:0] select_ln71_1_reg_2909;
wire   [5:0] select_ln71_2_fu_1745_p3;
reg   [5:0] select_ln71_2_reg_2914;
wire   [3:0] select_ln71_3_fu_1753_p3;
reg   [3:0] select_ln71_3_reg_2919;
wire   [6:0] select_ln67_fu_1855_p3;
reg   [6:0] select_ln67_reg_2964;
reg   [31:0] y_0_load_2_reg_2969;
wire    ap_block_state52_pp3_stage1_iter0;
reg    ap_block_state60_pp3_stage1_iter1;
reg    ap_block_pp3_stage1_11001;
reg   [31:0] y_1_load_2_reg_2977;
reg   [31:0] y_2_load_2_reg_2985;
reg   [31:0] y_3_load_2_reg_2993;
reg   [31:0] y_0_load_3_reg_3001;
reg   [31:0] y_1_load_3_reg_3009;
reg   [31:0] y_2_load_3_reg_3017;
reg   [31:0] y_3_load_3_reg_3025;
wire   [5:0] add_ln68_fu_2349_p2;
reg   [5:0] add_ln68_reg_3033;
reg    ap_block_state58_pp3_stage7_iter0;
reg    ap_block_pp3_stage7_11001;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_block_pp0_stage7_subdone;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state15;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp2_stage25_subdone;
wire    ap_block_state17_pp2_stage2_iter0;
wire    ap_block_state43_pp2_stage2_iter1;
wire    ap_block_pp2_stage2_subdone;
wire    ap_CS_fsm_pp2_stage2;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state51;
reg    ap_block_pp3_stage7_subdone;
reg    ap_block_pp3_stage1_subdone;
reg   [11:0] ap_phi_mux_indvar_flatten13_phi_fu_644_p4;
reg   [5:0] ap_phi_mux_h_0_phi_fu_655_p4;
reg   [6:0] ap_phi_mux_indvar_flatten_phi_fu_666_p4;
reg   [3:0] ap_phi_mux_w_0_phi_fu_677_p4;
reg   [5:0] ap_phi_mux_i_0_0_phi_fu_688_p4;
reg   [14:0] indvar_flatten34_reg_695;
wire    ap_CS_fsm_state11;
reg   [5:0] ih_0_reg_706;
reg   [9:0] indvar_flatten20_reg_717;
reg   [3:0] iw_0_reg_728;
reg   [5:0] om_0_reg_739;
reg   [14:0] indvar_flatten55_reg_750;
wire    ap_CS_fsm_state13;
reg   [5:0] ih1_0_reg_761;
reg   [9:0] indvar_flatten41_reg_772;
reg   [3:0] iw2_0_reg_784;
reg   [5:0] om3_0_reg_795;
reg   [5:0] ap_phi_mux_im_0_0_phi_fu_810_p4;
wire    ap_block_pp2_stage0;
reg   [11:0] ap_phi_mux_indvar_flatten76_phi_fu_821_p4;
reg   [5:0] ap_phi_mux_ih4_0_phi_fu_832_p4;
reg   [6:0] ap_phi_mux_indvar_flatten62_phi_fu_843_p4;
reg   [3:0] ap_phi_mux_iw5_0_phi_fu_854_p4;
reg   [5:0] ap_phi_mux_om6_0_0_phi_fu_865_p4;
wire   [63:0] zext_ln44_4_fu_1291_p1;
wire   [63:0] zext_ln59_3_fu_1489_p1;
wire  signed [63:0] sext_ln58_fu_1552_p1;
wire   [63:0] zext_ln58_7_fu_1565_p1;
wire  signed [63:0] sext_ln58_1_fu_1618_p1;
wire   [63:0] zext_ln58_11_fu_1631_p1;
wire   [63:0] zext_ln71_4_fu_1817_p1;
wire   [63:0] zext_ln71_6_fu_1841_p1;
reg    ap_block_state4_pp0_stage2_iter0;
reg    ap_block_pp0_stage2_11001;
reg    ap_block_state5_pp0_stage3_iter0;
reg    ap_block_pp0_stage3_11001;
reg    ap_block_state6_pp0_stage4_iter0;
reg    ap_block_pp0_stage4_11001;
reg    ap_block_state8_pp0_stage6_iter0;
reg    ap_block_pp0_stage6_11001;
wire   [31:0] tmp_56_fu_1936_p3;
reg    ap_block_state53_pp3_stage2_iter0;
reg    ap_block_pp3_stage2_01001;
wire   [31:0] tmp_57_fu_2017_p3;
reg    ap_block_state54_pp3_stage3_iter0;
reg    ap_block_pp3_stage3_01001;
wire   [31:0] tmp_58_fu_2098_p3;
reg    ap_block_state55_pp3_stage4_iter0;
reg    ap_block_pp3_stage4_01001;
wire   [31:0] tmp_59_fu_2179_p3;
reg    ap_block_state56_pp3_stage5_iter0;
reg    ap_block_pp3_stage5_01001;
wire   [31:0] tmp_60_fu_2260_p3;
reg    ap_block_state57_pp3_stage6_iter0;
reg    ap_block_pp3_stage6_01001;
wire   [31:0] tmp_61_fu_2341_p3;
reg    ap_block_pp3_stage7_01001;
wire   [31:0] tmp_62_fu_2427_p3;
reg    ap_block_pp3_stage0_01001;
wire   [31:0] tmp_63_fu_2508_p3;
reg    ap_block_pp3_stage1_01001;
reg    ap_block_pp3_stage2_11001;
reg    ap_block_pp3_stage3_11001;
reg    ap_block_pp3_stage4_11001;
reg    ap_block_pp3_stage5_11001;
reg    ap_block_pp3_stage6_11001;
wire   [1:0] trunc_ln44_fu_1267_p1;
wire    ap_CS_fsm_pp2_stage3;
wire    ap_block_state18_pp2_stage3_iter0;
wire    ap_block_pp2_stage3_11001;
wire    ap_block_pp2_stage3;
wire    ap_block_pp2_stage2_11001;
wire    ap_block_pp2_stage2;
reg   [31:0] grp_fu_872_p0;
reg   [31:0] grp_fu_872_p1;
wire    ap_block_pp2_stage4;
wire    ap_block_pp2_stage7;
wire    ap_block_pp2_stage10;
wire    ap_block_pp2_stage13;
wire    ap_block_pp2_stage16;
wire    ap_block_pp2_stage19;
wire    ap_block_pp2_stage22;
wire    ap_block_pp2_stage25;
wire    ap_CS_fsm_state46;
reg   [31:0] grp_fu_885_p0;
reg   [31:0] grp_fu_885_p1;
wire    ap_block_pp2_stage1;
wire    ap_block_pp2_stage5;
wire    ap_block_pp2_stage6;
wire    ap_block_pp2_stage8;
reg   [31:0] grp_fu_892_p0;
reg   [31:0] grp_fu_898_p0;
wire   [0:0] icmp_ln30_fu_957_p2;
wire   [5:0] h_fu_951_p2;
wire   [0:0] icmp_ln31_fu_985_p2;
wire   [0:0] xor_ln35_fu_979_p2;
wire   [3:0] select_ln35_fu_963_p3;
wire   [0:0] and_ln35_fu_991_p2;
wire   [0:0] or_ln35_1_fu_1003_p2;
wire   [3:0] w_fu_997_p2;
wire   [6:0] add_ln30_1_fu_1035_p2;
wire   [8:0] tmp_39_fu_1049_p3;
wire   [9:0] zext_ln35_fu_1056_p1;
wire   [9:0] zext_ln35_1_fu_1060_p1;
wire   [9:0] add_ln35_fu_1063_p2;
wire   [11:0] tmp_fu_1077_p3;
wire   [13:0] p_shl_cast_fu_1069_p3;
wire   [13:0] zext_ln35_2_fu_1085_p1;
wire   [13:0] sub_ln35_fu_1089_p2;
wire   [13:0] zext_ln35_3_fu_1095_p1;
wire   [13:0] add_ln35_1_fu_1098_p2;
wire   [3:0] or_ln35_fu_1109_p2;
wire   [13:0] zext_ln35_5_fu_1114_p1;
wire   [0:0] icmp_ln41_fu_1151_p2;
wire   [5:0] ih_fu_1145_p2;
wire   [8:0] tmp_40_fu_1173_p3;
wire   [0:0] icmp_ln42_fu_1191_p2;
wire   [0:0] xor_ln44_fu_1185_p2;
wire   [3:0] select_ln44_fu_1157_p3;
wire   [0:0] and_ln44_fu_1197_p2;
wire   [0:0] or_ln44_fu_1209_p2;
wire   [3:0] iw_fu_1203_p2;
wire   [9:0] zext_ln44_1_fu_1231_p1;
wire   [9:0] zext_ln44_fu_1181_p1;
wire   [9:0] add_ln44_fu_1235_p2;
wire   [11:0] tmp_50_fu_1249_p3;
wire   [13:0] p_shl3_cast_fu_1241_p3;
wire   [13:0] zext_ln44_2_fu_1257_p1;
wire   [5:0] select_ln44_2_fu_1215_p3;
wire   [3:0] tmp_51_fu_1271_p4;
wire   [13:0] zext_ln44_3_fu_1281_p1;
wire   [13:0] sub_ln44_fu_1261_p2;
wire   [13:0] add_ln44_1_fu_1285_p2;
wire   [9:0] add_ln41_1_fu_1305_p2;
wire   [5:0] ih_2_fu_1331_p2;
wire   [8:0] tmp_41_fu_1359_p3;
wire   [0:0] icmp_ln54_fu_1377_p2;
wire   [0:0] xor_ln58_fu_1371_p2;
wire   [3:0] select_ln58_fu_1343_p3;
wire   [0:0] and_ln58_fu_1383_p2;
wire   [0:0] or_ln58_1_fu_1395_p2;
wire   [3:0] iw_1_fu_1389_p2;
wire   [9:0] zext_ln58_1_fu_1417_p1;
wire   [9:0] zext_ln58_fu_1367_p1;
wire   [9:0] add_ln58_fu_1421_p2;
wire   [11:0] tmp_52_fu_1435_p3;
wire   [13:0] p_shl5_cast_fu_1427_p3;
wire   [13:0] zext_ln58_3_fu_1443_p1;
wire   [3:0] tmp_53_fu_1469_p4;
wire   [13:0] zext_ln59_2_fu_1479_p1;
wire   [13:0] add_ln59_fu_1483_p2;
wire   [3:0] lshr_ln8_fu_1503_p4;
wire   [9:0] tmp_64_fu_1517_p3;
wire   [7:0] tmp_65_fu_1529_p3;
wire   [10:0] zext_ln58_5_fu_1525_p1;
wire   [10:0] zext_ln58_6_fu_1537_p1;
wire   [10:0] sub_ln58_1_fu_1541_p2;
wire   [10:0] add_ln58_1_fu_1547_p2;
wire   [13:0] zext_ln58_4_fu_1513_p1;
wire   [13:0] add_ln58_2_fu_1560_p2;
wire   [3:0] or_ln58_fu_1573_p2;
wire   [9:0] tmp_66_fu_1583_p3;
wire   [7:0] tmp_67_fu_1595_p3;
wire   [10:0] zext_ln58_9_fu_1591_p1;
wire   [10:0] zext_ln58_10_fu_1603_p1;
wire   [10:0] sub_ln58_2_fu_1607_p2;
wire   [10:0] add_ln58_3_fu_1613_p2;
wire   [13:0] zext_ln58_8_fu_1579_p1;
wire   [13:0] add_ln58_4_fu_1626_p2;
wire   [9:0] add_ln53_1_fu_1650_p2;
wire   [0:0] icmp_ln67_fu_1681_p2;
wire   [5:0] ih_4_fu_1675_p2;
wire   [8:0] tmp_54_fu_1703_p3;
wire   [0:0] icmp_ln68_fu_1721_p2;
wire   [0:0] xor_ln71_fu_1715_p2;
wire   [3:0] select_ln71_fu_1687_p3;
wire   [0:0] and_ln71_fu_1727_p2;
wire   [0:0] or_ln71_1_fu_1739_p2;
wire   [3:0] iw_2_fu_1733_p2;
wire   [9:0] zext_ln71_1_fu_1761_p1;
wire   [9:0] zext_ln71_fu_1711_p1;
wire   [9:0] add_ln71_fu_1765_p2;
wire   [11:0] tmp_55_fu_1779_p3;
wire   [13:0] p_shl7_cast_fu_1771_p3;
wire   [13:0] zext_ln71_2_fu_1787_p1;
wire   [3:0] lshr_ln7_fu_1797_p4;
wire   [13:0] zext_ln71_3_fu_1807_p1;
wire   [13:0] sub_ln71_fu_1791_p2;
wire   [13:0] add_ln71_1_fu_1811_p2;
wire   [3:0] or_ln71_fu_1825_p2;
wire   [13:0] zext_ln71_5_fu_1831_p1;
wire   [13:0] add_ln71_2_fu_1835_p2;
wire   [6:0] add_ln67_1_fu_1849_p2;
wire   [31:0] bitcast_ln236_fu_1863_p1;
wire   [7:0] tmp_2_fu_1866_p4;
wire   [22:0] trunc_ln236_fu_1876_p1;
wire   [0:0] icmp_ln236_1_fu_1886_p2;
wire   [0:0] icmp_ln236_fu_1880_p2;
wire   [0:0] or_ln236_fu_1892_p2;
wire   [0:0] grp_fu_892_p2;
wire   [0:0] grp_fu_898_p2;
wire   [0:0] and_ln236_fu_1898_p2;
wire   [0:0] and_ln238_fu_1904_p2;
wire   [0:0] xor_ln236_fu_1910_p2;
wire   [0:0] and_ln238_1_fu_1916_p2;
wire   [0:0] or_ln238_fu_1930_p2;
wire   [31:0] select_ln238_fu_1922_p3;
wire   [31:0] bitcast_ln236_1_fu_1944_p1;
wire   [7:0] tmp_8_fu_1947_p4;
wire   [22:0] trunc_ln236_1_fu_1957_p1;
wire   [0:0] icmp_ln236_3_fu_1967_p2;
wire   [0:0] icmp_ln236_2_fu_1961_p2;
wire   [0:0] or_ln236_1_fu_1973_p2;
wire   [0:0] and_ln236_1_fu_1979_p2;
wire   [0:0] and_ln238_2_fu_1985_p2;
wire   [0:0] xor_ln236_1_fu_1991_p2;
wire   [0:0] and_ln238_3_fu_1997_p2;
wire   [0:0] or_ln238_1_fu_2011_p2;
wire   [31:0] select_ln238_2_fu_2003_p3;
wire   [31:0] bitcast_ln236_2_fu_2025_p1;
wire   [7:0] tmp_13_fu_2028_p4;
wire   [22:0] trunc_ln236_2_fu_2038_p1;
wire   [0:0] icmp_ln236_5_fu_2048_p2;
wire   [0:0] icmp_ln236_4_fu_2042_p2;
wire   [0:0] or_ln236_2_fu_2054_p2;
wire   [0:0] and_ln236_2_fu_2060_p2;
wire   [0:0] and_ln238_4_fu_2066_p2;
wire   [0:0] xor_ln236_2_fu_2072_p2;
wire   [0:0] and_ln238_5_fu_2078_p2;
wire   [0:0] or_ln238_2_fu_2092_p2;
wire   [31:0] select_ln238_4_fu_2084_p3;
wire   [31:0] bitcast_ln236_3_fu_2106_p1;
wire   [7:0] tmp_21_fu_2109_p4;
wire   [22:0] trunc_ln236_3_fu_2119_p1;
wire   [0:0] icmp_ln236_7_fu_2129_p2;
wire   [0:0] icmp_ln236_6_fu_2123_p2;
wire   [0:0] or_ln236_3_fu_2135_p2;
wire   [0:0] and_ln236_3_fu_2141_p2;
wire   [0:0] and_ln238_6_fu_2147_p2;
wire   [0:0] xor_ln236_3_fu_2153_p2;
wire   [0:0] and_ln238_7_fu_2159_p2;
wire   [0:0] or_ln238_3_fu_2173_p2;
wire   [31:0] select_ln238_6_fu_2165_p3;
wire   [31:0] bitcast_ln236_4_fu_2187_p1;
wire   [7:0] tmp_24_fu_2190_p4;
wire   [22:0] trunc_ln236_4_fu_2200_p1;
wire   [0:0] icmp_ln236_9_fu_2210_p2;
wire   [0:0] icmp_ln236_8_fu_2204_p2;
wire   [0:0] or_ln236_4_fu_2216_p2;
wire   [0:0] and_ln236_4_fu_2222_p2;
wire   [0:0] and_ln238_8_fu_2228_p2;
wire   [0:0] xor_ln236_4_fu_2234_p2;
wire   [0:0] and_ln238_9_fu_2240_p2;
wire   [0:0] or_ln238_4_fu_2254_p2;
wire   [31:0] select_ln238_8_fu_2246_p3;
wire   [31:0] bitcast_ln236_5_fu_2268_p1;
wire   [7:0] tmp_27_fu_2271_p4;
wire   [22:0] trunc_ln236_5_fu_2281_p1;
wire   [0:0] icmp_ln236_11_fu_2291_p2;
wire   [0:0] icmp_ln236_10_fu_2285_p2;
wire   [0:0] or_ln236_5_fu_2297_p2;
wire   [0:0] and_ln236_5_fu_2303_p2;
wire   [0:0] and_ln238_10_fu_2309_p2;
wire   [0:0] xor_ln236_5_fu_2315_p2;
wire   [0:0] and_ln238_11_fu_2321_p2;
wire   [0:0] or_ln238_5_fu_2335_p2;
wire   [31:0] select_ln238_10_fu_2327_p3;
wire   [31:0] bitcast_ln236_6_fu_2354_p1;
wire   [7:0] tmp_30_fu_2357_p4;
wire   [22:0] trunc_ln236_6_fu_2367_p1;
wire   [0:0] icmp_ln236_13_fu_2377_p2;
wire   [0:0] icmp_ln236_12_fu_2371_p2;
wire   [0:0] or_ln236_6_fu_2383_p2;
wire   [0:0] and_ln236_6_fu_2389_p2;
wire   [0:0] and_ln238_12_fu_2395_p2;
wire   [0:0] xor_ln236_6_fu_2401_p2;
wire   [0:0] and_ln238_13_fu_2407_p2;
wire   [0:0] or_ln238_6_fu_2421_p2;
wire   [31:0] select_ln238_12_fu_2413_p3;
wire   [31:0] bitcast_ln236_7_fu_2435_p1;
wire   [7:0] tmp_33_fu_2438_p4;
wire   [22:0] trunc_ln236_7_fu_2448_p1;
wire   [0:0] icmp_ln236_15_fu_2458_p2;
wire   [0:0] icmp_ln236_14_fu_2452_p2;
wire   [0:0] or_ln236_7_fu_2464_p2;
wire   [0:0] and_ln236_7_fu_2470_p2;
wire   [0:0] and_ln238_14_fu_2476_p2;
wire   [0:0] xor_ln236_7_fu_2482_p2;
wire   [0:0] and_ln238_15_fu_2488_p2;
wire   [0:0] or_ln238_7_fu_2502_p2;
wire   [31:0] select_ln238_14_fu_2494_p3;
reg    grp_fu_892_ce;
reg    ap_block_pp3_stage1_00001;
reg    ap_block_pp3_stage2_00001;
reg    ap_block_pp3_stage3_00001;
reg    ap_block_pp3_stage4_00001;
reg    ap_block_pp3_stage5_00001;
reg    ap_block_pp3_stage6_00001;
reg    ap_block_pp3_stage7_00001;
reg    ap_block_pp3_stage0_00001;
reg    grp_fu_898_ce;
wire    ap_CS_fsm_state61;
reg   [54:0] ap_NS_fsm;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
wire    ap_block_pp2_stage1_subdone;
wire    ap_block_pp2_stage3_subdone;
wire    ap_block_pp2_stage4_subdone;
wire    ap_block_pp2_stage5_subdone;
wire    ap_block_pp2_stage6_subdone;
wire    ap_block_pp2_stage7_subdone;
wire    ap_block_pp2_stage8_subdone;
wire    ap_block_pp2_stage9_subdone;
wire    ap_block_pp2_stage10_subdone;
wire    ap_block_pp2_stage11_subdone;
wire    ap_block_state27_pp2_stage12_iter0;
wire    ap_block_pp2_stage12_subdone;
wire    ap_block_pp2_stage13_subdone;
wire    ap_block_state29_pp2_stage14_iter0;
wire    ap_block_pp2_stage14_subdone;
wire    ap_block_state30_pp2_stage15_iter0;
wire    ap_block_pp2_stage15_subdone;
wire    ap_block_pp2_stage16_subdone;
wire    ap_block_state32_pp2_stage17_iter0;
wire    ap_block_pp2_stage17_subdone;
wire    ap_block_state33_pp2_stage18_iter0;
wire    ap_block_pp2_stage18_subdone;
wire    ap_block_pp2_stage19_subdone;
wire    ap_block_state35_pp2_stage20_iter0;
wire    ap_block_pp2_stage20_subdone;
wire    ap_block_state36_pp2_stage21_iter0;
wire    ap_block_pp2_stage21_subdone;
wire    ap_block_pp2_stage22_subdone;
wire    ap_block_state38_pp2_stage23_iter0;
wire    ap_block_pp2_stage23_subdone;
wire    ap_block_state39_pp2_stage24_iter0;
wire    ap_block_pp2_stage24_subdone;
reg    ap_block_pp3_stage2_subdone;
reg    ap_block_pp3_stage3_subdone;
reg    ap_block_pp3_stage4_subdone;
reg    ap_block_pp3_stage5_subdone;
reg    ap_block_pp3_stage6_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;

// power-on initialization
initial begin
#0 ap_CS_fsm = 55'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
end

pw_layer2_x_0 #(
    .DataWidth( 32 ),
    .AddressRange( 4128 ),
    .AddressWidth( 13 ))
x_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(x_0_address0),
    .ce0(x_0_ce0),
    .we0(x_0_we0),
    .d0(in_stream_V_dout),
    .q0(x_0_q0),
    .address1(x_0_address1),
    .ce1(x_0_ce1),
    .q1(x_0_q1)
);

pw_layer2_x_0 #(
    .DataWidth( 32 ),
    .AddressRange( 4128 ),
    .AddressWidth( 13 ))
x_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(x_1_address0),
    .ce0(x_1_ce0),
    .we0(x_1_we0),
    .d0(in_stream_V_dout),
    .q0(x_1_q0),
    .address1(x_1_address1),
    .ce1(x_1_ce1),
    .q1(x_1_q1)
);

pw_layer2_x_0 #(
    .DataWidth( 32 ),
    .AddressRange( 4128 ),
    .AddressWidth( 13 ))
x_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(x_2_address0),
    .ce0(x_2_ce0),
    .we0(x_2_we0),
    .d0(in_stream_V_dout),
    .q0(x_2_q0),
    .address1(x_2_address1),
    .ce1(x_2_ce1),
    .q1(x_2_q1)
);

pw_layer2_x_0 #(
    .DataWidth( 32 ),
    .AddressRange( 4128 ),
    .AddressWidth( 13 ))
x_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(x_3_address0),
    .ce0(x_3_ce0),
    .we0(x_3_we0),
    .d0(in_stream_V_dout),
    .q0(x_3_q0),
    .address1(x_3_address1),
    .ce1(x_3_ce1),
    .q1(x_3_q1)
);

pw_layer2_x_0 #(
    .DataWidth( 32 ),
    .AddressRange( 4128 ),
    .AddressWidth( 13 ))
y_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(y_0_address0),
    .ce0(y_0_ce0),
    .we0(y_0_we0),
    .d0(y_0_d0),
    .q0(y_0_q0),
    .address1(y_0_address1),
    .ce1(y_0_ce1),
    .q1(y_0_q1)
);

pw_layer2_x_0 #(
    .DataWidth( 32 ),
    .AddressRange( 4128 ),
    .AddressWidth( 13 ))
y_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(y_1_address0),
    .ce0(y_1_ce0),
    .we0(y_1_we0),
    .d0(y_1_d0),
    .q0(y_1_q0),
    .address1(y_1_address1),
    .ce1(y_1_ce1),
    .q1(y_1_q1)
);

pw_layer2_x_0 #(
    .DataWidth( 32 ),
    .AddressRange( 4128 ),
    .AddressWidth( 13 ))
y_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(y_2_address0),
    .ce0(y_2_ce0),
    .we0(y_2_we0),
    .d0(y_2_d0),
    .q0(y_2_q0),
    .address1(y_2_address1),
    .ce1(y_2_ce1),
    .q1(y_2_q1)
);

pw_layer2_x_0 #(
    .DataWidth( 32 ),
    .AddressRange( 4128 ),
    .AddressWidth( 13 ))
y_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(y_3_address0),
    .ce0(y_3_ce0),
    .we0(y_3_we0),
    .d0(y_3_d0),
    .q0(y_3_q0),
    .address1(y_3_address1),
    .ce1(y_3_ce1),
    .q1(y_3_q1)
);

kws_fadd_32ns_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kws_fadd_32ns_32ndEe_U44(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_872_p0),
    .din1(grp_fu_872_p1),
    .ce(1'b1),
    .dout(grp_fu_872_p2)
);

kws_fadd_32ns_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kws_fadd_32ns_32nbkb_U45(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_923),
    .din1(bn_bias2_load_reg_2877),
    .ce(1'b1),
    .dout(grp_fu_881_p2)
);

kws_fmul_32ns_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kws_fmul_32ns_32ncud_U46(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_885_p0),
    .din1(grp_fu_885_p1),
    .ce(1'b1),
    .dout(grp_fu_885_p2)
);

kws_fcmp_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
kws_fcmp_32ns_32neOg_U47(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_892_p0),
    .din1(32'd0),
    .ce(grp_fu_892_ce),
    .opcode(5'd4),
    .dout(grp_fu_892_p2)
);

kws_fcmp_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
kws_fcmp_32ns_32neOg_U48(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_898_p0),
    .din1(32'd1086324736),
    .ce(grp_fu_898_ce),
    .opcode(5'd2),
    .dout(grp_fu_898_p2)
);

kws_mux_432_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kws_mux_432_32_1_1_U49(
    .din0(y_0_q0),
    .din1(y_1_q0),
    .din2(y_2_q0),
    .din3(y_3_q0),
    .din4(zext_ln59_reg_2658),
    .dout(grp_fu_904_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state15) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((icmp_ln52_fu_1319_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp2_stage2_subdone) & (1'b1 == ap_CS_fsm_pp2_stage2)) | ((1'b0 == ap_block_pp2_stage25_subdone) & (1'b1 == ap_CS_fsm_pp2_stage25)))) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if (((icmp_ln52_fu_1319_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state51) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if (((icmp_ln52_fu_1319_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp3_stage1_subdone) & (1'b1 == ap_CS_fsm_pp3_stage1)) | ((1'b0 == ap_block_pp3_stage7_subdone) & (1'b1 == ap_CS_fsm_pp3_stage7)))) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end else if (((icmp_ln52_fu_1319_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
            ap_enable_reg_pp3_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln29_reg_2516 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        h_0_reg_651 <= select_ln35_1_reg_2525;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        h_0_reg_651 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln29_reg_2516 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_0_0_reg_684 <= add_ln31_reg_2572;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_0_reg_684 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ih1_0_reg_761 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        ih1_0_reg_761 <= select_ln58_1_reg_2622;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln52_fu_1319_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
        ih4_0_reg_828 <= 6'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln66_reg_2900 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        ih4_0_reg_828 <= select_ln71_1_reg_2909;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        ih_0_reg_706 <= 6'd0;
    end else if (((icmp_ln40_fu_1133_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        ih_0_reg_706 <= select_ln44_1_fu_1165_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln52_fu_1319_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        im_0_0_reg_806 <= 6'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln55_reg_2683 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        im_0_0_reg_806 <= add_ln55_reg_2767;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln29_reg_2516 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten13_reg_640 <= add_ln29_reg_2520;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten13_reg_640 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        indvar_flatten20_reg_717 <= 10'd0;
    end else if (((icmp_ln40_fu_1133_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        indvar_flatten20_reg_717 <= select_ln41_fu_1311_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        indvar_flatten34_reg_695 <= 15'd0;
    end else if (((icmp_ln40_fu_1133_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        indvar_flatten34_reg_695 <= add_ln40_fu_1139_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        indvar_flatten41_reg_772 <= 10'd0;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        indvar_flatten41_reg_772 <= select_ln53_fu_1656_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        indvar_flatten55_reg_750 <= 15'd0;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        indvar_flatten55_reg_750 <= add_ln52_reg_2612;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln52_fu_1319_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
        indvar_flatten62_reg_839 <= 7'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln66_reg_2900 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        indvar_flatten62_reg_839 <= select_ln67_reg_2964;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln52_fu_1319_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
        indvar_flatten76_reg_817 <= 12'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln66_reg_2900 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        indvar_flatten76_reg_817 <= add_ln66_reg_2904;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln29_reg_2516 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_662 <= select_ln30_reg_2548;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_662 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        iw2_0_reg_784 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        iw2_0_reg_784 <= select_ln58_3_reg_2632;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln52_fu_1319_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
        iw5_0_reg_850 <= 4'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln66_reg_2900 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        iw5_0_reg_850 <= select_ln71_3_reg_2919;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        iw_0_reg_728 <= 4'd0;
    end else if (((icmp_ln40_fu_1133_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        iw_0_reg_728 <= select_ln44_3_fu_1223_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        om3_0_reg_795 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        om3_0_reg_795 <= om_1_fu_1645_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln52_fu_1319_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
        om6_0_0_reg_861 <= 6'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln66_reg_2900 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        om6_0_0_reg_861 <= add_ln68_reg_3033;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        om_0_reg_739 <= 6'd0;
    end else if (((icmp_ln40_fu_1133_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        om_0_reg_739 <= om_fu_1299_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln29_reg_2516 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w_0_reg_673 <= select_ln35_3_reg_2536;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        w_0_reg_673 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln29_reg_2520 <= add_ln29_fu_945_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln29_reg_2516 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln31_reg_2572 <= add_ln31_fu_1128_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln29_reg_2516 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln35_2_reg_2560[13 : 1] <= add_ln35_2_fu_1118_p2[13 : 1];
        zext_ln35_4_reg_2553[13 : 0] <= zext_ln35_4_fu_1104_p1[13 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        add_ln52_reg_2612 <= add_ln52_fu_1325_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln55_fu_1497_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        add_ln55_reg_2767 <= add_ln55_fu_1639_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        add_ln66_reg_2904 <= add_ln66_fu_1669_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage7_11001) & (icmp_ln66_reg_2900 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage7) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        add_ln68_reg_3033 <= add_ln68_fu_2349_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        bn_bias2_load_reg_2877 <= bn_bias2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln29_reg_2516 <= icmp_ln29_fu_939_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln52_fu_1319_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        icmp_ln53_reg_2617 <= icmp_ln53_fu_1337_p2;
        select_ln58_1_reg_2622 <= select_ln58_1_fu_1351_p3;
        select_ln58_2_reg_2627 <= select_ln58_2_fu_1401_p3;
        select_ln58_3_reg_2632 <= select_ln58_3_fu_1409_p3;
        sub_ln58_reg_2637[13 : 2] <= sub_ln58_fu_1447_p2[13 : 2];
        trunc_ln59_reg_2654 <= trunc_ln59_fu_1461_p1;
        y_0_addr_1_reg_2663 <= zext_ln59_3_fu_1489_p1;
        y_1_addr_1_reg_2668 <= zext_ln59_3_fu_1489_p1;
        y_2_addr_1_reg_2673 <= zext_ln59_3_fu_1489_p1;
        y_3_addr_1_reg_2678 <= zext_ln59_3_fu_1489_p1;
        zext_ln58_2_reg_2643[5 : 0] <= zext_ln58_2_fu_1453_p1[5 : 0];
        zext_ln59_1_reg_2648[5 : 0] <= zext_ln59_1_fu_1457_p1[5 : 0];
        zext_ln59_reg_2658[1 : 0] <= zext_ln59_fu_1465_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln55_reg_2683 <= icmp_ln55_fu_1497_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        icmp_ln66_reg_2900 <= icmp_ln66_fu_1663_p2;
        icmp_ln66_reg_2900_pp3_iter1_reg <= icmp_ln66_reg_2900;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln29_fu_939_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lshr_ln_reg_2542 <= {{select_ln35_2_fu_1009_p3[5:2]}};
        select_ln35_2_reg_2531 <= select_ln35_2_fu_1009_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage1_11001) & (icmp_ln55_reg_2683 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        pw_weight2_0_load_1_reg_2817 <= pw_weight2_0_q1;
        pw_weight2_1_load_1_reg_2827 <= pw_weight2_1_q1;
        pw_weight2_1_load_reg_2787 <= pw_weight2_1_q0;
        pw_weight2_2_load_1_reg_2837 <= pw_weight2_2_q1;
        pw_weight2_2_load_reg_2797 <= pw_weight2_2_q0;
        pw_weight2_3_load_1_reg_2847 <= pw_weight2_3_q1;
        pw_weight2_3_load_reg_2807 <= pw_weight2_3_q0;
        x_0_load_1_reg_2812 <= x_0_q1;
        x_1_load_1_reg_2822 <= x_1_q1;
        x_1_load_reg_2782 <= x_1_q0;
        x_2_load_1_reg_2832 <= x_2_q1;
        x_2_load_reg_2792 <= x_2_q0;
        x_3_load_1_reg_2842 <= x_3_q1;
        x_3_load_reg_2802 <= x_3_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp2_stage7_11001) & (icmp_ln55_reg_2683 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage7) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage4_11001) & (icmp_ln55_reg_2683 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage4)))) begin
        reg_918 <= grp_fu_885_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state45) | ((1'b0 == ap_block_pp2_stage4_11001) & (icmp_ln55_reg_2683 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage4)))) begin
        reg_923 <= grp_fu_904_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp2_stage10_11001) & (icmp_ln55_reg_2683 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage10) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage5_11001) & (icmp_ln55_reg_2683 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage5) & (ap_enable_reg_pp2_iter0 == 1'b1)))) begin
        reg_929 <= grp_fu_885_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln29_fu_939_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        select_ln30_reg_2548 <= select_ln30_fu_1041_p3;
        select_ln35_1_reg_2525 <= select_ln35_1_fu_971_p3;
        select_ln35_3_reg_2536 <= select_ln35_3_fu_1017_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln66_fu_1663_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        select_ln67_reg_2964 <= select_ln67_fu_1855_p3;
        select_ln71_1_reg_2909 <= select_ln71_1_fu_1695_p3;
        select_ln71_3_reg_2919 <= select_ln71_3_fu_1753_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln66_fu_1663_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        select_ln71_2_reg_2914 <= select_ln71_2_fu_1745_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        tmp_s_reg_2882 <= grp_fu_881_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage1_11001) & (icmp_ln66_reg_2900 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        y_0_load_2_reg_2969 <= y_0_q0;
        y_0_load_3_reg_3001 <= y_0_q1;
        y_1_load_2_reg_2977 <= y_1_q0;
        y_1_load_3_reg_3009 <= y_1_q1;
        y_2_load_2_reg_2985 <= y_2_q0;
        y_2_load_3_reg_3017 <= y_2_q1;
        y_3_load_2_reg_2993 <= y_3_q0;
        y_3_load_3_reg_3025 <= y_3_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage6_11001) & (icmp_ln55_reg_2683 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage6) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        y_i_2_reg_2852 <= grp_fu_885_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage8_11001) & (icmp_ln55_reg_2683 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage8) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        y_i_4_reg_2857 <= grp_fu_885_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage9_11001) & (icmp_ln55_reg_2683 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage9) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        y_i_5_reg_2862 <= grp_fu_885_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage11_11001) & (icmp_ln55_reg_2683 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage11) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        y_i_7_reg_2867 <= grp_fu_885_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln29_reg_2516 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        zext_ln35_6_reg_2565[13 : 1] <= zext_ln35_6_fu_1124_p1[13 : 1];
    end
end

always @ (*) begin
    if ((icmp_ln29_fu_939_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln55_fu_1497_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state15 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state15 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln66_fu_1663_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state51 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state51 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state61) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln29_reg_2516 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_h_0_phi_fu_655_p4 = select_ln35_1_reg_2525;
    end else begin
        ap_phi_mux_h_0_phi_fu_655_p4 = h_0_reg_651;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln29_reg_2516 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i_0_0_phi_fu_688_p4 = add_ln31_reg_2572;
    end else begin
        ap_phi_mux_i_0_0_phi_fu_688_p4 = i_0_0_reg_684;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (icmp_ln66_reg_2900 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        ap_phi_mux_ih4_0_phi_fu_832_p4 = select_ln71_1_reg_2909;
    end else begin
        ap_phi_mux_ih4_0_phi_fu_832_p4 = ih4_0_reg_828;
    end
end

always @ (*) begin
    if (((icmp_ln55_reg_2683 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_phi_mux_im_0_0_phi_fu_810_p4 = add_ln55_reg_2767;
    end else begin
        ap_phi_mux_im_0_0_phi_fu_810_p4 = im_0_0_reg_806;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln29_reg_2516 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten13_phi_fu_644_p4 = add_ln29_reg_2520;
    end else begin
        ap_phi_mux_indvar_flatten13_phi_fu_644_p4 = indvar_flatten13_reg_640;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (icmp_ln66_reg_2900 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        ap_phi_mux_indvar_flatten62_phi_fu_843_p4 = select_ln67_reg_2964;
    end else begin
        ap_phi_mux_indvar_flatten62_phi_fu_843_p4 = indvar_flatten62_reg_839;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (icmp_ln66_reg_2900 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        ap_phi_mux_indvar_flatten76_phi_fu_821_p4 = add_ln66_reg_2904;
    end else begin
        ap_phi_mux_indvar_flatten76_phi_fu_821_p4 = indvar_flatten76_reg_817;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln29_reg_2516 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_666_p4 = select_ln30_reg_2548;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_666_p4 = indvar_flatten_reg_662;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (icmp_ln66_reg_2900 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        ap_phi_mux_iw5_0_phi_fu_854_p4 = select_ln71_3_reg_2919;
    end else begin
        ap_phi_mux_iw5_0_phi_fu_854_p4 = iw5_0_reg_850;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (icmp_ln66_reg_2900 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        ap_phi_mux_om6_0_0_phi_fu_865_p4 = add_ln68_reg_3033;
    end else begin
        ap_phi_mux_om6_0_0_phi_fu_865_p4 = om6_0_0_reg_861;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln29_reg_2516 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_w_0_phi_fu_677_p4 = select_ln35_3_reg_2536;
    end else begin
        ap_phi_mux_w_0_phi_fu_677_p4 = w_0_reg_673;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        bn_bias2_ce0 = 1'b1;
    end else begin
        bn_bias2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp2_stage25) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage25)) | ((1'b1 == ap_CS_fsm_pp2_stage22) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage22)) | ((1'b1 == ap_CS_fsm_pp2_stage19) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage19)) | ((1'b1 == ap_CS_fsm_pp2_stage16) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage16)) | ((1'b1 == ap_CS_fsm_pp2_stage13) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage13)) | ((1'b1 == ap_CS_fsm_pp2_stage10) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage10)) | ((1'b1 == ap_CS_fsm_pp2_stage7) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage7)))) begin
        grp_fu_872_p0 = grp_fu_872_p2;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage4) & (1'b0 == ap_block_pp2_stage4))) begin
        grp_fu_872_p0 = grp_fu_904_p6;
    end else begin
        grp_fu_872_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage25) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage25))) begin
        grp_fu_872_p1 = y_i_7_reg_2867;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage19) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage19))) begin
        grp_fu_872_p1 = y_i_5_reg_2862;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage16) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage16))) begin
        grp_fu_872_p1 = y_i_4_reg_2857;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage13) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage13))) begin
        grp_fu_872_p1 = reg_918;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage10) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage10))) begin
        grp_fu_872_p1 = y_i_2_reg_2852;
    end else if ((((1'b1 == ap_CS_fsm_pp2_stage22) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage22)) | ((1'b1 == ap_CS_fsm_pp2_stage7) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage7)))) begin
        grp_fu_872_p1 = reg_929;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage4) & (1'b0 == ap_block_pp2_stage4))) begin
        grp_fu_872_p1 = grp_fu_885_p2;
    end else begin
        grp_fu_872_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp2_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp2_stage8) & (1'b0 == ap_block_pp2_stage8))) begin
            grp_fu_885_p0 = x_3_load_1_reg_2842;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage7) & (1'b0 == ap_block_pp2_stage7))) begin
            grp_fu_885_p0 = x_2_load_1_reg_2832;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage6) & (1'b0 == ap_block_pp2_stage6))) begin
            grp_fu_885_p0 = x_1_load_1_reg_2822;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage5) & (1'b0 == ap_block_pp2_stage5))) begin
            grp_fu_885_p0 = x_0_load_1_reg_2812;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage4) & (1'b0 == ap_block_pp2_stage4))) begin
            grp_fu_885_p0 = x_3_load_reg_2802;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage3) & (1'b0 == ap_block_pp2_stage3))) begin
            grp_fu_885_p0 = x_2_load_reg_2792;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage2) & (1'b0 == ap_block_pp2_stage2))) begin
            grp_fu_885_p0 = x_1_load_reg_2782;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1))) begin
            grp_fu_885_p0 = x_0_q0;
        end else begin
            grp_fu_885_p0 = 'bx;
        end
    end else begin
        grp_fu_885_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp2_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp2_stage8) & (1'b0 == ap_block_pp2_stage8))) begin
            grp_fu_885_p1 = pw_weight2_3_load_1_reg_2847;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage7) & (1'b0 == ap_block_pp2_stage7))) begin
            grp_fu_885_p1 = pw_weight2_2_load_1_reg_2837;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage6) & (1'b0 == ap_block_pp2_stage6))) begin
            grp_fu_885_p1 = pw_weight2_1_load_1_reg_2827;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage5) & (1'b0 == ap_block_pp2_stage5))) begin
            grp_fu_885_p1 = pw_weight2_0_load_1_reg_2817;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage4) & (1'b0 == ap_block_pp2_stage4))) begin
            grp_fu_885_p1 = pw_weight2_3_load_reg_2807;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage3) & (1'b0 == ap_block_pp2_stage3))) begin
            grp_fu_885_p1 = pw_weight2_2_load_reg_2797;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage2) & (1'b0 == ap_block_pp2_stage2))) begin
            grp_fu_885_p1 = pw_weight2_1_load_reg_2787;
        end else if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1))) begin
            grp_fu_885_p1 = pw_weight2_0_q0;
        end else begin
            grp_fu_885_p1 = 'bx;
        end
    end else begin
        grp_fu_885_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage1_11001) & (1'b1 == ap_CS_fsm_pp3_stage1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage7_11001) & (1'b1 == ap_CS_fsm_pp3_stage7)) | ((1'b1 == ap_CS_fsm_pp3_stage6) & (1'b0 == ap_block_pp3_stage6_11001)) | ((1'b1 == ap_CS_fsm_pp3_stage5) & (1'b0 == ap_block_pp3_stage5_11001)) | ((1'b1 == ap_CS_fsm_pp3_stage4) & (1'b0 == ap_block_pp3_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp3_stage3) & (1'b0 == ap_block_pp3_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp3_stage2) & (1'b0 == ap_block_pp3_stage2_11001)))) begin
        grp_fu_892_ce = 1'b1;
    end else begin
        grp_fu_892_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        grp_fu_892_p0 = y_3_load_3_reg_3025;
    end else if (((1'b0 == ap_block_pp3_stage7) & (1'b1 == ap_CS_fsm_pp3_stage7) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        grp_fu_892_p0 = y_2_load_3_reg_3017;
    end else if (((1'b0 == ap_block_pp3_stage6) & (1'b1 == ap_CS_fsm_pp3_stage6) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        grp_fu_892_p0 = y_1_load_3_reg_3009;
    end else if (((1'b0 == ap_block_pp3_stage5) & (1'b1 == ap_CS_fsm_pp3_stage5) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        grp_fu_892_p0 = y_0_load_3_reg_3001;
    end else if (((1'b0 == ap_block_pp3_stage4) & (1'b1 == ap_CS_fsm_pp3_stage4) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        grp_fu_892_p0 = y_3_load_2_reg_2993;
    end else if (((1'b0 == ap_block_pp3_stage3) & (1'b1 == ap_CS_fsm_pp3_stage3) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        grp_fu_892_p0 = y_2_load_2_reg_2985;
    end else if (((1'b0 == ap_block_pp3_stage2) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage2))) begin
        grp_fu_892_p0 = y_1_load_2_reg_2977;
    end else if (((1'b0 == ap_block_pp3_stage1) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        grp_fu_892_p0 = y_0_q0;
    end else begin
        grp_fu_892_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage1_11001) & (1'b1 == ap_CS_fsm_pp3_stage1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage7_11001) & (1'b1 == ap_CS_fsm_pp3_stage7)) | ((1'b1 == ap_CS_fsm_pp3_stage6) & (1'b0 == ap_block_pp3_stage6_11001)) | ((1'b1 == ap_CS_fsm_pp3_stage5) & (1'b0 == ap_block_pp3_stage5_11001)) | ((1'b1 == ap_CS_fsm_pp3_stage4) & (1'b0 == ap_block_pp3_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp3_stage3) & (1'b0 == ap_block_pp3_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp3_stage2) & (1'b0 == ap_block_pp3_stage2_11001)))) begin
        grp_fu_898_ce = 1'b1;
    end else begin
        grp_fu_898_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        grp_fu_898_p0 = y_3_load_3_reg_3025;
    end else if (((1'b0 == ap_block_pp3_stage7) & (1'b1 == ap_CS_fsm_pp3_stage7) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        grp_fu_898_p0 = y_2_load_3_reg_3017;
    end else if (((1'b0 == ap_block_pp3_stage6) & (1'b1 == ap_CS_fsm_pp3_stage6) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        grp_fu_898_p0 = y_1_load_3_reg_3009;
    end else if (((1'b0 == ap_block_pp3_stage5) & (1'b1 == ap_CS_fsm_pp3_stage5) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        grp_fu_898_p0 = y_0_load_3_reg_3001;
    end else if (((1'b0 == ap_block_pp3_stage4) & (1'b1 == ap_CS_fsm_pp3_stage4) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        grp_fu_898_p0 = y_3_load_2_reg_2993;
    end else if (((1'b0 == ap_block_pp3_stage3) & (1'b1 == ap_CS_fsm_pp3_stage3) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        grp_fu_898_p0 = y_2_load_2_reg_2985;
    end else if (((1'b0 == ap_block_pp3_stage2) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage2))) begin
        grp_fu_898_p0 = y_1_load_2_reg_2977;
    end else if (((1'b0 == ap_block_pp3_stage1) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        grp_fu_898_p0 = y_0_q0;
    end else begin
        grp_fu_898_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (icmp_ln29_reg_2516 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage7) & (icmp_ln29_reg_2516 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6) & (icmp_ln29_reg_2516 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5) & (icmp_ln29_reg_2516 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4) & (icmp_ln29_reg_2516 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3) & (icmp_ln29_reg_2516 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2) & (icmp_ln29_reg_2516 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln29_reg_2516 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        in_stream_V_blk_n = in_stream_V_empty_n;
    end else begin
        in_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln29_reg_2516 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln29_reg_2516 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln29_reg_2516 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage6_11001)) | ((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln29_reg_2516 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln29_reg_2516 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001)) | ((icmp_ln29_reg_2516 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)) | ((icmp_ln29_reg_2516 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln29_reg_2516 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        in_stream_V_read = 1'b1;
    end else begin
        in_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage1) & (icmp_ln66_reg_2900_pp3_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter1 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0) & (icmp_ln66_reg_2900 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage7) & (icmp_ln66_reg_2900 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage7) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((1'b0 == ap_block_pp3_stage6) & (icmp_ln66_reg_2900 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage6) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((1'b0 == ap_block_pp3_stage5) & (icmp_ln66_reg_2900 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage5) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((1'b0 == ap_block_pp3_stage4) & (icmp_ln66_reg_2900 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage4) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((1'b0 == ap_block_pp3_stage3) & (icmp_ln66_reg_2900 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage3) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((1'b0 == ap_block_pp3_stage2) & (icmp_ln66_reg_2900 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage2)))) begin
        out_stream_V_blk_n = out_stream_V_full_n;
    end else begin
        out_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln66_reg_2900_pp3_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage1_01001))) begin
        out_stream_V_din = tmp_63_fu_2508_p3;
    end else if (((icmp_ln66_reg_2900 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_01001))) begin
        out_stream_V_din = tmp_62_fu_2427_p3;
    end else if (((icmp_ln66_reg_2900 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage7) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage7_01001))) begin
        out_stream_V_din = tmp_61_fu_2341_p3;
    end else if (((icmp_ln66_reg_2900 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage6) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage6_01001))) begin
        out_stream_V_din = tmp_60_fu_2260_p3;
    end else if (((icmp_ln66_reg_2900 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage5) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage5_01001))) begin
        out_stream_V_din = tmp_59_fu_2179_p3;
    end else if (((icmp_ln66_reg_2900 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage4) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage4_01001))) begin
        out_stream_V_din = tmp_58_fu_2098_p3;
    end else if (((icmp_ln66_reg_2900 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage3) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage3_01001))) begin
        out_stream_V_din = tmp_57_fu_2017_p3;
    end else if (((icmp_ln66_reg_2900 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage2) & (1'b0 == ap_block_pp3_stage2_01001))) begin
        out_stream_V_din = tmp_56_fu_1936_p3;
    end else begin
        out_stream_V_din = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage1_11001) & (icmp_ln66_reg_2900_pp3_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter1 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln66_reg_2900 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage7_11001) & (icmp_ln66_reg_2900 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage7) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((icmp_ln66_reg_2900 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage6) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage6_11001)) | ((icmp_ln66_reg_2900 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage5) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage5_11001)) | ((icmp_ln66_reg_2900 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage4) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage4_11001)) | ((icmp_ln66_reg_2900 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage3) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage3_11001)) | ((icmp_ln66_reg_2900 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage2) & (1'b0 == ap_block_pp3_stage2_11001)))) begin
        out_stream_V_write = 1'b1;
    end else begin
        out_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        pw_weight2_0_ce0 = 1'b1;
    end else begin
        pw_weight2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        pw_weight2_0_ce1 = 1'b1;
    end else begin
        pw_weight2_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        pw_weight2_1_ce0 = 1'b1;
    end else begin
        pw_weight2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        pw_weight2_1_ce1 = 1'b1;
    end else begin
        pw_weight2_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        pw_weight2_2_ce0 = 1'b1;
    end else begin
        pw_weight2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        pw_weight2_2_ce1 = 1'b1;
    end else begin
        pw_weight2_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        pw_weight2_3_ce0 = 1'b1;
    end else begin
        pw_weight2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        pw_weight2_3_ce1 = 1'b1;
    end else begin
        pw_weight2_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        x_0_address0 = zext_ln58_7_fu_1565_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        x_0_address0 = zext_ln35_6_fu_1124_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        x_0_address0 = zext_ln35_4_fu_1104_p1;
    end else begin
        x_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        x_0_ce0 = 1'b1;
    end else begin
        x_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        x_0_ce1 = 1'b1;
    end else begin
        x_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln29_reg_2516 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln29_reg_2516 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        x_0_we0 = 1'b1;
    end else begin
        x_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        x_1_address0 = zext_ln58_7_fu_1565_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        x_1_address0 = zext_ln35_6_reg_2565;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        x_1_address0 = zext_ln35_4_reg_2553;
    end else begin
        x_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage6_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        x_1_ce0 = 1'b1;
    end else begin
        x_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        x_1_ce1 = 1'b1;
    end else begin
        x_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln29_reg_2516 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage6_11001)) | ((icmp_ln29_reg_2516 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        x_1_we0 = 1'b1;
    end else begin
        x_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        x_2_address0 = zext_ln58_7_fu_1565_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        x_2_address0 = zext_ln35_6_reg_2565;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        x_2_address0 = zext_ln35_4_reg_2553;
    end else begin
        x_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)))) begin
        x_2_ce0 = 1'b1;
    end else begin
        x_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        x_2_ce1 = 1'b1;
    end else begin
        x_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln29_reg_2516 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln29_reg_2516 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)))) begin
        x_2_we0 = 1'b1;
    end else begin
        x_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        x_3_address0 = zext_ln58_7_fu_1565_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x_3_address0 = zext_ln35_6_reg_2565;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        x_3_address0 = zext_ln35_4_reg_2553;
    end else begin
        x_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001)))) begin
        x_3_ce0 = 1'b1;
    end else begin
        x_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        x_3_ce1 = 1'b1;
    end else begin
        x_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln29_reg_2516 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln29_reg_2516 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001)))) begin
        x_3_we0 = 1'b1;
    end else begin
        x_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        y_0_address0 = zext_ln71_4_fu_1817_p1;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state44) | ((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage2)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage3) & (1'b0 == ap_block_pp2_stage3)))) begin
        y_0_address0 = y_0_addr_1_reg_2663;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        y_0_address0 = zext_ln44_4_fu_1291_p1;
    end else begin
        y_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state12) | ((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage2_11001)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage3) & (1'b0 == ap_block_pp2_stage3_11001)) | ((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
        y_0_ce0 = 1'b1;
    end else begin
        y_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        y_0_ce1 = 1'b1;
    end else begin
        y_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        y_0_d0 = tmp_s_reg_2882;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage2))) begin
        y_0_d0 = grp_fu_872_p2;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        y_0_d0 = 32'd0;
    end else begin
        y_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((trunc_ln59_reg_2654 == 2'd0) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage2_11001)) | ((trunc_ln59_reg_2654 == 2'd0) & (1'b1 == ap_CS_fsm_state50)) | ((icmp_ln40_fu_1133_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12) & (trunc_ln44_fu_1267_p1 == 2'd0)))) begin
        y_0_we0 = 1'b1;
    end else begin
        y_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        y_1_address0 = zext_ln71_4_fu_1817_p1;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state44) | ((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage2)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage3) & (1'b0 == ap_block_pp2_stage3)))) begin
        y_1_address0 = y_1_addr_1_reg_2668;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        y_1_address0 = zext_ln44_4_fu_1291_p1;
    end else begin
        y_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state12) | ((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage2_11001)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage3) & (1'b0 == ap_block_pp2_stage3_11001)) | ((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
        y_1_ce0 = 1'b1;
    end else begin
        y_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        y_1_ce1 = 1'b1;
    end else begin
        y_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        y_1_d0 = tmp_s_reg_2882;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage2))) begin
        y_1_d0 = grp_fu_872_p2;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        y_1_d0 = 32'd0;
    end else begin
        y_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((trunc_ln59_reg_2654 == 2'd1) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage2_11001)) | ((trunc_ln59_reg_2654 == 2'd1) & (1'b1 == ap_CS_fsm_state50)) | ((icmp_ln40_fu_1133_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12) & (trunc_ln44_fu_1267_p1 == 2'd1)))) begin
        y_1_we0 = 1'b1;
    end else begin
        y_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        y_2_address0 = zext_ln71_4_fu_1817_p1;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state44) | ((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage2)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage3) & (1'b0 == ap_block_pp2_stage3)))) begin
        y_2_address0 = y_2_addr_1_reg_2673;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        y_2_address0 = zext_ln44_4_fu_1291_p1;
    end else begin
        y_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state12) | ((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage2_11001)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage3) & (1'b0 == ap_block_pp2_stage3_11001)) | ((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
        y_2_ce0 = 1'b1;
    end else begin
        y_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        y_2_ce1 = 1'b1;
    end else begin
        y_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        y_2_d0 = tmp_s_reg_2882;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage2))) begin
        y_2_d0 = grp_fu_872_p2;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        y_2_d0 = 32'd0;
    end else begin
        y_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((trunc_ln59_reg_2654 == 2'd2) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage2_11001)) | ((trunc_ln59_reg_2654 == 2'd2) & (1'b1 == ap_CS_fsm_state50)) | ((icmp_ln40_fu_1133_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12) & (trunc_ln44_fu_1267_p1 == 2'd2)))) begin
        y_2_we0 = 1'b1;
    end else begin
        y_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        y_3_address0 = zext_ln71_4_fu_1817_p1;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state44) | ((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage2)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage3) & (1'b0 == ap_block_pp2_stage3)))) begin
        y_3_address0 = y_3_addr_1_reg_2678;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        y_3_address0 = zext_ln44_4_fu_1291_p1;
    end else begin
        y_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state12) | ((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage2_11001)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage3) & (1'b0 == ap_block_pp2_stage3_11001)) | ((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
        y_3_ce0 = 1'b1;
    end else begin
        y_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        y_3_ce1 = 1'b1;
    end else begin
        y_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        y_3_d0 = tmp_s_reg_2882;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage2))) begin
        y_3_d0 = grp_fu_872_p2;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        y_3_d0 = 32'd0;
    end else begin
        y_3_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((trunc_ln59_reg_2654 == 2'd3) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage2_11001)) | ((trunc_ln59_reg_2654 == 2'd3) & (1'b1 == ap_CS_fsm_state50)) | ((icmp_ln40_fu_1133_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12) & (trunc_ln44_fu_1267_p1 == 2'd3)))) begin
        y_3_we0 = 1'b1;
    end else begin
        y_3_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln29_fu_939_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln29_fu_939_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((icmp_ln40_fu_1133_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((icmp_ln52_fu_1319_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln55_fu_1497_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end else if (((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln55_fu_1497_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage1 : begin
            if ((1'b0 == ap_block_pp2_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end
        end
        ap_ST_fsm_pp2_stage2 : begin
            if ((~((1'b0 == ap_block_pp2_stage2_subdone) & (ap_enable_reg_pp2_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1)) & (1'b0 == ap_block_pp2_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage3;
            end else if (((1'b0 == ap_block_pp2_stage2_subdone) & (ap_enable_reg_pp2_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage2;
            end
        end
        ap_ST_fsm_pp2_stage3 : begin
            if ((1'b0 == ap_block_pp2_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage3;
            end
        end
        ap_ST_fsm_pp2_stage4 : begin
            if ((1'b0 == ap_block_pp2_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage4;
            end
        end
        ap_ST_fsm_pp2_stage5 : begin
            if ((1'b0 == ap_block_pp2_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage5;
            end
        end
        ap_ST_fsm_pp2_stage6 : begin
            if ((1'b0 == ap_block_pp2_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage6;
            end
        end
        ap_ST_fsm_pp2_stage7 : begin
            if ((1'b0 == ap_block_pp2_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage7;
            end
        end
        ap_ST_fsm_pp2_stage8 : begin
            if ((1'b0 == ap_block_pp2_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage8;
            end
        end
        ap_ST_fsm_pp2_stage9 : begin
            if ((1'b0 == ap_block_pp2_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage9;
            end
        end
        ap_ST_fsm_pp2_stage10 : begin
            if ((1'b0 == ap_block_pp2_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage10;
            end
        end
        ap_ST_fsm_pp2_stage11 : begin
            if ((1'b0 == ap_block_pp2_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage11;
            end
        end
        ap_ST_fsm_pp2_stage12 : begin
            if ((1'b0 == ap_block_pp2_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage12;
            end
        end
        ap_ST_fsm_pp2_stage13 : begin
            if ((1'b0 == ap_block_pp2_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage13;
            end
        end
        ap_ST_fsm_pp2_stage14 : begin
            if ((1'b0 == ap_block_pp2_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage14;
            end
        end
        ap_ST_fsm_pp2_stage15 : begin
            if ((1'b0 == ap_block_pp2_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage15;
            end
        end
        ap_ST_fsm_pp2_stage16 : begin
            if ((1'b0 == ap_block_pp2_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage16;
            end
        end
        ap_ST_fsm_pp2_stage17 : begin
            if ((1'b0 == ap_block_pp2_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage17;
            end
        end
        ap_ST_fsm_pp2_stage18 : begin
            if ((1'b0 == ap_block_pp2_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage18;
            end
        end
        ap_ST_fsm_pp2_stage19 : begin
            if ((1'b0 == ap_block_pp2_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage19;
            end
        end
        ap_ST_fsm_pp2_stage20 : begin
            if ((1'b0 == ap_block_pp2_stage20_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage20;
            end
        end
        ap_ST_fsm_pp2_stage21 : begin
            if ((1'b0 == ap_block_pp2_stage21_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage21;
            end
        end
        ap_ST_fsm_pp2_stage22 : begin
            if ((1'b0 == ap_block_pp2_stage22_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage22;
            end
        end
        ap_ST_fsm_pp2_stage23 : begin
            if ((1'b0 == ap_block_pp2_stage23_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage23;
            end
        end
        ap_ST_fsm_pp2_stage24 : begin
            if ((1'b0 == ap_block_pp2_stage24_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage24;
            end
        end
        ap_ST_fsm_pp2_stage25 : begin
            if ((1'b0 == ap_block_pp2_stage25_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage25;
            end
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln66_fu_1663_p2 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b1)) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage1;
            end else if (((1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln66_fu_1663_p2 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_pp3_stage1 : begin
            if ((~((1'b0 == ap_block_pp3_stage1_subdone) & (ap_enable_reg_pp3_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter1 == 1'b1)) & (1'b0 == ap_block_pp3_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage2;
            end else if (((1'b0 == ap_block_pp3_stage1_subdone) & (ap_enable_reg_pp3_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter1 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage1;
            end
        end
        ap_ST_fsm_pp3_stage2 : begin
            if ((1'b0 == ap_block_pp3_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage2;
            end
        end
        ap_ST_fsm_pp3_stage3 : begin
            if ((1'b0 == ap_block_pp3_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage3;
            end
        end
        ap_ST_fsm_pp3_stage4 : begin
            if ((1'b0 == ap_block_pp3_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage4;
            end
        end
        ap_ST_fsm_pp3_stage5 : begin
            if ((1'b0 == ap_block_pp3_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage5;
            end
        end
        ap_ST_fsm_pp3_stage6 : begin
            if ((1'b0 == ap_block_pp3_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage6;
            end
        end
        ap_ST_fsm_pp3_stage7 : begin
            if ((1'b0 == ap_block_pp3_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage7;
            end
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln29_fu_945_p2 = (ap_phi_mux_indvar_flatten13_phi_fu_644_p4 + 12'd1);

assign add_ln30_1_fu_1035_p2 = (ap_phi_mux_indvar_flatten_phi_fu_666_p4 + 7'd1);

assign add_ln31_fu_1128_p2 = (select_ln35_2_reg_2531 + 6'd8);

assign add_ln35_1_fu_1098_p2 = (sub_ln35_fu_1089_p2 + zext_ln35_3_fu_1095_p1);

assign add_ln35_2_fu_1118_p2 = (sub_ln35_fu_1089_p2 + zext_ln35_5_fu_1114_p1);

assign add_ln35_fu_1063_p2 = (zext_ln35_fu_1056_p1 + zext_ln35_1_fu_1060_p1);

assign add_ln40_fu_1139_p2 = (indvar_flatten34_reg_695 + 15'd1);

assign add_ln41_1_fu_1305_p2 = (indvar_flatten20_reg_717 + 10'd1);

assign add_ln44_1_fu_1285_p2 = (zext_ln44_3_fu_1281_p1 + sub_ln44_fu_1261_p2);

assign add_ln44_fu_1235_p2 = (zext_ln44_1_fu_1231_p1 + zext_ln44_fu_1181_p1);

assign add_ln52_fu_1325_p2 = (indvar_flatten55_reg_750 + 15'd1);

assign add_ln53_1_fu_1650_p2 = (indvar_flatten41_reg_772 + 10'd1);

assign add_ln55_fu_1639_p2 = (ap_phi_mux_im_0_0_phi_fu_810_p4 + 6'd8);

assign add_ln58_1_fu_1547_p2 = (sub_ln58_1_fu_1541_p2 + zext_ln59_1_reg_2648);

assign add_ln58_2_fu_1560_p2 = (sub_ln58_reg_2637 + zext_ln58_4_fu_1513_p1);

assign add_ln58_3_fu_1613_p2 = (sub_ln58_2_fu_1607_p2 + zext_ln59_1_reg_2648);

assign add_ln58_4_fu_1626_p2 = (sub_ln58_reg_2637 + zext_ln58_8_fu_1579_p1);

assign add_ln58_fu_1421_p2 = (zext_ln58_1_fu_1417_p1 + zext_ln58_fu_1367_p1);

assign add_ln59_fu_1483_p2 = (zext_ln59_2_fu_1479_p1 + sub_ln58_fu_1447_p2);

assign add_ln66_fu_1669_p2 = (ap_phi_mux_indvar_flatten76_phi_fu_821_p4 + 12'd1);

assign add_ln67_1_fu_1849_p2 = (7'd1 + ap_phi_mux_indvar_flatten62_phi_fu_843_p4);

assign add_ln68_fu_2349_p2 = (6'd8 + select_ln71_2_reg_2914);

assign add_ln71_1_fu_1811_p2 = (zext_ln71_3_fu_1807_p1 + sub_ln71_fu_1791_p2);

assign add_ln71_2_fu_1835_p2 = (zext_ln71_5_fu_1831_p1 + sub_ln71_fu_1791_p2);

assign add_ln71_fu_1765_p2 = (zext_ln71_1_fu_1761_p1 + zext_ln71_fu_1711_p1);

assign and_ln236_1_fu_1979_p2 = (or_ln236_1_fu_1973_p2 & grp_fu_892_p2);

assign and_ln236_2_fu_2060_p2 = (or_ln236_2_fu_2054_p2 & grp_fu_892_p2);

assign and_ln236_3_fu_2141_p2 = (or_ln236_3_fu_2135_p2 & grp_fu_892_p2);

assign and_ln236_4_fu_2222_p2 = (or_ln236_4_fu_2216_p2 & grp_fu_892_p2);

assign and_ln236_5_fu_2303_p2 = (or_ln236_5_fu_2297_p2 & grp_fu_892_p2);

assign and_ln236_6_fu_2389_p2 = (or_ln236_6_fu_2383_p2 & grp_fu_892_p2);

assign and_ln236_7_fu_2470_p2 = (or_ln236_7_fu_2464_p2 & grp_fu_892_p2);

assign and_ln236_fu_1898_p2 = (or_ln236_fu_1892_p2 & grp_fu_892_p2);

assign and_ln238_10_fu_2309_p2 = (or_ln236_5_fu_2297_p2 & grp_fu_898_p2);

assign and_ln238_11_fu_2321_p2 = (xor_ln236_5_fu_2315_p2 & and_ln238_10_fu_2309_p2);

assign and_ln238_12_fu_2395_p2 = (or_ln236_6_fu_2383_p2 & grp_fu_898_p2);

assign and_ln238_13_fu_2407_p2 = (xor_ln236_6_fu_2401_p2 & and_ln238_12_fu_2395_p2);

assign and_ln238_14_fu_2476_p2 = (or_ln236_7_fu_2464_p2 & grp_fu_898_p2);

assign and_ln238_15_fu_2488_p2 = (xor_ln236_7_fu_2482_p2 & and_ln238_14_fu_2476_p2);

assign and_ln238_1_fu_1916_p2 = (xor_ln236_fu_1910_p2 & and_ln238_fu_1904_p2);

assign and_ln238_2_fu_1985_p2 = (or_ln236_1_fu_1973_p2 & grp_fu_898_p2);

assign and_ln238_3_fu_1997_p2 = (xor_ln236_1_fu_1991_p2 & and_ln238_2_fu_1985_p2);

assign and_ln238_4_fu_2066_p2 = (or_ln236_2_fu_2054_p2 & grp_fu_898_p2);

assign and_ln238_5_fu_2078_p2 = (xor_ln236_2_fu_2072_p2 & and_ln238_4_fu_2066_p2);

assign and_ln238_6_fu_2147_p2 = (or_ln236_3_fu_2135_p2 & grp_fu_898_p2);

assign and_ln238_7_fu_2159_p2 = (xor_ln236_3_fu_2153_p2 & and_ln238_6_fu_2147_p2);

assign and_ln238_8_fu_2228_p2 = (or_ln236_4_fu_2216_p2 & grp_fu_898_p2);

assign and_ln238_9_fu_2240_p2 = (xor_ln236_4_fu_2234_p2 & and_ln238_8_fu_2228_p2);

assign and_ln238_fu_1904_p2 = (or_ln236_fu_1892_p2 & grp_fu_898_p2);

assign and_ln35_fu_991_p2 = (xor_ln35_fu_979_p2 & icmp_ln31_fu_985_p2);

assign and_ln44_fu_1197_p2 = (xor_ln44_fu_1185_p2 & icmp_ln42_fu_1191_p2);

assign and_ln58_fu_1383_p2 = (xor_ln58_fu_1371_p2 & icmp_ln54_fu_1377_p2);

assign and_ln71_fu_1727_p2 = (xor_ln71_fu_1715_p2 & icmp_ln68_fu_1721_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp2_stage1 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp2_stage10 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp2_stage11 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp2_stage13 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_pp2_stage16 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_pp2_stage19 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_pp2_stage2 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp2_stage22 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_pp2_stage25 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_pp2_stage3 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp2_stage4 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp2_stage5 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp2_stage6 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp2_stage7 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp2_stage8 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp2_stage9 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_pp3_stage1 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_pp3_stage2 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_pp3_stage3 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_pp3_stage4 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_pp3_stage5 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_pp3_stage6 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_pp3_stage7 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd54];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((in_stream_V_empty_n == 1'b0) & (icmp_ln29_reg_2516 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((in_stream_V_empty_n == 1'b0) & (icmp_ln29_reg_2516 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((in_stream_V_empty_n == 1'b0) & (icmp_ln29_reg_2516 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((in_stream_V_empty_n == 1'b0) & (icmp_ln29_reg_2516 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((in_stream_V_empty_n == 1'b0) & (icmp_ln29_reg_2516 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((in_stream_V_empty_n == 1'b0) & (icmp_ln29_reg_2516 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((in_stream_V_empty_n == 1'b0) & (icmp_ln29_reg_2516 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((in_stream_V_empty_n == 1'b0) & (icmp_ln29_reg_2516 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((in_stream_V_empty_n == 1'b0) & (icmp_ln29_reg_2516 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((in_stream_V_empty_n == 1'b0) & (icmp_ln29_reg_2516 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_11001 = ((in_stream_V_empty_n == 1'b0) & (icmp_ln29_reg_2516 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((in_stream_V_empty_n == 1'b0) & (icmp_ln29_reg_2516 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_11001 = ((in_stream_V_empty_n == 1'b0) & (icmp_ln29_reg_2516 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = ((in_stream_V_empty_n == 1'b0) & (icmp_ln29_reg_2516 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_11001 = ((in_stream_V_empty_n == 1'b0) & (icmp_ln29_reg_2516 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = ((in_stream_V_empty_n == 1'b0) & (icmp_ln29_reg_2516 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage13 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage16 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage16_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage16_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage17_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage18_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage19 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage19_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage19_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage20_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage21_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage22 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage22_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage22_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage23_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage24_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage25 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage25_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage25_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_00001 = ((out_stream_V_full_n == 1'b0) & (icmp_ln66_reg_2900 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage0_01001 = ((out_stream_V_full_n == 1'b0) & (icmp_ln66_reg_2900 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage0_11001 = ((out_stream_V_full_n == 1'b0) & (icmp_ln66_reg_2900 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = ((out_stream_V_full_n == 1'b0) & (icmp_ln66_reg_2900 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1));
end

assign ap_block_pp3_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage1_00001 = ((out_stream_V_full_n == 1'b0) & (icmp_ln66_reg_2900_pp3_iter1_reg == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage1_01001 = ((out_stream_V_full_n == 1'b0) & (icmp_ln66_reg_2900_pp3_iter1_reg == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage1_11001 = ((out_stream_V_full_n == 1'b0) & (icmp_ln66_reg_2900_pp3_iter1_reg == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage1_subdone = ((out_stream_V_full_n == 1'b0) & (icmp_ln66_reg_2900_pp3_iter1_reg == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1));
end

assign ap_block_pp3_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage2_00001 = ((out_stream_V_full_n == 1'b0) & (icmp_ln66_reg_2900 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage2_01001 = ((out_stream_V_full_n == 1'b0) & (icmp_ln66_reg_2900 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage2_11001 = ((out_stream_V_full_n == 1'b0) & (icmp_ln66_reg_2900 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage2_subdone = ((out_stream_V_full_n == 1'b0) & (icmp_ln66_reg_2900 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1));
end

assign ap_block_pp3_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage3_00001 = ((out_stream_V_full_n == 1'b0) & (icmp_ln66_reg_2900 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage3_01001 = ((out_stream_V_full_n == 1'b0) & (icmp_ln66_reg_2900 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage3_11001 = ((out_stream_V_full_n == 1'b0) & (icmp_ln66_reg_2900 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage3_subdone = ((out_stream_V_full_n == 1'b0) & (icmp_ln66_reg_2900 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1));
end

assign ap_block_pp3_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage4_00001 = ((out_stream_V_full_n == 1'b0) & (icmp_ln66_reg_2900 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage4_01001 = ((out_stream_V_full_n == 1'b0) & (icmp_ln66_reg_2900 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage4_11001 = ((out_stream_V_full_n == 1'b0) & (icmp_ln66_reg_2900 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage4_subdone = ((out_stream_V_full_n == 1'b0) & (icmp_ln66_reg_2900 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1));
end

assign ap_block_pp3_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage5_00001 = ((out_stream_V_full_n == 1'b0) & (icmp_ln66_reg_2900 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage5_01001 = ((out_stream_V_full_n == 1'b0) & (icmp_ln66_reg_2900 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage5_11001 = ((out_stream_V_full_n == 1'b0) & (icmp_ln66_reg_2900 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage5_subdone = ((out_stream_V_full_n == 1'b0) & (icmp_ln66_reg_2900 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1));
end

assign ap_block_pp3_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage6_00001 = ((out_stream_V_full_n == 1'b0) & (icmp_ln66_reg_2900 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage6_01001 = ((out_stream_V_full_n == 1'b0) & (icmp_ln66_reg_2900 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage6_11001 = ((out_stream_V_full_n == 1'b0) & (icmp_ln66_reg_2900 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage6_subdone = ((out_stream_V_full_n == 1'b0) & (icmp_ln66_reg_2900 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1));
end

assign ap_block_pp3_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage7_00001 = ((out_stream_V_full_n == 1'b0) & (icmp_ln66_reg_2900 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage7_01001 = ((out_stream_V_full_n == 1'b0) & (icmp_ln66_reg_2900 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage7_11001 = ((out_stream_V_full_n == 1'b0) & (icmp_ln66_reg_2900 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage7_subdone = ((out_stream_V_full_n == 1'b0) & (icmp_ln66_reg_2900 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_state10_pp0_stage0_iter1 = ((in_stream_V_empty_n == 1'b0) & (icmp_ln29_reg_2516 == 1'd0));
end

assign ap_block_state15_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp2_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp2_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp2_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp2_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp2_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp2_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp2_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp2_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp2_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp2_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp2_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp2_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp2_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp2_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp2_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp2_stage16_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp2_stage17_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp2_stage18_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp2_stage19_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp2_stage20_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp2_stage21_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp2_stage22_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp2_stage23_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp2_stage24_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage1_iter0 = ((in_stream_V_empty_n == 1'b0) & (icmp_ln29_reg_2516 == 1'd0));
end

assign ap_block_state40_pp2_stage25_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp2_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp2_stage2_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage2_iter0 = ((in_stream_V_empty_n == 1'b0) & (icmp_ln29_reg_2516 == 1'd0));
end

assign ap_block_state51_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp3_stage1_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state53_pp3_stage2_iter0 = ((out_stream_V_full_n == 1'b0) & (icmp_ln66_reg_2900 == 1'd0));
end

always @ (*) begin
    ap_block_state54_pp3_stage3_iter0 = ((out_stream_V_full_n == 1'b0) & (icmp_ln66_reg_2900 == 1'd0));
end

always @ (*) begin
    ap_block_state55_pp3_stage4_iter0 = ((out_stream_V_full_n == 1'b0) & (icmp_ln66_reg_2900 == 1'd0));
end

always @ (*) begin
    ap_block_state56_pp3_stage5_iter0 = ((out_stream_V_full_n == 1'b0) & (icmp_ln66_reg_2900 == 1'd0));
end

always @ (*) begin
    ap_block_state57_pp3_stage6_iter0 = ((out_stream_V_full_n == 1'b0) & (icmp_ln66_reg_2900 == 1'd0));
end

always @ (*) begin
    ap_block_state58_pp3_stage7_iter0 = ((out_stream_V_full_n == 1'b0) & (icmp_ln66_reg_2900 == 1'd0));
end

always @ (*) begin
    ap_block_state59_pp3_stage0_iter1 = ((out_stream_V_full_n == 1'b0) & (icmp_ln66_reg_2900 == 1'd0));
end

always @ (*) begin
    ap_block_state5_pp0_stage3_iter0 = ((in_stream_V_empty_n == 1'b0) & (icmp_ln29_reg_2516 == 1'd0));
end

always @ (*) begin
    ap_block_state60_pp3_stage1_iter1 = ((out_stream_V_full_n == 1'b0) & (icmp_ln66_reg_2900_pp3_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_state6_pp0_stage4_iter0 = ((in_stream_V_empty_n == 1'b0) & (icmp_ln29_reg_2516 == 1'd0));
end

always @ (*) begin
    ap_block_state7_pp0_stage5_iter0 = ((in_stream_V_empty_n == 1'b0) & (icmp_ln29_reg_2516 == 1'd0));
end

always @ (*) begin
    ap_block_state8_pp0_stage6_iter0 = ((in_stream_V_empty_n == 1'b0) & (icmp_ln29_reg_2516 == 1'd0));
end

always @ (*) begin
    ap_block_state9_pp0_stage7_iter0 = ((in_stream_V_empty_n == 1'b0) & (icmp_ln29_reg_2516 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign bitcast_ln236_1_fu_1944_p1 = y_1_load_2_reg_2977;

assign bitcast_ln236_2_fu_2025_p1 = y_2_load_2_reg_2985;

assign bitcast_ln236_3_fu_2106_p1 = y_3_load_2_reg_2993;

assign bitcast_ln236_4_fu_2187_p1 = y_0_load_3_reg_3001;

assign bitcast_ln236_5_fu_2268_p1 = y_1_load_3_reg_3009;

assign bitcast_ln236_6_fu_2354_p1 = y_2_load_3_reg_3017;

assign bitcast_ln236_7_fu_2435_p1 = y_3_load_3_reg_3025;

assign bitcast_ln236_fu_1863_p1 = y_0_load_2_reg_2969;

assign bn_bias2_address0 = zext_ln58_2_reg_2643;

assign h_fu_951_p2 = (ap_phi_mux_h_0_phi_fu_655_p4 + 6'd1);

assign icmp_ln236_10_fu_2285_p2 = ((tmp_27_fu_2271_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln236_11_fu_2291_p2 = ((trunc_ln236_5_fu_2281_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln236_12_fu_2371_p2 = ((tmp_30_fu_2357_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln236_13_fu_2377_p2 = ((trunc_ln236_6_fu_2367_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln236_14_fu_2452_p2 = ((tmp_33_fu_2438_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln236_15_fu_2458_p2 = ((trunc_ln236_7_fu_2448_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln236_1_fu_1886_p2 = ((trunc_ln236_fu_1876_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln236_2_fu_1961_p2 = ((tmp_8_fu_1947_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln236_3_fu_1967_p2 = ((trunc_ln236_1_fu_1957_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln236_4_fu_2042_p2 = ((tmp_13_fu_2028_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln236_5_fu_2048_p2 = ((trunc_ln236_2_fu_2038_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln236_6_fu_2123_p2 = ((tmp_21_fu_2109_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln236_7_fu_2129_p2 = ((trunc_ln236_3_fu_2119_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln236_8_fu_2204_p2 = ((tmp_24_fu_2190_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln236_9_fu_2210_p2 = ((trunc_ln236_4_fu_2200_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln236_fu_1880_p2 = ((tmp_2_fu_1866_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_fu_939_p2 = ((ap_phi_mux_indvar_flatten13_phi_fu_644_p4 == 12'd2064) ? 1'b1 : 1'b0);

assign icmp_ln30_fu_957_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_666_p4 == 7'd48) ? 1'b1 : 1'b0);

assign icmp_ln31_fu_985_p2 = ((ap_phi_mux_i_0_0_phi_fu_688_p4 == 6'd48) ? 1'b1 : 1'b0);

assign icmp_ln40_fu_1133_p2 = ((indvar_flatten34_reg_695 == 15'd16512) ? 1'b1 : 1'b0);

assign icmp_ln41_fu_1151_p2 = ((indvar_flatten20_reg_717 == 10'd384) ? 1'b1 : 1'b0);

assign icmp_ln42_fu_1191_p2 = ((om_0_reg_739 == 6'd48) ? 1'b1 : 1'b0);

assign icmp_ln52_fu_1319_p2 = ((indvar_flatten55_reg_750 == 15'd16512) ? 1'b1 : 1'b0);

assign icmp_ln53_fu_1337_p2 = ((indvar_flatten41_reg_772 == 10'd384) ? 1'b1 : 1'b0);

assign icmp_ln54_fu_1377_p2 = ((om3_0_reg_795 == 6'd48) ? 1'b1 : 1'b0);

assign icmp_ln55_fu_1497_p2 = ((ap_phi_mux_im_0_0_phi_fu_810_p4 == 6'd48) ? 1'b1 : 1'b0);

assign icmp_ln66_fu_1663_p2 = ((ap_phi_mux_indvar_flatten76_phi_fu_821_p4 == 12'd2064) ? 1'b1 : 1'b0);

assign icmp_ln67_fu_1681_p2 = ((ap_phi_mux_indvar_flatten62_phi_fu_843_p4 == 7'd48) ? 1'b1 : 1'b0);

assign icmp_ln68_fu_1721_p2 = ((ap_phi_mux_om6_0_0_phi_fu_865_p4 == 6'd48) ? 1'b1 : 1'b0);

assign ih_2_fu_1331_p2 = (6'd1 + ih1_0_reg_761);

assign ih_4_fu_1675_p2 = (6'd1 + ap_phi_mux_ih4_0_phi_fu_832_p4);

assign ih_fu_1145_p2 = (6'd1 + ih_0_reg_706);

assign iw_1_fu_1389_p2 = (4'd1 + select_ln58_fu_1343_p3);

assign iw_2_fu_1733_p2 = (4'd1 + select_ln71_fu_1687_p3);

assign iw_fu_1203_p2 = (4'd1 + select_ln44_fu_1157_p3);

assign lshr_ln7_fu_1797_p4 = {{select_ln71_2_fu_1745_p3[5:2]}};

assign lshr_ln8_fu_1503_p4 = {{ap_phi_mux_im_0_0_phi_fu_810_p4[5:2]}};

assign om_1_fu_1645_p2 = (select_ln58_2_reg_2627 + 6'd1);

assign om_fu_1299_p2 = (select_ln44_2_fu_1215_p3 + 6'd1);

assign or_ln236_1_fu_1973_p2 = (icmp_ln236_3_fu_1967_p2 | icmp_ln236_2_fu_1961_p2);

assign or_ln236_2_fu_2054_p2 = (icmp_ln236_5_fu_2048_p2 | icmp_ln236_4_fu_2042_p2);

assign or_ln236_3_fu_2135_p2 = (icmp_ln236_7_fu_2129_p2 | icmp_ln236_6_fu_2123_p2);

assign or_ln236_4_fu_2216_p2 = (icmp_ln236_9_fu_2210_p2 | icmp_ln236_8_fu_2204_p2);

assign or_ln236_5_fu_2297_p2 = (icmp_ln236_11_fu_2291_p2 | icmp_ln236_10_fu_2285_p2);

assign or_ln236_6_fu_2383_p2 = (icmp_ln236_13_fu_2377_p2 | icmp_ln236_12_fu_2371_p2);

assign or_ln236_7_fu_2464_p2 = (icmp_ln236_15_fu_2458_p2 | icmp_ln236_14_fu_2452_p2);

assign or_ln236_fu_1892_p2 = (icmp_ln236_fu_1880_p2 | icmp_ln236_1_fu_1886_p2);

assign or_ln238_1_fu_2011_p2 = (and_ln238_3_fu_1997_p2 | and_ln236_1_fu_1979_p2);

assign or_ln238_2_fu_2092_p2 = (and_ln238_5_fu_2078_p2 | and_ln236_2_fu_2060_p2);

assign or_ln238_3_fu_2173_p2 = (and_ln238_7_fu_2159_p2 | and_ln236_3_fu_2141_p2);

assign or_ln238_4_fu_2254_p2 = (and_ln238_9_fu_2240_p2 | and_ln236_4_fu_2222_p2);

assign or_ln238_5_fu_2335_p2 = (and_ln238_11_fu_2321_p2 | and_ln236_5_fu_2303_p2);

assign or_ln238_6_fu_2421_p2 = (and_ln238_13_fu_2407_p2 | and_ln236_6_fu_2389_p2);

assign or_ln238_7_fu_2502_p2 = (and_ln238_15_fu_2488_p2 | and_ln236_7_fu_2470_p2);

assign or_ln238_fu_1930_p2 = (and_ln238_1_fu_1916_p2 | and_ln236_fu_1898_p2);

assign or_ln35_1_fu_1003_p2 = (icmp_ln30_fu_957_p2 | and_ln35_fu_991_p2);

assign or_ln35_fu_1109_p2 = (lshr_ln_reg_2542 | 4'd1);

assign or_ln44_fu_1209_p2 = (icmp_ln41_fu_1151_p2 | and_ln44_fu_1197_p2);

assign or_ln58_1_fu_1395_p2 = (icmp_ln53_fu_1337_p2 | and_ln58_fu_1383_p2);

assign or_ln58_fu_1573_p2 = (lshr_ln8_fu_1503_p4 | 4'd1);

assign or_ln71_1_fu_1739_p2 = (icmp_ln67_fu_1681_p2 | and_ln71_fu_1727_p2);

assign or_ln71_fu_1825_p2 = (lshr_ln7_fu_1797_p4 | 4'd1);

assign p_shl3_cast_fu_1241_p3 = {{add_ln44_fu_1235_p2}, {4'd0}};

assign p_shl5_cast_fu_1427_p3 = {{add_ln58_fu_1421_p2}, {4'd0}};

assign p_shl7_cast_fu_1771_p3 = {{add_ln71_fu_1765_p2}, {4'd0}};

assign p_shl_cast_fu_1069_p3 = {{add_ln35_fu_1063_p2}, {4'd0}};

assign pw_weight2_0_address0 = sext_ln58_fu_1552_p1;

assign pw_weight2_0_address1 = sext_ln58_1_fu_1618_p1;

assign pw_weight2_1_address0 = sext_ln58_fu_1552_p1;

assign pw_weight2_1_address1 = sext_ln58_1_fu_1618_p1;

assign pw_weight2_2_address0 = sext_ln58_fu_1552_p1;

assign pw_weight2_2_address1 = sext_ln58_1_fu_1618_p1;

assign pw_weight2_3_address0 = sext_ln58_fu_1552_p1;

assign pw_weight2_3_address1 = sext_ln58_1_fu_1618_p1;

assign select_ln238_10_fu_2327_p3 = ((and_ln238_11_fu_2321_p2[0:0] === 1'b1) ? 32'd1086324736 : 32'd0);

assign select_ln238_12_fu_2413_p3 = ((and_ln238_13_fu_2407_p2[0:0] === 1'b1) ? 32'd1086324736 : 32'd0);

assign select_ln238_14_fu_2494_p3 = ((and_ln238_15_fu_2488_p2[0:0] === 1'b1) ? 32'd1086324736 : 32'd0);

assign select_ln238_2_fu_2003_p3 = ((and_ln238_3_fu_1997_p2[0:0] === 1'b1) ? 32'd1086324736 : 32'd0);

assign select_ln238_4_fu_2084_p3 = ((and_ln238_5_fu_2078_p2[0:0] === 1'b1) ? 32'd1086324736 : 32'd0);

assign select_ln238_6_fu_2165_p3 = ((and_ln238_7_fu_2159_p2[0:0] === 1'b1) ? 32'd1086324736 : 32'd0);

assign select_ln238_8_fu_2246_p3 = ((and_ln238_9_fu_2240_p2[0:0] === 1'b1) ? 32'd1086324736 : 32'd0);

assign select_ln238_fu_1922_p3 = ((and_ln238_1_fu_1916_p2[0:0] === 1'b1) ? 32'd1086324736 : 32'd0);

assign select_ln30_fu_1041_p3 = ((icmp_ln30_fu_957_p2[0:0] === 1'b1) ? 7'd1 : add_ln30_1_fu_1035_p2);

assign select_ln35_1_fu_971_p3 = ((icmp_ln30_fu_957_p2[0:0] === 1'b1) ? h_fu_951_p2 : ap_phi_mux_h_0_phi_fu_655_p4);

assign select_ln35_2_fu_1009_p3 = ((or_ln35_1_fu_1003_p2[0:0] === 1'b1) ? 6'd0 : ap_phi_mux_i_0_0_phi_fu_688_p4);

assign select_ln35_3_fu_1017_p3 = ((and_ln35_fu_991_p2[0:0] === 1'b1) ? w_fu_997_p2 : select_ln35_fu_963_p3);

assign select_ln35_fu_963_p3 = ((icmp_ln30_fu_957_p2[0:0] === 1'b1) ? 4'd0 : ap_phi_mux_w_0_phi_fu_677_p4);

assign select_ln41_fu_1311_p3 = ((icmp_ln41_fu_1151_p2[0:0] === 1'b1) ? 10'd1 : add_ln41_1_fu_1305_p2);

assign select_ln44_1_fu_1165_p3 = ((icmp_ln41_fu_1151_p2[0:0] === 1'b1) ? ih_fu_1145_p2 : ih_0_reg_706);

assign select_ln44_2_fu_1215_p3 = ((or_ln44_fu_1209_p2[0:0] === 1'b1) ? 6'd0 : om_0_reg_739);

assign select_ln44_3_fu_1223_p3 = ((and_ln44_fu_1197_p2[0:0] === 1'b1) ? iw_fu_1203_p2 : select_ln44_fu_1157_p3);

assign select_ln44_fu_1157_p3 = ((icmp_ln41_fu_1151_p2[0:0] === 1'b1) ? 4'd0 : iw_0_reg_728);

assign select_ln53_fu_1656_p3 = ((icmp_ln53_reg_2617[0:0] === 1'b1) ? 10'd1 : add_ln53_1_fu_1650_p2);

assign select_ln58_1_fu_1351_p3 = ((icmp_ln53_fu_1337_p2[0:0] === 1'b1) ? ih_2_fu_1331_p2 : ih1_0_reg_761);

assign select_ln58_2_fu_1401_p3 = ((or_ln58_1_fu_1395_p2[0:0] === 1'b1) ? 6'd0 : om3_0_reg_795);

assign select_ln58_3_fu_1409_p3 = ((and_ln58_fu_1383_p2[0:0] === 1'b1) ? iw_1_fu_1389_p2 : select_ln58_fu_1343_p3);

assign select_ln58_fu_1343_p3 = ((icmp_ln53_fu_1337_p2[0:0] === 1'b1) ? 4'd0 : iw2_0_reg_784);

assign select_ln67_fu_1855_p3 = ((icmp_ln67_fu_1681_p2[0:0] === 1'b1) ? 7'd1 : add_ln67_1_fu_1849_p2);

assign select_ln71_1_fu_1695_p3 = ((icmp_ln67_fu_1681_p2[0:0] === 1'b1) ? ih_4_fu_1675_p2 : ap_phi_mux_ih4_0_phi_fu_832_p4);

assign select_ln71_2_fu_1745_p3 = ((or_ln71_1_fu_1739_p2[0:0] === 1'b1) ? 6'd0 : ap_phi_mux_om6_0_0_phi_fu_865_p4);

assign select_ln71_3_fu_1753_p3 = ((and_ln71_fu_1727_p2[0:0] === 1'b1) ? iw_2_fu_1733_p2 : select_ln71_fu_1687_p3);

assign select_ln71_fu_1687_p3 = ((icmp_ln67_fu_1681_p2[0:0] === 1'b1) ? 4'd0 : ap_phi_mux_iw5_0_phi_fu_854_p4);

assign sext_ln58_1_fu_1618_p1 = $signed(add_ln58_3_fu_1613_p2);

assign sext_ln58_fu_1552_p1 = $signed(add_ln58_1_fu_1547_p2);

assign sub_ln35_fu_1089_p2 = (p_shl_cast_fu_1069_p3 - zext_ln35_2_fu_1085_p1);

assign sub_ln44_fu_1261_p2 = (p_shl3_cast_fu_1241_p3 - zext_ln44_2_fu_1257_p1);

assign sub_ln58_1_fu_1541_p2 = (zext_ln58_5_fu_1525_p1 - zext_ln58_6_fu_1537_p1);

assign sub_ln58_2_fu_1607_p2 = (zext_ln58_9_fu_1591_p1 - zext_ln58_10_fu_1603_p1);

assign sub_ln58_fu_1447_p2 = (p_shl5_cast_fu_1427_p3 - zext_ln58_3_fu_1443_p1);

assign sub_ln71_fu_1791_p2 = (p_shl7_cast_fu_1771_p3 - zext_ln71_2_fu_1787_p1);

assign tmp_13_fu_2028_p4 = {{bitcast_ln236_2_fu_2025_p1[30:23]}};

assign tmp_21_fu_2109_p4 = {{bitcast_ln236_3_fu_2106_p1[30:23]}};

assign tmp_24_fu_2190_p4 = {{bitcast_ln236_4_fu_2187_p1[30:23]}};

assign tmp_27_fu_2271_p4 = {{bitcast_ln236_5_fu_2268_p1[30:23]}};

assign tmp_2_fu_1866_p4 = {{bitcast_ln236_fu_1863_p1[30:23]}};

assign tmp_30_fu_2357_p4 = {{bitcast_ln236_6_fu_2354_p1[30:23]}};

assign tmp_33_fu_2438_p4 = {{bitcast_ln236_7_fu_2435_p1[30:23]}};

assign tmp_39_fu_1049_p3 = {{select_ln35_1_reg_2525}, {3'd0}};

assign tmp_40_fu_1173_p3 = {{select_ln44_1_fu_1165_p3}, {3'd0}};

assign tmp_41_fu_1359_p3 = {{select_ln58_1_fu_1351_p3}, {3'd0}};

assign tmp_50_fu_1249_p3 = {{add_ln44_fu_1235_p2}, {2'd0}};

assign tmp_51_fu_1271_p4 = {{select_ln44_2_fu_1215_p3[5:2]}};

assign tmp_52_fu_1435_p3 = {{add_ln58_fu_1421_p2}, {2'd0}};

assign tmp_53_fu_1469_p4 = {{select_ln58_2_fu_1401_p3[5:2]}};

assign tmp_54_fu_1703_p3 = {{select_ln71_1_fu_1695_p3}, {3'd0}};

assign tmp_55_fu_1779_p3 = {{add_ln71_fu_1765_p2}, {2'd0}};

assign tmp_56_fu_1936_p3 = ((or_ln238_fu_1930_p2[0:0] === 1'b1) ? select_ln238_fu_1922_p3 : y_0_load_2_reg_2969);

assign tmp_57_fu_2017_p3 = ((or_ln238_1_fu_2011_p2[0:0] === 1'b1) ? select_ln238_2_fu_2003_p3 : y_1_load_2_reg_2977);

assign tmp_58_fu_2098_p3 = ((or_ln238_2_fu_2092_p2[0:0] === 1'b1) ? select_ln238_4_fu_2084_p3 : y_2_load_2_reg_2985);

assign tmp_59_fu_2179_p3 = ((or_ln238_3_fu_2173_p2[0:0] === 1'b1) ? select_ln238_6_fu_2165_p3 : y_3_load_2_reg_2993);

assign tmp_60_fu_2260_p3 = ((or_ln238_4_fu_2254_p2[0:0] === 1'b1) ? select_ln238_8_fu_2246_p3 : y_0_load_3_reg_3001);

assign tmp_61_fu_2341_p3 = ((or_ln238_5_fu_2335_p2[0:0] === 1'b1) ? select_ln238_10_fu_2327_p3 : y_1_load_3_reg_3009);

assign tmp_62_fu_2427_p3 = ((or_ln238_6_fu_2421_p2[0:0] === 1'b1) ? select_ln238_12_fu_2413_p3 : y_2_load_3_reg_3017);

assign tmp_63_fu_2508_p3 = ((or_ln238_7_fu_2502_p2[0:0] === 1'b1) ? select_ln238_14_fu_2494_p3 : y_3_load_3_reg_3025);

assign tmp_64_fu_1517_p3 = {{lshr_ln8_fu_1503_p4}, {6'd0}};

assign tmp_65_fu_1529_p3 = {{lshr_ln8_fu_1503_p4}, {4'd0}};

assign tmp_66_fu_1583_p3 = {{or_ln58_fu_1573_p2}, {6'd0}};

assign tmp_67_fu_1595_p3 = {{or_ln58_fu_1573_p2}, {4'd0}};

assign tmp_8_fu_1947_p4 = {{bitcast_ln236_1_fu_1944_p1[30:23]}};

assign tmp_fu_1077_p3 = {{add_ln35_fu_1063_p2}, {2'd0}};

assign trunc_ln236_1_fu_1957_p1 = bitcast_ln236_1_fu_1944_p1[22:0];

assign trunc_ln236_2_fu_2038_p1 = bitcast_ln236_2_fu_2025_p1[22:0];

assign trunc_ln236_3_fu_2119_p1 = bitcast_ln236_3_fu_2106_p1[22:0];

assign trunc_ln236_4_fu_2200_p1 = bitcast_ln236_4_fu_2187_p1[22:0];

assign trunc_ln236_5_fu_2281_p1 = bitcast_ln236_5_fu_2268_p1[22:0];

assign trunc_ln236_6_fu_2367_p1 = bitcast_ln236_6_fu_2354_p1[22:0];

assign trunc_ln236_7_fu_2448_p1 = bitcast_ln236_7_fu_2435_p1[22:0];

assign trunc_ln236_fu_1876_p1 = bitcast_ln236_fu_1863_p1[22:0];

assign trunc_ln44_fu_1267_p1 = select_ln44_2_fu_1215_p3[1:0];

assign trunc_ln59_fu_1461_p1 = select_ln58_2_fu_1401_p3[1:0];

assign w_fu_997_p2 = (select_ln35_fu_963_p3 + 4'd1);

assign x_0_address1 = zext_ln58_11_fu_1631_p1;

assign x_1_address1 = zext_ln58_11_fu_1631_p1;

assign x_2_address1 = zext_ln58_11_fu_1631_p1;

assign x_3_address1 = zext_ln58_11_fu_1631_p1;

assign xor_ln236_1_fu_1991_p2 = (1'd1 ^ and_ln236_1_fu_1979_p2);

assign xor_ln236_2_fu_2072_p2 = (1'd1 ^ and_ln236_2_fu_2060_p2);

assign xor_ln236_3_fu_2153_p2 = (1'd1 ^ and_ln236_3_fu_2141_p2);

assign xor_ln236_4_fu_2234_p2 = (1'd1 ^ and_ln236_4_fu_2222_p2);

assign xor_ln236_5_fu_2315_p2 = (1'd1 ^ and_ln236_5_fu_2303_p2);

assign xor_ln236_6_fu_2401_p2 = (1'd1 ^ and_ln236_6_fu_2389_p2);

assign xor_ln236_7_fu_2482_p2 = (1'd1 ^ and_ln236_7_fu_2470_p2);

assign xor_ln236_fu_1910_p2 = (1'd1 ^ and_ln236_fu_1898_p2);

assign xor_ln35_fu_979_p2 = (icmp_ln30_fu_957_p2 ^ 1'd1);

assign xor_ln44_fu_1185_p2 = (icmp_ln41_fu_1151_p2 ^ 1'd1);

assign xor_ln58_fu_1371_p2 = (icmp_ln53_fu_1337_p2 ^ 1'd1);

assign xor_ln71_fu_1715_p2 = (icmp_ln67_fu_1681_p2 ^ 1'd1);

assign y_0_address1 = zext_ln71_6_fu_1841_p1;

assign y_1_address1 = zext_ln71_6_fu_1841_p1;

assign y_2_address1 = zext_ln71_6_fu_1841_p1;

assign y_3_address1 = zext_ln71_6_fu_1841_p1;

assign zext_ln35_1_fu_1060_p1 = select_ln35_3_reg_2536;

assign zext_ln35_2_fu_1085_p1 = tmp_fu_1077_p3;

assign zext_ln35_3_fu_1095_p1 = lshr_ln_reg_2542;

assign zext_ln35_4_fu_1104_p1 = add_ln35_1_fu_1098_p2;

assign zext_ln35_5_fu_1114_p1 = or_ln35_fu_1109_p2;

assign zext_ln35_6_fu_1124_p1 = add_ln35_2_reg_2560;

assign zext_ln35_fu_1056_p1 = tmp_39_fu_1049_p3;

assign zext_ln44_1_fu_1231_p1 = select_ln44_3_fu_1223_p3;

assign zext_ln44_2_fu_1257_p1 = tmp_50_fu_1249_p3;

assign zext_ln44_3_fu_1281_p1 = tmp_51_fu_1271_p4;

assign zext_ln44_4_fu_1291_p1 = add_ln44_1_fu_1285_p2;

assign zext_ln44_fu_1181_p1 = tmp_40_fu_1173_p3;

assign zext_ln58_10_fu_1603_p1 = tmp_67_fu_1595_p3;

assign zext_ln58_11_fu_1631_p1 = add_ln58_4_fu_1626_p2;

assign zext_ln58_1_fu_1417_p1 = select_ln58_3_fu_1409_p3;

assign zext_ln58_2_fu_1453_p1 = select_ln58_2_fu_1401_p3;

assign zext_ln58_3_fu_1443_p1 = tmp_52_fu_1435_p3;

assign zext_ln58_4_fu_1513_p1 = lshr_ln8_fu_1503_p4;

assign zext_ln58_5_fu_1525_p1 = tmp_64_fu_1517_p3;

assign zext_ln58_6_fu_1537_p1 = tmp_65_fu_1529_p3;

assign zext_ln58_7_fu_1565_p1 = add_ln58_2_fu_1560_p2;

assign zext_ln58_8_fu_1579_p1 = or_ln58_fu_1573_p2;

assign zext_ln58_9_fu_1591_p1 = tmp_66_fu_1583_p3;

assign zext_ln58_fu_1367_p1 = tmp_41_fu_1359_p3;

assign zext_ln59_1_fu_1457_p1 = select_ln58_2_fu_1401_p3;

assign zext_ln59_2_fu_1479_p1 = tmp_53_fu_1469_p4;

assign zext_ln59_3_fu_1489_p1 = add_ln59_fu_1483_p2;

assign zext_ln59_fu_1465_p1 = trunc_ln59_fu_1461_p1;

assign zext_ln71_1_fu_1761_p1 = select_ln71_3_fu_1753_p3;

assign zext_ln71_2_fu_1787_p1 = tmp_55_fu_1779_p3;

assign zext_ln71_3_fu_1807_p1 = lshr_ln7_fu_1797_p4;

assign zext_ln71_4_fu_1817_p1 = add_ln71_1_fu_1811_p2;

assign zext_ln71_5_fu_1831_p1 = or_ln71_fu_1825_p2;

assign zext_ln71_6_fu_1841_p1 = add_ln71_2_fu_1835_p2;

assign zext_ln71_fu_1711_p1 = tmp_54_fu_1703_p3;

always @ (posedge ap_clk) begin
    zext_ln35_4_reg_2553[63:14] <= 50'b00000000000000000000000000000000000000000000000000;
    add_ln35_2_reg_2560[0] <= 1'b1;
    zext_ln35_6_reg_2565[0] <= 1'b1;
    zext_ln35_6_reg_2565[63:14] <= 50'b00000000000000000000000000000000000000000000000000;
    sub_ln58_reg_2637[1:0] <= 2'b00;
    zext_ln58_2_reg_2643[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln59_1_reg_2648[10:6] <= 5'b00000;
    zext_ln59_reg_2658[31:2] <= 30'b000000000000000000000000000000;
end

endmodule //pw_layer2
