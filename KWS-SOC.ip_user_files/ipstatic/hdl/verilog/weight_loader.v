// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module weight_loader (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        weight_in_TDATA,
        weight_in_TVALID,
        weight_in_TREADY,
        weight_in_TLAST,
        dw_weight1_0_read,
        dw_weight1_1_read,
        dw_weight1_2_read,
        pw_weight1_address0,
        pw_weight1_ce0,
        pw_weight1_we0,
        pw_weight1_d0,
        bn_bias1_address0,
        bn_bias1_ce0,
        bn_bias1_we0,
        bn_bias1_d0,
        weights_ru_address0,
        weights_ru_ce0,
        weights_ru_we0,
        weights_ru_d0,
        weights_rw_address0,
        weights_rw_ce0,
        weights_rw_we0,
        weights_rw_d0,
        bias_r_address0,
        bias_r_ce0,
        bias_r_we0,
        bias_r_d0,
        weights_zu_address0,
        weights_zu_ce0,
        weights_zu_we0,
        weights_zu_d0,
        weights_zw_address0,
        weights_zw_ce0,
        weights_zw_we0,
        weights_zw_d0,
        bias_z_address0,
        bias_z_ce0,
        bias_z_we0,
        bias_z_d0,
        weights_hu_address0,
        weights_hu_ce0,
        weights_hu_we0,
        weights_hu_d0,
        weights_hw_address0,
        weights_hw_ce0,
        weights_hw_we0,
        weights_hw_d0,
        bias_h_address0,
        bias_h_ce0,
        bias_h_we0,
        bias_h_d0,
        fc_weights1_address0,
        fc_weights1_ce0,
        fc_weights1_we0,
        fc_weights1_d0,
        fc_bias1_address0,
        fc_bias1_ce0,
        fc_bias1_we0,
        fc_bias1_d0,
        fc_weights2_address0,
        fc_weights2_ce0,
        fc_weights2_we0,
        fc_weights2_d0,
        fc_bias2_address0,
        fc_bias2_ce0,
        fc_bias2_we0,
        fc_bias2_d0,
        ap_return_0,
        ap_return_1,
        ap_return_2
);

parameter    ap_ST_fsm_state1 = 33'd1;
parameter    ap_ST_fsm_pp0_stage0 = 33'd2;
parameter    ap_ST_fsm_state4 = 33'd4;
parameter    ap_ST_fsm_pp1_stage0 = 33'd8;
parameter    ap_ST_fsm_state7 = 33'd16;
parameter    ap_ST_fsm_pp2_stage0 = 33'd32;
parameter    ap_ST_fsm_state10 = 33'd64;
parameter    ap_ST_fsm_pp3_stage0 = 33'd128;
parameter    ap_ST_fsm_state13 = 33'd256;
parameter    ap_ST_fsm_pp4_stage0 = 33'd512;
parameter    ap_ST_fsm_state16 = 33'd1024;
parameter    ap_ST_fsm_pp5_stage0 = 33'd2048;
parameter    ap_ST_fsm_state19 = 33'd4096;
parameter    ap_ST_fsm_pp6_stage0 = 33'd8192;
parameter    ap_ST_fsm_state22 = 33'd16384;
parameter    ap_ST_fsm_pp7_stage0 = 33'd32768;
parameter    ap_ST_fsm_state25 = 33'd65536;
parameter    ap_ST_fsm_pp8_stage0 = 33'd131072;
parameter    ap_ST_fsm_state28 = 33'd262144;
parameter    ap_ST_fsm_pp9_stage0 = 33'd524288;
parameter    ap_ST_fsm_state31 = 33'd1048576;
parameter    ap_ST_fsm_pp10_stage0 = 33'd2097152;
parameter    ap_ST_fsm_state34 = 33'd4194304;
parameter    ap_ST_fsm_pp11_stage0 = 33'd8388608;
parameter    ap_ST_fsm_state37 = 33'd16777216;
parameter    ap_ST_fsm_pp12_stage0 = 33'd33554432;
parameter    ap_ST_fsm_state40 = 33'd67108864;
parameter    ap_ST_fsm_pp13_stage0 = 33'd134217728;
parameter    ap_ST_fsm_state43 = 33'd268435456;
parameter    ap_ST_fsm_pp14_stage0 = 33'd536870912;
parameter    ap_ST_fsm_state46 = 33'd1073741824;
parameter    ap_ST_fsm_pp15_stage0 = 33'd2147483648;
parameter    ap_ST_fsm_state49 = 33'd4294967296;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] weight_in_TDATA;
input   weight_in_TVALID;
output   weight_in_TREADY;
input   weight_in_TLAST;
input  [15:0] dw_weight1_0_read;
input  [15:0] dw_weight1_1_read;
input  [15:0] dw_weight1_2_read;
output  [3:0] pw_weight1_address0;
output   pw_weight1_ce0;
output   pw_weight1_we0;
output  [15:0] pw_weight1_d0;
output  [3:0] bn_bias1_address0;
output   bn_bias1_ce0;
output   bn_bias1_we0;
output  [15:0] bn_bias1_d0;
output  [12:0] weights_ru_address0;
output   weights_ru_ce0;
output   weights_ru_we0;
output  [15:0] weights_ru_d0;
output  [11:0] weights_rw_address0;
output   weights_rw_ce0;
output   weights_rw_we0;
output  [15:0] weights_rw_d0;
output  [5:0] bias_r_address0;
output   bias_r_ce0;
output   bias_r_we0;
output  [15:0] bias_r_d0;
output  [12:0] weights_zu_address0;
output   weights_zu_ce0;
output   weights_zu_we0;
output  [15:0] weights_zu_d0;
output  [11:0] weights_zw_address0;
output   weights_zw_ce0;
output   weights_zw_we0;
output  [15:0] weights_zw_d0;
output  [5:0] bias_z_address0;
output   bias_z_ce0;
output   bias_z_we0;
output  [15:0] bias_z_d0;
output  [12:0] weights_hu_address0;
output   weights_hu_ce0;
output   weights_hu_we0;
output  [15:0] weights_hu_d0;
output  [11:0] weights_hw_address0;
output   weights_hw_ce0;
output   weights_hw_we0;
output  [15:0] weights_hw_d0;
output  [5:0] bias_h_address0;
output   bias_h_ce0;
output   bias_h_we0;
output  [15:0] bias_h_d0;
output  [11:0] fc_weights1_address0;
output   fc_weights1_ce0;
output   fc_weights1_we0;
output  [15:0] fc_weights1_d0;
output  [5:0] fc_bias1_address0;
output   fc_bias1_ce0;
output   fc_bias1_we0;
output  [15:0] fc_bias1_d0;
output  [9:0] fc_weights2_address0;
output   fc_weights2_ce0;
output   fc_weights2_we0;
output  [15:0] fc_weights2_d0;
output  [3:0] fc_bias2_address0;
output   fc_bias2_ce0;
output   fc_bias2_we0;
output  [15:0] fc_bias2_d0;
output  [15:0] ap_return_0;
output  [15:0] ap_return_1;
output  [15:0] ap_return_2;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg weight_in_TREADY;
reg pw_weight1_ce0;
reg pw_weight1_we0;
reg bn_bias1_ce0;
reg bn_bias1_we0;
reg weights_ru_ce0;
reg weights_ru_we0;
reg weights_rw_ce0;
reg weights_rw_we0;
reg bias_r_ce0;
reg bias_r_we0;
reg weights_zu_ce0;
reg weights_zu_we0;
reg weights_zw_ce0;
reg weights_zw_we0;
reg bias_z_ce0;
reg bias_z_we0;
reg weights_hu_ce0;
reg weights_hu_we0;
reg weights_hw_ce0;
reg weights_hw_we0;
reg bias_h_ce0;
reg bias_h_we0;
reg fc_weights1_ce0;
reg fc_weights1_we0;
reg fc_bias1_ce0;
reg fc_bias1_we0;
reg fc_weights2_ce0;
reg fc_weights2_we0;
reg fc_bias2_ce0;
reg fc_bias2_we0;

(* fsm_encoding = "none" *) reg   [32:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    weight_in_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
wire   [0:0] icmp_ln32_fu_812_p2;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_pp1_stage0;
wire   [0:0] icmp_ln39_fu_854_p2;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_pp2_stage0;
wire   [0:0] icmp_ln46_fu_871_p2;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter0;
wire    ap_block_pp3_stage0;
wire   [0:0] icmp_ln53_fu_888_p2;
wire    ap_CS_fsm_pp4_stage0;
reg    ap_enable_reg_pp4_iter0;
wire    ap_block_pp4_stage0;
wire   [0:0] icmp_ln62_fu_959_p2;
wire    ap_CS_fsm_pp5_stage0;
reg    ap_enable_reg_pp5_iter0;
wire    ap_block_pp5_stage0;
wire   [0:0] icmp_ln71_fu_1030_p2;
wire    ap_CS_fsm_pp6_stage0;
reg    ap_enable_reg_pp6_iter0;
wire    ap_block_pp6_stage0;
wire   [0:0] icmp_ln79_fu_1047_p2;
wire    ap_CS_fsm_pp7_stage0;
reg    ap_enable_reg_pp7_iter0;
wire    ap_block_pp7_stage0;
wire   [0:0] icmp_ln88_fu_1118_p2;
wire    ap_CS_fsm_pp8_stage0;
reg    ap_enable_reg_pp8_iter0;
wire    ap_block_pp8_stage0;
wire   [0:0] icmp_ln97_fu_1189_p2;
wire    ap_CS_fsm_pp9_stage0;
reg    ap_enable_reg_pp9_iter0;
wire    ap_block_pp9_stage0;
wire   [0:0] icmp_ln105_fu_1206_p2;
wire    ap_CS_fsm_pp10_stage0;
reg    ap_enable_reg_pp10_iter0;
wire    ap_block_pp10_stage0;
wire   [0:0] icmp_ln114_fu_1277_p2;
wire    ap_CS_fsm_pp11_stage0;
reg    ap_enable_reg_pp11_iter0;
wire    ap_block_pp11_stage0;
wire   [0:0] icmp_ln123_fu_1348_p2;
wire    ap_CS_fsm_pp12_stage0;
reg    ap_enable_reg_pp12_iter0;
wire    ap_block_pp12_stage0;
wire   [0:0] icmp_ln131_fu_1365_p2;
wire    ap_CS_fsm_pp13_stage0;
reg    ap_enable_reg_pp13_iter0;
wire    ap_block_pp13_stage0;
wire   [0:0] icmp_ln141_fu_1436_p2;
wire    ap_CS_fsm_pp14_stage0;
reg    ap_enable_reg_pp14_iter0;
wire    ap_block_pp14_stage0;
wire   [0:0] icmp_ln149_fu_1453_p2;
wire    ap_CS_fsm_pp15_stage0;
reg    ap_enable_reg_pp15_iter0;
wire    ap_block_pp15_stage0;
wire   [0:0] icmp_ln158_fu_1537_p2;
reg   [1:0] j_0_reg_409;
reg   [3:0] j1_0_reg_421;
reg   [3:0] i_0_reg_433;
reg   [12:0] indvar_flatten_reg_445;
reg   [6:0] i2_0_reg_456;
reg   [6:0] j3_0_reg_467;
reg   [12:0] indvar_flatten6_reg_478;
reg   [6:0] i4_0_reg_489;
reg   [6:0] j5_0_reg_500;
reg   [6:0] i6_0_reg_511;
reg   [12:0] indvar_flatten13_reg_523;
reg   [6:0] i7_0_reg_534;
reg   [6:0] j8_0_reg_545;
reg   [12:0] indvar_flatten20_reg_556;
reg   [6:0] i9_0_reg_567;
reg   [6:0] j10_0_reg_578;
reg   [6:0] i11_0_reg_589;
reg   [12:0] indvar_flatten27_reg_601;
reg   [6:0] i12_0_reg_612;
reg   [6:0] j13_0_reg_623;
reg   [12:0] indvar_flatten34_reg_634;
reg   [6:0] i14_0_reg_645;
reg   [6:0] j15_0_reg_656;
reg   [6:0] i16_0_reg_667;
reg   [12:0] indvar_flatten41_reg_679;
reg   [6:0] i17_0_reg_690;
reg   [6:0] j18_0_reg_701;
reg   [6:0] i19_0_reg_712;
reg   [9:0] indvar_flatten48_reg_724;
reg   [6:0] i20_0_reg_735;
reg   [3:0] j21_0_reg_746;
reg   [3:0] i22_0_reg_757;
reg    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
reg    ap_block_state5_pp1_stage0_iter0;
wire    ap_block_state6_pp1_stage0_iter1;
reg    ap_block_pp1_stage0_11001;
reg    ap_block_state8_pp2_stage0_iter0;
wire    ap_block_state9_pp2_stage0_iter1;
reg    ap_block_pp2_stage0_11001;
reg    ap_block_state11_pp3_stage0_iter0;
wire    ap_block_state12_pp3_stage0_iter1;
reg    ap_block_pp3_stage0_11001;
reg    ap_block_state14_pp4_stage0_iter0;
wire    ap_block_state15_pp4_stage0_iter1;
reg    ap_block_pp4_stage0_11001;
reg    ap_block_state17_pp5_stage0_iter0;
wire    ap_block_state18_pp5_stage0_iter1;
reg    ap_block_pp5_stage0_11001;
reg    ap_block_state20_pp6_stage0_iter0;
wire    ap_block_state21_pp6_stage0_iter1;
reg    ap_block_pp6_stage0_11001;
reg    ap_block_state23_pp7_stage0_iter0;
wire    ap_block_state24_pp7_stage0_iter1;
reg    ap_block_pp7_stage0_11001;
reg    ap_block_state26_pp8_stage0_iter0;
wire    ap_block_state27_pp8_stage0_iter1;
reg    ap_block_pp8_stage0_11001;
reg    ap_block_state29_pp9_stage0_iter0;
wire    ap_block_state30_pp9_stage0_iter1;
reg    ap_block_pp9_stage0_11001;
reg    ap_block_state32_pp10_stage0_iter0;
wire    ap_block_state33_pp10_stage0_iter1;
reg    ap_block_pp10_stage0_11001;
reg    ap_block_state35_pp11_stage0_iter0;
wire    ap_block_state36_pp11_stage0_iter1;
reg    ap_block_pp11_stage0_11001;
reg    ap_block_state38_pp12_stage0_iter0;
wire    ap_block_state39_pp12_stage0_iter1;
reg    ap_block_pp12_stage0_11001;
reg    ap_block_state41_pp13_stage0_iter0;
wire    ap_block_state42_pp13_stage0_iter1;
reg    ap_block_pp13_stage0_11001;
reg    ap_block_state44_pp14_stage0_iter0;
wire    ap_block_state45_pp14_stage0_iter1;
reg    ap_block_pp14_stage0_11001;
reg    ap_block_state47_pp15_stage0_iter0;
wire    ap_block_state48_pp15_stage0_iter1;
reg    ap_block_pp15_stage0_11001;
reg   [0:0] icmp_ln32_reg_1665;
wire   [1:0] j_1_fu_818_p2;
reg   [1:0] j_1_reg_1669;
reg   [0:0] icmp_ln39_reg_1674;
wire   [3:0] j_fu_860_p2;
reg   [3:0] j_reg_1678;
reg   [0:0] icmp_ln46_reg_1683;
wire   [3:0] i_fu_877_p2;
reg   [3:0] i_reg_1687;
reg   [0:0] icmp_ln53_reg_1692;
wire   [12:0] add_ln53_fu_894_p2;
wire   [6:0] select_ln57_fu_912_p3;
reg   [6:0] select_ln57_reg_1701;
wire   [6:0] select_ln57_1_fu_920_p3;
reg   [6:0] select_ln57_1_reg_1706;
wire   [6:0] j_2_fu_928_p2;
reg   [0:0] icmp_ln62_reg_1717;
wire   [12:0] add_ln62_fu_965_p2;
wire   [6:0] select_ln66_fu_983_p3;
reg   [6:0] select_ln66_reg_1726;
wire   [6:0] select_ln66_1_fu_991_p3;
reg   [6:0] select_ln66_1_reg_1731;
wire   [6:0] j_3_fu_999_p2;
reg   [0:0] icmp_ln71_reg_1742;
wire   [6:0] i_5_fu_1036_p2;
reg   [6:0] i_5_reg_1746;
reg   [0:0] icmp_ln79_reg_1751;
wire   [12:0] add_ln79_fu_1053_p2;
wire   [6:0] select_ln83_fu_1071_p3;
reg   [6:0] select_ln83_reg_1760;
wire   [6:0] select_ln83_1_fu_1079_p3;
reg   [6:0] select_ln83_1_reg_1765;
wire   [6:0] j_4_fu_1087_p2;
reg   [0:0] icmp_ln88_reg_1776;
wire   [12:0] add_ln88_fu_1124_p2;
wire   [6:0] select_ln92_fu_1142_p3;
reg   [6:0] select_ln92_reg_1785;
wire   [6:0] select_ln92_1_fu_1150_p3;
reg   [6:0] select_ln92_1_reg_1790;
wire   [6:0] j_5_fu_1158_p2;
reg   [0:0] icmp_ln97_reg_1801;
wire   [6:0] i_10_fu_1195_p2;
reg   [6:0] i_10_reg_1805;
reg   [0:0] icmp_ln105_reg_1810;
wire   [12:0] add_ln105_fu_1212_p2;
wire   [6:0] select_ln109_fu_1230_p3;
reg   [6:0] select_ln109_reg_1819;
wire   [6:0] select_ln109_1_fu_1238_p3;
reg   [6:0] select_ln109_1_reg_1824;
wire   [6:0] j_6_fu_1246_p2;
reg   [0:0] icmp_ln114_reg_1835;
wire   [12:0] add_ln114_fu_1283_p2;
wire   [6:0] select_ln118_fu_1301_p3;
reg   [6:0] select_ln118_reg_1844;
wire   [6:0] select_ln118_1_fu_1309_p3;
reg   [6:0] select_ln118_1_reg_1849;
wire   [6:0] j_7_fu_1317_p2;
reg   [0:0] icmp_ln123_reg_1860;
wire   [6:0] i_15_fu_1354_p2;
reg   [6:0] i_15_reg_1864;
reg   [0:0] icmp_ln131_reg_1869;
wire   [12:0] add_ln131_fu_1371_p2;
wire   [6:0] select_ln135_fu_1389_p3;
reg   [6:0] select_ln135_reg_1878;
wire   [6:0] select_ln135_1_fu_1397_p3;
reg   [6:0] select_ln135_1_reg_1883;
wire   [6:0] j_8_fu_1405_p2;
reg   [0:0] icmp_ln141_reg_1894;
wire   [6:0] i_18_fu_1442_p2;
reg   [6:0] i_18_reg_1898;
reg   [0:0] icmp_ln149_reg_1903;
wire   [9:0] add_ln149_fu_1459_p2;
wire   [3:0] select_ln153_fu_1477_p3;
reg   [3:0] select_ln153_reg_1912;
wire   [6:0] select_ln153_1_fu_1485_p3;
reg   [6:0] select_ln153_1_reg_1917;
wire   [3:0] j_9_fu_1493_p2;
reg   [0:0] icmp_ln158_reg_1929;
wire   [3:0] i_21_fu_1543_p2;
reg   [3:0] i_21_reg_1933;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
wire    ap_CS_fsm_state4;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state5;
reg    ap_enable_reg_pp1_iter1;
wire    ap_CS_fsm_state7;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state8;
reg    ap_enable_reg_pp2_iter1;
wire    ap_CS_fsm_state10;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state11;
reg    ap_enable_reg_pp3_iter1;
wire    ap_CS_fsm_state13;
reg    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state14;
reg    ap_enable_reg_pp4_iter1;
wire    ap_CS_fsm_state16;
reg    ap_block_pp5_stage0_subdone;
reg    ap_condition_pp5_exit_iter0_state17;
reg    ap_enable_reg_pp5_iter1;
wire    ap_CS_fsm_state19;
reg    ap_block_pp6_stage0_subdone;
reg    ap_condition_pp6_exit_iter0_state20;
reg    ap_enable_reg_pp6_iter1;
wire    ap_CS_fsm_state22;
reg    ap_block_pp7_stage0_subdone;
reg    ap_condition_pp7_exit_iter0_state23;
reg    ap_enable_reg_pp7_iter1;
wire    ap_CS_fsm_state25;
reg    ap_block_pp8_stage0_subdone;
reg    ap_condition_pp8_exit_iter0_state26;
reg    ap_enable_reg_pp8_iter1;
wire    ap_CS_fsm_state28;
reg    ap_block_pp9_stage0_subdone;
reg    ap_condition_pp9_exit_iter0_state29;
reg    ap_enable_reg_pp9_iter1;
wire    ap_CS_fsm_state31;
reg    ap_block_pp10_stage0_subdone;
reg    ap_condition_pp10_exit_iter0_state32;
reg    ap_enable_reg_pp10_iter1;
wire    ap_CS_fsm_state34;
reg    ap_block_pp11_stage0_subdone;
reg    ap_condition_pp11_exit_iter0_state35;
reg    ap_enable_reg_pp11_iter1;
wire    ap_CS_fsm_state37;
reg    ap_block_pp12_stage0_subdone;
reg    ap_condition_pp12_exit_iter0_state38;
reg    ap_enable_reg_pp12_iter1;
wire    ap_CS_fsm_state40;
reg    ap_block_pp13_stage0_subdone;
reg    ap_condition_pp13_exit_iter0_state41;
reg    ap_enable_reg_pp13_iter1;
wire    ap_CS_fsm_state43;
reg    ap_block_pp14_stage0_subdone;
reg    ap_condition_pp14_exit_iter0_state44;
reg    ap_enable_reg_pp14_iter1;
wire    ap_CS_fsm_state46;
reg    ap_block_pp15_stage0_subdone;
reg    ap_condition_pp15_exit_iter0_state47;
reg    ap_enable_reg_pp15_iter1;
reg   [1:0] ap_phi_mux_j_0_phi_fu_413_p4;
reg   [3:0] ap_phi_mux_j1_0_phi_fu_425_p4;
reg   [3:0] ap_phi_mux_i_0_phi_fu_437_p4;
reg   [6:0] ap_phi_mux_i2_0_phi_fu_460_p4;
reg   [6:0] ap_phi_mux_i4_0_phi_fu_493_p4;
reg   [6:0] ap_phi_mux_i6_0_phi_fu_515_p4;
reg   [6:0] ap_phi_mux_i7_0_phi_fu_538_p4;
reg   [6:0] ap_phi_mux_i9_0_phi_fu_571_p4;
reg   [6:0] ap_phi_mux_i11_0_phi_fu_593_p4;
reg   [6:0] ap_phi_mux_i12_0_phi_fu_616_p4;
reg   [6:0] ap_phi_mux_i14_0_phi_fu_649_p4;
reg   [6:0] ap_phi_mux_i16_0_phi_fu_671_p4;
reg   [6:0] ap_phi_mux_i17_0_phi_fu_694_p4;
reg   [6:0] ap_phi_mux_i19_0_phi_fu_716_p4;
reg   [6:0] ap_phi_mux_i20_0_phi_fu_739_p4;
reg   [3:0] ap_phi_mux_i22_0_phi_fu_761_p4;
wire   [63:0] zext_ln42_fu_866_p1;
wire   [63:0] zext_ln49_fu_883_p1;
wire   [63:0] zext_ln57_1_fu_954_p1;
wire   [63:0] zext_ln66_1_fu_1025_p1;
wire   [63:0] zext_ln74_fu_1042_p1;
wire   [63:0] zext_ln83_1_fu_1113_p1;
wire   [63:0] zext_ln92_1_fu_1184_p1;
wire   [63:0] zext_ln100_fu_1201_p1;
wire   [63:0] zext_ln109_1_fu_1272_p1;
wire   [63:0] zext_ln118_1_fu_1343_p1;
wire   [63:0] zext_ln126_fu_1360_p1;
wire   [63:0] zext_ln135_1_fu_1431_p1;
wire   [63:0] zext_ln144_fu_1448_p1;
wire  signed [63:0] sext_ln153_fu_1532_p1;
wire   [63:0] zext_ln161_fu_1549_p1;
reg   [15:0] dw_weight12_03_fu_164;
wire   [15:0] grp_fu_769_p1;
wire    ap_CS_fsm_state49;
reg   [0:0] write_flag_0_fu_168;
reg   [0:0] write_flag8_0_fu_172;
reg   [15:0] dw_weight116_04_fu_176;
reg   [15:0] dw_weight1_05_fu_180;
reg   [0:0] write_flag4_0_fu_184;
wire   [0:0] icmp_ln54_fu_906_p2;
wire   [6:0] i_2_fu_900_p2;
wire   [12:0] tmp_30_fu_934_p3;
wire   [13:0] zext_ln57_fu_945_p1;
wire   [13:0] zext_ln54_fu_941_p1;
wire   [13:0] add_ln57_fu_948_p2;
wire   [0:0] icmp_ln63_fu_977_p2;
wire   [6:0] i_4_fu_971_p2;
wire   [12:0] tmp_31_fu_1005_p3;
wire   [13:0] zext_ln66_fu_1016_p1;
wire   [13:0] zext_ln63_fu_1012_p1;
wire   [13:0] add_ln66_fu_1019_p2;
wire   [0:0] icmp_ln80_fu_1065_p2;
wire   [6:0] i_7_fu_1059_p2;
wire   [12:0] tmp_32_fu_1093_p3;
wire   [13:0] zext_ln83_fu_1104_p1;
wire   [13:0] zext_ln80_fu_1100_p1;
wire   [13:0] add_ln83_fu_1107_p2;
wire   [0:0] icmp_ln89_fu_1136_p2;
wire   [6:0] i_9_fu_1130_p2;
wire   [12:0] tmp_33_fu_1164_p3;
wire   [13:0] zext_ln92_fu_1175_p1;
wire   [13:0] zext_ln89_fu_1171_p1;
wire   [13:0] add_ln92_fu_1178_p2;
wire   [0:0] icmp_ln106_fu_1224_p2;
wire   [6:0] i_12_fu_1218_p2;
wire   [12:0] tmp_34_fu_1252_p3;
wire   [13:0] zext_ln109_fu_1263_p1;
wire   [13:0] zext_ln106_fu_1259_p1;
wire   [13:0] add_ln109_fu_1266_p2;
wire   [0:0] icmp_ln115_fu_1295_p2;
wire   [6:0] i_14_fu_1289_p2;
wire   [12:0] tmp_35_fu_1323_p3;
wire   [13:0] zext_ln118_fu_1334_p1;
wire   [13:0] zext_ln115_fu_1330_p1;
wire   [13:0] add_ln118_fu_1337_p2;
wire   [0:0] icmp_ln132_fu_1383_p2;
wire   [6:0] i_17_fu_1377_p2;
wire   [12:0] tmp_36_fu_1411_p3;
wire   [13:0] zext_ln135_fu_1422_p1;
wire   [13:0] zext_ln132_fu_1418_p1;
wire   [13:0] add_ln135_fu_1425_p2;
wire   [0:0] icmp_ln150_fu_1471_p2;
wire   [6:0] i_20_fu_1465_p2;
wire   [8:0] tmp_38_fu_1506_p3;
wire   [10:0] tmp_37_fu_1499_p3;
wire   [10:0] zext_ln153_fu_1513_p1;
wire   [10:0] sub_ln153_fu_1517_p2;
wire   [10:0] zext_ln153_1_fu_1523_p1;
wire   [10:0] add_ln153_fu_1526_p2;
wire   [15:0] select_ln165_fu_1572_p3;
wire   [15:0] select_ln165_1_fu_1579_p3;
wire   [15:0] select_ln165_2_fu_1586_p3;
reg    grp_fu_769_ce;
reg   [32:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
reg    ap_idle_pp6;
wire    ap_enable_pp6;
reg    ap_idle_pp7;
wire    ap_enable_pp7;
reg    ap_idle_pp8;
wire    ap_enable_pp8;
reg    ap_idle_pp9;
wire    ap_enable_pp9;
reg    ap_idle_pp10;
wire    ap_enable_pp10;
reg    ap_idle_pp11;
wire    ap_enable_pp11;
reg    ap_idle_pp12;
wire    ap_enable_pp12;
reg    ap_idle_pp13;
wire    ap_enable_pp13;
reg    ap_idle_pp14;
wire    ap_enable_pp14;
reg    ap_idle_pp15;
wire    ap_enable_pp15;

// power-on initialization
initial begin
#0 ap_CS_fsm = 33'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp6_iter0 = 1'b0;
#0 ap_enable_reg_pp7_iter0 = 1'b0;
#0 ap_enable_reg_pp8_iter0 = 1'b0;
#0 ap_enable_reg_pp9_iter0 = 1'b0;
#0 ap_enable_reg_pp10_iter0 = 1'b0;
#0 ap_enable_reg_pp11_iter0 = 1'b0;
#0 ap_enable_reg_pp12_iter0 = 1'b0;
#0 ap_enable_reg_pp13_iter0 = 1'b0;
#0 ap_enable_reg_pp14_iter0 = 1'b0;
#0 ap_enable_reg_pp15_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter1 = 1'b0;
#0 ap_enable_reg_pp7_iter1 = 1'b0;
#0 ap_enable_reg_pp8_iter1 = 1'b0;
#0 ap_enable_reg_pp9_iter1 = 1'b0;
#0 ap_enable_reg_pp10_iter1 = 1'b0;
#0 ap_enable_reg_pp11_iter1 = 1'b0;
#0 ap_enable_reg_pp12_iter1 = 1'b0;
#0 ap_enable_reg_pp13_iter1 = 1'b0;
#0 ap_enable_reg_pp14_iter1 = 1'b0;
#0 ap_enable_reg_pp15_iter1 = 1'b0;
end

kws_sptohp_32ns_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 16 ))
kws_sptohp_32ns_1bkb_U151(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(weight_in_TDATA),
    .ce(grp_fu_769_ce),
    .dout(grp_fu_769_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp10_stage0_subdone) & (1'b1 == ap_condition_pp10_exit_iter0_state32) & (1'b1 == ap_CS_fsm_pp10_stage0))) begin
            ap_enable_reg_pp10_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state31)) begin
            ap_enable_reg_pp10_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp10_stage0_subdone) & (1'b1 == ap_condition_pp10_exit_iter0_state32))) begin
            ap_enable_reg_pp10_iter1 <= (1'b1 ^ ap_condition_pp10_exit_iter0_state32);
        end else if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter1 <= ap_enable_reg_pp10_iter0;
        end else if ((1'b1 == ap_CS_fsm_state31)) begin
            ap_enable_reg_pp10_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp11_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp11_stage0_subdone) & (1'b1 == ap_condition_pp11_exit_iter0_state35) & (1'b1 == ap_CS_fsm_pp11_stage0))) begin
            ap_enable_reg_pp11_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state34)) begin
            ap_enable_reg_pp11_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp11_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp11_stage0_subdone) & (1'b1 == ap_condition_pp11_exit_iter0_state35))) begin
            ap_enable_reg_pp11_iter1 <= (1'b1 ^ ap_condition_pp11_exit_iter0_state35);
        end else if ((1'b0 == ap_block_pp11_stage0_subdone)) begin
            ap_enable_reg_pp11_iter1 <= ap_enable_reg_pp11_iter0;
        end else if ((1'b1 == ap_CS_fsm_state34)) begin
            ap_enable_reg_pp11_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp12_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp12_stage0_subdone) & (1'b1 == ap_condition_pp12_exit_iter0_state38) & (1'b1 == ap_CS_fsm_pp12_stage0))) begin
            ap_enable_reg_pp12_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state37)) begin
            ap_enable_reg_pp12_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp12_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp12_stage0_subdone) & (1'b1 == ap_condition_pp12_exit_iter0_state38))) begin
            ap_enable_reg_pp12_iter1 <= (1'b1 ^ ap_condition_pp12_exit_iter0_state38);
        end else if ((1'b0 == ap_block_pp12_stage0_subdone)) begin
            ap_enable_reg_pp12_iter1 <= ap_enable_reg_pp12_iter0;
        end else if ((1'b1 == ap_CS_fsm_state37)) begin
            ap_enable_reg_pp12_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp13_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp13_stage0_subdone) & (1'b1 == ap_condition_pp13_exit_iter0_state41) & (1'b1 == ap_CS_fsm_pp13_stage0))) begin
            ap_enable_reg_pp13_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state40)) begin
            ap_enable_reg_pp13_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp13_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp13_stage0_subdone) & (1'b1 == ap_condition_pp13_exit_iter0_state41))) begin
            ap_enable_reg_pp13_iter1 <= (1'b1 ^ ap_condition_pp13_exit_iter0_state41);
        end else if ((1'b0 == ap_block_pp13_stage0_subdone)) begin
            ap_enable_reg_pp13_iter1 <= ap_enable_reg_pp13_iter0;
        end else if ((1'b1 == ap_CS_fsm_state40)) begin
            ap_enable_reg_pp13_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp14_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp14_stage0_subdone) & (1'b1 == ap_CS_fsm_pp14_stage0) & (1'b1 == ap_condition_pp14_exit_iter0_state44))) begin
            ap_enable_reg_pp14_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state43)) begin
            ap_enable_reg_pp14_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp14_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp14_stage0_subdone) & (1'b1 == ap_condition_pp14_exit_iter0_state44))) begin
            ap_enable_reg_pp14_iter1 <= (1'b1 ^ ap_condition_pp14_exit_iter0_state44);
        end else if ((1'b0 == ap_block_pp14_stage0_subdone)) begin
            ap_enable_reg_pp14_iter1 <= ap_enable_reg_pp14_iter0;
        end else if ((1'b1 == ap_CS_fsm_state43)) begin
            ap_enable_reg_pp14_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp15_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp15_stage0) & (1'b1 == ap_condition_pp15_exit_iter0_state47) & (1'b0 == ap_block_pp15_stage0_subdone))) begin
            ap_enable_reg_pp15_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state46)) begin
            ap_enable_reg_pp15_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp15_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp15_exit_iter0_state47) & (1'b0 == ap_block_pp15_stage0_subdone))) begin
            ap_enable_reg_pp15_iter1 <= (1'b1 ^ ap_condition_pp15_exit_iter0_state47);
        end else if ((1'b0 == ap_block_pp15_stage0_subdone)) begin
            ap_enable_reg_pp15_iter1 <= ap_enable_reg_pp15_iter0;
        end else if ((1'b1 == ap_CS_fsm_state46)) begin
            ap_enable_reg_pp15_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state5) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state5))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state5);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state8) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state8))) begin
            ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state8);
        end else if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state11) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state11))) begin
            ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state11);
        end else if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_enable_reg_pp3_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_condition_pp4_exit_iter0_state14) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state13)) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_condition_pp4_exit_iter0_state14))) begin
            ap_enable_reg_pp4_iter1 <= (1'b1 ^ ap_condition_pp4_exit_iter0_state14);
        end else if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
        end else if ((1'b1 == ap_CS_fsm_state13)) begin
            ap_enable_reg_pp4_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp5_stage0_subdone) & (1'b1 == ap_condition_pp5_exit_iter0_state17) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state16)) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp5_stage0_subdone) & (1'b1 == ap_condition_pp5_exit_iter0_state17))) begin
            ap_enable_reg_pp5_iter1 <= (1'b1 ^ ap_condition_pp5_exit_iter0_state17);
        end else if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
        end else if ((1'b1 == ap_CS_fsm_state16)) begin
            ap_enable_reg_pp5_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp6_stage0_subdone) & (1'b1 == ap_condition_pp6_exit_iter0_state20) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
            ap_enable_reg_pp6_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state19)) begin
            ap_enable_reg_pp6_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp6_stage0_subdone) & (1'b1 == ap_condition_pp6_exit_iter0_state20))) begin
            ap_enable_reg_pp6_iter1 <= (1'b1 ^ ap_condition_pp6_exit_iter0_state20);
        end else if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
        end else if ((1'b1 == ap_CS_fsm_state19)) begin
            ap_enable_reg_pp6_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp7_stage0_subdone) & (1'b1 == ap_condition_pp7_exit_iter0_state23) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
            ap_enable_reg_pp7_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state22)) begin
            ap_enable_reg_pp7_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp7_stage0_subdone) & (1'b1 == ap_condition_pp7_exit_iter0_state23))) begin
            ap_enable_reg_pp7_iter1 <= (1'b1 ^ ap_condition_pp7_exit_iter0_state23);
        end else if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter1 <= ap_enable_reg_pp7_iter0;
        end else if ((1'b1 == ap_CS_fsm_state22)) begin
            ap_enable_reg_pp7_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp8_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp8_stage0_subdone) & (1'b1 == ap_condition_pp8_exit_iter0_state26) & (1'b1 == ap_CS_fsm_pp8_stage0))) begin
            ap_enable_reg_pp8_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state25)) begin
            ap_enable_reg_pp8_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp8_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp8_stage0_subdone) & (1'b1 == ap_condition_pp8_exit_iter0_state26))) begin
            ap_enable_reg_pp8_iter1 <= (1'b1 ^ ap_condition_pp8_exit_iter0_state26);
        end else if ((1'b0 == ap_block_pp8_stage0_subdone)) begin
            ap_enable_reg_pp8_iter1 <= ap_enable_reg_pp8_iter0;
        end else if ((1'b1 == ap_CS_fsm_state25)) begin
            ap_enable_reg_pp8_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp9_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp9_stage0_subdone) & (1'b1 == ap_condition_pp9_exit_iter0_state29) & (1'b1 == ap_CS_fsm_pp9_stage0))) begin
            ap_enable_reg_pp9_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state28)) begin
            ap_enable_reg_pp9_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp9_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp9_stage0_subdone) & (1'b1 == ap_condition_pp9_exit_iter0_state29))) begin
            ap_enable_reg_pp9_iter1 <= (1'b1 ^ ap_condition_pp9_exit_iter0_state29);
        end else if ((1'b0 == ap_block_pp9_stage0_subdone)) begin
            ap_enable_reg_pp9_iter1 <= ap_enable_reg_pp9_iter0;
        end else if ((1'b1 == ap_CS_fsm_state28)) begin
            ap_enable_reg_pp9_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        i11_0_reg_589 <= 7'd0;
    end else if (((1'b0 == ap_block_pp8_stage0_11001) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage0) & (icmp_ln97_reg_1801 == 1'd0))) begin
        i11_0_reg_589 <= i_10_reg_1805;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        i12_0_reg_612 <= 7'd0;
    end else if (((1'b0 == ap_block_pp9_stage0_11001) & (ap_enable_reg_pp9_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp9_stage0) & (icmp_ln105_reg_1810 == 1'd0))) begin
        i12_0_reg_612 <= select_ln109_1_reg_1824;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        i14_0_reg_645 <= 7'd0;
    end else if (((1'b0 == ap_block_pp10_stage0_11001) & (ap_enable_reg_pp10_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp10_stage0) & (icmp_ln114_reg_1835 == 1'd0))) begin
        i14_0_reg_645 <= select_ln118_1_reg_1849;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        i16_0_reg_667 <= 7'd0;
    end else if (((1'b0 == ap_block_pp11_stage0_11001) & (ap_enable_reg_pp11_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp11_stage0) & (icmp_ln123_reg_1860 == 1'd0))) begin
        i16_0_reg_667 <= i_15_reg_1864;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        i17_0_reg_690 <= 7'd0;
    end else if (((1'b0 == ap_block_pp12_stage0_11001) & (ap_enable_reg_pp12_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp12_stage0) & (icmp_ln131_reg_1869 == 1'd0))) begin
        i17_0_reg_690 <= select_ln135_1_reg_1883;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        i19_0_reg_712 <= 7'd0;
    end else if (((1'b0 == ap_block_pp13_stage0_11001) & (ap_enable_reg_pp13_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp13_stage0) & (icmp_ln141_reg_1894 == 1'd0))) begin
        i19_0_reg_712 <= i_18_reg_1898;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        i20_0_reg_735 <= 7'd0;
    end else if (((1'b0 == ap_block_pp14_stage0_11001) & (1'b1 == ap_CS_fsm_pp14_stage0) & (ap_enable_reg_pp14_iter1 == 1'b1) & (icmp_ln149_reg_1903 == 1'd0))) begin
        i20_0_reg_735 <= select_ln153_1_reg_1917;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        i22_0_reg_757 <= 4'd0;
    end else if (((1'b0 == ap_block_pp15_stage0_11001) & (1'b1 == ap_CS_fsm_pp15_stage0) & (ap_enable_reg_pp15_iter1 == 1'b1) & (icmp_ln158_reg_1929 == 1'd0))) begin
        i22_0_reg_757 <= i_21_reg_1933;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        i2_0_reg_456 <= 7'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln53_reg_1692 == 1'd0))) begin
        i2_0_reg_456 <= select_ln57_1_reg_1706;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        i4_0_reg_489 <= 7'd0;
    end else if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln62_reg_1717 == 1'd0))) begin
        i4_0_reg_489 <= select_ln66_1_reg_1731;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        i6_0_reg_511 <= 7'd0;
    end else if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (icmp_ln71_reg_1742 == 1'd0))) begin
        i6_0_reg_511 <= i_5_reg_1746;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        i7_0_reg_534 <= 7'd0;
    end else if (((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (icmp_ln79_reg_1751 == 1'd0))) begin
        i7_0_reg_534 <= select_ln83_1_reg_1765;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        i9_0_reg_567 <= 7'd0;
    end else if (((1'b0 == ap_block_pp7_stage0_11001) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (icmp_ln88_reg_1776 == 1'd0))) begin
        i9_0_reg_567 <= select_ln92_1_reg_1790;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        i_0_reg_433 <= 4'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln46_reg_1683 == 1'd0))) begin
        i_0_reg_433 <= i_reg_1687;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        indvar_flatten13_reg_523 <= 13'd0;
    end else if (((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (icmp_ln79_fu_1047_p2 == 1'd0))) begin
        indvar_flatten13_reg_523 <= add_ln79_fu_1053_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        indvar_flatten20_reg_556 <= 13'd0;
    end else if (((1'b0 == ap_block_pp7_stage0_11001) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (icmp_ln88_fu_1118_p2 == 1'd0))) begin
        indvar_flatten20_reg_556 <= add_ln88_fu_1124_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        indvar_flatten27_reg_601 <= 13'd0;
    end else if (((1'b0 == ap_block_pp9_stage0_11001) & (ap_enable_reg_pp9_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp9_stage0) & (icmp_ln105_fu_1206_p2 == 1'd0))) begin
        indvar_flatten27_reg_601 <= add_ln105_fu_1212_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        indvar_flatten34_reg_634 <= 13'd0;
    end else if (((1'b0 == ap_block_pp10_stage0_11001) & (ap_enable_reg_pp10_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp10_stage0) & (icmp_ln114_fu_1277_p2 == 1'd0))) begin
        indvar_flatten34_reg_634 <= add_ln114_fu_1283_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        indvar_flatten41_reg_679 <= 13'd0;
    end else if (((1'b0 == ap_block_pp12_stage0_11001) & (ap_enable_reg_pp12_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp12_stage0) & (icmp_ln131_fu_1365_p2 == 1'd0))) begin
        indvar_flatten41_reg_679 <= add_ln131_fu_1371_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        indvar_flatten48_reg_724 <= 10'd0;
    end else if (((1'b0 == ap_block_pp14_stage0_11001) & (ap_enable_reg_pp14_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp14_stage0) & (icmp_ln149_fu_1453_p2 == 1'd0))) begin
        indvar_flatten48_reg_724 <= add_ln149_fu_1459_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        indvar_flatten6_reg_478 <= 13'd0;
    end else if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln62_fu_959_p2 == 1'd0))) begin
        indvar_flatten6_reg_478 <= add_ln62_fu_965_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        indvar_flatten_reg_445 <= 13'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln53_fu_888_p2 == 1'd0))) begin
        indvar_flatten_reg_445 <= add_ln53_fu_894_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        j10_0_reg_578 <= 7'd0;
    end else if (((1'b0 == ap_block_pp7_stage0_11001) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (icmp_ln88_fu_1118_p2 == 1'd0))) begin
        j10_0_reg_578 <= j_5_fu_1158_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        j13_0_reg_623 <= 7'd0;
    end else if (((1'b0 == ap_block_pp9_stage0_11001) & (ap_enable_reg_pp9_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp9_stage0) & (icmp_ln105_fu_1206_p2 == 1'd0))) begin
        j13_0_reg_623 <= j_6_fu_1246_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        j15_0_reg_656 <= 7'd0;
    end else if (((1'b0 == ap_block_pp10_stage0_11001) & (ap_enable_reg_pp10_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp10_stage0) & (icmp_ln114_fu_1277_p2 == 1'd0))) begin
        j15_0_reg_656 <= j_7_fu_1317_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        j18_0_reg_701 <= 7'd0;
    end else if (((1'b0 == ap_block_pp12_stage0_11001) & (ap_enable_reg_pp12_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp12_stage0) & (icmp_ln131_fu_1365_p2 == 1'd0))) begin
        j18_0_reg_701 <= j_8_fu_1405_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        j1_0_reg_421 <= 4'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln39_reg_1674 == 1'd0))) begin
        j1_0_reg_421 <= j_reg_1678;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        j21_0_reg_746 <= 4'd0;
    end else if (((1'b0 == ap_block_pp14_stage0_11001) & (ap_enable_reg_pp14_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp14_stage0) & (icmp_ln149_fu_1453_p2 == 1'd0))) begin
        j21_0_reg_746 <= j_9_fu_1493_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        j3_0_reg_467 <= 7'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln53_fu_888_p2 == 1'd0))) begin
        j3_0_reg_467 <= j_2_fu_928_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        j5_0_reg_500 <= 7'd0;
    end else if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln62_fu_959_p2 == 1'd0))) begin
        j5_0_reg_500 <= j_3_fu_999_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        j8_0_reg_545 <= 7'd0;
    end else if (((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (icmp_ln79_fu_1047_p2 == 1'd0))) begin
        j8_0_reg_545 <= j_4_fu_1087_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln32_reg_1665 == 1'd0))) begin
        j_0_reg_409 <= j_1_reg_1669;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        j_0_reg_409 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (j_0_reg_409 == 2'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        write_flag4_0_fu_184 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag4_0_fu_184 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(j_0_reg_409 == 2'd1) & ~(j_0_reg_409 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        write_flag8_0_fu_172 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag8_0_fu_172 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (j_0_reg_409 == 2'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        write_flag_0_fu_168 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag_0_fu_168 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (j_0_reg_409 == 2'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dw_weight116_04_fu_176 <= grp_fu_769_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(j_0_reg_409 == 2'd1) & ~(j_0_reg_409 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dw_weight12_03_fu_164 <= grp_fu_769_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (j_0_reg_409 == 2'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dw_weight1_05_fu_180 <= grp_fu_769_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp8_stage0_11001) & (ap_enable_reg_pp8_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage0))) begin
        i_10_reg_1805 <= i_10_fu_1195_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp11_stage0_11001) & (ap_enable_reg_pp11_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp11_stage0))) begin
        i_15_reg_1864 <= i_15_fu_1354_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp13_stage0_11001) & (ap_enable_reg_pp13_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp13_stage0))) begin
        i_18_reg_1898 <= i_18_fu_1442_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp15_stage0_11001) & (ap_enable_reg_pp15_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp15_stage0))) begin
        i_21_reg_1933 <= i_21_fu_1543_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        i_5_reg_1746 <= i_5_fu_1036_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        i_reg_1687 <= i_fu_877_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp9_stage0_11001) & (1'b1 == ap_CS_fsm_pp9_stage0))) begin
        icmp_ln105_reg_1810 <= icmp_ln105_fu_1206_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp10_stage0_11001) & (1'b1 == ap_CS_fsm_pp10_stage0))) begin
        icmp_ln114_reg_1835 <= icmp_ln114_fu_1277_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp11_stage0_11001) & (1'b1 == ap_CS_fsm_pp11_stage0))) begin
        icmp_ln123_reg_1860 <= icmp_ln123_fu_1348_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp12_stage0_11001) & (1'b1 == ap_CS_fsm_pp12_stage0))) begin
        icmp_ln131_reg_1869 <= icmp_ln131_fu_1365_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp13_stage0_11001) & (1'b1 == ap_CS_fsm_pp13_stage0))) begin
        icmp_ln141_reg_1894 <= icmp_ln141_fu_1436_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp14_stage0_11001) & (1'b1 == ap_CS_fsm_pp14_stage0))) begin
        icmp_ln149_reg_1903 <= icmp_ln149_fu_1453_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp15_stage0_11001) & (1'b1 == ap_CS_fsm_pp15_stage0))) begin
        icmp_ln158_reg_1929 <= icmp_ln158_fu_1537_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln32_reg_1665 <= icmp_ln32_fu_812_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln39_reg_1674 <= icmp_ln39_fu_854_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln46_reg_1683 <= icmp_ln46_fu_871_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        icmp_ln53_reg_1692 <= icmp_ln53_fu_888_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        icmp_ln62_reg_1717 <= icmp_ln62_fu_959_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        icmp_ln71_reg_1742 <= icmp_ln71_fu_1030_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        icmp_ln79_reg_1751 <= icmp_ln79_fu_1047_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        icmp_ln88_reg_1776 <= icmp_ln88_fu_1118_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0))) begin
        icmp_ln97_reg_1801 <= icmp_ln97_fu_1189_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_1_reg_1669 <= j_1_fu_818_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        j_reg_1678 <= j_fu_860_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp9_stage0_11001) & (ap_enable_reg_pp9_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp9_stage0) & (icmp_ln105_fu_1206_p2 == 1'd0))) begin
        select_ln109_1_reg_1824 <= select_ln109_1_fu_1238_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp9_stage0_11001) & (1'b1 == ap_CS_fsm_pp9_stage0) & (icmp_ln105_fu_1206_p2 == 1'd0))) begin
        select_ln109_reg_1819 <= select_ln109_fu_1230_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp10_stage0_11001) & (ap_enable_reg_pp10_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp10_stage0) & (icmp_ln114_fu_1277_p2 == 1'd0))) begin
        select_ln118_1_reg_1849 <= select_ln118_1_fu_1309_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp10_stage0_11001) & (1'b1 == ap_CS_fsm_pp10_stage0) & (icmp_ln114_fu_1277_p2 == 1'd0))) begin
        select_ln118_reg_1844 <= select_ln118_fu_1301_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp12_stage0_11001) & (ap_enable_reg_pp12_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp12_stage0) & (icmp_ln131_fu_1365_p2 == 1'd0))) begin
        select_ln135_1_reg_1883 <= select_ln135_1_fu_1397_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp12_stage0_11001) & (1'b1 == ap_CS_fsm_pp12_stage0) & (icmp_ln131_fu_1365_p2 == 1'd0))) begin
        select_ln135_reg_1878 <= select_ln135_fu_1389_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp14_stage0_11001) & (ap_enable_reg_pp14_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp14_stage0) & (icmp_ln149_fu_1453_p2 == 1'd0))) begin
        select_ln153_1_reg_1917 <= select_ln153_1_fu_1485_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp14_stage0_11001) & (1'b1 == ap_CS_fsm_pp14_stage0) & (icmp_ln149_fu_1453_p2 == 1'd0))) begin
        select_ln153_reg_1912 <= select_ln153_fu_1477_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln53_fu_888_p2 == 1'd0))) begin
        select_ln57_1_reg_1706 <= select_ln57_1_fu_920_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln53_fu_888_p2 == 1'd0))) begin
        select_ln57_reg_1701 <= select_ln57_fu_912_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln62_fu_959_p2 == 1'd0))) begin
        select_ln66_1_reg_1731 <= select_ln66_1_fu_991_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln62_fu_959_p2 == 1'd0))) begin
        select_ln66_reg_1726 <= select_ln66_fu_983_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (icmp_ln79_fu_1047_p2 == 1'd0))) begin
        select_ln83_1_reg_1765 <= select_ln83_1_fu_1079_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (icmp_ln79_fu_1047_p2 == 1'd0))) begin
        select_ln83_reg_1760 <= select_ln83_fu_1071_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (icmp_ln88_fu_1118_p2 == 1'd0))) begin
        select_ln92_1_reg_1790 <= select_ln92_1_fu_1150_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (icmp_ln88_fu_1118_p2 == 1'd0))) begin
        select_ln92_reg_1785 <= select_ln92_fu_1142_p3;
    end
end

always @ (*) begin
    if ((icmp_ln32_fu_812_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln114_fu_1277_p2 == 1'd1)) begin
        ap_condition_pp10_exit_iter0_state32 = 1'b1;
    end else begin
        ap_condition_pp10_exit_iter0_state32 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln123_fu_1348_p2 == 1'd1)) begin
        ap_condition_pp11_exit_iter0_state35 = 1'b1;
    end else begin
        ap_condition_pp11_exit_iter0_state35 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln131_fu_1365_p2 == 1'd1)) begin
        ap_condition_pp12_exit_iter0_state38 = 1'b1;
    end else begin
        ap_condition_pp12_exit_iter0_state38 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln141_fu_1436_p2 == 1'd1)) begin
        ap_condition_pp13_exit_iter0_state41 = 1'b1;
    end else begin
        ap_condition_pp13_exit_iter0_state41 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln149_fu_1453_p2 == 1'd1)) begin
        ap_condition_pp14_exit_iter0_state44 = 1'b1;
    end else begin
        ap_condition_pp14_exit_iter0_state44 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln158_fu_1537_p2 == 1'd1)) begin
        ap_condition_pp15_exit_iter0_state47 = 1'b1;
    end else begin
        ap_condition_pp15_exit_iter0_state47 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln39_fu_854_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state5 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state5 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln46_fu_871_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state8 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state8 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln53_fu_888_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state11 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state11 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln62_fu_959_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state14 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state14 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln71_fu_1030_p2 == 1'd1)) begin
        ap_condition_pp5_exit_iter0_state17 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter0_state17 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln79_fu_1047_p2 == 1'd1)) begin
        ap_condition_pp6_exit_iter0_state20 = 1'b1;
    end else begin
        ap_condition_pp6_exit_iter0_state20 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln88_fu_1118_p2 == 1'd1)) begin
        ap_condition_pp7_exit_iter0_state23 = 1'b1;
    end else begin
        ap_condition_pp7_exit_iter0_state23 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln97_fu_1189_p2 == 1'd1)) begin
        ap_condition_pp8_exit_iter0_state26 = 1'b1;
    end else begin
        ap_condition_pp8_exit_iter0_state26 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln105_fu_1206_p2 == 1'd1)) begin
        ap_condition_pp9_exit_iter0_state29 = 1'b1;
    end else begin
        ap_condition_pp9_exit_iter0_state29 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp10_iter1 == 1'b0) & (ap_enable_reg_pp10_iter0 == 1'b0))) begin
        ap_idle_pp10 = 1'b1;
    end else begin
        ap_idle_pp10 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp11_iter1 == 1'b0) & (ap_enable_reg_pp11_iter0 == 1'b0))) begin
        ap_idle_pp11 = 1'b1;
    end else begin
        ap_idle_pp11 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp12_iter1 == 1'b0) & (ap_enable_reg_pp12_iter0 == 1'b0))) begin
        ap_idle_pp12 = 1'b1;
    end else begin
        ap_idle_pp12 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp13_iter1 == 1'b0) & (ap_enable_reg_pp13_iter0 == 1'b0))) begin
        ap_idle_pp13 = 1'b1;
    end else begin
        ap_idle_pp13 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp14_iter0 == 1'b0) & (ap_enable_reg_pp14_iter1 == 1'b0))) begin
        ap_idle_pp14 = 1'b1;
    end else begin
        ap_idle_pp14 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp15_iter0 == 1'b0) & (ap_enable_reg_pp15_iter1 == 1'b0))) begin
        ap_idle_pp15 = 1'b1;
    end else begin
        ap_idle_pp15 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter0 == 1'b0))) begin
        ap_idle_pp6 = 1'b1;
    end else begin
        ap_idle_pp6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter1 == 1'b0) & (ap_enable_reg_pp7_iter0 == 1'b0))) begin
        ap_idle_pp7 = 1'b1;
    end else begin
        ap_idle_pp7 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter1 == 1'b0) & (ap_enable_reg_pp8_iter0 == 1'b0))) begin
        ap_idle_pp8 = 1'b1;
    end else begin
        ap_idle_pp8 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp9_iter1 == 1'b0) & (ap_enable_reg_pp9_iter0 == 1'b0))) begin
        ap_idle_pp9 = 1'b1;
    end else begin
        ap_idle_pp9 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp8_stage0) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage0) & (icmp_ln97_reg_1801 == 1'd0))) begin
        ap_phi_mux_i11_0_phi_fu_593_p4 = i_10_reg_1805;
    end else begin
        ap_phi_mux_i11_0_phi_fu_593_p4 = i11_0_reg_589;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp9_stage0) & (ap_enable_reg_pp9_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp9_stage0) & (icmp_ln105_reg_1810 == 1'd0))) begin
        ap_phi_mux_i12_0_phi_fu_616_p4 = select_ln109_1_reg_1824;
    end else begin
        ap_phi_mux_i12_0_phi_fu_616_p4 = i12_0_reg_612;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp10_stage0) & (ap_enable_reg_pp10_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp10_stage0) & (icmp_ln114_reg_1835 == 1'd0))) begin
        ap_phi_mux_i14_0_phi_fu_649_p4 = select_ln118_1_reg_1849;
    end else begin
        ap_phi_mux_i14_0_phi_fu_649_p4 = i14_0_reg_645;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp11_stage0) & (ap_enable_reg_pp11_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp11_stage0) & (icmp_ln123_reg_1860 == 1'd0))) begin
        ap_phi_mux_i16_0_phi_fu_671_p4 = i_15_reg_1864;
    end else begin
        ap_phi_mux_i16_0_phi_fu_671_p4 = i16_0_reg_667;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp12_stage0) & (ap_enable_reg_pp12_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp12_stage0) & (icmp_ln131_reg_1869 == 1'd0))) begin
        ap_phi_mux_i17_0_phi_fu_694_p4 = select_ln135_1_reg_1883;
    end else begin
        ap_phi_mux_i17_0_phi_fu_694_p4 = i17_0_reg_690;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp13_stage0) & (ap_enable_reg_pp13_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp13_stage0) & (icmp_ln141_reg_1894 == 1'd0))) begin
        ap_phi_mux_i19_0_phi_fu_716_p4 = i_18_reg_1898;
    end else begin
        ap_phi_mux_i19_0_phi_fu_716_p4 = i19_0_reg_712;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp14_stage0) & (1'b1 == ap_CS_fsm_pp14_stage0) & (ap_enable_reg_pp14_iter1 == 1'b1) & (icmp_ln149_reg_1903 == 1'd0))) begin
        ap_phi_mux_i20_0_phi_fu_739_p4 = select_ln153_1_reg_1917;
    end else begin
        ap_phi_mux_i20_0_phi_fu_739_p4 = i20_0_reg_735;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp15_stage0) & (1'b1 == ap_CS_fsm_pp15_stage0) & (ap_enable_reg_pp15_iter1 == 1'b1) & (icmp_ln158_reg_1929 == 1'd0))) begin
        ap_phi_mux_i22_0_phi_fu_761_p4 = i_21_reg_1933;
    end else begin
        ap_phi_mux_i22_0_phi_fu_761_p4 = i22_0_reg_757;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln53_reg_1692 == 1'd0))) begin
        ap_phi_mux_i2_0_phi_fu_460_p4 = select_ln57_1_reg_1706;
    end else begin
        ap_phi_mux_i2_0_phi_fu_460_p4 = i2_0_reg_456;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln62_reg_1717 == 1'd0))) begin
        ap_phi_mux_i4_0_phi_fu_493_p4 = select_ln66_1_reg_1731;
    end else begin
        ap_phi_mux_i4_0_phi_fu_493_p4 = i4_0_reg_489;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (icmp_ln71_reg_1742 == 1'd0))) begin
        ap_phi_mux_i6_0_phi_fu_515_p4 = i_5_reg_1746;
    end else begin
        ap_phi_mux_i6_0_phi_fu_515_p4 = i6_0_reg_511;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (icmp_ln79_reg_1751 == 1'd0))) begin
        ap_phi_mux_i7_0_phi_fu_538_p4 = select_ln83_1_reg_1765;
    end else begin
        ap_phi_mux_i7_0_phi_fu_538_p4 = i7_0_reg_534;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (icmp_ln88_reg_1776 == 1'd0))) begin
        ap_phi_mux_i9_0_phi_fu_571_p4 = select_ln92_1_reg_1790;
    end else begin
        ap_phi_mux_i9_0_phi_fu_571_p4 = i9_0_reg_567;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln46_reg_1683 == 1'd0))) begin
        ap_phi_mux_i_0_phi_fu_437_p4 = i_reg_1687;
    end else begin
        ap_phi_mux_i_0_phi_fu_437_p4 = i_0_reg_433;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0) & (icmp_ln39_reg_1674 == 1'd0))) begin
        ap_phi_mux_j1_0_phi_fu_425_p4 = j_reg_1678;
    end else begin
        ap_phi_mux_j1_0_phi_fu_425_p4 = j1_0_reg_421;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln32_reg_1665 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_j_0_phi_fu_413_p4 = j_1_reg_1669;
    end else begin
        ap_phi_mux_j_0_phi_fu_413_p4 = j_0_reg_409;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp11_stage0_11001) & (ap_enable_reg_pp11_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp11_stage0))) begin
        bias_h_ce0 = 1'b1;
    end else begin
        bias_h_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp11_stage0_11001) & (ap_enable_reg_pp11_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp11_stage0) & (icmp_ln123_reg_1860 == 1'd0))) begin
        bias_h_we0 = 1'b1;
    end else begin
        bias_h_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        bias_r_ce0 = 1'b1;
    end else begin
        bias_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (icmp_ln71_reg_1742 == 1'd0))) begin
        bias_r_we0 = 1'b1;
    end else begin
        bias_r_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp8_stage0_11001) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage0))) begin
        bias_z_ce0 = 1'b1;
    end else begin
        bias_z_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp8_stage0_11001) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage0) & (icmp_ln97_reg_1801 == 1'd0))) begin
        bias_z_we0 = 1'b1;
    end else begin
        bias_z_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        bn_bias1_ce0 = 1'b1;
    end else begin
        bn_bias1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln46_reg_1683 == 1'd0))) begin
        bn_bias1_we0 = 1'b1;
    end else begin
        bn_bias1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp13_stage0_11001) & (ap_enable_reg_pp13_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp13_stage0))) begin
        fc_bias1_ce0 = 1'b1;
    end else begin
        fc_bias1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp13_stage0_11001) & (ap_enable_reg_pp13_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp13_stage0) & (icmp_ln141_reg_1894 == 1'd0))) begin
        fc_bias1_we0 = 1'b1;
    end else begin
        fc_bias1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp15_stage0_11001) & (1'b1 == ap_CS_fsm_pp15_stage0) & (ap_enable_reg_pp15_iter1 == 1'b1))) begin
        fc_bias2_ce0 = 1'b1;
    end else begin
        fc_bias2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp15_stage0_11001) & (1'b1 == ap_CS_fsm_pp15_stage0) & (ap_enable_reg_pp15_iter1 == 1'b1) & (icmp_ln158_reg_1929 == 1'd0))) begin
        fc_bias2_we0 = 1'b1;
    end else begin
        fc_bias2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp12_stage0_11001) & (ap_enable_reg_pp12_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp12_stage0))) begin
        fc_weights1_ce0 = 1'b1;
    end else begin
        fc_weights1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp12_stage0_11001) & (ap_enable_reg_pp12_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp12_stage0) & (icmp_ln131_reg_1869 == 1'd0))) begin
        fc_weights1_we0 = 1'b1;
    end else begin
        fc_weights1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp14_stage0_11001) & (1'b1 == ap_CS_fsm_pp14_stage0) & (ap_enable_reg_pp14_iter1 == 1'b1))) begin
        fc_weights2_ce0 = 1'b1;
    end else begin
        fc_weights2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp14_stage0_11001) & (1'b1 == ap_CS_fsm_pp14_stage0) & (ap_enable_reg_pp14_iter1 == 1'b1) & (icmp_ln149_reg_1903 == 1'd0))) begin
        fc_weights2_we0 = 1'b1;
    end else begin
        fc_weights2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp15_stage0_11001) & (1'b1 == ap_CS_fsm_pp15_stage0)) | ((1'b0 == ap_block_pp14_stage0_11001) & (1'b1 == ap_CS_fsm_pp14_stage0)) | ((1'b0 == ap_block_pp13_stage0_11001) & (1'b1 == ap_CS_fsm_pp13_stage0)) | ((1'b0 == ap_block_pp12_stage0_11001) & (1'b1 == ap_CS_fsm_pp12_stage0)) | ((1'b0 == ap_block_pp11_stage0_11001) & (1'b1 == ap_CS_fsm_pp11_stage0)) | ((1'b0 == ap_block_pp10_stage0_11001) & (1'b1 == ap_CS_fsm_pp10_stage0)) | ((1'b0 == ap_block_pp9_stage0_11001) & (1'b1 == ap_CS_fsm_pp9_stage0)) | ((1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0)) | ((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0)) | ((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0)) | ((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0)) | ((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_769_ce = 1'b1;
    end else begin
        grp_fu_769_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        pw_weight1_ce0 = 1'b1;
    end else begin
        pw_weight1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln39_reg_1674 == 1'd0))) begin
        pw_weight1_we0 = 1'b1;
    end else begin
        pw_weight1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp15_stage0) & (ap_enable_reg_pp15_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp15_stage0) & (icmp_ln158_fu_1537_p2 == 1'd0)) | ((1'b0 == ap_block_pp14_stage0) & (ap_enable_reg_pp14_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp14_stage0) & (icmp_ln149_fu_1453_p2 == 1'd0)) | ((1'b0 == ap_block_pp13_stage0) & (ap_enable_reg_pp13_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp13_stage0) & (icmp_ln141_fu_1436_p2 == 1'd0)) | ((1'b0 == ap_block_pp12_stage0) & (ap_enable_reg_pp12_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp12_stage0) & (icmp_ln131_fu_1365_p2 == 1'd0)) | ((1'b0 == ap_block_pp11_stage0) & (ap_enable_reg_pp11_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp11_stage0) & (icmp_ln123_fu_1348_p2 == 1'd0)) | ((1'b0 == ap_block_pp10_stage0) & (ap_enable_reg_pp10_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp10_stage0) & (icmp_ln114_fu_1277_p2 == 1'd0)) | ((1'b0 == ap_block_pp9_stage0) & (ap_enable_reg_pp9_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp9_stage0) & (icmp_ln105_fu_1206_p2 == 1'd0)) | ((1'b0 == ap_block_pp8_stage0) & (ap_enable_reg_pp8_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage0) & (icmp_ln97_fu_1189_p2 == 1'd0)) | ((1'b0 == ap_block_pp7_stage0) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (icmp_ln88_fu_1118_p2 == 1'd0)) | ((1'b0 == ap_block_pp6_stage0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (icmp_ln79_fu_1047_p2 == 1'd0)) | ((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (icmp_ln71_fu_1030_p2 == 1'd0)) | ((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln62_fu_959_p2 == 1'd0)) | ((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln53_fu_888_p2 == 1'd0)) | ((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln46_fu_871_p2 == 1'd0)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0) & (icmp_ln39_fu_854_p2 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln32_fu_812_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0)))) begin
        weight_in_TDATA_blk_n = weight_in_TVALID;
    end else begin
        weight_in_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp15_stage0_11001) & (ap_enable_reg_pp15_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp15_stage0) & (icmp_ln158_fu_1537_p2 == 1'd0)) | ((1'b0 == ap_block_pp14_stage0_11001) & (ap_enable_reg_pp14_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp14_stage0) & (icmp_ln149_fu_1453_p2 == 1'd0)) | ((1'b0 == ap_block_pp13_stage0_11001) & (ap_enable_reg_pp13_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp13_stage0) & (icmp_ln141_fu_1436_p2 == 1'd0)) | ((1'b0 == ap_block_pp12_stage0_11001) & (ap_enable_reg_pp12_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp12_stage0) & (icmp_ln131_fu_1365_p2 == 1'd0)) | ((1'b0 == ap_block_pp11_stage0_11001) & (ap_enable_reg_pp11_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp11_stage0) & (icmp_ln123_fu_1348_p2 == 1'd0)) | ((1'b0 == ap_block_pp10_stage0_11001) & (ap_enable_reg_pp10_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp10_stage0) & (icmp_ln114_fu_1277_p2 == 1'd0)) | ((1'b0 == ap_block_pp9_stage0_11001) & (ap_enable_reg_pp9_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp9_stage0) & (icmp_ln105_fu_1206_p2 == 1'd0)) | ((1'b0 == ap_block_pp8_stage0_11001) & (ap_enable_reg_pp8_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage0) & (icmp_ln97_fu_1189_p2 == 1'd0)) | ((1'b0 == ap_block_pp7_stage0_11001) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (icmp_ln88_fu_1118_p2 == 1'd0)) | ((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (icmp_ln79_fu_1047_p2 == 1'd0)) | ((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (icmp_ln71_fu_1030_p2 == 1'd0)) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln62_fu_959_p2 == 1'd0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln53_fu_888_p2 == 1'd0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln46_fu_871_p2 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln39_fu_854_p2 == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln32_fu_812_p2 == 1'd0)))) begin
        weight_in_TREADY = 1'b1;
    end else begin
        weight_in_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp9_stage0_11001) & (ap_enable_reg_pp9_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp9_stage0))) begin
        weights_hu_ce0 = 1'b1;
    end else begin
        weights_hu_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp9_stage0_11001) & (ap_enable_reg_pp9_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp9_stage0) & (icmp_ln105_reg_1810 == 1'd0))) begin
        weights_hu_we0 = 1'b1;
    end else begin
        weights_hu_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp10_stage0_11001) & (ap_enable_reg_pp10_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp10_stage0))) begin
        weights_hw_ce0 = 1'b1;
    end else begin
        weights_hw_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp10_stage0_11001) & (ap_enable_reg_pp10_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp10_stage0) & (icmp_ln114_reg_1835 == 1'd0))) begin
        weights_hw_we0 = 1'b1;
    end else begin
        weights_hw_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        weights_ru_ce0 = 1'b1;
    end else begin
        weights_ru_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln53_reg_1692 == 1'd0))) begin
        weights_ru_we0 = 1'b1;
    end else begin
        weights_ru_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        weights_rw_ce0 = 1'b1;
    end else begin
        weights_rw_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln62_reg_1717 == 1'd0))) begin
        weights_rw_we0 = 1'b1;
    end else begin
        weights_rw_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        weights_zu_ce0 = 1'b1;
    end else begin
        weights_zu_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (icmp_ln79_reg_1751 == 1'd0))) begin
        weights_zu_we0 = 1'b1;
    end else begin
        weights_zu_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        weights_zw_ce0 = 1'b1;
    end else begin
        weights_zw_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (icmp_ln88_reg_1776 == 1'd0))) begin
        weights_zw_we0 = 1'b1;
    end else begin
        weights_zw_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln32_fu_812_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln32_fu_812_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln39_fu_854_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln39_fu_854_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln46_fu_871_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln46_fu_871_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if (~((1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln53_fu_888_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if (((1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln53_fu_888_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if (~((1'b0 == ap_block_pp4_stage0_subdone) & (icmp_ln62_fu_959_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if (((1'b0 == ap_block_pp4_stage0_subdone) & (icmp_ln62_fu_959_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage0;
        end
        ap_ST_fsm_pp5_stage0 : begin
            if (~((1'b0 == ap_block_pp5_stage0_subdone) & (icmp_ln71_fu_1030_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if (((1'b0 == ap_block_pp5_stage0_subdone) & (icmp_ln71_fu_1030_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_pp6_stage0;
        end
        ap_ST_fsm_pp6_stage0 : begin
            if (~((1'b0 == ap_block_pp6_stage0_subdone) & (icmp_ln79_fu_1047_p2 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if (((1'b0 == ap_block_pp6_stage0_subdone) & (icmp_ln79_fu_1047_p2 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_pp7_stage0;
        end
        ap_ST_fsm_pp7_stage0 : begin
            if (~((1'b0 == ap_block_pp7_stage0_subdone) & (icmp_ln88_fu_1118_p2 == 1'd1) & (ap_enable_reg_pp7_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end else if (((1'b0 == ap_block_pp7_stage0_subdone) & (icmp_ln88_fu_1118_p2 == 1'd1) & (ap_enable_reg_pp7_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_pp8_stage0;
        end
        ap_ST_fsm_pp8_stage0 : begin
            if (~((1'b0 == ap_block_pp8_stage0_subdone) & (icmp_ln97_fu_1189_p2 == 1'd1) & (ap_enable_reg_pp8_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage0;
            end else if (((1'b0 == ap_block_pp8_stage0_subdone) & (icmp_ln97_fu_1189_p2 == 1'd1) & (ap_enable_reg_pp8_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage0;
            end
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_pp9_stage0;
        end
        ap_ST_fsm_pp9_stage0 : begin
            if (~((1'b0 == ap_block_pp9_stage0_subdone) & (icmp_ln105_fu_1206_p2 == 1'd1) & (ap_enable_reg_pp9_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp9_stage0;
            end else if (((1'b0 == ap_block_pp9_stage0_subdone) & (icmp_ln105_fu_1206_p2 == 1'd1) & (ap_enable_reg_pp9_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp9_stage0;
            end
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_pp10_stage0;
        end
        ap_ST_fsm_pp10_stage0 : begin
            if (~((1'b0 == ap_block_pp10_stage0_subdone) & (icmp_ln114_fu_1277_p2 == 1'd1) & (ap_enable_reg_pp10_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp10_stage0;
            end else if (((1'b0 == ap_block_pp10_stage0_subdone) & (icmp_ln114_fu_1277_p2 == 1'd1) & (ap_enable_reg_pp10_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp10_stage0;
            end
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_pp11_stage0;
        end
        ap_ST_fsm_pp11_stage0 : begin
            if (~((1'b0 == ap_block_pp11_stage0_subdone) & (icmp_ln123_fu_1348_p2 == 1'd1) & (ap_enable_reg_pp11_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp11_stage0;
            end else if (((1'b0 == ap_block_pp11_stage0_subdone) & (icmp_ln123_fu_1348_p2 == 1'd1) & (ap_enable_reg_pp11_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp11_stage0;
            end
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_pp12_stage0;
        end
        ap_ST_fsm_pp12_stage0 : begin
            if (~((1'b0 == ap_block_pp12_stage0_subdone) & (icmp_ln131_fu_1365_p2 == 1'd1) & (ap_enable_reg_pp12_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp12_stage0;
            end else if (((1'b0 == ap_block_pp12_stage0_subdone) & (icmp_ln131_fu_1365_p2 == 1'd1) & (ap_enable_reg_pp12_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp12_stage0;
            end
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_pp13_stage0;
        end
        ap_ST_fsm_pp13_stage0 : begin
            if (~((1'b0 == ap_block_pp13_stage0_subdone) & (icmp_ln141_fu_1436_p2 == 1'd1) & (ap_enable_reg_pp13_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp13_stage0;
            end else if (((1'b0 == ap_block_pp13_stage0_subdone) & (icmp_ln141_fu_1436_p2 == 1'd1) & (ap_enable_reg_pp13_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp13_stage0;
            end
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_pp14_stage0;
        end
        ap_ST_fsm_pp14_stage0 : begin
            if (~((1'b0 == ap_block_pp14_stage0_subdone) & (icmp_ln149_fu_1453_p2 == 1'd1) & (ap_enable_reg_pp14_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp14_stage0;
            end else if (((1'b0 == ap_block_pp14_stage0_subdone) & (icmp_ln149_fu_1453_p2 == 1'd1) & (ap_enable_reg_pp14_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp14_stage0;
            end
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_pp15_stage0;
        end
        ap_ST_fsm_pp15_stage0 : begin
            if (~((icmp_ln158_fu_1537_p2 == 1'd1) & (ap_enable_reg_pp15_iter0 == 1'b1) & (1'b0 == ap_block_pp15_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp15_stage0;
            end else if (((icmp_ln158_fu_1537_p2 == 1'd1) & (ap_enable_reg_pp15_iter0 == 1'b1) & (1'b0 == ap_block_pp15_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp15_stage0;
            end
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln105_fu_1212_p2 = (indvar_flatten27_reg_601 + 13'd1);

assign add_ln109_fu_1266_p2 = (zext_ln109_fu_1263_p1 + zext_ln106_fu_1259_p1);

assign add_ln114_fu_1283_p2 = (indvar_flatten34_reg_634 + 13'd1);

assign add_ln118_fu_1337_p2 = (zext_ln118_fu_1334_p1 + zext_ln115_fu_1330_p1);

assign add_ln131_fu_1371_p2 = (indvar_flatten41_reg_679 + 13'd1);

assign add_ln135_fu_1425_p2 = (zext_ln135_fu_1422_p1 + zext_ln132_fu_1418_p1);

assign add_ln149_fu_1459_p2 = (indvar_flatten48_reg_724 + 10'd1);

assign add_ln153_fu_1526_p2 = (sub_ln153_fu_1517_p2 + zext_ln153_1_fu_1523_p1);

assign add_ln53_fu_894_p2 = (indvar_flatten_reg_445 + 13'd1);

assign add_ln57_fu_948_p2 = (zext_ln57_fu_945_p1 + zext_ln54_fu_941_p1);

assign add_ln62_fu_965_p2 = (indvar_flatten6_reg_478 + 13'd1);

assign add_ln66_fu_1019_p2 = (zext_ln66_fu_1016_p1 + zext_ln63_fu_1012_p1);

assign add_ln79_fu_1053_p2 = (indvar_flatten13_reg_523 + 13'd1);

assign add_ln83_fu_1107_p2 = (zext_ln83_fu_1104_p1 + zext_ln80_fu_1100_p1);

assign add_ln88_fu_1124_p2 = (indvar_flatten20_reg_556 + 13'd1);

assign add_ln92_fu_1178_p2 = (zext_ln92_fu_1175_p1 + zext_ln89_fu_1171_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp10_stage0 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp11_stage0 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp12_stage0 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_pp13_stage0 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_pp14_stage0 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_pp15_stage0 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp6_stage0 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp7_stage0 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp8_stage0 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp9_stage0 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((weight_in_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln32_fu_812_p2 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((weight_in_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln32_fu_812_p2 == 1'd0));
end

assign ap_block_pp10_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp10_stage0_11001 = ((weight_in_TVALID == 1'b0) & (ap_enable_reg_pp10_iter0 == 1'b1) & (icmp_ln114_fu_1277_p2 == 1'd0));
end

always @ (*) begin
    ap_block_pp10_stage0_subdone = ((weight_in_TVALID == 1'b0) & (ap_enable_reg_pp10_iter0 == 1'b1) & (icmp_ln114_fu_1277_p2 == 1'd0));
end

assign ap_block_pp11_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp11_stage0_11001 = ((weight_in_TVALID == 1'b0) & (ap_enable_reg_pp11_iter0 == 1'b1) & (icmp_ln123_fu_1348_p2 == 1'd0));
end

always @ (*) begin
    ap_block_pp11_stage0_subdone = ((weight_in_TVALID == 1'b0) & (ap_enable_reg_pp11_iter0 == 1'b1) & (icmp_ln123_fu_1348_p2 == 1'd0));
end

assign ap_block_pp12_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp12_stage0_11001 = ((weight_in_TVALID == 1'b0) & (ap_enable_reg_pp12_iter0 == 1'b1) & (icmp_ln131_fu_1365_p2 == 1'd0));
end

always @ (*) begin
    ap_block_pp12_stage0_subdone = ((weight_in_TVALID == 1'b0) & (ap_enable_reg_pp12_iter0 == 1'b1) & (icmp_ln131_fu_1365_p2 == 1'd0));
end

assign ap_block_pp13_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp13_stage0_11001 = ((weight_in_TVALID == 1'b0) & (ap_enable_reg_pp13_iter0 == 1'b1) & (icmp_ln141_fu_1436_p2 == 1'd0));
end

always @ (*) begin
    ap_block_pp13_stage0_subdone = ((weight_in_TVALID == 1'b0) & (ap_enable_reg_pp13_iter0 == 1'b1) & (icmp_ln141_fu_1436_p2 == 1'd0));
end

assign ap_block_pp14_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp14_stage0_11001 = ((weight_in_TVALID == 1'b0) & (ap_enable_reg_pp14_iter0 == 1'b1) & (icmp_ln149_fu_1453_p2 == 1'd0));
end

always @ (*) begin
    ap_block_pp14_stage0_subdone = ((weight_in_TVALID == 1'b0) & (ap_enable_reg_pp14_iter0 == 1'b1) & (icmp_ln149_fu_1453_p2 == 1'd0));
end

assign ap_block_pp15_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp15_stage0_11001 = ((weight_in_TVALID == 1'b0) & (ap_enable_reg_pp15_iter0 == 1'b1) & (icmp_ln158_fu_1537_p2 == 1'd0));
end

always @ (*) begin
    ap_block_pp15_stage0_subdone = ((weight_in_TVALID == 1'b0) & (ap_enable_reg_pp15_iter0 == 1'b1) & (icmp_ln158_fu_1537_p2 == 1'd0));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((weight_in_TVALID == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln39_fu_854_p2 == 1'd0));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((weight_in_TVALID == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln39_fu_854_p2 == 1'd0));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_11001 = ((weight_in_TVALID == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln46_fu_871_p2 == 1'd0));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = ((weight_in_TVALID == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln46_fu_871_p2 == 1'd0));
end

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_11001 = ((weight_in_TVALID == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln53_fu_888_p2 == 1'd0));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = ((weight_in_TVALID == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln53_fu_888_p2 == 1'd0));
end

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp4_stage0_11001 = ((weight_in_TVALID == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln62_fu_959_p2 == 1'd0));
end

always @ (*) begin
    ap_block_pp4_stage0_subdone = ((weight_in_TVALID == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln62_fu_959_p2 == 1'd0));
end

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp5_stage0_11001 = ((weight_in_TVALID == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b1) & (icmp_ln71_fu_1030_p2 == 1'd0));
end

always @ (*) begin
    ap_block_pp5_stage0_subdone = ((weight_in_TVALID == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b1) & (icmp_ln71_fu_1030_p2 == 1'd0));
end

assign ap_block_pp6_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp6_stage0_11001 = ((weight_in_TVALID == 1'b0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (icmp_ln79_fu_1047_p2 == 1'd0));
end

always @ (*) begin
    ap_block_pp6_stage0_subdone = ((weight_in_TVALID == 1'b0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (icmp_ln79_fu_1047_p2 == 1'd0));
end

assign ap_block_pp7_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp7_stage0_11001 = ((weight_in_TVALID == 1'b0) & (ap_enable_reg_pp7_iter0 == 1'b1) & (icmp_ln88_fu_1118_p2 == 1'd0));
end

always @ (*) begin
    ap_block_pp7_stage0_subdone = ((weight_in_TVALID == 1'b0) & (ap_enable_reg_pp7_iter0 == 1'b1) & (icmp_ln88_fu_1118_p2 == 1'd0));
end

assign ap_block_pp8_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp8_stage0_11001 = ((weight_in_TVALID == 1'b0) & (ap_enable_reg_pp8_iter0 == 1'b1) & (icmp_ln97_fu_1189_p2 == 1'd0));
end

always @ (*) begin
    ap_block_pp8_stage0_subdone = ((weight_in_TVALID == 1'b0) & (ap_enable_reg_pp8_iter0 == 1'b1) & (icmp_ln97_fu_1189_p2 == 1'd0));
end

assign ap_block_pp9_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp9_stage0_11001 = ((weight_in_TVALID == 1'b0) & (ap_enable_reg_pp9_iter0 == 1'b1) & (icmp_ln105_fu_1206_p2 == 1'd0));
end

always @ (*) begin
    ap_block_pp9_stage0_subdone = ((weight_in_TVALID == 1'b0) & (ap_enable_reg_pp9_iter0 == 1'b1) & (icmp_ln105_fu_1206_p2 == 1'd0));
end

always @ (*) begin
    ap_block_state11_pp3_stage0_iter0 = ((weight_in_TVALID == 1'b0) & (icmp_ln53_fu_888_p2 == 1'd0));
end

assign ap_block_state12_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state14_pp4_stage0_iter0 = ((weight_in_TVALID == 1'b0) & (icmp_ln62_fu_959_p2 == 1'd0));
end

assign ap_block_state15_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state17_pp5_stage0_iter0 = ((weight_in_TVALID == 1'b0) & (icmp_ln71_fu_1030_p2 == 1'd0));
end

assign ap_block_state18_pp5_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state20_pp6_stage0_iter0 = ((weight_in_TVALID == 1'b0) & (icmp_ln79_fu_1047_p2 == 1'd0));
end

assign ap_block_state21_pp6_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state23_pp7_stage0_iter0 = ((weight_in_TVALID == 1'b0) & (icmp_ln88_fu_1118_p2 == 1'd0));
end

assign ap_block_state24_pp7_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state26_pp8_stage0_iter0 = ((weight_in_TVALID == 1'b0) & (icmp_ln97_fu_1189_p2 == 1'd0));
end

assign ap_block_state27_pp8_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state29_pp9_stage0_iter0 = ((weight_in_TVALID == 1'b0) & (icmp_ln105_fu_1206_p2 == 1'd0));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter0 = ((weight_in_TVALID == 1'b0) & (icmp_ln32_fu_812_p2 == 1'd0));
end

assign ap_block_state30_pp9_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state32_pp10_stage0_iter0 = ((weight_in_TVALID == 1'b0) & (icmp_ln114_fu_1277_p2 == 1'd0));
end

assign ap_block_state33_pp10_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state35_pp11_stage0_iter0 = ((weight_in_TVALID == 1'b0) & (icmp_ln123_fu_1348_p2 == 1'd0));
end

assign ap_block_state36_pp11_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state38_pp12_stage0_iter0 = ((weight_in_TVALID == 1'b0) & (icmp_ln131_fu_1365_p2 == 1'd0));
end

assign ap_block_state39_pp12_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state41_pp13_stage0_iter0 = ((weight_in_TVALID == 1'b0) & (icmp_ln141_fu_1436_p2 == 1'd0));
end

assign ap_block_state42_pp13_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state44_pp14_stage0_iter0 = ((weight_in_TVALID == 1'b0) & (icmp_ln149_fu_1453_p2 == 1'd0));
end

assign ap_block_state45_pp14_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state47_pp15_stage0_iter0 = ((weight_in_TVALID == 1'b0) & (icmp_ln158_fu_1537_p2 == 1'd0));
end

assign ap_block_state48_pp15_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp1_stage0_iter0 = ((weight_in_TVALID == 1'b0) & (icmp_ln39_fu_854_p2 == 1'd0));
end

assign ap_block_state6_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_pp2_stage0_iter0 = ((weight_in_TVALID == 1'b0) & (icmp_ln46_fu_871_p2 == 1'd0));
end

assign ap_block_state9_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp10 = (ap_idle_pp10 ^ 1'b1);

assign ap_enable_pp11 = (ap_idle_pp11 ^ 1'b1);

assign ap_enable_pp12 = (ap_idle_pp12 ^ 1'b1);

assign ap_enable_pp13 = (ap_idle_pp13 ^ 1'b1);

assign ap_enable_pp14 = (ap_idle_pp14 ^ 1'b1);

assign ap_enable_pp15 = (ap_idle_pp15 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

assign ap_enable_pp6 = (ap_idle_pp6 ^ 1'b1);

assign ap_enable_pp7 = (ap_idle_pp7 ^ 1'b1);

assign ap_enable_pp8 = (ap_idle_pp8 ^ 1'b1);

assign ap_enable_pp9 = (ap_idle_pp9 ^ 1'b1);

assign ap_return_0 = select_ln165_fu_1572_p3;

assign ap_return_1 = select_ln165_1_fu_1579_p3;

assign ap_return_2 = select_ln165_2_fu_1586_p3;

assign bias_h_address0 = zext_ln126_fu_1360_p1;

assign bias_h_d0 = grp_fu_769_p1;

assign bias_r_address0 = zext_ln74_fu_1042_p1;

assign bias_r_d0 = grp_fu_769_p1;

assign bias_z_address0 = zext_ln100_fu_1201_p1;

assign bias_z_d0 = grp_fu_769_p1;

assign bn_bias1_address0 = zext_ln49_fu_883_p1;

assign bn_bias1_d0 = grp_fu_769_p1;

assign fc_bias1_address0 = zext_ln144_fu_1448_p1;

assign fc_bias1_d0 = grp_fu_769_p1;

assign fc_bias2_address0 = zext_ln161_fu_1549_p1;

assign fc_bias2_d0 = grp_fu_769_p1;

assign fc_weights1_address0 = zext_ln135_1_fu_1431_p1;

assign fc_weights1_d0 = grp_fu_769_p1;

assign fc_weights2_address0 = sext_ln153_fu_1532_p1;

assign fc_weights2_d0 = grp_fu_769_p1;

assign i_10_fu_1195_p2 = (ap_phi_mux_i11_0_phi_fu_593_p4 + 7'd1);

assign i_12_fu_1218_p2 = (ap_phi_mux_i12_0_phi_fu_616_p4 + 7'd1);

assign i_14_fu_1289_p2 = (ap_phi_mux_i14_0_phi_fu_649_p4 + 7'd1);

assign i_15_fu_1354_p2 = (ap_phi_mux_i16_0_phi_fu_671_p4 + 7'd1);

assign i_17_fu_1377_p2 = (ap_phi_mux_i17_0_phi_fu_694_p4 + 7'd1);

assign i_18_fu_1442_p2 = (ap_phi_mux_i19_0_phi_fu_716_p4 + 7'd1);

assign i_20_fu_1465_p2 = (ap_phi_mux_i20_0_phi_fu_739_p4 + 7'd1);

assign i_21_fu_1543_p2 = (ap_phi_mux_i22_0_phi_fu_761_p4 + 4'd1);

assign i_2_fu_900_p2 = (ap_phi_mux_i2_0_phi_fu_460_p4 + 7'd1);

assign i_4_fu_971_p2 = (ap_phi_mux_i4_0_phi_fu_493_p4 + 7'd1);

assign i_5_fu_1036_p2 = (ap_phi_mux_i6_0_phi_fu_515_p4 + 7'd1);

assign i_7_fu_1059_p2 = (ap_phi_mux_i7_0_phi_fu_538_p4 + 7'd1);

assign i_9_fu_1130_p2 = (ap_phi_mux_i9_0_phi_fu_571_p4 + 7'd1);

assign i_fu_877_p2 = (ap_phi_mux_i_0_phi_fu_437_p4 + 4'd1);

assign icmp_ln105_fu_1206_p2 = ((indvar_flatten27_reg_601 == 13'd6144) ? 1'b1 : 1'b0);

assign icmp_ln106_fu_1224_p2 = ((j13_0_reg_623 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln114_fu_1277_p2 = ((indvar_flatten34_reg_634 == 13'd4096) ? 1'b1 : 1'b0);

assign icmp_ln115_fu_1295_p2 = ((j15_0_reg_656 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln123_fu_1348_p2 = ((ap_phi_mux_i16_0_phi_fu_671_p4 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln131_fu_1365_p2 = ((indvar_flatten41_reg_679 == 13'd4096) ? 1'b1 : 1'b0);

assign icmp_ln132_fu_1383_p2 = ((j18_0_reg_701 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln141_fu_1436_p2 = ((ap_phi_mux_i19_0_phi_fu_716_p4 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln149_fu_1453_p2 = ((indvar_flatten48_reg_724 == 10'd768) ? 1'b1 : 1'b0);

assign icmp_ln150_fu_1471_p2 = ((j21_0_reg_746 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln158_fu_1537_p2 = ((ap_phi_mux_i22_0_phi_fu_761_p4 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln32_fu_812_p2 = ((ap_phi_mux_j_0_phi_fu_413_p4 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln39_fu_854_p2 = ((ap_phi_mux_j1_0_phi_fu_425_p4 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln46_fu_871_p2 = ((ap_phi_mux_i_0_phi_fu_437_p4 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln53_fu_888_p2 = ((indvar_flatten_reg_445 == 13'd6144) ? 1'b1 : 1'b0);

assign icmp_ln54_fu_906_p2 = ((j3_0_reg_467 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln62_fu_959_p2 = ((indvar_flatten6_reg_478 == 13'd4096) ? 1'b1 : 1'b0);

assign icmp_ln63_fu_977_p2 = ((j5_0_reg_500 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln71_fu_1030_p2 = ((ap_phi_mux_i6_0_phi_fu_515_p4 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln79_fu_1047_p2 = ((indvar_flatten13_reg_523 == 13'd6144) ? 1'b1 : 1'b0);

assign icmp_ln80_fu_1065_p2 = ((j8_0_reg_545 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln88_fu_1118_p2 = ((indvar_flatten20_reg_556 == 13'd4096) ? 1'b1 : 1'b0);

assign icmp_ln89_fu_1136_p2 = ((j10_0_reg_578 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln97_fu_1189_p2 = ((ap_phi_mux_i11_0_phi_fu_593_p4 == 7'd64) ? 1'b1 : 1'b0);

assign j_1_fu_818_p2 = (ap_phi_mux_j_0_phi_fu_413_p4 + 2'd1);

assign j_2_fu_928_p2 = (select_ln57_fu_912_p3 + 7'd1);

assign j_3_fu_999_p2 = (select_ln66_fu_983_p3 + 7'd1);

assign j_4_fu_1087_p2 = (select_ln83_fu_1071_p3 + 7'd1);

assign j_5_fu_1158_p2 = (select_ln92_fu_1142_p3 + 7'd1);

assign j_6_fu_1246_p2 = (select_ln109_fu_1230_p3 + 7'd1);

assign j_7_fu_1317_p2 = (select_ln118_fu_1301_p3 + 7'd1);

assign j_8_fu_1405_p2 = (select_ln135_fu_1389_p3 + 7'd1);

assign j_9_fu_1493_p2 = (select_ln153_fu_1477_p3 + 4'd1);

assign j_fu_860_p2 = (ap_phi_mux_j1_0_phi_fu_425_p4 + 4'd1);

assign pw_weight1_address0 = zext_ln42_fu_866_p1;

assign pw_weight1_d0 = grp_fu_769_p1;

assign select_ln109_1_fu_1238_p3 = ((icmp_ln106_fu_1224_p2[0:0] === 1'b1) ? i_12_fu_1218_p2 : ap_phi_mux_i12_0_phi_fu_616_p4);

assign select_ln109_fu_1230_p3 = ((icmp_ln106_fu_1224_p2[0:0] === 1'b1) ? 7'd0 : j13_0_reg_623);

assign select_ln118_1_fu_1309_p3 = ((icmp_ln115_fu_1295_p2[0:0] === 1'b1) ? i_14_fu_1289_p2 : ap_phi_mux_i14_0_phi_fu_649_p4);

assign select_ln118_fu_1301_p3 = ((icmp_ln115_fu_1295_p2[0:0] === 1'b1) ? 7'd0 : j15_0_reg_656);

assign select_ln135_1_fu_1397_p3 = ((icmp_ln132_fu_1383_p2[0:0] === 1'b1) ? i_17_fu_1377_p2 : ap_phi_mux_i17_0_phi_fu_694_p4);

assign select_ln135_fu_1389_p3 = ((icmp_ln132_fu_1383_p2[0:0] === 1'b1) ? 7'd0 : j18_0_reg_701);

assign select_ln153_1_fu_1485_p3 = ((icmp_ln150_fu_1471_p2[0:0] === 1'b1) ? i_20_fu_1465_p2 : ap_phi_mux_i20_0_phi_fu_739_p4);

assign select_ln153_fu_1477_p3 = ((icmp_ln150_fu_1471_p2[0:0] === 1'b1) ? 4'd0 : j21_0_reg_746);

assign select_ln165_1_fu_1579_p3 = ((write_flag4_0_fu_184[0:0] === 1'b1) ? dw_weight116_04_fu_176 : dw_weight1_1_read);

assign select_ln165_2_fu_1586_p3 = ((write_flag8_0_fu_172[0:0] === 1'b1) ? dw_weight12_03_fu_164 : dw_weight1_2_read);

assign select_ln165_fu_1572_p3 = ((write_flag_0_fu_168[0:0] === 1'b1) ? dw_weight1_05_fu_180 : dw_weight1_0_read);

assign select_ln57_1_fu_920_p3 = ((icmp_ln54_fu_906_p2[0:0] === 1'b1) ? i_2_fu_900_p2 : ap_phi_mux_i2_0_phi_fu_460_p4);

assign select_ln57_fu_912_p3 = ((icmp_ln54_fu_906_p2[0:0] === 1'b1) ? 7'd0 : j3_0_reg_467);

assign select_ln66_1_fu_991_p3 = ((icmp_ln63_fu_977_p2[0:0] === 1'b1) ? i_4_fu_971_p2 : ap_phi_mux_i4_0_phi_fu_493_p4);

assign select_ln66_fu_983_p3 = ((icmp_ln63_fu_977_p2[0:0] === 1'b1) ? 7'd0 : j5_0_reg_500);

assign select_ln83_1_fu_1079_p3 = ((icmp_ln80_fu_1065_p2[0:0] === 1'b1) ? i_7_fu_1059_p2 : ap_phi_mux_i7_0_phi_fu_538_p4);

assign select_ln83_fu_1071_p3 = ((icmp_ln80_fu_1065_p2[0:0] === 1'b1) ? 7'd0 : j8_0_reg_545);

assign select_ln92_1_fu_1150_p3 = ((icmp_ln89_fu_1136_p2[0:0] === 1'b1) ? i_9_fu_1130_p2 : ap_phi_mux_i9_0_phi_fu_571_p4);

assign select_ln92_fu_1142_p3 = ((icmp_ln89_fu_1136_p2[0:0] === 1'b1) ? 7'd0 : j10_0_reg_578);

assign sext_ln153_fu_1532_p1 = $signed(add_ln153_fu_1526_p2);

assign sub_ln153_fu_1517_p2 = (tmp_37_fu_1499_p3 - zext_ln153_fu_1513_p1);

assign tmp_30_fu_934_p3 = {{select_ln57_1_reg_1706}, {6'd0}};

assign tmp_31_fu_1005_p3 = {{select_ln66_1_reg_1731}, {6'd0}};

assign tmp_32_fu_1093_p3 = {{select_ln83_1_reg_1765}, {6'd0}};

assign tmp_33_fu_1164_p3 = {{select_ln92_1_reg_1790}, {6'd0}};

assign tmp_34_fu_1252_p3 = {{select_ln109_1_reg_1824}, {6'd0}};

assign tmp_35_fu_1323_p3 = {{select_ln118_1_reg_1849}, {6'd0}};

assign tmp_36_fu_1411_p3 = {{select_ln135_1_reg_1883}, {6'd0}};

assign tmp_37_fu_1499_p3 = {{select_ln153_1_reg_1917}, {4'd0}};

assign tmp_38_fu_1506_p3 = {{select_ln153_1_reg_1917}, {2'd0}};

assign weights_hu_address0 = zext_ln109_1_fu_1272_p1;

assign weights_hu_d0 = grp_fu_769_p1;

assign weights_hw_address0 = zext_ln118_1_fu_1343_p1;

assign weights_hw_d0 = grp_fu_769_p1;

assign weights_ru_address0 = zext_ln57_1_fu_954_p1;

assign weights_ru_d0 = grp_fu_769_p1;

assign weights_rw_address0 = zext_ln66_1_fu_1025_p1;

assign weights_rw_d0 = grp_fu_769_p1;

assign weights_zu_address0 = zext_ln83_1_fu_1113_p1;

assign weights_zu_d0 = grp_fu_769_p1;

assign weights_zw_address0 = zext_ln92_1_fu_1184_p1;

assign weights_zw_d0 = grp_fu_769_p1;

assign zext_ln100_fu_1201_p1 = i11_0_reg_589;

assign zext_ln106_fu_1259_p1 = tmp_34_fu_1252_p3;

assign zext_ln109_1_fu_1272_p1 = add_ln109_fu_1266_p2;

assign zext_ln109_fu_1263_p1 = select_ln109_reg_1819;

assign zext_ln115_fu_1330_p1 = tmp_35_fu_1323_p3;

assign zext_ln118_1_fu_1343_p1 = add_ln118_fu_1337_p2;

assign zext_ln118_fu_1334_p1 = select_ln118_reg_1844;

assign zext_ln126_fu_1360_p1 = i16_0_reg_667;

assign zext_ln132_fu_1418_p1 = tmp_36_fu_1411_p3;

assign zext_ln135_1_fu_1431_p1 = add_ln135_fu_1425_p2;

assign zext_ln135_fu_1422_p1 = select_ln135_reg_1878;

assign zext_ln144_fu_1448_p1 = i19_0_reg_712;

assign zext_ln153_1_fu_1523_p1 = select_ln153_reg_1912;

assign zext_ln153_fu_1513_p1 = tmp_38_fu_1506_p3;

assign zext_ln161_fu_1549_p1 = i22_0_reg_757;

assign zext_ln42_fu_866_p1 = j1_0_reg_421;

assign zext_ln49_fu_883_p1 = i_0_reg_433;

assign zext_ln54_fu_941_p1 = tmp_30_fu_934_p3;

assign zext_ln57_1_fu_954_p1 = add_ln57_fu_948_p2;

assign zext_ln57_fu_945_p1 = select_ln57_reg_1701;

assign zext_ln63_fu_1012_p1 = tmp_31_fu_1005_p3;

assign zext_ln66_1_fu_1025_p1 = add_ln66_fu_1019_p2;

assign zext_ln66_fu_1016_p1 = select_ln66_reg_1726;

assign zext_ln74_fu_1042_p1 = i6_0_reg_511;

assign zext_ln80_fu_1100_p1 = tmp_32_fu_1093_p3;

assign zext_ln83_1_fu_1113_p1 = add_ln83_fu_1107_p2;

assign zext_ln83_fu_1104_p1 = select_ln83_reg_1760;

assign zext_ln89_fu_1171_p1 = tmp_33_fu_1164_p3;

assign zext_ln92_1_fu_1184_p1 = add_ln92_fu_1178_p2;

assign zext_ln92_fu_1175_p1 = select_ln92_reg_1785;

endmodule //weight_loader
