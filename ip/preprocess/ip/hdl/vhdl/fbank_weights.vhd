-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
-- Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity fbank_weights_rom is 
    generic(
             DWIDTH     : integer := 32; 
             AWIDTH     : integer := 10; 
             MEM_SIZE    : integer := 513
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of fbank_weights_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 to 1=> "00000000000000000000000000000000", 
    2 => "00111111001010010100001001110001", 
    3 => "00111110010010111110010101110110", 
    4 => "00111111001111110010001101000101", 
    5 => "00111110100110110100110101110010", 
    6 => "00111111010111100110101111110011", 
    7 => "00111110111000101011100001000101", 
    8 => "00111100110011000100011000010001", 
    9 => "00111111000111010110101000111000", 
    10 => "00111110010110011000010000001000", 
    11 => "00111111010100010011010011010011", 
    12 => "00111110110110111010100110011011", 
    13 => "00111101010000110000101100011001", 
    14 => "00111111001011000011100101011000", 
    15 => "00111110100110111100000010100100", 
    16 => "00111111011100010001011111011001", 
    17 => "00111111000101011101001011111010", 
    18 => "00111110011100000001010000111100", 
    19 => "00111111011000111010001001110101", 
    20 => "00111111000011001001111110100111", 
    21 => "00111110010110111100011111101111", 
    22 => "00111111011000101000111100100011", 
    23 => "00111111000011110110110101000010", 
    24 => "00111110011101100000110010100100", 
    25 => "00111111011011001100011110001000", 
    26 => "00111111000111010011000111110101", 
    27 => "00111110100111010111010000110011", 
    28 => "00111011101011000000101011011111", 
    29 => "00111111001101010000010001010110", 
    30 => "00111110110100110110111100111010", 
    31 => "00111101111110110101100000011101", 
    32 => "00111111010101100001011110001100", 
    33 => "00111111000011011011011100000010", 
    34 => "00111110100011001000011000011000", 
    35 => "00111111011111111011010111000101", 
    36 => "00111111001110100000100101011011", 
    37 => "00111110111010100111000011000010", 
    38 => "00111110010001001111011001000000", 
    39 => "00111111011011100001001110100011", 
    40 => "00111111001010111011010110111010", 
    41 => "00111110110101000011110110110101", 
    42 => "00111110001001010010101010101110", 
    43 => "00111111011010010011010010000101", 
    44 => "00111111001010011101100000100000", 
    45 => "00111110110101100110001101000000", 
    46 => "00111110001101001111000101110111", 
    47 => "00111111011011111111010100101010", 
    48 => "00111111001100110101011111000010", 
    49 => "00111110111011101100000101001110", 
    50 => "00111110011100000011000101101111", 
    51 => "00111011101010111011101101110001", 
    52 => "00111111010001110011111011001010", 
    53 => "00111111000011011011111010011100", 
    54 => "00111110101010011010100100001011", 
    55 => "00111101111000111110100001000101", 
    56 => "00111111011001001011010101011011", 
    57 => "00111111001011010111101010011101", 
    58 => "00111110111011011001010000110001", 
    59 => "00111110100000010100001001111100", 
    60 => "00111101001011111101000110101001", 
    61 => "00111111010101011101101110011010", 
    62 => "00111111001000010011100111101110", 
    63 => "00111110110110100010101110101110", 
    64 => "00111110011001011011010000000011", 
    65 => "00111100110001111010010101101101", 
    66 => "00111111010100111000010000111011", 
    67 => "00111111001000010011111110100100", 
    68 => "00111110110111101101110000000011", 
    69 => "00111110011110000011001101011100", 
    70 => "00111101010100011010001000010100", 
    71 => "00111111010111001001010000101110", 
    72 => "00111111001011000111100100011110", 
    73 => "00111110111110011000111000101010", 
    74 => "00111110100110101111100000011011", 
    75 => "00111101111101001011011001010111", 
    76 => "00111111011100000001010100100001", 
    77 => "00111111010000011111010110101001", 
    78 => "00111111000101000011011010110000", 
    79 => "00111110110011011010110101001111", 
    80 => "00111110011001110101000101001001", 
    81 => "00111101010100101101101011000011", 
    82 => "00111111011000001110000111000010", 
    83 => "00111111001101001110111010111010", 
    84 => "00111111000010010101001110000000", 
    85 => "00111110101111000001110100001110", 
    86 => "00111110010011000111101001000101", 
    87 => "00111101000010000010011000010011", 
    88 => "00111111010111100011100010010111", 
    89 => "00111111001101000100000000010111", 
    90 => "00111111000010101001011110100101", 
    91 => "00111110110000100111101110110010", 
    92 => "00111110011000001100011100011000", 
    93 => "00111101011101110010010101011011", 
    94 => "00111111011001101111111001001010", 
    95 => "00111111001111101101010010001110", 
    96 => "00111111000101101111010000110010", 
    97 => "00111110110111101011011111110100", 
    98 => "00111110100100000001010111101100", 
    99 => "00111110000001000000000011100010", 
    100 => "00111111011110100011101010101011", 
    101 => "00111111010100111011100110000010", 
    102 => "00111111001011010111101111010100", 
    103 => "00111111000001111000000010001100", 
    104 => "00111110110000111000110101111000", 
    105 => "00111110011100010011011001110001", 
    106 => "00111101101110001010001100110110", 
    107 => "00111111011100100001101000001000", 
    108 => "00111111010011010101111000001001", 
    109 => "00111111001010001101111101010010", 
    110 => "00111111000001001001110100011010", 
    111 => "00111110110000010010110100111011", 
    112 => "00111110011100110010110011101101", 
    113 => "00111101110010011101000000101110", 
    114 => "00111111011101011110001001011110", 
    115 => "00111111010100101100001101111110", 
    116 => "00111111001011111101110011000110", 
    117 => "00111111000011010010110101110001", 
    118 => "00111110110101010110100101101100", 
    119 => "00111110100100001110010001000000", 
    120 => "00111110000110011001001110011101", 
    121 => "00111100100100011000110110100111", 
    122 => "00111111011000101110011111100111", 
    123 => "00111111010000010111011100001001", 
    124 => "00111111001000000011100100001101", 
    125 => "00111110111111100101101001011001", 
    126 => "00111110101111001010010111100010", 
    127 => "00111110011101101010100000101000", 
    128 => "00111101111010011000101100010011", 
    129 => "00111111011111001110100011010011", 
    130 => "00111111010111001100111111101000", 
    131 => "00111111001111001110010110101110", 
    132 => "00111111000111010010100110110000", 
    133 => "00111110111110110011011100111010", 
    134 => "00111110101111000111010110101101", 
    135 => "00111110011111000001101110010101", 
    136 => "00111101111111111111101010010010", 
    137 => "00111011100100011010101101110000", 
    138 => "00111111011000100111001011101111", 
    139 => "00111111010000111110110101010111", 
    140 => "00111111001001011001000111110010", 
    141 => "00111111000001110110000001110000", 
    142 => "00111110110100101011000110100000", 
    143 => "00111110100101101111001111111010", 
    144 => "00111110001101110000111010011111", 
    145 => "00111101100000011010111001111111", 
    146 => "00111111011100101100111110110001", 
    147 => "00111111010101011001000010101100", 
    148 => "00111111001110000111100010010111", 
    149 => "00111111000110111000011101001011", 
    150 => "00111110111111010111100000000011", 
    151 => "00111110110001000010110011010011", 
    152 => "00111110100010110010110001101010", 
    153 => "00111110001001001110110001010001", 
    154 => "00111101010100000100011010000100", 
    155 => "00111111011100001111001000001001", 
    156 => "00111111010101010000001110101000", 
    157 => "00111111001110010011100010100101", 
    158 => "00111111000111011001000011011010", 
    159 => "00111111000000100000101111110110", 
    160 => "00111110110011010101001100000101", 
    161 => "00111110100101101101001000010001", 
    162 => "00111110010000010010101000100000", 
    163 => "00111101101010100110110001001110", 
    164 => "00111111011110100111000110111101", 
    165 => "00111111010111111011011010101001", 
    166 => "00111111010001010001110000101001", 
    167 => "00111111001010101010001000010101", 
    168 => "00111111000100000100011110100111", 
    169 => "00111110111011000001100110111101", 
    170 => "00111110101101111110001100101000", 
    171 => "00111110100000111110101010100000", 
    172 => "00111110001000000101111001110000", 
    173 => "00111101011001011000100111110101", 
    174 => "00111111011101001011011110111101", 
    175 => "00111111010110110011010011001101", 
    176 => "00111111010000011100111101011000", 
    177 => "00111111001010001000011110000011", 
    178 => "00111111000011110101110010110010", 
    179 => "00111110111011001001110100100110", 
    180 => "00111110101110101011101010011110", 
    181 => "00111110100010010001000010001110", 
    182 => "00111110001011110011110101001100", 
    183 => "00111101100110011001001001011111", 
    184 => "00111111011110101011000010111001", 
    185 => "00111111011000100100101010011001", 
    186 => "00111111010010011111111101110111", 
    187 => "00111111001100011100111101010011", 
    188 => "00111111000110011011100111011110", 
    189 => "00111111000000011011111011001001", 
    190 => "00111110110100111011110000100101", 
    191 => "00111110101001000010111000111010", 
    192 => "00111110011010011010100000111110", 
    193 => "00111110000010110101100100101110", 
    194 => "00111101001101011100001000000100", 
    195 => "00111111011100111111101011110001", 
    196 => "00111111010111001011001010111101", 
    197 => "00111111010001011000001101011100", 
    198 => "00111111001011100110110000101110", 
    199 => "00111111000101110110110110000011", 
    200 => "00111111000000001000011011100011", 
    201 => "00111110110100110111000001010000", 
    202 => "00111110101001100000001001010001", 
    203 => "00111110011100011000011001011000", 
    204 => "00111110000101110110010111000001", 
    205 => "00111101011101101000011010000000", 
    206 => "00111111011110010000111001010101", 
    207 => "00111111011000101100101011101001", 
    208 => "00111111010011001001111001001011", 
    209 => "00111111001101101000011111011011", 
    210 => "00111111001000001000011111000011", 
    211 => "00111111000010101001110111011001", 
    212 => "00111110111010011001001101010000", 
    213 => "00111110101111100001011010101100", 
    214 => "00111110100100101100010011011010", 
    215 => "00111110010011110011101110110000", 
    216 => "00111101111100101000010000100100", 
    217 => "00111101000011100111010111011011", 
    218 => "00111111011100111001001100100110", 
    219 => "00111111010111100101001110010000", 
    220 => "00111111010010010010100010011011", 
    221 => "00111111001101000001000111111001", 
    222 => "00111111000111110000111110101001", 
    223 => "00111111000010100010000101011100", 
    224 => "00111110111010101000111001110101", 
    225 => "00111110110000010000000111101001", 
    226 => "00111110100101111001110000100101", 
    227 => "00111110010111001011101110010000", 
    228 => "00111110000010101000110001100111", 
    229 => "00111101011000101010100011000011", 
    230 => "00111111011110011100010100010011", 
    231 => "00111111011001010111001010110000", 
    232 => "00111111010100010011001100010001", 
    233 => "00111111001111010000011000010000", 
    234 => "00111111001010001110101110101101", 
    235 => "00111111000101001110001110011000", 
    236 => "00111111000000001110111000100001", 
    237 => "00111110110110100001010010110011", 
    238 => "00111110101100100111000111000000", 
    239 => "00111110100010101111001011001010", 
    240 => "00111110010001110010111001101000", 
    241 => "00111101111100010111101111110001", 
    242 => "00111101001010100100110000100100", 
    243 => "00111111011101110010101110111000", 
    244 => "00111111011000111100001111000011", 
    245 => "00111111010100000110110100101101", 
    246 => "00111111001111010010011110100111", 
    247 => "00111111001010011111001011100011", 
    248 => "00111111000101101100111011100000", 
    249 => "00111111000000111011101110011110", 
    250 => "00111110111000010111001000111001", 
    251 => "00111110101110111000111000011011", 
    252 => "00111110100101011100101011011111", 
    253 => "00111110011000000100111111010001", 
    254 => "00111110000101010100101001101100", 
    255 => "00111101100101010000101100100001", 
    256 to 512=> "00000000000000000000000000000000" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity fbank_weights is
    generic (
        DataWidth : INTEGER := 32;
        AddressRange : INTEGER := 513;
        AddressWidth : INTEGER := 10);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of fbank_weights is
    component fbank_weights_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    fbank_weights_rom_U :  component fbank_weights_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


