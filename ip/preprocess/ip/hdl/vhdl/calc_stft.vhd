-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity calc_stft is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    signal_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    signal_0_ce0 : OUT STD_LOGIC;
    signal_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    signal_1_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    signal_1_ce0 : OUT STD_LOGIC;
    signal_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    signal_2_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    signal_2_ce0 : OUT STD_LOGIC;
    signal_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    signal_3_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    signal_3_ce0 : OUT STD_LOGIC;
    signal_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    signal_4_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    signal_4_ce0 : OUT STD_LOGIC;
    signal_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    signal_5_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    signal_5_ce0 : OUT STD_LOGIC;
    signal_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    signal_6_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    signal_6_ce0 : OUT STD_LOGIC;
    signal_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    signal_7_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    signal_7_ce0 : OUT STD_LOGIC;
    signal_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    spectrogram_0_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
    spectrogram_0_ce1 : OUT STD_LOGIC;
    spectrogram_0_we1 : OUT STD_LOGIC;
    spectrogram_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    spectrogram_1_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
    spectrogram_1_ce1 : OUT STD_LOGIC;
    spectrogram_1_we1 : OUT STD_LOGIC;
    spectrogram_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    spectrogram_2_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
    spectrogram_2_ce1 : OUT STD_LOGIC;
    spectrogram_2_we1 : OUT STD_LOGIC;
    spectrogram_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    spectrogram_3_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
    spectrogram_3_ce1 : OUT STD_LOGIC;
    spectrogram_3_we1 : OUT STD_LOGIC;
    spectrogram_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    cosines_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    cosines_0_ce0 : OUT STD_LOGIC;
    cosines_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    cosines_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    cosines_1_ce0 : OUT STD_LOGIC;
    cosines_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    cosines_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    cosines_2_ce0 : OUT STD_LOGIC;
    cosines_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    cosines_3_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    cosines_3_ce0 : OUT STD_LOGIC;
    cosines_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    cosines_4_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    cosines_4_ce0 : OUT STD_LOGIC;
    cosines_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    cosines_5_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    cosines_5_ce0 : OUT STD_LOGIC;
    cosines_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    cosines_6_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    cosines_6_ce0 : OUT STD_LOGIC;
    cosines_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    cosines_7_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    cosines_7_ce0 : OUT STD_LOGIC;
    cosines_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    cosines_8_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    cosines_8_ce0 : OUT STD_LOGIC;
    cosines_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    cosines_9_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    cosines_9_ce0 : OUT STD_LOGIC;
    cosines_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    cosines_10_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    cosines_10_ce0 : OUT STD_LOGIC;
    cosines_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    cosines_11_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    cosines_11_ce0 : OUT STD_LOGIC;
    cosines_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    cosines_12_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    cosines_12_ce0 : OUT STD_LOGIC;
    cosines_12_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    cosines_13_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    cosines_13_ce0 : OUT STD_LOGIC;
    cosines_13_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    cosines_14_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    cosines_14_ce0 : OUT STD_LOGIC;
    cosines_14_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    cosines_15_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    cosines_15_ce0 : OUT STD_LOGIC;
    cosines_15_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    cosines_16_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    cosines_16_ce0 : OUT STD_LOGIC;
    cosines_16_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    cosines_17_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    cosines_17_ce0 : OUT STD_LOGIC;
    cosines_17_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    cosines_18_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    cosines_18_ce0 : OUT STD_LOGIC;
    cosines_18_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    cosines_19_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    cosines_19_ce0 : OUT STD_LOGIC;
    cosines_19_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of calc_stft is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000010";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000100";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000001000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (14 downto 0) := "000000000010000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000100000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (14 downto 0) := "000000001000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (14 downto 0) := "000000010000000";
    constant ap_ST_fsm_pp3_stage0 : STD_LOGIC_VECTOR (14 downto 0) := "000000100000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (14 downto 0) := "000001000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (14 downto 0) := "000010000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (14 downto 0) := "000100000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (14 downto 0) := "001000000000000";
    constant ap_ST_fsm_pp5_stage0 : STD_LOGIC_VECTOR (14 downto 0) := "010000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (14 downto 0) := "100000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv11_280 : STD_LOGIC_VECTOR (10 downto 0) := "01010000000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv15_7A80 : STD_LOGIC_VECTOR (14 downto 0) := "111101010000000";
    constant ap_const_lv15_1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv10_280 : STD_LOGIC_VECTOR (9 downto 0) := "1010000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv10_14 : STD_LOGIC_VECTOR (9 downto 0) := "0000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv6_31 : STD_LOGIC_VECTOR (5 downto 0) := "110001";
    constant ap_const_lv11_400 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv10_201 : STD_LOGIC_VECTOR (9 downto 0) := "1000000001";
    constant ap_const_lv22_667 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000011001100111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten_reg_1139 : STD_LOGIC_VECTOR (14 downto 0);
    signal i_0_reg_1150 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_0_reg_1161 : STD_LOGIC_VECTOR (9 downto 0);
    signal indvar_flatten11_reg_1172 : STD_LOGIC_VECTOR (14 downto 0);
    signal i1_0_reg_1183 : STD_LOGIC_VECTOR (5 downto 0);
    signal j2_0_reg_1194 : STD_LOGIC_VECTOR (9 downto 0);
    signal indvar_flatten23_reg_1205 : STD_LOGIC_VECTOR (14 downto 0);
    signal i3_0_reg_1216 : STD_LOGIC_VECTOR (5 downto 0);
    signal j4_0_reg_1227 : STD_LOGIC_VECTOR (9 downto 0);
    signal j6_0_reg_1249 : STD_LOGIC_VECTOR (9 downto 0);
    signal j8_0_reg_1271 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1306_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1314 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp2_iter17 : STD_LOGIC := '0';
    signal ap_block_state11_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state12_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_state13_pp2_stage0_iter2 : BOOLEAN;
    signal ap_block_state14_pp2_stage0_iter3 : BOOLEAN;
    signal ap_block_state15_pp2_stage0_iter4 : BOOLEAN;
    signal ap_block_state16_pp2_stage0_iter5 : BOOLEAN;
    signal ap_block_state17_pp2_stage0_iter6 : BOOLEAN;
    signal ap_block_state18_pp2_stage0_iter7 : BOOLEAN;
    signal ap_block_state19_pp2_stage0_iter8 : BOOLEAN;
    signal ap_block_state20_pp2_stage0_iter9 : BOOLEAN;
    signal ap_block_state21_pp2_stage0_iter10 : BOOLEAN;
    signal ap_block_state22_pp2_stage0_iter11 : BOOLEAN;
    signal ap_block_state23_pp2_stage0_iter12 : BOOLEAN;
    signal ap_block_state24_pp2_stage0_iter13 : BOOLEAN;
    signal ap_block_state25_pp2_stage0_iter14 : BOOLEAN;
    signal ap_block_state26_pp2_stage0_iter15 : BOOLEAN;
    signal ap_block_state27_pp2_stage0_iter16 : BOOLEAN;
    signal ap_block_state28_pp2_stage0_iter17 : BOOLEAN;
    signal ap_block_state29_pp2_stage0_iter18 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal icmp_ln55_reg_2264 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln55_reg_2264_pp2_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state38_pp5_stage0_iter0 : BOOLEAN;
    signal ap_block_state39_pp5_stage0_iter1 : BOOLEAN;
    signal ap_block_state40_pp5_stage0_iter2 : BOOLEAN;
    signal ap_block_state41_pp5_stage0_iter3 : BOOLEAN;
    signal ap_block_state42_pp5_stage0_iter4 : BOOLEAN;
    signal ap_block_state43_pp5_stage0_iter5 : BOOLEAN;
    signal ap_block_state44_pp5_stage0_iter6 : BOOLEAN;
    signal ap_block_state45_pp5_stage0_iter7 : BOOLEAN;
    signal ap_block_state46_pp5_stage0_iter8 : BOOLEAN;
    signal ap_block_state47_pp5_stage0_iter9 : BOOLEAN;
    signal ap_block_state48_pp5_stage0_iter10 : BOOLEAN;
    signal ap_block_state49_pp5_stage0_iter11 : BOOLEAN;
    signal ap_block_pp5_stage0_11001 : BOOLEAN;
    signal ap_enable_reg_pp5_iter5 : STD_LOGIC := '0';
    signal icmp_ln34_fu_1320_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln34_reg_2115 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal add_ln34_fu_1326_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal select_ln34_fu_1344_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln34_reg_2124 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln34_1_fu_1352_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln34_1_reg_2129 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln40_fu_1360_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln40_reg_2138 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_89_reg_2142 : STD_LOGIC_VECTOR (7 downto 0);
    signal j_fu_1374_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln44_fu_1462_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln44_reg_2152 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state5_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state6_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state7_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state8_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_state9_pp1_stage0_iter4 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal icmp_ln44_reg_2152_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln44_reg_2152_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln44_reg_2152_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln44_fu_1468_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal select_ln50_fu_1486_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln50_reg_2161 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln50_1_fu_1494_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln50_1_reg_2166 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln50_fu_1502_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln50_reg_2174 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln50_reg_2174_pp1_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_90_reg_2179 : STD_LOGIC_VECTOR (7 downto 0);
    signal j_4_fu_1516_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln50_2_fu_1574_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln50_2_reg_2189 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln50_2_reg_2189_pp1_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln50_2_reg_2189_pp1_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln50_1_fu_1630_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln50_1_reg_2214 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_39_fu_1659_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_39_reg_2259 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln55_fu_1685_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal icmp_ln55_reg_2264_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln55_reg_2264_pp2_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln55_reg_2264_pp2_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln55_reg_2264_pp2_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln55_reg_2264_pp2_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln55_reg_2264_pp2_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln55_reg_2264_pp2_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln55_reg_2264_pp2_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln55_reg_2264_pp2_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln55_reg_2264_pp2_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln55_reg_2264_pp2_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln55_reg_2264_pp2_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln55_reg_2264_pp2_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln55_reg_2264_pp2_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln55_reg_2264_pp2_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln55_reg_2264_pp2_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln55_fu_1691_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal select_ln62_fu_1709_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln62_reg_2273 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln62_reg_2273_pp2_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln62_reg_2273_pp2_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln62_reg_2273_pp2_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln62_reg_2273_pp2_iter4_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln62_reg_2273_pp2_iter5_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln62_reg_2273_pp2_iter6_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln62_reg_2273_pp2_iter7_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln62_reg_2273_pp2_iter8_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln62_reg_2273_pp2_iter9_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln62_reg_2273_pp2_iter10_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln62_1_fu_1717_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln62_1_reg_2280 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln62_1_reg_2280_pp2_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln62_1_reg_2280_pp2_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln62_1_reg_2280_pp2_iter3_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln62_1_reg_2280_pp2_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln62_1_reg_2280_pp2_iter5_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln62_1_reg_2280_pp2_iter6_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln62_1_reg_2280_pp2_iter7_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln62_1_reg_2280_pp2_iter8_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln62_1_reg_2280_pp2_iter9_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln62_1_reg_2280_pp2_iter10_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal j_5_fu_1731_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal frames_addr_1_reg_2292 : STD_LOGIC_VECTOR (14 downto 0);
    signal frames_addr_1_reg_2292_pp2_iter12_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal frames_addr_1_reg_2292_pp2_iter13_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal frames_addr_1_reg_2292_pp2_iter14_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal frames_addr_1_reg_2292_pp2_iter15_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal frames_addr_1_reg_2292_pp2_iter16_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal frames_addr_1_reg_2292_pp2_iter17_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_91_reg_2298 : STD_LOGIC_VECTOR (6 downto 0);
    signal frames_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal frames_load_reg_2403 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp2_iter13 : STD_LOGIC := '0';
    signal tmp_40_fu_1822_p22 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_40_reg_2408 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln67_fu_1868_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal i_14_fu_1874_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_14_reg_2417 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln97_6_fu_1896_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln97_6_reg_2422 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln97_fu_1900_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln97_reg_2427 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln75_fu_1918_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln75_reg_2432 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln72_fu_1924_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp3_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage0 : signal is "none";
    signal ap_block_state32_pp3_stage0_iter0 : BOOLEAN;
    signal ap_block_state33_pp3_stage0_iter1 : BOOLEAN;
    signal ap_block_pp3_stage0_11001 : BOOLEAN;
    signal j_6_fu_1930_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_enable_reg_pp3_iter0 : STD_LOGIC := '0';
    signal trunc_ln75_fu_1950_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln75_reg_2451 : STD_LOGIC_VECTOR (1 downto 0);
    signal frames_temp_0_addr_reg_2455 : STD_LOGIC_VECTOR (7 downto 0);
    signal frames_temp_1_addr_reg_2460 : STD_LOGIC_VECTOR (7 downto 0);
    signal frames_temp_2_addr_reg_2465 : STD_LOGIC_VECTOR (7 downto 0);
    signal frames_temp_3_addr_reg_2470 : STD_LOGIC_VECTOR (7 downto 0);
    signal j_7_fu_2008_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal icmp_ln80_fu_1976_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_fu_2014_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp5_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp5_stage0 : signal is "none";
    signal j_8_fu_2020_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_enable_reg_pp5_iter0 : STD_LOGIC := '0';
    signal trunc_ln97_fu_2026_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln97_reg_2495 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln97_reg_2495_pp5_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln97_reg_2495_pp5_iter2_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln97_reg_2495_pp5_iter3_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln97_reg_2495_pp5_iter4_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln97_reg_2495_pp5_iter5_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln97_reg_2495_pp5_iter6_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln97_reg_2495_pp5_iter7_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln97_reg_2495_pp5_iter8_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln97_reg_2495_pp5_iter9_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln97_reg_2495_pp5_iter10_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal lshr_ln2_fu_2030_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln2_reg_2500 : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln2_reg_2500_pp5_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln2_reg_2500_pp5_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln2_reg_2500_pp5_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln2_reg_2500_pp5_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln2_reg_2500_pp5_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln2_reg_2500_pp5_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln2_reg_2500_pp5_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln2_reg_2500_pp5_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln2_reg_2500_pp5_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln2_reg_2500_pp5_iter10_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_41_fu_2055_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_41_reg_2545 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_42_fu_2069_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_42_reg_2551 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1310_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_35_reg_2557 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1302_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_36_reg_2562 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state5 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state11 : STD_LOGIC;
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter18 : STD_LOGIC := '0';
    signal ap_block_pp3_stage0_subdone : BOOLEAN;
    signal ap_condition_pp3_exit_iter0_state32 : STD_LOGIC;
    signal ap_enable_reg_pp3_iter1 : STD_LOGIC := '0';
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal grp_kfft_fu_1282_ap_ready : STD_LOGIC;
    signal grp_kfft_fu_1282_ap_done : STD_LOGIC;
    signal ap_block_pp5_stage0_subdone : BOOLEAN;
    signal ap_condition_pp5_exit_iter0_state38 : STD_LOGIC;
    signal ap_enable_reg_pp5_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp5_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp5_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp5_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp5_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp5_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp5_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp5_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp5_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp5_iter11 : STD_LOGIC := '0';
    signal indices_0_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal indices_0_ce0 : STD_LOGIC;
    signal indices_0_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal indices_0_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal indices_0_ce1 : STD_LOGIC;
    signal indices_0_we1 : STD_LOGIC;
    signal indices_1_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal indices_1_ce0 : STD_LOGIC;
    signal indices_1_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal indices_1_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal indices_1_ce1 : STD_LOGIC;
    signal indices_1_we1 : STD_LOGIC;
    signal indices_2_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal indices_2_ce0 : STD_LOGIC;
    signal indices_2_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal indices_2_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal indices_2_ce1 : STD_LOGIC;
    signal indices_2_we1 : STD_LOGIC;
    signal indices_3_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal indices_3_ce0 : STD_LOGIC;
    signal indices_3_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal indices_3_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal indices_3_ce1 : STD_LOGIC;
    signal indices_3_we1 : STD_LOGIC;
    signal frames_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal frames_ce0 : STD_LOGIC;
    signal frames_we0 : STD_LOGIC;
    signal frames_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal frames_ce1 : STD_LOGIC;
    signal frames_we1 : STD_LOGIC;
    signal frames_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal fft_input_i_0_ce0 : STD_LOGIC;
    signal fft_input_i_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal fft_input_i_0_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal fft_input_i_0_ce1 : STD_LOGIC;
    signal fft_input_i_0_we1 : STD_LOGIC;
    signal fft_input_i_0_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal fft_input_i_1_ce0 : STD_LOGIC;
    signal fft_input_i_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal fft_input_i_1_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal fft_input_i_1_ce1 : STD_LOGIC;
    signal fft_input_i_1_we1 : STD_LOGIC;
    signal fft_input_i_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal fft_input_i_1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal fft_input_i_2_ce0 : STD_LOGIC;
    signal fft_input_i_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal fft_input_i_2_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal fft_input_i_2_ce1 : STD_LOGIC;
    signal fft_input_i_2_we1 : STD_LOGIC;
    signal fft_input_i_2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal fft_input_i_3_ce0 : STD_LOGIC;
    signal fft_input_i_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal fft_input_i_3_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal fft_input_i_3_ce1 : STD_LOGIC;
    signal fft_input_i_3_we1 : STD_LOGIC;
    signal fft_input_i_3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal fft_frame_r_temp_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal fft_frame_r_temp_0_ce0 : STD_LOGIC;
    signal fft_frame_r_temp_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal fft_frame_r_temp_0_ce1 : STD_LOGIC;
    signal fft_frame_r_temp_0_we1 : STD_LOGIC;
    signal fft_frame_r_temp_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal fft_frame_r_temp_1_ce0 : STD_LOGIC;
    signal fft_frame_r_temp_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal fft_frame_r_temp_1_ce1 : STD_LOGIC;
    signal fft_frame_r_temp_1_we1 : STD_LOGIC;
    signal fft_frame_r_temp_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal fft_frame_r_temp_2_ce0 : STD_LOGIC;
    signal fft_frame_r_temp_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal fft_frame_r_temp_2_ce1 : STD_LOGIC;
    signal fft_frame_r_temp_2_we1 : STD_LOGIC;
    signal fft_frame_r_temp_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal fft_frame_r_temp_3_ce0 : STD_LOGIC;
    signal fft_frame_r_temp_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal fft_frame_r_temp_3_ce1 : STD_LOGIC;
    signal fft_frame_r_temp_3_we1 : STD_LOGIC;
    signal fft_frame_i_temp_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal fft_frame_i_temp_0_ce0 : STD_LOGIC;
    signal fft_frame_i_temp_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal fft_frame_i_temp_0_ce1 : STD_LOGIC;
    signal fft_frame_i_temp_0_we1 : STD_LOGIC;
    signal fft_frame_i_temp_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal fft_frame_i_temp_1_ce0 : STD_LOGIC;
    signal fft_frame_i_temp_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal fft_frame_i_temp_1_ce1 : STD_LOGIC;
    signal fft_frame_i_temp_1_we1 : STD_LOGIC;
    signal fft_frame_i_temp_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal fft_frame_i_temp_2_ce0 : STD_LOGIC;
    signal fft_frame_i_temp_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal fft_frame_i_temp_2_ce1 : STD_LOGIC;
    signal fft_frame_i_temp_2_we1 : STD_LOGIC;
    signal fft_frame_i_temp_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal fft_frame_i_temp_3_ce0 : STD_LOGIC;
    signal fft_frame_i_temp_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal fft_frame_i_temp_3_ce1 : STD_LOGIC;
    signal fft_frame_i_temp_3_we1 : STD_LOGIC;
    signal frames_temp_0_ce0 : STD_LOGIC;
    signal frames_temp_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal frames_temp_0_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal frames_temp_0_ce1 : STD_LOGIC;
    signal frames_temp_0_we1 : STD_LOGIC;
    signal frames_temp_0_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal frames_temp_1_ce0 : STD_LOGIC;
    signal frames_temp_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal frames_temp_1_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal frames_temp_1_ce1 : STD_LOGIC;
    signal frames_temp_1_we1 : STD_LOGIC;
    signal frames_temp_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal frames_temp_1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal frames_temp_2_ce0 : STD_LOGIC;
    signal frames_temp_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal frames_temp_2_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal frames_temp_2_ce1 : STD_LOGIC;
    signal frames_temp_2_we1 : STD_LOGIC;
    signal frames_temp_2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal frames_temp_3_ce0 : STD_LOGIC;
    signal frames_temp_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal frames_temp_3_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal frames_temp_3_ce1 : STD_LOGIC;
    signal frames_temp_3_we1 : STD_LOGIC;
    signal frames_temp_3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kfft_fu_1282_ap_start : STD_LOGIC;
    signal grp_kfft_fu_1282_ap_idle : STD_LOGIC;
    signal grp_kfft_fu_1282_pr_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_kfft_fu_1282_pr_0_ce0 : STD_LOGIC;
    signal grp_kfft_fu_1282_pr_0_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_kfft_fu_1282_pr_0_ce1 : STD_LOGIC;
    signal grp_kfft_fu_1282_pr_0_we1 : STD_LOGIC;
    signal grp_kfft_fu_1282_pr_0_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kfft_fu_1282_pr_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_kfft_fu_1282_pr_1_ce0 : STD_LOGIC;
    signal grp_kfft_fu_1282_pr_1_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_kfft_fu_1282_pr_1_ce1 : STD_LOGIC;
    signal grp_kfft_fu_1282_pr_1_we1 : STD_LOGIC;
    signal grp_kfft_fu_1282_pr_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kfft_fu_1282_pr_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_kfft_fu_1282_pr_2_ce0 : STD_LOGIC;
    signal grp_kfft_fu_1282_pr_2_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_kfft_fu_1282_pr_2_ce1 : STD_LOGIC;
    signal grp_kfft_fu_1282_pr_2_we1 : STD_LOGIC;
    signal grp_kfft_fu_1282_pr_2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kfft_fu_1282_pr_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_kfft_fu_1282_pr_3_ce0 : STD_LOGIC;
    signal grp_kfft_fu_1282_pr_3_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_kfft_fu_1282_pr_3_ce1 : STD_LOGIC;
    signal grp_kfft_fu_1282_pr_3_we1 : STD_LOGIC;
    signal grp_kfft_fu_1282_pr_3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kfft_fu_1282_pi_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_kfft_fu_1282_pi_0_ce0 : STD_LOGIC;
    signal grp_kfft_fu_1282_pi_0_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_kfft_fu_1282_pi_0_ce1 : STD_LOGIC;
    signal grp_kfft_fu_1282_pi_0_we1 : STD_LOGIC;
    signal grp_kfft_fu_1282_pi_0_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kfft_fu_1282_pi_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_kfft_fu_1282_pi_1_ce0 : STD_LOGIC;
    signal grp_kfft_fu_1282_pi_1_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_kfft_fu_1282_pi_1_ce1 : STD_LOGIC;
    signal grp_kfft_fu_1282_pi_1_we1 : STD_LOGIC;
    signal grp_kfft_fu_1282_pi_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kfft_fu_1282_pi_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_kfft_fu_1282_pi_2_ce0 : STD_LOGIC;
    signal grp_kfft_fu_1282_pi_2_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_kfft_fu_1282_pi_2_ce1 : STD_LOGIC;
    signal grp_kfft_fu_1282_pi_2_we1 : STD_LOGIC;
    signal grp_kfft_fu_1282_pi_2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kfft_fu_1282_pi_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_kfft_fu_1282_pi_3_ce0 : STD_LOGIC;
    signal grp_kfft_fu_1282_pi_3_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_kfft_fu_1282_pi_3_ce1 : STD_LOGIC;
    signal grp_kfft_fu_1282_pi_3_we1 : STD_LOGIC;
    signal grp_kfft_fu_1282_pi_3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kfft_fu_1282_fr_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_kfft_fu_1282_fr_0_ce0 : STD_LOGIC;
    signal grp_kfft_fu_1282_fr_0_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_kfft_fu_1282_fr_0_ce1 : STD_LOGIC;
    signal grp_kfft_fu_1282_fr_0_we1 : STD_LOGIC;
    signal grp_kfft_fu_1282_fr_0_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kfft_fu_1282_fr_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_kfft_fu_1282_fr_1_ce0 : STD_LOGIC;
    signal grp_kfft_fu_1282_fr_1_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_kfft_fu_1282_fr_1_ce1 : STD_LOGIC;
    signal grp_kfft_fu_1282_fr_1_we1 : STD_LOGIC;
    signal grp_kfft_fu_1282_fr_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kfft_fu_1282_fr_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_kfft_fu_1282_fr_2_ce0 : STD_LOGIC;
    signal grp_kfft_fu_1282_fr_2_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_kfft_fu_1282_fr_2_ce1 : STD_LOGIC;
    signal grp_kfft_fu_1282_fr_2_we1 : STD_LOGIC;
    signal grp_kfft_fu_1282_fr_2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kfft_fu_1282_fr_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_kfft_fu_1282_fr_3_ce0 : STD_LOGIC;
    signal grp_kfft_fu_1282_fr_3_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_kfft_fu_1282_fr_3_ce1 : STD_LOGIC;
    signal grp_kfft_fu_1282_fr_3_we1 : STD_LOGIC;
    signal grp_kfft_fu_1282_fr_3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kfft_fu_1282_fi_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_kfft_fu_1282_fi_0_ce0 : STD_LOGIC;
    signal grp_kfft_fu_1282_fi_0_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_kfft_fu_1282_fi_0_ce1 : STD_LOGIC;
    signal grp_kfft_fu_1282_fi_0_we1 : STD_LOGIC;
    signal grp_kfft_fu_1282_fi_0_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kfft_fu_1282_fi_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_kfft_fu_1282_fi_1_ce0 : STD_LOGIC;
    signal grp_kfft_fu_1282_fi_1_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_kfft_fu_1282_fi_1_ce1 : STD_LOGIC;
    signal grp_kfft_fu_1282_fi_1_we1 : STD_LOGIC;
    signal grp_kfft_fu_1282_fi_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kfft_fu_1282_fi_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_kfft_fu_1282_fi_2_ce0 : STD_LOGIC;
    signal grp_kfft_fu_1282_fi_2_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_kfft_fu_1282_fi_2_ce1 : STD_LOGIC;
    signal grp_kfft_fu_1282_fi_2_we1 : STD_LOGIC;
    signal grp_kfft_fu_1282_fi_2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kfft_fu_1282_fi_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_kfft_fu_1282_fi_3_ce0 : STD_LOGIC;
    signal grp_kfft_fu_1282_fi_3_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_kfft_fu_1282_fi_3_ce1 : STD_LOGIC;
    signal grp_kfft_fu_1282_fi_3_we1 : STD_LOGIC;
    signal grp_kfft_fu_1282_fi_3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_i_0_phi_fu_1154_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_i1_0_phi_fu_1187_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal ap_phi_mux_i3_0_phi_fu_1220_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal i5_0_reg_1238 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal j7_0_reg_1260 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal grp_kfft_fu_1282_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal zext_ln40_4_fu_1454_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln50_10_fu_1589_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln50_5_fu_1644_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln50_8_fu_1681_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln62_5_fu_1774_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln62_2_fu_1794_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln75_6_fu_1945_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp3_stage0 : BOOLEAN;
    signal zext_ln75_4_fu_1964_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln83_fu_1996_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln97_2_fu_2040_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp5_stage0 : BOOLEAN;
    signal zext_ln97_8_fu_2091_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln97_9_fu_2101_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln40_fu_1435_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln83_fu_1982_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1306_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1306_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln37_fu_1338_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_1332_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_56_fu_1394_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_57_fu_1405_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln40_fu_1401_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln40_1_fu_1412_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln40_1_mid2_fu_1387_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln37_fu_1422_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln40_1_fu_1425_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln40_2_fu_1431_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln40_mid2_fu_1380_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln40_3_fu_1445_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln40_2_fu_1416_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln40_3_fu_1448_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln47_fu_1480_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_12_fu_1474_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_58_fu_1522_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_59_fu_1537_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln50_1_fu_1533_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln50_3_fu_1544_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_60_fu_1554_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln50_6_fu_1561_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln50_fu_1529_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln50_7_fu_1571_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln50_1_fu_1565_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln50_9_fu_1580_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln50_fu_1548_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln50_3_fu_1583_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_38_fu_1616_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_fu_1616_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_fu_1616_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_fu_1616_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_fu_1616_p5 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_fu_1616_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln50_1_fu_1634_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_39_fu_1659_p9 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln58_fu_1703_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_13_fu_1697_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1725_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_61_fu_1737_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_62_fu_1748_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln62_1_fu_1755_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln62_fu_1744_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln62_fu_1759_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln62_4_fu_1765_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln62_1_fu_1768_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln62_fu_2108_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln62_fu_1791_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1725_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_40_fu_1822_p21 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_63_fu_1884_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln97_4_fu_1880_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_64_fu_1906_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln97_5_fu_1892_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln75_fu_1914_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln75_5_fu_1936_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln75_2_fu_1940_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln_fu_1954_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln1_fu_1986_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln97_fu_2052_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln97_7_fu_2083_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln97_2_fu_2086_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln97_3_fu_2096_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln62_fu_2108_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln62_fu_2108_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;
    signal ap_idle_pp3 : STD_LOGIC;
    signal ap_enable_pp3 : STD_LOGIC;
    signal ap_idle_pp5 : STD_LOGIC;
    signal ap_enable_pp5 : STD_LOGIC;
    signal mul_ln62_fu_2108_p00 : STD_LOGIC_VECTOR (21 downto 0);

    component kfft IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        pr_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        pr_0_ce0 : OUT STD_LOGIC;
        pr_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pr_0_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        pr_0_ce1 : OUT STD_LOGIC;
        pr_0_we1 : OUT STD_LOGIC;
        pr_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        pr_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        pr_1_ce0 : OUT STD_LOGIC;
        pr_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pr_1_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        pr_1_ce1 : OUT STD_LOGIC;
        pr_1_we1 : OUT STD_LOGIC;
        pr_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        pr_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        pr_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        pr_2_ce0 : OUT STD_LOGIC;
        pr_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pr_2_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        pr_2_ce1 : OUT STD_LOGIC;
        pr_2_we1 : OUT STD_LOGIC;
        pr_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        pr_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        pr_3_ce0 : OUT STD_LOGIC;
        pr_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pr_3_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        pr_3_ce1 : OUT STD_LOGIC;
        pr_3_we1 : OUT STD_LOGIC;
        pr_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        pi_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        pi_0_ce0 : OUT STD_LOGIC;
        pi_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pi_0_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        pi_0_ce1 : OUT STD_LOGIC;
        pi_0_we1 : OUT STD_LOGIC;
        pi_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        pi_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        pi_1_ce0 : OUT STD_LOGIC;
        pi_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pi_1_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        pi_1_ce1 : OUT STD_LOGIC;
        pi_1_we1 : OUT STD_LOGIC;
        pi_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        pi_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        pi_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        pi_2_ce0 : OUT STD_LOGIC;
        pi_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pi_2_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        pi_2_ce1 : OUT STD_LOGIC;
        pi_2_we1 : OUT STD_LOGIC;
        pi_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        pi_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        pi_3_ce0 : OUT STD_LOGIC;
        pi_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pi_3_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        pi_3_ce1 : OUT STD_LOGIC;
        pi_3_we1 : OUT STD_LOGIC;
        pi_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        fr_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        fr_0_ce0 : OUT STD_LOGIC;
        fr_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        fr_0_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        fr_0_ce1 : OUT STD_LOGIC;
        fr_0_we1 : OUT STD_LOGIC;
        fr_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        fr_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        fr_1_ce0 : OUT STD_LOGIC;
        fr_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        fr_1_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        fr_1_ce1 : OUT STD_LOGIC;
        fr_1_we1 : OUT STD_LOGIC;
        fr_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        fr_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        fr_2_ce0 : OUT STD_LOGIC;
        fr_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        fr_2_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        fr_2_ce1 : OUT STD_LOGIC;
        fr_2_we1 : OUT STD_LOGIC;
        fr_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        fr_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        fr_3_ce0 : OUT STD_LOGIC;
        fr_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        fr_3_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        fr_3_ce1 : OUT STD_LOGIC;
        fr_3_we1 : OUT STD_LOGIC;
        fr_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        fi_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        fi_0_ce0 : OUT STD_LOGIC;
        fi_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        fi_0_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        fi_0_ce1 : OUT STD_LOGIC;
        fi_0_we1 : OUT STD_LOGIC;
        fi_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        fi_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        fi_1_ce0 : OUT STD_LOGIC;
        fi_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        fi_1_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        fi_1_ce1 : OUT STD_LOGIC;
        fi_1_we1 : OUT STD_LOGIC;
        fi_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        fi_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        fi_2_ce0 : OUT STD_LOGIC;
        fi_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        fi_2_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        fi_2_ce1 : OUT STD_LOGIC;
        fi_2_we1 : OUT STD_LOGIC;
        fi_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        fi_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        fi_3_ce0 : OUT STD_LOGIC;
        fi_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        fi_3_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        fi_3_ce1 : OUT STD_LOGIC;
        fi_3_we1 : OUT STD_LOGIC;
        fi_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component preprocess_fadd_3yd2 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component preprocess_fmul_3eOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component preprocess_mux_41zec IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        din3 : IN STD_LOGIC_VECTOR (15 downto 0);
        din4 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component preprocess_mux_81Aem IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component preprocess_urem_1Bew IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component preprocess_mux_20CeG IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        din17_WIDTH : INTEGER;
        din18_WIDTH : INTEGER;
        din19_WIDTH : INTEGER;
        din20_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (31 downto 0);
        din10 : IN STD_LOGIC_VECTOR (31 downto 0);
        din11 : IN STD_LOGIC_VECTOR (31 downto 0);
        din12 : IN STD_LOGIC_VECTOR (31 downto 0);
        din13 : IN STD_LOGIC_VECTOR (31 downto 0);
        din14 : IN STD_LOGIC_VECTOR (31 downto 0);
        din15 : IN STD_LOGIC_VECTOR (31 downto 0);
        din16 : IN STD_LOGIC_VECTOR (31 downto 0);
        din17 : IN STD_LOGIC_VECTOR (31 downto 0);
        din18 : IN STD_LOGIC_VECTOR (31 downto 0);
        din19 : IN STD_LOGIC_VECTOR (31 downto 0);
        din20 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component preprocess_mux_41g8j IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component preprocess_mul_muDeQ IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component calc_stft_indices_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        address1 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component calc_stft_frames IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (14 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (14 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component calc_stft_fft_inpibs IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component calc_stft_fft_inpjbC IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    indices_0_U : component calc_stft_indices_0
    generic map (
        DataWidth => 14,
        AddressRange => 7840,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => indices_0_address0,
        ce0 => indices_0_ce0,
        q0 => indices_0_q0,
        address1 => indices_0_address1,
        ce1 => indices_0_ce1,
        we1 => indices_0_we1,
        d1 => add_ln40_fu_1435_p2);

    indices_1_U : component calc_stft_indices_0
    generic map (
        DataWidth => 14,
        AddressRange => 7840,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => indices_1_address0,
        ce0 => indices_1_ce0,
        q0 => indices_1_q0,
        address1 => indices_1_address1,
        ce1 => indices_1_ce1,
        we1 => indices_1_we1,
        d1 => add_ln40_fu_1435_p2);

    indices_2_U : component calc_stft_indices_0
    generic map (
        DataWidth => 14,
        AddressRange => 7840,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => indices_2_address0,
        ce0 => indices_2_ce0,
        q0 => indices_2_q0,
        address1 => indices_2_address1,
        ce1 => indices_2_ce1,
        we1 => indices_2_we1,
        d1 => add_ln40_fu_1435_p2);

    indices_3_U : component calc_stft_indices_0
    generic map (
        DataWidth => 14,
        AddressRange => 7840,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => indices_3_address0,
        ce0 => indices_3_ce0,
        q0 => indices_3_q0,
        address1 => indices_3_address1,
        ce1 => indices_3_ce1,
        we1 => indices_3_we1,
        d1 => add_ln40_fu_1435_p2);

    frames_U : component calc_stft_frames
    generic map (
        DataWidth => 32,
        AddressRange => 31360,
        AddressWidth => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => frames_address0,
        ce0 => frames_ce0,
        we0 => frames_we0,
        d0 => tmp_39_reg_2259,
        q0 => frames_q0,
        address1 => frames_address1,
        ce1 => frames_ce1,
        we1 => frames_we1,
        d1 => reg_1314,
        q1 => frames_q1);

    fft_input_i_0_U : component calc_stft_fft_inpibs
    generic map (
        DataWidth => 32,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_kfft_fu_1282_pi_0_address0,
        ce0 => fft_input_i_0_ce0,
        q0 => fft_input_i_0_q0,
        address1 => fft_input_i_0_address1,
        ce1 => fft_input_i_0_ce1,
        we1 => fft_input_i_0_we1,
        d1 => fft_input_i_0_d1);

    fft_input_i_1_U : component calc_stft_fft_inpjbC
    generic map (
        DataWidth => 32,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_kfft_fu_1282_pi_1_address0,
        ce0 => fft_input_i_1_ce0,
        q0 => fft_input_i_1_q0,
        address1 => fft_input_i_1_address1,
        ce1 => fft_input_i_1_ce1,
        we1 => fft_input_i_1_we1,
        d1 => fft_input_i_1_d1,
        q1 => fft_input_i_1_q1);

    fft_input_i_2_U : component calc_stft_fft_inpibs
    generic map (
        DataWidth => 32,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_kfft_fu_1282_pi_2_address0,
        ce0 => fft_input_i_2_ce0,
        q0 => fft_input_i_2_q0,
        address1 => fft_input_i_2_address1,
        ce1 => fft_input_i_2_ce1,
        we1 => fft_input_i_2_we1,
        d1 => fft_input_i_2_d1);

    fft_input_i_3_U : component calc_stft_fft_inpibs
    generic map (
        DataWidth => 32,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_kfft_fu_1282_pi_3_address0,
        ce0 => fft_input_i_3_ce0,
        q0 => fft_input_i_3_q0,
        address1 => fft_input_i_3_address1,
        ce1 => fft_input_i_3_ce1,
        we1 => fft_input_i_3_we1,
        d1 => fft_input_i_3_d1);

    fft_frame_r_temp_0_U : component calc_stft_fft_inpibs
    generic map (
        DataWidth => 32,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => fft_frame_r_temp_0_address0,
        ce0 => fft_frame_r_temp_0_ce0,
        q0 => fft_frame_r_temp_0_q0,
        address1 => grp_kfft_fu_1282_fr_0_address1,
        ce1 => fft_frame_r_temp_0_ce1,
        we1 => fft_frame_r_temp_0_we1,
        d1 => grp_kfft_fu_1282_fr_0_d1);

    fft_frame_r_temp_1_U : component calc_stft_fft_inpibs
    generic map (
        DataWidth => 32,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => fft_frame_r_temp_1_address0,
        ce0 => fft_frame_r_temp_1_ce0,
        q0 => fft_frame_r_temp_1_q0,
        address1 => grp_kfft_fu_1282_fr_1_address1,
        ce1 => fft_frame_r_temp_1_ce1,
        we1 => fft_frame_r_temp_1_we1,
        d1 => grp_kfft_fu_1282_fr_1_d1);

    fft_frame_r_temp_2_U : component calc_stft_fft_inpibs
    generic map (
        DataWidth => 32,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => fft_frame_r_temp_2_address0,
        ce0 => fft_frame_r_temp_2_ce0,
        q0 => fft_frame_r_temp_2_q0,
        address1 => grp_kfft_fu_1282_fr_2_address1,
        ce1 => fft_frame_r_temp_2_ce1,
        we1 => fft_frame_r_temp_2_we1,
        d1 => grp_kfft_fu_1282_fr_2_d1);

    fft_frame_r_temp_3_U : component calc_stft_fft_inpibs
    generic map (
        DataWidth => 32,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => fft_frame_r_temp_3_address0,
        ce0 => fft_frame_r_temp_3_ce0,
        q0 => fft_frame_r_temp_3_q0,
        address1 => grp_kfft_fu_1282_fr_3_address1,
        ce1 => fft_frame_r_temp_3_ce1,
        we1 => fft_frame_r_temp_3_we1,
        d1 => grp_kfft_fu_1282_fr_3_d1);

    fft_frame_i_temp_0_U : component calc_stft_fft_inpibs
    generic map (
        DataWidth => 32,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => fft_frame_i_temp_0_address0,
        ce0 => fft_frame_i_temp_0_ce0,
        q0 => fft_frame_i_temp_0_q0,
        address1 => grp_kfft_fu_1282_fi_0_address1,
        ce1 => fft_frame_i_temp_0_ce1,
        we1 => fft_frame_i_temp_0_we1,
        d1 => grp_kfft_fu_1282_fi_0_d1);

    fft_frame_i_temp_1_U : component calc_stft_fft_inpibs
    generic map (
        DataWidth => 32,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => fft_frame_i_temp_1_address0,
        ce0 => fft_frame_i_temp_1_ce0,
        q0 => fft_frame_i_temp_1_q0,
        address1 => grp_kfft_fu_1282_fi_1_address1,
        ce1 => fft_frame_i_temp_1_ce1,
        we1 => fft_frame_i_temp_1_we1,
        d1 => grp_kfft_fu_1282_fi_1_d1);

    fft_frame_i_temp_2_U : component calc_stft_fft_inpibs
    generic map (
        DataWidth => 32,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => fft_frame_i_temp_2_address0,
        ce0 => fft_frame_i_temp_2_ce0,
        q0 => fft_frame_i_temp_2_q0,
        address1 => grp_kfft_fu_1282_fi_2_address1,
        ce1 => fft_frame_i_temp_2_ce1,
        we1 => fft_frame_i_temp_2_we1,
        d1 => grp_kfft_fu_1282_fi_2_d1);

    fft_frame_i_temp_3_U : component calc_stft_fft_inpibs
    generic map (
        DataWidth => 32,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => fft_frame_i_temp_3_address0,
        ce0 => fft_frame_i_temp_3_ce0,
        q0 => fft_frame_i_temp_3_q0,
        address1 => grp_kfft_fu_1282_fi_3_address1,
        ce1 => fft_frame_i_temp_3_ce1,
        we1 => fft_frame_i_temp_3_we1,
        d1 => grp_kfft_fu_1282_fi_3_d1);

    frames_temp_0_U : component calc_stft_fft_inpibs
    generic map (
        DataWidth => 32,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_kfft_fu_1282_pr_0_address0,
        ce0 => frames_temp_0_ce0,
        q0 => frames_temp_0_q0,
        address1 => frames_temp_0_address1,
        ce1 => frames_temp_0_ce1,
        we1 => frames_temp_0_we1,
        d1 => frames_temp_0_d1);

    frames_temp_1_U : component calc_stft_fft_inpjbC
    generic map (
        DataWidth => 32,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_kfft_fu_1282_pr_1_address0,
        ce0 => frames_temp_1_ce0,
        q0 => frames_temp_1_q0,
        address1 => frames_temp_1_address1,
        ce1 => frames_temp_1_ce1,
        we1 => frames_temp_1_we1,
        d1 => frames_temp_1_d1,
        q1 => frames_temp_1_q1);

    frames_temp_2_U : component calc_stft_fft_inpibs
    generic map (
        DataWidth => 32,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_kfft_fu_1282_pr_2_address0,
        ce0 => frames_temp_2_ce0,
        q0 => frames_temp_2_q0,
        address1 => frames_temp_2_address1,
        ce1 => frames_temp_2_ce1,
        we1 => frames_temp_2_we1,
        d1 => frames_temp_2_d1);

    frames_temp_3_U : component calc_stft_fft_inpibs
    generic map (
        DataWidth => 32,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_kfft_fu_1282_pr_3_address0,
        ce0 => frames_temp_3_ce0,
        q0 => frames_temp_3_q0,
        address1 => frames_temp_3_address1,
        ce1 => frames_temp_3_ce1,
        we1 => frames_temp_3_we1,
        d1 => frames_temp_3_d1);

    grp_kfft_fu_1282 : component kfft
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_kfft_fu_1282_ap_start,
        ap_done => grp_kfft_fu_1282_ap_done,
        ap_idle => grp_kfft_fu_1282_ap_idle,
        ap_ready => grp_kfft_fu_1282_ap_ready,
        pr_0_address0 => grp_kfft_fu_1282_pr_0_address0,
        pr_0_ce0 => grp_kfft_fu_1282_pr_0_ce0,
        pr_0_q0 => frames_temp_0_q0,
        pr_0_address1 => grp_kfft_fu_1282_pr_0_address1,
        pr_0_ce1 => grp_kfft_fu_1282_pr_0_ce1,
        pr_0_we1 => grp_kfft_fu_1282_pr_0_we1,
        pr_0_d1 => grp_kfft_fu_1282_pr_0_d1,
        pr_1_address0 => grp_kfft_fu_1282_pr_1_address0,
        pr_1_ce0 => grp_kfft_fu_1282_pr_1_ce0,
        pr_1_q0 => frames_temp_1_q0,
        pr_1_address1 => grp_kfft_fu_1282_pr_1_address1,
        pr_1_ce1 => grp_kfft_fu_1282_pr_1_ce1,
        pr_1_we1 => grp_kfft_fu_1282_pr_1_we1,
        pr_1_d1 => grp_kfft_fu_1282_pr_1_d1,
        pr_1_q1 => frames_temp_1_q1,
        pr_2_address0 => grp_kfft_fu_1282_pr_2_address0,
        pr_2_ce0 => grp_kfft_fu_1282_pr_2_ce0,
        pr_2_q0 => frames_temp_2_q0,
        pr_2_address1 => grp_kfft_fu_1282_pr_2_address1,
        pr_2_ce1 => grp_kfft_fu_1282_pr_2_ce1,
        pr_2_we1 => grp_kfft_fu_1282_pr_2_we1,
        pr_2_d1 => grp_kfft_fu_1282_pr_2_d1,
        pr_3_address0 => grp_kfft_fu_1282_pr_3_address0,
        pr_3_ce0 => grp_kfft_fu_1282_pr_3_ce0,
        pr_3_q0 => frames_temp_3_q0,
        pr_3_address1 => grp_kfft_fu_1282_pr_3_address1,
        pr_3_ce1 => grp_kfft_fu_1282_pr_3_ce1,
        pr_3_we1 => grp_kfft_fu_1282_pr_3_we1,
        pr_3_d1 => grp_kfft_fu_1282_pr_3_d1,
        pi_0_address0 => grp_kfft_fu_1282_pi_0_address0,
        pi_0_ce0 => grp_kfft_fu_1282_pi_0_ce0,
        pi_0_q0 => fft_input_i_0_q0,
        pi_0_address1 => grp_kfft_fu_1282_pi_0_address1,
        pi_0_ce1 => grp_kfft_fu_1282_pi_0_ce1,
        pi_0_we1 => grp_kfft_fu_1282_pi_0_we1,
        pi_0_d1 => grp_kfft_fu_1282_pi_0_d1,
        pi_1_address0 => grp_kfft_fu_1282_pi_1_address0,
        pi_1_ce0 => grp_kfft_fu_1282_pi_1_ce0,
        pi_1_q0 => fft_input_i_1_q0,
        pi_1_address1 => grp_kfft_fu_1282_pi_1_address1,
        pi_1_ce1 => grp_kfft_fu_1282_pi_1_ce1,
        pi_1_we1 => grp_kfft_fu_1282_pi_1_we1,
        pi_1_d1 => grp_kfft_fu_1282_pi_1_d1,
        pi_1_q1 => fft_input_i_1_q1,
        pi_2_address0 => grp_kfft_fu_1282_pi_2_address0,
        pi_2_ce0 => grp_kfft_fu_1282_pi_2_ce0,
        pi_2_q0 => fft_input_i_2_q0,
        pi_2_address1 => grp_kfft_fu_1282_pi_2_address1,
        pi_2_ce1 => grp_kfft_fu_1282_pi_2_ce1,
        pi_2_we1 => grp_kfft_fu_1282_pi_2_we1,
        pi_2_d1 => grp_kfft_fu_1282_pi_2_d1,
        pi_3_address0 => grp_kfft_fu_1282_pi_3_address0,
        pi_3_ce0 => grp_kfft_fu_1282_pi_3_ce0,
        pi_3_q0 => fft_input_i_3_q0,
        pi_3_address1 => grp_kfft_fu_1282_pi_3_address1,
        pi_3_ce1 => grp_kfft_fu_1282_pi_3_ce1,
        pi_3_we1 => grp_kfft_fu_1282_pi_3_we1,
        pi_3_d1 => grp_kfft_fu_1282_pi_3_d1,
        fr_0_address0 => grp_kfft_fu_1282_fr_0_address0,
        fr_0_ce0 => grp_kfft_fu_1282_fr_0_ce0,
        fr_0_q0 => fft_frame_r_temp_0_q0,
        fr_0_address1 => grp_kfft_fu_1282_fr_0_address1,
        fr_0_ce1 => grp_kfft_fu_1282_fr_0_ce1,
        fr_0_we1 => grp_kfft_fu_1282_fr_0_we1,
        fr_0_d1 => grp_kfft_fu_1282_fr_0_d1,
        fr_1_address0 => grp_kfft_fu_1282_fr_1_address0,
        fr_1_ce0 => grp_kfft_fu_1282_fr_1_ce0,
        fr_1_q0 => fft_frame_r_temp_1_q0,
        fr_1_address1 => grp_kfft_fu_1282_fr_1_address1,
        fr_1_ce1 => grp_kfft_fu_1282_fr_1_ce1,
        fr_1_we1 => grp_kfft_fu_1282_fr_1_we1,
        fr_1_d1 => grp_kfft_fu_1282_fr_1_d1,
        fr_2_address0 => grp_kfft_fu_1282_fr_2_address0,
        fr_2_ce0 => grp_kfft_fu_1282_fr_2_ce0,
        fr_2_q0 => fft_frame_r_temp_2_q0,
        fr_2_address1 => grp_kfft_fu_1282_fr_2_address1,
        fr_2_ce1 => grp_kfft_fu_1282_fr_2_ce1,
        fr_2_we1 => grp_kfft_fu_1282_fr_2_we1,
        fr_2_d1 => grp_kfft_fu_1282_fr_2_d1,
        fr_3_address0 => grp_kfft_fu_1282_fr_3_address0,
        fr_3_ce0 => grp_kfft_fu_1282_fr_3_ce0,
        fr_3_q0 => fft_frame_r_temp_3_q0,
        fr_3_address1 => grp_kfft_fu_1282_fr_3_address1,
        fr_3_ce1 => grp_kfft_fu_1282_fr_3_ce1,
        fr_3_we1 => grp_kfft_fu_1282_fr_3_we1,
        fr_3_d1 => grp_kfft_fu_1282_fr_3_d1,
        fi_0_address0 => grp_kfft_fu_1282_fi_0_address0,
        fi_0_ce0 => grp_kfft_fu_1282_fi_0_ce0,
        fi_0_q0 => fft_frame_i_temp_0_q0,
        fi_0_address1 => grp_kfft_fu_1282_fi_0_address1,
        fi_0_ce1 => grp_kfft_fu_1282_fi_0_ce1,
        fi_0_we1 => grp_kfft_fu_1282_fi_0_we1,
        fi_0_d1 => grp_kfft_fu_1282_fi_0_d1,
        fi_1_address0 => grp_kfft_fu_1282_fi_1_address0,
        fi_1_ce0 => grp_kfft_fu_1282_fi_1_ce0,
        fi_1_q0 => fft_frame_i_temp_1_q0,
        fi_1_address1 => grp_kfft_fu_1282_fi_1_address1,
        fi_1_ce1 => grp_kfft_fu_1282_fi_1_ce1,
        fi_1_we1 => grp_kfft_fu_1282_fi_1_we1,
        fi_1_d1 => grp_kfft_fu_1282_fi_1_d1,
        fi_2_address0 => grp_kfft_fu_1282_fi_2_address0,
        fi_2_ce0 => grp_kfft_fu_1282_fi_2_ce0,
        fi_2_q0 => fft_frame_i_temp_2_q0,
        fi_2_address1 => grp_kfft_fu_1282_fi_2_address1,
        fi_2_ce1 => grp_kfft_fu_1282_fi_2_ce1,
        fi_2_we1 => grp_kfft_fu_1282_fi_2_we1,
        fi_2_d1 => grp_kfft_fu_1282_fi_2_d1,
        fi_3_address0 => grp_kfft_fu_1282_fi_3_address0,
        fi_3_ce0 => grp_kfft_fu_1282_fi_3_ce0,
        fi_3_q0 => fft_frame_i_temp_3_q0,
        fi_3_address1 => grp_kfft_fu_1282_fi_3_address1,
        fi_3_ce1 => grp_kfft_fu_1282_fi_3_ce1,
        fi_3_we1 => grp_kfft_fu_1282_fi_3_we1,
        fi_3_d1 => grp_kfft_fu_1282_fi_3_d1);

    preprocess_fadd_3yd2_U41 : component preprocess_fadd_3yd2
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_1314,
        din1 => tmp_35_reg_2557,
        ce => ap_const_logic_1,
        dout => grp_fu_1302_p2);

    preprocess_fmul_3eOg_U42 : component preprocess_fmul_3eOg
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1306_p0,
        din1 => grp_fu_1306_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1306_p2);

    preprocess_fmul_3eOg_U43 : component preprocess_fmul_3eOg
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_42_reg_2551,
        din1 => tmp_42_reg_2551,
        ce => ap_const_logic_1,
        dout => grp_fu_1310_p2);

    preprocess_mux_41zec_U44 : component preprocess_mux_41zec
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => tmp_38_fu_1616_p1,
        din1 => tmp_38_fu_1616_p2,
        din2 => tmp_38_fu_1616_p3,
        din3 => tmp_38_fu_1616_p4,
        din4 => tmp_38_fu_1616_p5,
        dout => tmp_38_fu_1616_p6);

    preprocess_mux_81Aem_U45 : component preprocess_mux_81Aem
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => signal_0_q0,
        din1 => signal_1_q0,
        din2 => signal_2_q0,
        din3 => signal_3_q0,
        din4 => signal_4_q0,
        din5 => signal_5_q0,
        din6 => signal_6_q0,
        din7 => signal_7_q0,
        din8 => tmp_39_fu_1659_p9,
        dout => tmp_39_fu_1659_p10);

    preprocess_urem_1Bew_U46 : component preprocess_urem_1Bew
    generic map (
        ID => 1,
        NUM_STAGE => 14,
        din0_WIDTH => 10,
        din1_WIDTH => 6,
        dout_WIDTH => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => select_ln62_fu_1709_p3,
        din1 => grp_fu_1725_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1725_p2);

    preprocess_mux_20CeG_U47 : component preprocess_mux_20CeG
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => cosines_0_q0,
        din1 => cosines_1_q0,
        din2 => cosines_2_q0,
        din3 => cosines_3_q0,
        din4 => cosines_4_q0,
        din5 => cosines_5_q0,
        din6 => cosines_6_q0,
        din7 => cosines_7_q0,
        din8 => cosines_8_q0,
        din9 => cosines_9_q0,
        din10 => cosines_10_q0,
        din11 => cosines_11_q0,
        din12 => cosines_12_q0,
        din13 => cosines_13_q0,
        din14 => cosines_14_q0,
        din15 => cosines_15_q0,
        din16 => cosines_16_q0,
        din17 => cosines_17_q0,
        din18 => cosines_18_q0,
        din19 => cosines_19_q0,
        din20 => tmp_40_fu_1822_p21,
        dout => tmp_40_fu_1822_p22);

    preprocess_mux_41g8j_U48 : component preprocess_mux_41g8j
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => fft_frame_r_temp_0_q0,
        din1 => fft_frame_r_temp_1_q0,
        din2 => fft_frame_r_temp_2_q0,
        din3 => fft_frame_r_temp_3_q0,
        din4 => zext_ln97_fu_2052_p1,
        dout => tmp_41_fu_2055_p6);

    preprocess_mux_41g8j_U49 : component preprocess_mux_41g8j
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => fft_frame_i_temp_0_q0,
        din1 => fft_frame_i_temp_1_q0,
        din2 => fft_frame_i_temp_2_q0,
        din3 => fft_frame_i_temp_3_q0,
        din4 => zext_ln97_fu_2052_p1,
        dout => tmp_42_fu_2069_p6);

    preprocess_mul_muDeQ_U50 : component preprocess_mul_muDeQ
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 12,
        dout_WIDTH => 22)
    port map (
        din0 => mul_ln62_fu_2108_p0,
        din1 => mul_ln62_fu_2108_p1,
        dout => mul_ln62_fu_2108_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state5) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state5)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state5);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state11) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp2_exit_iter0_state11)) then 
                        ap_enable_reg_pp2_iter1 <= (ap_const_logic_1 xor ap_condition_pp2_exit_iter0_state11);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter10 <= ap_enable_reg_pp2_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter11 <= ap_enable_reg_pp2_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter12 <= ap_enable_reg_pp2_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter13 <= ap_enable_reg_pp2_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter14 <= ap_enable_reg_pp2_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter15 <= ap_enable_reg_pp2_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter16 <= ap_enable_reg_pp2_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter17 <= ap_enable_reg_pp2_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter18 <= ap_enable_reg_pp2_iter17;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                    ap_enable_reg_pp2_iter18 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter6 <= ap_enable_reg_pp2_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter7 <= ap_enable_reg_pp2_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter8 <= ap_enable_reg_pp2_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter9 <= ap_enable_reg_pp2_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp3_exit_iter0_state32) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln67_fu_1868_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state31))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp3_exit_iter0_state32))) then 
                    ap_enable_reg_pp3_iter1 <= (ap_const_logic_1 xor ap_condition_pp3_exit_iter0_state32);
                elsif ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
                elsif (((icmp_ln67_fu_1868_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state31))) then 
                    ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp5_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp5_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp5_exit_iter0_state38) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0))) then 
                    ap_enable_reg_pp5_iter0 <= ap_const_logic_0;
                elsif (((grp_kfft_fu_1282_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state37))) then 
                    ap_enable_reg_pp5_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp5_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp5_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp5_exit_iter0_state38)) then 
                        ap_enable_reg_pp5_iter1 <= (ap_const_logic_1 xor ap_condition_pp5_exit_iter0_state38);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp5_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp5_stage0_subdone)) then 
                    ap_enable_reg_pp5_iter10 <= ap_enable_reg_pp5_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp5_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp5_stage0_subdone)) then 
                    ap_enable_reg_pp5_iter11 <= ap_enable_reg_pp5_iter10;
                elsif (((grp_kfft_fu_1282_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state37))) then 
                    ap_enable_reg_pp5_iter11 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp5_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp5_stage0_subdone)) then 
                    ap_enable_reg_pp5_iter2 <= ap_enable_reg_pp5_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp5_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp5_stage0_subdone)) then 
                    ap_enable_reg_pp5_iter3 <= ap_enable_reg_pp5_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp5_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp5_stage0_subdone)) then 
                    ap_enable_reg_pp5_iter4 <= ap_enable_reg_pp5_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp5_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp5_stage0_subdone)) then 
                    ap_enable_reg_pp5_iter5 <= ap_enable_reg_pp5_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp5_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp5_stage0_subdone)) then 
                    ap_enable_reg_pp5_iter6 <= ap_enable_reg_pp5_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp5_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp5_stage0_subdone)) then 
                    ap_enable_reg_pp5_iter7 <= ap_enable_reg_pp5_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp5_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp5_stage0_subdone)) then 
                    ap_enable_reg_pp5_iter8 <= ap_enable_reg_pp5_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp5_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp5_stage0_subdone)) then 
                    ap_enable_reg_pp5_iter9 <= ap_enable_reg_pp5_iter8;
                end if; 
            end if;
        end if;
    end process;


    grp_kfft_fu_1282_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_kfft_fu_1282_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
                    grp_kfft_fu_1282_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_kfft_fu_1282_ap_ready = ap_const_logic_1)) then 
                    grp_kfft_fu_1282_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i1_0_reg_1183_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                i1_0_reg_1183 <= ap_const_lv6_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln44_reg_2152 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                i1_0_reg_1183 <= select_ln50_1_reg_2166;
            end if; 
        end if;
    end process;

    i3_0_reg_1216_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                i3_0_reg_1216 <= ap_const_lv6_0;
            elsif (((icmp_ln55_reg_2264 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                i3_0_reg_1216 <= select_ln62_1_reg_2280;
            end if; 
        end if;
    end process;

    i5_0_reg_1238_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
                i5_0_reg_1238 <= ap_const_lv6_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
                i5_0_reg_1238 <= i_14_reg_2417;
            end if; 
        end if;
    end process;

    i_0_reg_1150_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln34_reg_2115 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                i_0_reg_1150 <= select_ln34_1_reg_2129;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_0_reg_1150 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    indvar_flatten11_reg_1172_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                indvar_flatten11_reg_1172 <= ap_const_lv15_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln44_fu_1462_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                indvar_flatten11_reg_1172 <= add_ln44_fu_1468_p2;
            end if; 
        end if;
    end process;

    indvar_flatten23_reg_1205_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                indvar_flatten23_reg_1205 <= ap_const_lv15_0;
            elsif (((icmp_ln55_fu_1685_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                indvar_flatten23_reg_1205 <= add_ln55_fu_1691_p2;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_1139_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln34_fu_1320_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten_reg_1139 <= add_ln34_fu_1326_p2;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_1139 <= ap_const_lv15_0;
            end if; 
        end if;
    end process;

    j2_0_reg_1194_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                j2_0_reg_1194 <= ap_const_lv10_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln44_fu_1462_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                j2_0_reg_1194 <= j_4_fu_1516_p2;
            end if; 
        end if;
    end process;

    j4_0_reg_1227_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                j4_0_reg_1227 <= ap_const_lv10_0;
            elsif (((icmp_ln55_fu_1685_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                j4_0_reg_1227 <= j_5_fu_1731_p2;
            end if; 
        end if;
    end process;

    j6_0_reg_1249_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln72_fu_1924_p2 = ap_const_lv1_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
                j6_0_reg_1249 <= j_6_fu_1930_p2;
            elsif (((icmp_ln67_fu_1868_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state31))) then 
                j6_0_reg_1249 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    j7_0_reg_1260_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
                j7_0_reg_1260 <= ap_const_lv11_280;
            elsif (((icmp_ln80_fu_1976_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
                j7_0_reg_1260 <= j_7_fu_2008_p2;
            end if; 
        end if;
    end process;

    j8_0_reg_1271_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (icmp_ln94_fu_2014_p2 = ap_const_lv1_0) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0))) then 
                j8_0_reg_1271 <= j_8_fu_2020_p2;
            elsif (((grp_kfft_fu_1282_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state37))) then 
                j8_0_reg_1271 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    j_0_reg_1161_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln34_fu_1320_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                j_0_reg_1161 <= j_fu_1374_p2;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                j_0_reg_1161 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln44_reg_2152 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                add_ln50_2_reg_2189 <= add_ln50_2_fu_1574_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                add_ln50_2_reg_2189_pp1_iter2_reg <= add_ln50_2_reg_2189;
                add_ln50_2_reg_2189_pp1_iter3_reg <= add_ln50_2_reg_2189_pp1_iter2_reg;
                icmp_ln44_reg_2152_pp1_iter2_reg <= icmp_ln44_reg_2152_pp1_iter1_reg;
                icmp_ln44_reg_2152_pp1_iter3_reg <= icmp_ln44_reg_2152_pp1_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln67_fu_1868_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state31))) then
                    add_ln75_reg_2432(15 downto 7) <= add_ln75_fu_1918_p2(15 downto 7);
                add_ln97_reg_2427 <= add_ln97_fu_1900_p2;
                    zext_ln97_6_reg_2422(12 downto 7) <= zext_ln97_6_fu_1896_p1(12 downto 7);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln55_reg_2264_pp2_iter10_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                frames_addr_1_reg_2292 <= zext_ln62_5_fu_1774_p1(15 - 1 downto 0);
                tmp_91_reg_2298 <= mul_ln62_fu_2108_p2(21 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp2_stage0_11001)) then
                frames_addr_1_reg_2292_pp2_iter12_reg <= frames_addr_1_reg_2292;
                frames_addr_1_reg_2292_pp2_iter13_reg <= frames_addr_1_reg_2292_pp2_iter12_reg;
                frames_addr_1_reg_2292_pp2_iter14_reg <= frames_addr_1_reg_2292_pp2_iter13_reg;
                frames_addr_1_reg_2292_pp2_iter15_reg <= frames_addr_1_reg_2292_pp2_iter14_reg;
                frames_addr_1_reg_2292_pp2_iter16_reg <= frames_addr_1_reg_2292_pp2_iter15_reg;
                frames_addr_1_reg_2292_pp2_iter17_reg <= frames_addr_1_reg_2292_pp2_iter16_reg;
                icmp_ln55_reg_2264_pp2_iter10_reg <= icmp_ln55_reg_2264_pp2_iter9_reg;
                icmp_ln55_reg_2264_pp2_iter11_reg <= icmp_ln55_reg_2264_pp2_iter10_reg;
                icmp_ln55_reg_2264_pp2_iter12_reg <= icmp_ln55_reg_2264_pp2_iter11_reg;
                icmp_ln55_reg_2264_pp2_iter13_reg <= icmp_ln55_reg_2264_pp2_iter12_reg;
                icmp_ln55_reg_2264_pp2_iter14_reg <= icmp_ln55_reg_2264_pp2_iter13_reg;
                icmp_ln55_reg_2264_pp2_iter15_reg <= icmp_ln55_reg_2264_pp2_iter14_reg;
                icmp_ln55_reg_2264_pp2_iter16_reg <= icmp_ln55_reg_2264_pp2_iter15_reg;
                icmp_ln55_reg_2264_pp2_iter17_reg <= icmp_ln55_reg_2264_pp2_iter16_reg;
                icmp_ln55_reg_2264_pp2_iter2_reg <= icmp_ln55_reg_2264_pp2_iter1_reg;
                icmp_ln55_reg_2264_pp2_iter3_reg <= icmp_ln55_reg_2264_pp2_iter2_reg;
                icmp_ln55_reg_2264_pp2_iter4_reg <= icmp_ln55_reg_2264_pp2_iter3_reg;
                icmp_ln55_reg_2264_pp2_iter5_reg <= icmp_ln55_reg_2264_pp2_iter4_reg;
                icmp_ln55_reg_2264_pp2_iter6_reg <= icmp_ln55_reg_2264_pp2_iter5_reg;
                icmp_ln55_reg_2264_pp2_iter7_reg <= icmp_ln55_reg_2264_pp2_iter6_reg;
                icmp_ln55_reg_2264_pp2_iter8_reg <= icmp_ln55_reg_2264_pp2_iter7_reg;
                icmp_ln55_reg_2264_pp2_iter9_reg <= icmp_ln55_reg_2264_pp2_iter8_reg;
                select_ln62_1_reg_2280_pp2_iter10_reg <= select_ln62_1_reg_2280_pp2_iter9_reg;
                select_ln62_1_reg_2280_pp2_iter2_reg <= select_ln62_1_reg_2280_pp2_iter1_reg;
                select_ln62_1_reg_2280_pp2_iter3_reg <= select_ln62_1_reg_2280_pp2_iter2_reg;
                select_ln62_1_reg_2280_pp2_iter4_reg <= select_ln62_1_reg_2280_pp2_iter3_reg;
                select_ln62_1_reg_2280_pp2_iter5_reg <= select_ln62_1_reg_2280_pp2_iter4_reg;
                select_ln62_1_reg_2280_pp2_iter6_reg <= select_ln62_1_reg_2280_pp2_iter5_reg;
                select_ln62_1_reg_2280_pp2_iter7_reg <= select_ln62_1_reg_2280_pp2_iter6_reg;
                select_ln62_1_reg_2280_pp2_iter8_reg <= select_ln62_1_reg_2280_pp2_iter7_reg;
                select_ln62_1_reg_2280_pp2_iter9_reg <= select_ln62_1_reg_2280_pp2_iter8_reg;
                select_ln62_reg_2273_pp2_iter10_reg <= select_ln62_reg_2273_pp2_iter9_reg;
                select_ln62_reg_2273_pp2_iter2_reg <= select_ln62_reg_2273_pp2_iter1_reg;
                select_ln62_reg_2273_pp2_iter3_reg <= select_ln62_reg_2273_pp2_iter2_reg;
                select_ln62_reg_2273_pp2_iter4_reg <= select_ln62_reg_2273_pp2_iter3_reg;
                select_ln62_reg_2273_pp2_iter5_reg <= select_ln62_reg_2273_pp2_iter4_reg;
                select_ln62_reg_2273_pp2_iter6_reg <= select_ln62_reg_2273_pp2_iter5_reg;
                select_ln62_reg_2273_pp2_iter7_reg <= select_ln62_reg_2273_pp2_iter6_reg;
                select_ln62_reg_2273_pp2_iter8_reg <= select_ln62_reg_2273_pp2_iter7_reg;
                select_ln62_reg_2273_pp2_iter9_reg <= select_ln62_reg_2273_pp2_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln55_reg_2264_pp2_iter12_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter13 = ap_const_logic_1))) then
                frames_load_reg_2403 <= frames_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln72_fu_1924_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                frames_temp_0_addr_reg_2455 <= zext_ln75_4_fu_1964_p1(8 - 1 downto 0);
                frames_temp_1_addr_reg_2460 <= zext_ln75_4_fu_1964_p1(8 - 1 downto 0);
                frames_temp_2_addr_reg_2465 <= zext_ln75_4_fu_1964_p1(8 - 1 downto 0);
                frames_temp_3_addr_reg_2470 <= zext_ln75_4_fu_1964_p1(8 - 1 downto 0);
                trunc_ln75_reg_2451 <= trunc_ln75_fu_1950_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state31)) then
                i_14_reg_2417 <= i_14_fu_1874_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln34_reg_2115 <= icmp_ln34_fu_1320_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                icmp_ln44_reg_2152 <= icmp_ln44_fu_1462_p2;
                icmp_ln44_reg_2152_pp1_iter1_reg <= icmp_ln44_reg_2152;
                trunc_ln50_reg_2174_pp1_iter1_reg <= trunc_ln50_reg_2174;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                icmp_ln55_reg_2264 <= icmp_ln55_fu_1685_p2;
                icmp_ln55_reg_2264_pp2_iter1_reg <= icmp_ln55_reg_2264;
                select_ln62_1_reg_2280_pp2_iter1_reg <= select_ln62_1_reg_2280;
                select_ln62_reg_2273_pp2_iter1_reg <= select_ln62_reg_2273;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (icmp_ln94_fu_2014_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0))) then
                lshr_ln2_reg_2500 <= j8_0_reg_1271(9 downto 2);
                trunc_ln97_reg_2495 <= trunc_ln97_fu_2026_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp5_stage0_11001)) then
                lshr_ln2_reg_2500_pp5_iter10_reg <= lshr_ln2_reg_2500_pp5_iter9_reg;
                lshr_ln2_reg_2500_pp5_iter2_reg <= lshr_ln2_reg_2500_pp5_iter1_reg;
                lshr_ln2_reg_2500_pp5_iter3_reg <= lshr_ln2_reg_2500_pp5_iter2_reg;
                lshr_ln2_reg_2500_pp5_iter4_reg <= lshr_ln2_reg_2500_pp5_iter3_reg;
                lshr_ln2_reg_2500_pp5_iter5_reg <= lshr_ln2_reg_2500_pp5_iter4_reg;
                lshr_ln2_reg_2500_pp5_iter6_reg <= lshr_ln2_reg_2500_pp5_iter5_reg;
                lshr_ln2_reg_2500_pp5_iter7_reg <= lshr_ln2_reg_2500_pp5_iter6_reg;
                lshr_ln2_reg_2500_pp5_iter8_reg <= lshr_ln2_reg_2500_pp5_iter7_reg;
                lshr_ln2_reg_2500_pp5_iter9_reg <= lshr_ln2_reg_2500_pp5_iter8_reg;
                tmp_35_reg_2557 <= grp_fu_1310_p2;
                tmp_36_reg_2562 <= grp_fu_1302_p2;
                trunc_ln97_reg_2495_pp5_iter10_reg <= trunc_ln97_reg_2495_pp5_iter9_reg;
                trunc_ln97_reg_2495_pp5_iter2_reg <= trunc_ln97_reg_2495_pp5_iter1_reg;
                trunc_ln97_reg_2495_pp5_iter3_reg <= trunc_ln97_reg_2495_pp5_iter2_reg;
                trunc_ln97_reg_2495_pp5_iter4_reg <= trunc_ln97_reg_2495_pp5_iter3_reg;
                trunc_ln97_reg_2495_pp5_iter5_reg <= trunc_ln97_reg_2495_pp5_iter4_reg;
                trunc_ln97_reg_2495_pp5_iter6_reg <= trunc_ln97_reg_2495_pp5_iter5_reg;
                trunc_ln97_reg_2495_pp5_iter7_reg <= trunc_ln97_reg_2495_pp5_iter6_reg;
                trunc_ln97_reg_2495_pp5_iter8_reg <= trunc_ln97_reg_2495_pp5_iter7_reg;
                trunc_ln97_reg_2495_pp5_iter9_reg <= trunc_ln97_reg_2495_pp5_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0))) then
                lshr_ln2_reg_2500_pp5_iter1_reg <= lshr_ln2_reg_2500;
                tmp_41_reg_2545 <= tmp_41_fu_2055_p6;
                tmp_42_reg_2551 <= tmp_42_fu_2069_p6;
                trunc_ln97_reg_2495_pp5_iter1_reg <= trunc_ln97_reg_2495;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_enable_reg_pp5_iter5 = ap_const_logic_1)) or ((icmp_ln55_reg_2264_pp2_iter16_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter17 = ap_const_logic_1)))) then
                reg_1314 <= grp_fu_1306_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln34_fu_1320_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                select_ln34_1_reg_2129 <= select_ln34_1_fu_1352_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln34_fu_1320_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                select_ln34_reg_2124 <= select_ln34_fu_1344_p3;
                tmp_89_reg_2142 <= select_ln34_fu_1344_p3(9 downto 2);
                trunc_ln40_reg_2138 <= trunc_ln40_fu_1360_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln44_fu_1462_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                select_ln50_1_reg_2166 <= select_ln50_1_fu_1494_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln44_fu_1462_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                select_ln50_reg_2161 <= select_ln50_fu_1486_p3;
                tmp_90_reg_2179 <= select_ln50_fu_1486_p3(9 downto 2);
                trunc_ln50_reg_2174 <= trunc_ln50_fu_1502_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln55_fu_1685_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                select_ln62_1_reg_2280 <= select_ln62_1_fu_1717_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln55_fu_1685_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                select_ln62_reg_2273 <= select_ln62_fu_1709_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln44_reg_2152_pp1_iter2_reg = ap_const_lv1_0))) then
                tmp_39_reg_2259 <= tmp_39_fu_1659_p10;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln55_reg_2264_pp2_iter12_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                tmp_40_reg_2408 <= tmp_40_fu_1822_p22;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln44_reg_2152_pp1_iter1_reg = ap_const_lv1_0))) then
                trunc_ln50_1_reg_2214 <= trunc_ln50_1_fu_1630_p1;
            end if;
        end if;
    end process;
    zext_ln97_6_reg_2422(6 downto 0) <= "0000000";
    zext_ln97_6_reg_2422(13) <= '0';
    add_ln75_reg_2432(6 downto 0) <= "0000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp2_iter17, icmp_ln34_fu_1320_p2, ap_enable_reg_pp0_iter0, icmp_ln44_fu_1462_p2, ap_enable_reg_pp1_iter0, icmp_ln55_fu_1685_p2, ap_enable_reg_pp2_iter0, icmp_ln67_fu_1868_p2, ap_CS_fsm_state31, icmp_ln72_fu_1924_p2, ap_enable_reg_pp3_iter0, ap_CS_fsm_state35, icmp_ln80_fu_1976_p2, icmp_ln94_fu_2014_p2, ap_enable_reg_pp5_iter0, ap_block_pp0_stage0_subdone, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter4, ap_block_pp2_stage0_subdone, ap_enable_reg_pp2_iter1, ap_enable_reg_pp2_iter18, ap_block_pp3_stage0_subdone, ap_CS_fsm_state37, grp_kfft_fu_1282_ap_done, ap_block_pp5_stage0_subdone, ap_enable_reg_pp5_iter1, ap_enable_reg_pp5_iter10, ap_enable_reg_pp5_iter11)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln34_fu_1320_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln34_fu_1320_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln44_fu_1462_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln44_fu_1462_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
            when ap_ST_fsm_pp2_stage0 => 
                if ((not(((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (icmp_ln55_fu_1685_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) and not(((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter17 = ap_const_logic_0) and (ap_enable_reg_pp2_iter18 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter17 = ap_const_logic_0) and (ap_enable_reg_pp2_iter18 = ap_const_logic_1)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (icmp_ln55_fu_1685_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                if (((icmp_ln67_fu_1868_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                end if;
            when ap_ST_fsm_pp3_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (icmp_ln72_fu_1924_p2 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (icmp_ln72_fu_1924_p2 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state34;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                end if;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                if (((icmp_ln80_fu_1976_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35))) then
                    ap_NS_fsm <= ap_ST_fsm_state35;
                else
                    ap_NS_fsm <= ap_ST_fsm_state36;
                end if;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                if (((grp_kfft_fu_1282_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state37))) then
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state37;
                end if;
            when ap_ST_fsm_pp5_stage0 => 
                if ((not(((ap_enable_reg_pp5_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp5_stage0_subdone) and (icmp_ln94_fu_2014_p2 = ap_const_lv1_1) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp5_iter10 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp5_stage0_subdone) and (ap_enable_reg_pp5_iter11 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage0;
                elsif ((((ap_enable_reg_pp5_iter10 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp5_stage0_subdone) and (ap_enable_reg_pp5_iter11 = ap_const_logic_1)) or ((ap_enable_reg_pp5_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp5_stage0_subdone) and (icmp_ln94_fu_2014_p2 = ap_const_lv1_1) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state50;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage0;
                end if;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln34_fu_1326_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_1139) + unsigned(ap_const_lv15_1));
    add_ln40_1_fu_1425_p2 <= std_logic_vector(unsigned(shl_ln40_1_mid2_fu_1387_p3) + unsigned(zext_ln37_fu_1422_p1));
    add_ln40_2_fu_1416_p2 <= std_logic_vector(unsigned(zext_ln40_fu_1401_p1) + unsigned(zext_ln40_1_fu_1412_p1));
    add_ln40_3_fu_1448_p2 <= std_logic_vector(unsigned(zext_ln40_3_fu_1445_p1) + unsigned(add_ln40_2_fu_1416_p2));
    add_ln40_fu_1435_p2 <= std_logic_vector(unsigned(zext_ln40_2_fu_1431_p1) + unsigned(shl_ln40_mid2_fu_1380_p3));
    add_ln44_fu_1468_p2 <= std_logic_vector(unsigned(indvar_flatten11_reg_1172) + unsigned(ap_const_lv15_1));
    add_ln50_1_fu_1565_p2 <= std_logic_vector(unsigned(zext_ln50_6_fu_1561_p1) + unsigned(zext_ln50_fu_1529_p1));
    add_ln50_2_fu_1574_p2 <= std_logic_vector(unsigned(zext_ln50_7_fu_1571_p1) + unsigned(add_ln50_1_fu_1565_p2));
    add_ln50_3_fu_1583_p2 <= std_logic_vector(unsigned(zext_ln50_9_fu_1580_p1) + unsigned(add_ln50_fu_1548_p2));
    add_ln50_fu_1548_p2 <= std_logic_vector(unsigned(zext_ln50_1_fu_1533_p1) + unsigned(zext_ln50_3_fu_1544_p1));
    add_ln55_fu_1691_p2 <= std_logic_vector(unsigned(indvar_flatten23_reg_1205) + unsigned(ap_const_lv15_1));
    add_ln62_1_fu_1768_p2 <= std_logic_vector(unsigned(add_ln62_fu_1759_p2) + unsigned(zext_ln62_4_fu_1765_p1));
    add_ln62_fu_1759_p2 <= std_logic_vector(unsigned(zext_ln62_1_fu_1755_p1) + unsigned(zext_ln62_fu_1744_p1));
    add_ln75_2_fu_1940_p2 <= std_logic_vector(unsigned(add_ln75_reg_2432) + unsigned(zext_ln75_5_fu_1936_p1));
    add_ln75_fu_1918_p2 <= std_logic_vector(unsigned(zext_ln97_5_fu_1892_p1) + unsigned(zext_ln75_fu_1914_p1));
    add_ln97_2_fu_2086_p2 <= std_logic_vector(unsigned(add_ln97_reg_2427) + unsigned(zext_ln97_7_fu_2083_p1));
    add_ln97_3_fu_2096_p2 <= std_logic_vector(unsigned(zext_ln97_6_reg_2422) + unsigned(zext_ln97_7_fu_2083_p1));
    add_ln97_fu_1900_p2 <= std_logic_vector(unsigned(zext_ln97_4_fu_1880_p1) + unsigned(zext_ln97_6_fu_1896_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(5);
    ap_CS_fsm_pp3_stage0 <= ap_CS_fsm(8);
    ap_CS_fsm_pp5_stage0 <= ap_CS_fsm(13);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(4);
    ap_CS_fsm_state30 <= ap_CS_fsm(6);
    ap_CS_fsm_state31 <= ap_CS_fsm(7);
    ap_CS_fsm_state34 <= ap_CS_fsm(9);
    ap_CS_fsm_state35 <= ap_CS_fsm(10);
    ap_CS_fsm_state36 <= ap_CS_fsm(11);
    ap_CS_fsm_state37 <= ap_CS_fsm(12);
    ap_CS_fsm_state4 <= ap_CS_fsm(2);
    ap_CS_fsm_state50 <= ap_CS_fsm(14);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp2_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp2_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp2_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp2_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp2_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp2_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp2_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp2_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp2_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp2_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp2_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp2_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp2_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp2_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp2_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp2_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp2_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp2_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp3_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp3_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp5_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp5_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp5_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp5_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp5_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp5_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp5_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp5_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp5_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp5_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp5_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp5_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp1_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln34_fu_1320_p2)
    begin
        if ((icmp_ln34_fu_1320_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state5_assign_proc : process(icmp_ln44_fu_1462_p2)
    begin
        if ((icmp_ln44_fu_1462_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state5 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_exit_iter0_state11_assign_proc : process(icmp_ln55_fu_1685_p2)
    begin
        if ((icmp_ln55_fu_1685_p2 = ap_const_lv1_1)) then 
            ap_condition_pp2_exit_iter0_state11 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp3_exit_iter0_state32_assign_proc : process(icmp_ln72_fu_1924_p2)
    begin
        if ((icmp_ln72_fu_1924_p2 = ap_const_lv1_1)) then 
            ap_condition_pp3_exit_iter0_state32 <= ap_const_logic_1;
        else 
            ap_condition_pp3_exit_iter0_state32 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp5_exit_iter0_state38_assign_proc : process(icmp_ln94_fu_2014_p2)
    begin
        if ((icmp_ln94_fu_2014_p2 = ap_const_lv1_1)) then 
            ap_condition_pp5_exit_iter0_state38 <= ap_const_logic_1;
        else 
            ap_condition_pp5_exit_iter0_state38 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, icmp_ln67_fu_1868_p2, ap_CS_fsm_state31)
    begin
        if ((((icmp_ln67_fu_1868_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state31)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);
    ap_enable_pp3 <= (ap_idle_pp3 xor ap_const_logic_1);
    ap_enable_pp5 <= (ap_idle_pp5 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter4)
    begin
        if (((ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter17, ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter13, ap_enable_reg_pp2_iter1, ap_enable_reg_pp2_iter2, ap_enable_reg_pp2_iter3, ap_enable_reg_pp2_iter4, ap_enable_reg_pp2_iter5, ap_enable_reg_pp2_iter6, ap_enable_reg_pp2_iter7, ap_enable_reg_pp2_iter8, ap_enable_reg_pp2_iter9, ap_enable_reg_pp2_iter10, ap_enable_reg_pp2_iter11, ap_enable_reg_pp2_iter12, ap_enable_reg_pp2_iter14, ap_enable_reg_pp2_iter15, ap_enable_reg_pp2_iter16, ap_enable_reg_pp2_iter18)
    begin
        if (((ap_enable_reg_pp2_iter18 = ap_const_logic_0) and (ap_enable_reg_pp2_iter16 = ap_const_logic_0) and (ap_enable_reg_pp2_iter15 = ap_const_logic_0) and (ap_enable_reg_pp2_iter14 = ap_const_logic_0) and (ap_enable_reg_pp2_iter12 = ap_const_logic_0) and (ap_enable_reg_pp2_iter11 = ap_const_logic_0) and (ap_enable_reg_pp2_iter10 = ap_const_logic_0) and (ap_enable_reg_pp2_iter9 = ap_const_logic_0) and (ap_enable_reg_pp2_iter8 = ap_const_logic_0) and (ap_enable_reg_pp2_iter7 = ap_const_logic_0) and (ap_enable_reg_pp2_iter6 = ap_const_logic_0) and (ap_enable_reg_pp2_iter5 = ap_const_logic_0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_0) and (ap_enable_reg_pp2_iter3 = ap_const_logic_0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter13 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0) and (ap_enable_reg_pp2_iter17 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp3_assign_proc : process(ap_enable_reg_pp3_iter0, ap_enable_reg_pp3_iter1)
    begin
        if (((ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_0))) then 
            ap_idle_pp3 <= ap_const_logic_1;
        else 
            ap_idle_pp3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp5_assign_proc : process(ap_enable_reg_pp5_iter5, ap_enable_reg_pp5_iter0, ap_enable_reg_pp5_iter1, ap_enable_reg_pp5_iter2, ap_enable_reg_pp5_iter3, ap_enable_reg_pp5_iter4, ap_enable_reg_pp5_iter6, ap_enable_reg_pp5_iter7, ap_enable_reg_pp5_iter8, ap_enable_reg_pp5_iter9, ap_enable_reg_pp5_iter10, ap_enable_reg_pp5_iter11)
    begin
        if (((ap_enable_reg_pp5_iter11 = ap_const_logic_0) and (ap_enable_reg_pp5_iter10 = ap_const_logic_0) and (ap_enable_reg_pp5_iter9 = ap_const_logic_0) and (ap_enable_reg_pp5_iter8 = ap_const_logic_0) and (ap_enable_reg_pp5_iter7 = ap_const_logic_0) and (ap_enable_reg_pp5_iter6 = ap_const_logic_0) and (ap_enable_reg_pp5_iter4 = ap_const_logic_0) and (ap_enable_reg_pp5_iter3 = ap_const_logic_0) and (ap_enable_reg_pp5_iter2 = ap_const_logic_0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_0) and (ap_enable_reg_pp5_iter0 = ap_const_logic_0) and (ap_enable_reg_pp5_iter5 = ap_const_logic_0))) then 
            ap_idle_pp5 <= ap_const_logic_1;
        else 
            ap_idle_pp5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i1_0_phi_fu_1187_p4_assign_proc : process(i1_0_reg_1183, icmp_ln44_reg_2152, ap_CS_fsm_pp1_stage0, select_ln50_1_reg_2166, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0)
    begin
        if (((icmp_ln44_reg_2152 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            ap_phi_mux_i1_0_phi_fu_1187_p4 <= select_ln50_1_reg_2166;
        else 
            ap_phi_mux_i1_0_phi_fu_1187_p4 <= i1_0_reg_1183;
        end if; 
    end process;


    ap_phi_mux_i3_0_phi_fu_1220_p4_assign_proc : process(i3_0_reg_1216, icmp_ln55_reg_2264, ap_CS_fsm_pp2_stage0, select_ln62_1_reg_2280, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0)
    begin
        if (((icmp_ln55_reg_2264 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            ap_phi_mux_i3_0_phi_fu_1220_p4 <= select_ln62_1_reg_2280;
        else 
            ap_phi_mux_i3_0_phi_fu_1220_p4 <= i3_0_reg_1216;
        end if; 
    end process;


    ap_phi_mux_i_0_phi_fu_1154_p4_assign_proc : process(i_0_reg_1150, icmp_ln34_reg_2115, ap_CS_fsm_pp0_stage0, select_ln34_1_reg_2129, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((icmp_ln34_reg_2115 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_i_0_phi_fu_1154_p4 <= select_ln34_1_reg_2129;
        else 
            ap_phi_mux_i_0_phi_fu_1154_p4 <= i_0_reg_1150;
        end if; 
    end process;


    ap_ready_assign_proc : process(icmp_ln67_fu_1868_p2, ap_CS_fsm_state31)
    begin
        if (((icmp_ln67_fu_1868_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    cosines_0_address0 <= zext_ln62_2_fu_1794_p1(6 - 1 downto 0);

    cosines_0_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter12)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter12 = ap_const_logic_1))) then 
            cosines_0_ce0 <= ap_const_logic_1;
        else 
            cosines_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cosines_10_address0 <= zext_ln62_2_fu_1794_p1(6 - 1 downto 0);

    cosines_10_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter12)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter12 = ap_const_logic_1))) then 
            cosines_10_ce0 <= ap_const_logic_1;
        else 
            cosines_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cosines_11_address0 <= zext_ln62_2_fu_1794_p1(6 - 1 downto 0);

    cosines_11_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter12)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter12 = ap_const_logic_1))) then 
            cosines_11_ce0 <= ap_const_logic_1;
        else 
            cosines_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cosines_12_address0 <= zext_ln62_2_fu_1794_p1(6 - 1 downto 0);

    cosines_12_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter12)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter12 = ap_const_logic_1))) then 
            cosines_12_ce0 <= ap_const_logic_1;
        else 
            cosines_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cosines_13_address0 <= zext_ln62_2_fu_1794_p1(6 - 1 downto 0);

    cosines_13_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter12)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter12 = ap_const_logic_1))) then 
            cosines_13_ce0 <= ap_const_logic_1;
        else 
            cosines_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cosines_14_address0 <= zext_ln62_2_fu_1794_p1(6 - 1 downto 0);

    cosines_14_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter12)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter12 = ap_const_logic_1))) then 
            cosines_14_ce0 <= ap_const_logic_1;
        else 
            cosines_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cosines_15_address0 <= zext_ln62_2_fu_1794_p1(6 - 1 downto 0);

    cosines_15_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter12)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter12 = ap_const_logic_1))) then 
            cosines_15_ce0 <= ap_const_logic_1;
        else 
            cosines_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cosines_16_address0 <= zext_ln62_2_fu_1794_p1(6 - 1 downto 0);

    cosines_16_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter12)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter12 = ap_const_logic_1))) then 
            cosines_16_ce0 <= ap_const_logic_1;
        else 
            cosines_16_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cosines_17_address0 <= zext_ln62_2_fu_1794_p1(6 - 1 downto 0);

    cosines_17_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter12)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter12 = ap_const_logic_1))) then 
            cosines_17_ce0 <= ap_const_logic_1;
        else 
            cosines_17_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cosines_18_address0 <= zext_ln62_2_fu_1794_p1(6 - 1 downto 0);

    cosines_18_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter12)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter12 = ap_const_logic_1))) then 
            cosines_18_ce0 <= ap_const_logic_1;
        else 
            cosines_18_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cosines_19_address0 <= zext_ln62_2_fu_1794_p1(6 - 1 downto 0);

    cosines_19_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter12)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter12 = ap_const_logic_1))) then 
            cosines_19_ce0 <= ap_const_logic_1;
        else 
            cosines_19_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cosines_1_address0 <= zext_ln62_2_fu_1794_p1(6 - 1 downto 0);

    cosines_1_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter12)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter12 = ap_const_logic_1))) then 
            cosines_1_ce0 <= ap_const_logic_1;
        else 
            cosines_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cosines_2_address0 <= zext_ln62_2_fu_1794_p1(6 - 1 downto 0);

    cosines_2_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter12)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter12 = ap_const_logic_1))) then 
            cosines_2_ce0 <= ap_const_logic_1;
        else 
            cosines_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cosines_3_address0 <= zext_ln62_2_fu_1794_p1(6 - 1 downto 0);

    cosines_3_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter12)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter12 = ap_const_logic_1))) then 
            cosines_3_ce0 <= ap_const_logic_1;
        else 
            cosines_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cosines_4_address0 <= zext_ln62_2_fu_1794_p1(6 - 1 downto 0);

    cosines_4_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter12)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter12 = ap_const_logic_1))) then 
            cosines_4_ce0 <= ap_const_logic_1;
        else 
            cosines_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cosines_5_address0 <= zext_ln62_2_fu_1794_p1(6 - 1 downto 0);

    cosines_5_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter12)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter12 = ap_const_logic_1))) then 
            cosines_5_ce0 <= ap_const_logic_1;
        else 
            cosines_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cosines_6_address0 <= zext_ln62_2_fu_1794_p1(6 - 1 downto 0);

    cosines_6_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter12)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter12 = ap_const_logic_1))) then 
            cosines_6_ce0 <= ap_const_logic_1;
        else 
            cosines_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cosines_7_address0 <= zext_ln62_2_fu_1794_p1(6 - 1 downto 0);

    cosines_7_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter12)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter12 = ap_const_logic_1))) then 
            cosines_7_ce0 <= ap_const_logic_1;
        else 
            cosines_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cosines_8_address0 <= zext_ln62_2_fu_1794_p1(6 - 1 downto 0);

    cosines_8_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter12)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter12 = ap_const_logic_1))) then 
            cosines_8_ce0 <= ap_const_logic_1;
        else 
            cosines_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cosines_9_address0 <= zext_ln62_2_fu_1794_p1(6 - 1 downto 0);

    cosines_9_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter12)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter12 = ap_const_logic_1))) then 
            cosines_9_ce0 <= ap_const_logic_1;
        else 
            cosines_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fft_frame_i_temp_0_address0_assign_proc : process(ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter0, ap_CS_fsm_state37, grp_kfft_fu_1282_fi_0_address0, zext_ln97_2_fu_2040_p1, ap_block_pp5_stage0)
    begin
        if (((ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0))) then 
            fft_frame_i_temp_0_address0 <= zext_ln97_2_fu_2040_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_frame_i_temp_0_address0 <= grp_kfft_fu_1282_fi_0_address0;
        else 
            fft_frame_i_temp_0_address0 <= "XXXXXXXX";
        end if; 
    end process;


    fft_frame_i_temp_0_ce0_assign_proc : process(ap_block_pp5_stage0_11001, ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter0, ap_CS_fsm_state37, grp_kfft_fu_1282_fi_0_ce0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0))) then 
            fft_frame_i_temp_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_frame_i_temp_0_ce0 <= grp_kfft_fu_1282_fi_0_ce0;
        else 
            fft_frame_i_temp_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fft_frame_i_temp_0_ce1_assign_proc : process(ap_CS_fsm_state37, grp_kfft_fu_1282_fi_0_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_frame_i_temp_0_ce1 <= grp_kfft_fu_1282_fi_0_ce1;
        else 
            fft_frame_i_temp_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    fft_frame_i_temp_0_we1_assign_proc : process(ap_CS_fsm_state37, grp_kfft_fu_1282_fi_0_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_frame_i_temp_0_we1 <= grp_kfft_fu_1282_fi_0_we1;
        else 
            fft_frame_i_temp_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    fft_frame_i_temp_1_address0_assign_proc : process(ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter0, ap_CS_fsm_state37, grp_kfft_fu_1282_fi_1_address0, zext_ln97_2_fu_2040_p1, ap_block_pp5_stage0)
    begin
        if (((ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0))) then 
            fft_frame_i_temp_1_address0 <= zext_ln97_2_fu_2040_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_frame_i_temp_1_address0 <= grp_kfft_fu_1282_fi_1_address0;
        else 
            fft_frame_i_temp_1_address0 <= "XXXXXXXX";
        end if; 
    end process;


    fft_frame_i_temp_1_ce0_assign_proc : process(ap_block_pp5_stage0_11001, ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter0, ap_CS_fsm_state37, grp_kfft_fu_1282_fi_1_ce0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0))) then 
            fft_frame_i_temp_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_frame_i_temp_1_ce0 <= grp_kfft_fu_1282_fi_1_ce0;
        else 
            fft_frame_i_temp_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fft_frame_i_temp_1_ce1_assign_proc : process(ap_CS_fsm_state37, grp_kfft_fu_1282_fi_1_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_frame_i_temp_1_ce1 <= grp_kfft_fu_1282_fi_1_ce1;
        else 
            fft_frame_i_temp_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    fft_frame_i_temp_1_we1_assign_proc : process(ap_CS_fsm_state37, grp_kfft_fu_1282_fi_1_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_frame_i_temp_1_we1 <= grp_kfft_fu_1282_fi_1_we1;
        else 
            fft_frame_i_temp_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    fft_frame_i_temp_2_address0_assign_proc : process(ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter0, ap_CS_fsm_state37, grp_kfft_fu_1282_fi_2_address0, zext_ln97_2_fu_2040_p1, ap_block_pp5_stage0)
    begin
        if (((ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0))) then 
            fft_frame_i_temp_2_address0 <= zext_ln97_2_fu_2040_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_frame_i_temp_2_address0 <= grp_kfft_fu_1282_fi_2_address0;
        else 
            fft_frame_i_temp_2_address0 <= "XXXXXXXX";
        end if; 
    end process;


    fft_frame_i_temp_2_ce0_assign_proc : process(ap_block_pp5_stage0_11001, ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter0, ap_CS_fsm_state37, grp_kfft_fu_1282_fi_2_ce0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0))) then 
            fft_frame_i_temp_2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_frame_i_temp_2_ce0 <= grp_kfft_fu_1282_fi_2_ce0;
        else 
            fft_frame_i_temp_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fft_frame_i_temp_2_ce1_assign_proc : process(ap_CS_fsm_state37, grp_kfft_fu_1282_fi_2_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_frame_i_temp_2_ce1 <= grp_kfft_fu_1282_fi_2_ce1;
        else 
            fft_frame_i_temp_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    fft_frame_i_temp_2_we1_assign_proc : process(ap_CS_fsm_state37, grp_kfft_fu_1282_fi_2_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_frame_i_temp_2_we1 <= grp_kfft_fu_1282_fi_2_we1;
        else 
            fft_frame_i_temp_2_we1 <= ap_const_logic_0;
        end if; 
    end process;


    fft_frame_i_temp_3_address0_assign_proc : process(ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter0, ap_CS_fsm_state37, grp_kfft_fu_1282_fi_3_address0, zext_ln97_2_fu_2040_p1, ap_block_pp5_stage0)
    begin
        if (((ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0))) then 
            fft_frame_i_temp_3_address0 <= zext_ln97_2_fu_2040_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_frame_i_temp_3_address0 <= grp_kfft_fu_1282_fi_3_address0;
        else 
            fft_frame_i_temp_3_address0 <= "XXXXXXXX";
        end if; 
    end process;


    fft_frame_i_temp_3_ce0_assign_proc : process(ap_block_pp5_stage0_11001, ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter0, ap_CS_fsm_state37, grp_kfft_fu_1282_fi_3_ce0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0))) then 
            fft_frame_i_temp_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_frame_i_temp_3_ce0 <= grp_kfft_fu_1282_fi_3_ce0;
        else 
            fft_frame_i_temp_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fft_frame_i_temp_3_ce1_assign_proc : process(ap_CS_fsm_state37, grp_kfft_fu_1282_fi_3_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_frame_i_temp_3_ce1 <= grp_kfft_fu_1282_fi_3_ce1;
        else 
            fft_frame_i_temp_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    fft_frame_i_temp_3_we1_assign_proc : process(ap_CS_fsm_state37, grp_kfft_fu_1282_fi_3_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_frame_i_temp_3_we1 <= grp_kfft_fu_1282_fi_3_we1;
        else 
            fft_frame_i_temp_3_we1 <= ap_const_logic_0;
        end if; 
    end process;


    fft_frame_r_temp_0_address0_assign_proc : process(ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter0, ap_CS_fsm_state37, grp_kfft_fu_1282_fr_0_address0, zext_ln97_2_fu_2040_p1, ap_block_pp5_stage0)
    begin
        if (((ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0))) then 
            fft_frame_r_temp_0_address0 <= zext_ln97_2_fu_2040_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_frame_r_temp_0_address0 <= grp_kfft_fu_1282_fr_0_address0;
        else 
            fft_frame_r_temp_0_address0 <= "XXXXXXXX";
        end if; 
    end process;


    fft_frame_r_temp_0_ce0_assign_proc : process(ap_block_pp5_stage0_11001, ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter0, ap_CS_fsm_state37, grp_kfft_fu_1282_fr_0_ce0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0))) then 
            fft_frame_r_temp_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_frame_r_temp_0_ce0 <= grp_kfft_fu_1282_fr_0_ce0;
        else 
            fft_frame_r_temp_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fft_frame_r_temp_0_ce1_assign_proc : process(ap_CS_fsm_state37, grp_kfft_fu_1282_fr_0_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_frame_r_temp_0_ce1 <= grp_kfft_fu_1282_fr_0_ce1;
        else 
            fft_frame_r_temp_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    fft_frame_r_temp_0_we1_assign_proc : process(ap_CS_fsm_state37, grp_kfft_fu_1282_fr_0_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_frame_r_temp_0_we1 <= grp_kfft_fu_1282_fr_0_we1;
        else 
            fft_frame_r_temp_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    fft_frame_r_temp_1_address0_assign_proc : process(ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter0, ap_CS_fsm_state37, grp_kfft_fu_1282_fr_1_address0, zext_ln97_2_fu_2040_p1, ap_block_pp5_stage0)
    begin
        if (((ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0))) then 
            fft_frame_r_temp_1_address0 <= zext_ln97_2_fu_2040_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_frame_r_temp_1_address0 <= grp_kfft_fu_1282_fr_1_address0;
        else 
            fft_frame_r_temp_1_address0 <= "XXXXXXXX";
        end if; 
    end process;


    fft_frame_r_temp_1_ce0_assign_proc : process(ap_block_pp5_stage0_11001, ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter0, ap_CS_fsm_state37, grp_kfft_fu_1282_fr_1_ce0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0))) then 
            fft_frame_r_temp_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_frame_r_temp_1_ce0 <= grp_kfft_fu_1282_fr_1_ce0;
        else 
            fft_frame_r_temp_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fft_frame_r_temp_1_ce1_assign_proc : process(ap_CS_fsm_state37, grp_kfft_fu_1282_fr_1_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_frame_r_temp_1_ce1 <= grp_kfft_fu_1282_fr_1_ce1;
        else 
            fft_frame_r_temp_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    fft_frame_r_temp_1_we1_assign_proc : process(ap_CS_fsm_state37, grp_kfft_fu_1282_fr_1_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_frame_r_temp_1_we1 <= grp_kfft_fu_1282_fr_1_we1;
        else 
            fft_frame_r_temp_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    fft_frame_r_temp_2_address0_assign_proc : process(ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter0, ap_CS_fsm_state37, grp_kfft_fu_1282_fr_2_address0, zext_ln97_2_fu_2040_p1, ap_block_pp5_stage0)
    begin
        if (((ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0))) then 
            fft_frame_r_temp_2_address0 <= zext_ln97_2_fu_2040_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_frame_r_temp_2_address0 <= grp_kfft_fu_1282_fr_2_address0;
        else 
            fft_frame_r_temp_2_address0 <= "XXXXXXXX";
        end if; 
    end process;


    fft_frame_r_temp_2_ce0_assign_proc : process(ap_block_pp5_stage0_11001, ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter0, ap_CS_fsm_state37, grp_kfft_fu_1282_fr_2_ce0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0))) then 
            fft_frame_r_temp_2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_frame_r_temp_2_ce0 <= grp_kfft_fu_1282_fr_2_ce0;
        else 
            fft_frame_r_temp_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fft_frame_r_temp_2_ce1_assign_proc : process(ap_CS_fsm_state37, grp_kfft_fu_1282_fr_2_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_frame_r_temp_2_ce1 <= grp_kfft_fu_1282_fr_2_ce1;
        else 
            fft_frame_r_temp_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    fft_frame_r_temp_2_we1_assign_proc : process(ap_CS_fsm_state37, grp_kfft_fu_1282_fr_2_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_frame_r_temp_2_we1 <= grp_kfft_fu_1282_fr_2_we1;
        else 
            fft_frame_r_temp_2_we1 <= ap_const_logic_0;
        end if; 
    end process;


    fft_frame_r_temp_3_address0_assign_proc : process(ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter0, ap_CS_fsm_state37, grp_kfft_fu_1282_fr_3_address0, zext_ln97_2_fu_2040_p1, ap_block_pp5_stage0)
    begin
        if (((ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0))) then 
            fft_frame_r_temp_3_address0 <= zext_ln97_2_fu_2040_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_frame_r_temp_3_address0 <= grp_kfft_fu_1282_fr_3_address0;
        else 
            fft_frame_r_temp_3_address0 <= "XXXXXXXX";
        end if; 
    end process;


    fft_frame_r_temp_3_ce0_assign_proc : process(ap_block_pp5_stage0_11001, ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter0, ap_CS_fsm_state37, grp_kfft_fu_1282_fr_3_ce0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0))) then 
            fft_frame_r_temp_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_frame_r_temp_3_ce0 <= grp_kfft_fu_1282_fr_3_ce0;
        else 
            fft_frame_r_temp_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fft_frame_r_temp_3_ce1_assign_proc : process(ap_CS_fsm_state37, grp_kfft_fu_1282_fr_3_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_frame_r_temp_3_ce1 <= grp_kfft_fu_1282_fr_3_ce1;
        else 
            fft_frame_r_temp_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    fft_frame_r_temp_3_we1_assign_proc : process(ap_CS_fsm_state37, grp_kfft_fu_1282_fr_3_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_frame_r_temp_3_we1 <= grp_kfft_fu_1282_fr_3_we1;
        else 
            fft_frame_r_temp_3_we1 <= ap_const_logic_0;
        end if; 
    end process;


    fft_input_i_0_address1_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_CS_fsm_state35, ap_CS_fsm_state37, grp_kfft_fu_1282_pi_0_address1, ap_block_pp3_stage0, zext_ln75_4_fu_1964_p1, zext_ln83_fu_1996_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            fft_input_i_0_address1 <= zext_ln83_fu_1996_p1(8 - 1 downto 0);
        elsif (((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            fft_input_i_0_address1 <= zext_ln75_4_fu_1964_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_input_i_0_address1 <= grp_kfft_fu_1282_pi_0_address1;
        else 
            fft_input_i_0_address1 <= "XXXXXXXX";
        end if; 
    end process;


    fft_input_i_0_ce0_assign_proc : process(ap_CS_fsm_state37, grp_kfft_fu_1282_pi_0_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_input_i_0_ce0 <= grp_kfft_fu_1282_pi_0_ce0;
        else 
            fft_input_i_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fft_input_i_0_ce1_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter0, ap_CS_fsm_state35, ap_CS_fsm_state37, grp_kfft_fu_1282_pi_0_ce1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state35) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)))) then 
            fft_input_i_0_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_input_i_0_ce1 <= grp_kfft_fu_1282_pi_0_ce1;
        else 
            fft_input_i_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    fft_input_i_0_d1_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_CS_fsm_state35, ap_CS_fsm_state37, grp_kfft_fu_1282_pi_0_d1, ap_block_pp3_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state35) or ((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0)))) then 
            fft_input_i_0_d1 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_input_i_0_d1 <= grp_kfft_fu_1282_pi_0_d1;
        else 
            fft_input_i_0_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    fft_input_i_0_we1_assign_proc : process(icmp_ln72_fu_1924_p2, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter0, trunc_ln75_fu_1950_p1, ap_CS_fsm_state35, icmp_ln80_fu_1976_p2, ap_CS_fsm_state37, grp_kfft_fu_1282_pi_0_we1, trunc_ln83_fu_1982_p1)
    begin
        if ((((icmp_ln80_fu_1976_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35) and (trunc_ln83_fu_1982_p1 = ap_const_lv2_0)) or ((trunc_ln75_fu_1950_p1 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln72_fu_1924_p2 = ap_const_lv1_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)))) then 
            fft_input_i_0_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_input_i_0_we1 <= grp_kfft_fu_1282_pi_0_we1;
        else 
            fft_input_i_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    fft_input_i_1_address1_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_CS_fsm_state35, ap_CS_fsm_state37, grp_kfft_fu_1282_pi_1_address1, ap_block_pp3_stage0, zext_ln75_4_fu_1964_p1, zext_ln83_fu_1996_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            fft_input_i_1_address1 <= zext_ln83_fu_1996_p1(8 - 1 downto 0);
        elsif (((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            fft_input_i_1_address1 <= zext_ln75_4_fu_1964_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_input_i_1_address1 <= grp_kfft_fu_1282_pi_1_address1;
        else 
            fft_input_i_1_address1 <= "XXXXXXXX";
        end if; 
    end process;


    fft_input_i_1_ce0_assign_proc : process(ap_CS_fsm_state37, grp_kfft_fu_1282_pi_1_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_input_i_1_ce0 <= grp_kfft_fu_1282_pi_1_ce0;
        else 
            fft_input_i_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fft_input_i_1_ce1_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter0, ap_CS_fsm_state35, ap_CS_fsm_state37, grp_kfft_fu_1282_pi_1_ce1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state35) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)))) then 
            fft_input_i_1_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_input_i_1_ce1 <= grp_kfft_fu_1282_pi_1_ce1;
        else 
            fft_input_i_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    fft_input_i_1_d1_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_CS_fsm_state35, ap_CS_fsm_state37, grp_kfft_fu_1282_pi_1_d1, ap_block_pp3_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state35) or ((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0)))) then 
            fft_input_i_1_d1 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_input_i_1_d1 <= grp_kfft_fu_1282_pi_1_d1;
        else 
            fft_input_i_1_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    fft_input_i_1_we1_assign_proc : process(icmp_ln72_fu_1924_p2, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter0, trunc_ln75_fu_1950_p1, ap_CS_fsm_state35, icmp_ln80_fu_1976_p2, ap_CS_fsm_state37, grp_kfft_fu_1282_pi_1_we1, trunc_ln83_fu_1982_p1)
    begin
        if ((((icmp_ln80_fu_1976_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35) and (trunc_ln83_fu_1982_p1 = ap_const_lv2_1)) or ((trunc_ln75_fu_1950_p1 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln72_fu_1924_p2 = ap_const_lv1_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)))) then 
            fft_input_i_1_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_input_i_1_we1 <= grp_kfft_fu_1282_pi_1_we1;
        else 
            fft_input_i_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    fft_input_i_2_address1_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_CS_fsm_state35, ap_CS_fsm_state37, grp_kfft_fu_1282_pi_2_address1, ap_block_pp3_stage0, zext_ln75_4_fu_1964_p1, zext_ln83_fu_1996_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            fft_input_i_2_address1 <= zext_ln83_fu_1996_p1(8 - 1 downto 0);
        elsif (((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            fft_input_i_2_address1 <= zext_ln75_4_fu_1964_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_input_i_2_address1 <= grp_kfft_fu_1282_pi_2_address1;
        else 
            fft_input_i_2_address1 <= "XXXXXXXX";
        end if; 
    end process;


    fft_input_i_2_ce0_assign_proc : process(ap_CS_fsm_state37, grp_kfft_fu_1282_pi_2_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_input_i_2_ce0 <= grp_kfft_fu_1282_pi_2_ce0;
        else 
            fft_input_i_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fft_input_i_2_ce1_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter0, ap_CS_fsm_state35, ap_CS_fsm_state37, grp_kfft_fu_1282_pi_2_ce1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state35) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)))) then 
            fft_input_i_2_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_input_i_2_ce1 <= grp_kfft_fu_1282_pi_2_ce1;
        else 
            fft_input_i_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    fft_input_i_2_d1_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_CS_fsm_state35, ap_CS_fsm_state37, grp_kfft_fu_1282_pi_2_d1, ap_block_pp3_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state35) or ((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0)))) then 
            fft_input_i_2_d1 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_input_i_2_d1 <= grp_kfft_fu_1282_pi_2_d1;
        else 
            fft_input_i_2_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    fft_input_i_2_we1_assign_proc : process(icmp_ln72_fu_1924_p2, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter0, trunc_ln75_fu_1950_p1, ap_CS_fsm_state35, icmp_ln80_fu_1976_p2, ap_CS_fsm_state37, grp_kfft_fu_1282_pi_2_we1, trunc_ln83_fu_1982_p1)
    begin
        if ((((icmp_ln80_fu_1976_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35) and (trunc_ln83_fu_1982_p1 = ap_const_lv2_2)) or ((trunc_ln75_fu_1950_p1 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln72_fu_1924_p2 = ap_const_lv1_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)))) then 
            fft_input_i_2_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_input_i_2_we1 <= grp_kfft_fu_1282_pi_2_we1;
        else 
            fft_input_i_2_we1 <= ap_const_logic_0;
        end if; 
    end process;


    fft_input_i_3_address1_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_CS_fsm_state35, ap_CS_fsm_state37, grp_kfft_fu_1282_pi_3_address1, ap_block_pp3_stage0, zext_ln75_4_fu_1964_p1, zext_ln83_fu_1996_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            fft_input_i_3_address1 <= zext_ln83_fu_1996_p1(8 - 1 downto 0);
        elsif (((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            fft_input_i_3_address1 <= zext_ln75_4_fu_1964_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_input_i_3_address1 <= grp_kfft_fu_1282_pi_3_address1;
        else 
            fft_input_i_3_address1 <= "XXXXXXXX";
        end if; 
    end process;


    fft_input_i_3_ce0_assign_proc : process(ap_CS_fsm_state37, grp_kfft_fu_1282_pi_3_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_input_i_3_ce0 <= grp_kfft_fu_1282_pi_3_ce0;
        else 
            fft_input_i_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fft_input_i_3_ce1_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter0, ap_CS_fsm_state35, ap_CS_fsm_state37, grp_kfft_fu_1282_pi_3_ce1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state35) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)))) then 
            fft_input_i_3_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_input_i_3_ce1 <= grp_kfft_fu_1282_pi_3_ce1;
        else 
            fft_input_i_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    fft_input_i_3_d1_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_CS_fsm_state35, ap_CS_fsm_state37, grp_kfft_fu_1282_pi_3_d1, ap_block_pp3_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state35) or ((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0)))) then 
            fft_input_i_3_d1 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_input_i_3_d1 <= grp_kfft_fu_1282_pi_3_d1;
        else 
            fft_input_i_3_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    fft_input_i_3_we1_assign_proc : process(icmp_ln72_fu_1924_p2, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter0, trunc_ln75_fu_1950_p1, ap_CS_fsm_state35, icmp_ln80_fu_1976_p2, ap_CS_fsm_state37, grp_kfft_fu_1282_pi_3_we1, trunc_ln83_fu_1982_p1)
    begin
        if ((((icmp_ln80_fu_1976_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35) and (trunc_ln83_fu_1982_p1 = ap_const_lv2_3)) or ((trunc_ln75_fu_1950_p1 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln72_fu_1924_p2 = ap_const_lv1_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)))) then 
            fft_input_i_3_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_input_i_3_we1 <= grp_kfft_fu_1282_pi_3_we1;
        else 
            fft_input_i_3_we1 <= ap_const_logic_0;
        end if; 
    end process;


    frames_address0_assign_proc : process(frames_addr_1_reg_2292, ap_enable_reg_pp1_iter4, ap_enable_reg_pp2_iter12, ap_block_pp1_stage0, ap_block_pp2_stage0, zext_ln50_8_fu_1681_p1)
    begin
        if (((ap_enable_reg_pp2_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            frames_address0 <= frames_addr_1_reg_2292;
        elsif (((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            frames_address0 <= zext_ln50_8_fu_1681_p1(15 - 1 downto 0);
        else 
            frames_address0 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    frames_address1_assign_proc : process(frames_addr_1_reg_2292_pp2_iter17_reg, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_enable_reg_pp2_iter18, ap_block_pp2_stage0, zext_ln75_6_fu_1945_p1, ap_block_pp3_stage0)
    begin
        if (((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            frames_address1 <= zext_ln75_6_fu_1945_p1(15 - 1 downto 0);
        elsif (((ap_enable_reg_pp2_iter18 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            frames_address1 <= frames_addr_1_reg_2292_pp2_iter17_reg;
        else 
            frames_address1 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    frames_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter4, ap_enable_reg_pp2_iter12)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter12 = ap_const_logic_1)))) then 
            frames_ce0 <= ap_const_logic_1;
        else 
            frames_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    frames_ce1_assign_proc : process(ap_block_pp2_stage0_11001, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter0, ap_enable_reg_pp2_iter18)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter18 = ap_const_logic_1)))) then 
            frames_ce1 <= ap_const_logic_1;
        else 
            frames_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    frames_temp_0_address1_assign_proc : process(ap_CS_fsm_pp3_stage0, frames_temp_0_addr_reg_2455, ap_CS_fsm_state35, ap_enable_reg_pp3_iter1, ap_CS_fsm_state37, grp_kfft_fu_1282_pr_0_address1, ap_block_pp3_stage0, zext_ln83_fu_1996_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            frames_temp_0_address1 <= zext_ln83_fu_1996_p1(8 - 1 downto 0);
        elsif (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            frames_temp_0_address1 <= frames_temp_0_addr_reg_2455;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            frames_temp_0_address1 <= grp_kfft_fu_1282_pr_0_address1;
        else 
            frames_temp_0_address1 <= "XXXXXXXX";
        end if; 
    end process;


    frames_temp_0_ce0_assign_proc : process(ap_CS_fsm_state37, grp_kfft_fu_1282_pr_0_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            frames_temp_0_ce0 <= grp_kfft_fu_1282_pr_0_ce0;
        else 
            frames_temp_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    frames_temp_0_ce1_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_CS_fsm_state35, ap_enable_reg_pp3_iter1, ap_CS_fsm_state37, grp_kfft_fu_1282_pr_0_ce1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state35) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)))) then 
            frames_temp_0_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            frames_temp_0_ce1 <= grp_kfft_fu_1282_pr_0_ce1;
        else 
            frames_temp_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    frames_temp_0_d1_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_CS_fsm_state35, ap_enable_reg_pp3_iter1, ap_CS_fsm_state37, frames_q1, grp_kfft_fu_1282_pr_0_d1, ap_block_pp3_stage0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            frames_temp_0_d1 <= ap_const_lv32_0;
        elsif (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            frames_temp_0_d1 <= frames_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            frames_temp_0_d1 <= grp_kfft_fu_1282_pr_0_d1;
        else 
            frames_temp_0_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    frames_temp_0_we1_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, trunc_ln75_reg_2451, ap_CS_fsm_state35, icmp_ln80_fu_1976_p2, ap_enable_reg_pp3_iter1, ap_CS_fsm_state37, grp_kfft_fu_1282_pr_0_we1, trunc_ln83_fu_1982_p1)
    begin
        if ((((icmp_ln80_fu_1976_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35) and (trunc_ln83_fu_1982_p1 = ap_const_lv2_0)) or ((trunc_ln75_reg_2451 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)))) then 
            frames_temp_0_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            frames_temp_0_we1 <= grp_kfft_fu_1282_pr_0_we1;
        else 
            frames_temp_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    frames_temp_1_address1_assign_proc : process(ap_CS_fsm_pp3_stage0, frames_temp_1_addr_reg_2460, ap_CS_fsm_state35, ap_enable_reg_pp3_iter1, ap_CS_fsm_state37, grp_kfft_fu_1282_pr_1_address1, ap_block_pp3_stage0, zext_ln83_fu_1996_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            frames_temp_1_address1 <= zext_ln83_fu_1996_p1(8 - 1 downto 0);
        elsif (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            frames_temp_1_address1 <= frames_temp_1_addr_reg_2460;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            frames_temp_1_address1 <= grp_kfft_fu_1282_pr_1_address1;
        else 
            frames_temp_1_address1 <= "XXXXXXXX";
        end if; 
    end process;


    frames_temp_1_ce0_assign_proc : process(ap_CS_fsm_state37, grp_kfft_fu_1282_pr_1_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            frames_temp_1_ce0 <= grp_kfft_fu_1282_pr_1_ce0;
        else 
            frames_temp_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    frames_temp_1_ce1_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_CS_fsm_state35, ap_enable_reg_pp3_iter1, ap_CS_fsm_state37, grp_kfft_fu_1282_pr_1_ce1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state35) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)))) then 
            frames_temp_1_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            frames_temp_1_ce1 <= grp_kfft_fu_1282_pr_1_ce1;
        else 
            frames_temp_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    frames_temp_1_d1_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_CS_fsm_state35, ap_enable_reg_pp3_iter1, ap_CS_fsm_state37, frames_q1, grp_kfft_fu_1282_pr_1_d1, ap_block_pp3_stage0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            frames_temp_1_d1 <= ap_const_lv32_0;
        elsif (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            frames_temp_1_d1 <= frames_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            frames_temp_1_d1 <= grp_kfft_fu_1282_pr_1_d1;
        else 
            frames_temp_1_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    frames_temp_1_we1_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, trunc_ln75_reg_2451, ap_CS_fsm_state35, icmp_ln80_fu_1976_p2, ap_enable_reg_pp3_iter1, ap_CS_fsm_state37, grp_kfft_fu_1282_pr_1_we1, trunc_ln83_fu_1982_p1)
    begin
        if ((((icmp_ln80_fu_1976_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35) and (trunc_ln83_fu_1982_p1 = ap_const_lv2_1)) or ((trunc_ln75_reg_2451 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)))) then 
            frames_temp_1_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            frames_temp_1_we1 <= grp_kfft_fu_1282_pr_1_we1;
        else 
            frames_temp_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    frames_temp_2_address1_assign_proc : process(ap_CS_fsm_pp3_stage0, frames_temp_2_addr_reg_2465, ap_CS_fsm_state35, ap_enable_reg_pp3_iter1, ap_CS_fsm_state37, grp_kfft_fu_1282_pr_2_address1, ap_block_pp3_stage0, zext_ln83_fu_1996_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            frames_temp_2_address1 <= zext_ln83_fu_1996_p1(8 - 1 downto 0);
        elsif (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            frames_temp_2_address1 <= frames_temp_2_addr_reg_2465;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            frames_temp_2_address1 <= grp_kfft_fu_1282_pr_2_address1;
        else 
            frames_temp_2_address1 <= "XXXXXXXX";
        end if; 
    end process;


    frames_temp_2_ce0_assign_proc : process(ap_CS_fsm_state37, grp_kfft_fu_1282_pr_2_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            frames_temp_2_ce0 <= grp_kfft_fu_1282_pr_2_ce0;
        else 
            frames_temp_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    frames_temp_2_ce1_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_CS_fsm_state35, ap_enable_reg_pp3_iter1, ap_CS_fsm_state37, grp_kfft_fu_1282_pr_2_ce1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state35) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)))) then 
            frames_temp_2_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            frames_temp_2_ce1 <= grp_kfft_fu_1282_pr_2_ce1;
        else 
            frames_temp_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    frames_temp_2_d1_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_CS_fsm_state35, ap_enable_reg_pp3_iter1, ap_CS_fsm_state37, frames_q1, grp_kfft_fu_1282_pr_2_d1, ap_block_pp3_stage0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            frames_temp_2_d1 <= ap_const_lv32_0;
        elsif (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            frames_temp_2_d1 <= frames_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            frames_temp_2_d1 <= grp_kfft_fu_1282_pr_2_d1;
        else 
            frames_temp_2_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    frames_temp_2_we1_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, trunc_ln75_reg_2451, ap_CS_fsm_state35, icmp_ln80_fu_1976_p2, ap_enable_reg_pp3_iter1, ap_CS_fsm_state37, grp_kfft_fu_1282_pr_2_we1, trunc_ln83_fu_1982_p1)
    begin
        if ((((icmp_ln80_fu_1976_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35) and (trunc_ln83_fu_1982_p1 = ap_const_lv2_2)) or ((trunc_ln75_reg_2451 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)))) then 
            frames_temp_2_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            frames_temp_2_we1 <= grp_kfft_fu_1282_pr_2_we1;
        else 
            frames_temp_2_we1 <= ap_const_logic_0;
        end if; 
    end process;


    frames_temp_3_address1_assign_proc : process(ap_CS_fsm_pp3_stage0, frames_temp_3_addr_reg_2470, ap_CS_fsm_state35, ap_enable_reg_pp3_iter1, ap_CS_fsm_state37, grp_kfft_fu_1282_pr_3_address1, ap_block_pp3_stage0, zext_ln83_fu_1996_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            frames_temp_3_address1 <= zext_ln83_fu_1996_p1(8 - 1 downto 0);
        elsif (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            frames_temp_3_address1 <= frames_temp_3_addr_reg_2470;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            frames_temp_3_address1 <= grp_kfft_fu_1282_pr_3_address1;
        else 
            frames_temp_3_address1 <= "XXXXXXXX";
        end if; 
    end process;


    frames_temp_3_ce0_assign_proc : process(ap_CS_fsm_state37, grp_kfft_fu_1282_pr_3_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            frames_temp_3_ce0 <= grp_kfft_fu_1282_pr_3_ce0;
        else 
            frames_temp_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    frames_temp_3_ce1_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_CS_fsm_state35, ap_enable_reg_pp3_iter1, ap_CS_fsm_state37, grp_kfft_fu_1282_pr_3_ce1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state35) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)))) then 
            frames_temp_3_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            frames_temp_3_ce1 <= grp_kfft_fu_1282_pr_3_ce1;
        else 
            frames_temp_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    frames_temp_3_d1_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_CS_fsm_state35, ap_enable_reg_pp3_iter1, ap_CS_fsm_state37, frames_q1, grp_kfft_fu_1282_pr_3_d1, ap_block_pp3_stage0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            frames_temp_3_d1 <= ap_const_lv32_0;
        elsif (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            frames_temp_3_d1 <= frames_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            frames_temp_3_d1 <= grp_kfft_fu_1282_pr_3_d1;
        else 
            frames_temp_3_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    frames_temp_3_we1_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, trunc_ln75_reg_2451, ap_CS_fsm_state35, icmp_ln80_fu_1976_p2, ap_enable_reg_pp3_iter1, ap_CS_fsm_state37, grp_kfft_fu_1282_pr_3_we1, trunc_ln83_fu_1982_p1)
    begin
        if ((((icmp_ln80_fu_1976_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35) and (trunc_ln83_fu_1982_p1 = ap_const_lv2_3)) or ((trunc_ln75_reg_2451 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)))) then 
            frames_temp_3_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            frames_temp_3_we1 <= grp_kfft_fu_1282_pr_3_we1;
        else 
            frames_temp_3_we1 <= ap_const_logic_0;
        end if; 
    end process;


    frames_we0_assign_proc : process(ap_block_pp1_stage0_11001, icmp_ln44_reg_2152_pp1_iter3_reg, ap_enable_reg_pp1_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln44_reg_2152_pp1_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
            frames_we0 <= ap_const_logic_1;
        else 
            frames_we0 <= ap_const_logic_0;
        end if; 
    end process;


    frames_we1_assign_proc : process(ap_block_pp2_stage0_11001, icmp_ln55_reg_2264_pp2_iter17_reg, ap_enable_reg_pp2_iter18)
    begin
        if (((icmp_ln55_reg_2264_pp2_iter17_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter18 = ap_const_logic_1))) then 
            frames_we1 <= ap_const_logic_1;
        else 
            frames_we1 <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1306_p0_assign_proc : process(frames_load_reg_2403, tmp_41_reg_2545, ap_enable_reg_pp2_iter14, ap_enable_reg_pp5_iter2, ap_block_pp2_stage0, ap_block_pp5_stage0)
    begin
        if (((ap_enable_reg_pp5_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage0))) then 
            grp_fu_1306_p0 <= tmp_41_reg_2545;
        elsif (((ap_enable_reg_pp2_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            grp_fu_1306_p0 <= frames_load_reg_2403;
        else 
            grp_fu_1306_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1306_p1_assign_proc : process(tmp_40_reg_2408, tmp_41_reg_2545, ap_enable_reg_pp2_iter14, ap_enable_reg_pp5_iter2, ap_block_pp2_stage0, ap_block_pp5_stage0)
    begin
        if (((ap_enable_reg_pp5_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage0))) then 
            grp_fu_1306_p1 <= tmp_41_reg_2545;
        elsif (((ap_enable_reg_pp2_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            grp_fu_1306_p1 <= tmp_40_reg_2408;
        else 
            grp_fu_1306_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_1725_p1 <= ap_const_lv10_14(6 - 1 downto 0);
    grp_kfft_fu_1282_ap_start <= grp_kfft_fu_1282_ap_start_reg;
    i_12_fu_1474_p2 <= std_logic_vector(unsigned(ap_const_lv6_1) + unsigned(ap_phi_mux_i1_0_phi_fu_1187_p4));
    i_13_fu_1697_p2 <= std_logic_vector(unsigned(ap_phi_mux_i3_0_phi_fu_1220_p4) + unsigned(ap_const_lv6_1));
    i_14_fu_1874_p2 <= std_logic_vector(unsigned(i5_0_reg_1238) + unsigned(ap_const_lv6_1));
    i_fu_1332_p2 <= std_logic_vector(unsigned(ap_const_lv6_1) + unsigned(ap_phi_mux_i_0_phi_fu_1154_p4));
    icmp_ln34_fu_1320_p2 <= "1" when (indvar_flatten_reg_1139 = ap_const_lv15_7A80) else "0";
    icmp_ln37_fu_1338_p2 <= "1" when (j_0_reg_1161 = ap_const_lv10_280) else "0";
    icmp_ln44_fu_1462_p2 <= "1" when (indvar_flatten11_reg_1172 = ap_const_lv15_7A80) else "0";
    icmp_ln47_fu_1480_p2 <= "1" when (j2_0_reg_1194 = ap_const_lv10_280) else "0";
    icmp_ln55_fu_1685_p2 <= "1" when (indvar_flatten23_reg_1205 = ap_const_lv15_7A80) else "0";
    icmp_ln58_fu_1703_p2 <= "1" when (j4_0_reg_1227 = ap_const_lv10_280) else "0";
    icmp_ln67_fu_1868_p2 <= "1" when (i5_0_reg_1238 = ap_const_lv6_31) else "0";
    icmp_ln72_fu_1924_p2 <= "1" when (j6_0_reg_1249 = ap_const_lv10_280) else "0";
    icmp_ln80_fu_1976_p2 <= "1" when (j7_0_reg_1260 = ap_const_lv11_400) else "0";
    icmp_ln94_fu_2014_p2 <= "1" when (j8_0_reg_1271 = ap_const_lv10_201) else "0";
    indices_0_address0 <= zext_ln50_10_fu_1589_p1(13 - 1 downto 0);
    indices_0_address1 <= zext_ln40_4_fu_1454_p1(13 - 1 downto 0);

    indices_0_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            indices_0_ce0 <= ap_const_logic_1;
        else 
            indices_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    indices_0_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            indices_0_ce1 <= ap_const_logic_1;
        else 
            indices_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    indices_0_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, trunc_ln40_reg_2138, ap_enable_reg_pp0_iter1)
    begin
        if (((trunc_ln40_reg_2138 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            indices_0_we1 <= ap_const_logic_1;
        else 
            indices_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    indices_1_address0 <= zext_ln50_10_fu_1589_p1(13 - 1 downto 0);
    indices_1_address1 <= zext_ln40_4_fu_1454_p1(13 - 1 downto 0);

    indices_1_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            indices_1_ce0 <= ap_const_logic_1;
        else 
            indices_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    indices_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            indices_1_ce1 <= ap_const_logic_1;
        else 
            indices_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    indices_1_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, trunc_ln40_reg_2138, ap_enable_reg_pp0_iter1)
    begin
        if (((trunc_ln40_reg_2138 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            indices_1_we1 <= ap_const_logic_1;
        else 
            indices_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    indices_2_address0 <= zext_ln50_10_fu_1589_p1(13 - 1 downto 0);
    indices_2_address1 <= zext_ln40_4_fu_1454_p1(13 - 1 downto 0);

    indices_2_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            indices_2_ce0 <= ap_const_logic_1;
        else 
            indices_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    indices_2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            indices_2_ce1 <= ap_const_logic_1;
        else 
            indices_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    indices_2_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, trunc_ln40_reg_2138, ap_enable_reg_pp0_iter1)
    begin
        if (((trunc_ln40_reg_2138 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            indices_2_we1 <= ap_const_logic_1;
        else 
            indices_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    indices_3_address0 <= zext_ln50_10_fu_1589_p1(13 - 1 downto 0);
    indices_3_address1 <= zext_ln40_4_fu_1454_p1(13 - 1 downto 0);

    indices_3_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            indices_3_ce0 <= ap_const_logic_1;
        else 
            indices_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    indices_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            indices_3_ce1 <= ap_const_logic_1;
        else 
            indices_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    indices_3_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, trunc_ln40_reg_2138, ap_enable_reg_pp0_iter1)
    begin
        if (((trunc_ln40_reg_2138 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            indices_3_we1 <= ap_const_logic_1;
        else 
            indices_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    j_4_fu_1516_p2 <= std_logic_vector(unsigned(ap_const_lv10_1) + unsigned(select_ln50_fu_1486_p3));
    j_5_fu_1731_p2 <= std_logic_vector(unsigned(select_ln62_fu_1709_p3) + unsigned(ap_const_lv10_1));
    j_6_fu_1930_p2 <= std_logic_vector(unsigned(j6_0_reg_1249) + unsigned(ap_const_lv10_1));
    j_7_fu_2008_p2 <= std_logic_vector(unsigned(j7_0_reg_1260) + unsigned(ap_const_lv11_1));
    j_8_fu_2020_p2 <= std_logic_vector(unsigned(j8_0_reg_1271) + unsigned(ap_const_lv10_1));
    j_fu_1374_p2 <= std_logic_vector(unsigned(select_ln34_fu_1344_p3) + unsigned(ap_const_lv10_1));
    lshr_ln1_fu_1986_p4 <= j7_0_reg_1260(10 downto 2);
    lshr_ln2_fu_2030_p4 <= j8_0_reg_1271(9 downto 2);
    lshr_ln50_1_fu_1634_p4 <= tmp_38_fu_1616_p6(15 downto 3);
    lshr_ln_fu_1954_p4 <= j6_0_reg_1249(9 downto 2);
    mul_ln62_fu_2108_p0 <= mul_ln62_fu_2108_p00(10 - 1 downto 0);
    mul_ln62_fu_2108_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln62_reg_2273_pp2_iter10_reg),22));
    mul_ln62_fu_2108_p1 <= ap_const_lv22_667(12 - 1 downto 0);
    select_ln34_1_fu_1352_p3 <= 
        i_fu_1332_p2 when (icmp_ln37_fu_1338_p2(0) = '1') else 
        ap_phi_mux_i_0_phi_fu_1154_p4;
    select_ln34_fu_1344_p3 <= 
        ap_const_lv10_0 when (icmp_ln37_fu_1338_p2(0) = '1') else 
        j_0_reg_1161;
    select_ln50_1_fu_1494_p3 <= 
        i_12_fu_1474_p2 when (icmp_ln47_fu_1480_p2(0) = '1') else 
        ap_phi_mux_i1_0_phi_fu_1187_p4;
    select_ln50_fu_1486_p3 <= 
        ap_const_lv10_0 when (icmp_ln47_fu_1480_p2(0) = '1') else 
        j2_0_reg_1194;
    select_ln62_1_fu_1717_p3 <= 
        i_13_fu_1697_p2 when (icmp_ln58_fu_1703_p2(0) = '1') else 
        ap_phi_mux_i3_0_phi_fu_1220_p4;
    select_ln62_fu_1709_p3 <= 
        ap_const_lv10_0 when (icmp_ln58_fu_1703_p2(0) = '1') else 
        j4_0_reg_1227;
        sext_ln62_fu_1791_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_91_reg_2298),10));

    shl_ln40_1_mid2_fu_1387_p3 <= (select_ln34_1_reg_2129 & ap_const_lv6_0);
    shl_ln40_mid2_fu_1380_p3 <= (select_ln34_1_reg_2129 & ap_const_lv8_0);
    signal_0_address0 <= zext_ln50_5_fu_1644_p1(11 - 1 downto 0);

    signal_0_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            signal_0_ce0 <= ap_const_logic_1;
        else 
            signal_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    signal_1_address0 <= zext_ln50_5_fu_1644_p1(11 - 1 downto 0);

    signal_1_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            signal_1_ce0 <= ap_const_logic_1;
        else 
            signal_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    signal_2_address0 <= zext_ln50_5_fu_1644_p1(11 - 1 downto 0);

    signal_2_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            signal_2_ce0 <= ap_const_logic_1;
        else 
            signal_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    signal_3_address0 <= zext_ln50_5_fu_1644_p1(11 - 1 downto 0);

    signal_3_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            signal_3_ce0 <= ap_const_logic_1;
        else 
            signal_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    signal_4_address0 <= zext_ln50_5_fu_1644_p1(11 - 1 downto 0);

    signal_4_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            signal_4_ce0 <= ap_const_logic_1;
        else 
            signal_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    signal_5_address0 <= zext_ln50_5_fu_1644_p1(11 - 1 downto 0);

    signal_5_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            signal_5_ce0 <= ap_const_logic_1;
        else 
            signal_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    signal_6_address0 <= zext_ln50_5_fu_1644_p1(11 - 1 downto 0);

    signal_6_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            signal_6_ce0 <= ap_const_logic_1;
        else 
            signal_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    signal_7_address0 <= zext_ln50_5_fu_1644_p1(11 - 1 downto 0);

    signal_7_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            signal_7_ce0 <= ap_const_logic_1;
        else 
            signal_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    spectrogram_0_address1 <= zext_ln97_8_fu_2091_p1(13 - 1 downto 0);

    spectrogram_0_ce1_assign_proc : process(ap_block_pp5_stage0_11001, ap_enable_reg_pp5_iter11)
    begin
        if (((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_enable_reg_pp5_iter11 = ap_const_logic_1))) then 
            spectrogram_0_ce1 <= ap_const_logic_1;
        else 
            spectrogram_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    spectrogram_0_d1 <= tmp_36_reg_2562;

    spectrogram_0_we1_assign_proc : process(ap_block_pp5_stage0_11001, trunc_ln97_reg_2495_pp5_iter10_reg, ap_enable_reg_pp5_iter11)
    begin
        if (((trunc_ln97_reg_2495_pp5_iter10_reg = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_enable_reg_pp5_iter11 = ap_const_logic_1))) then 
            spectrogram_0_we1 <= ap_const_logic_1;
        else 
            spectrogram_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    spectrogram_1_address1 <= zext_ln97_9_fu_2101_p1(13 - 1 downto 0);

    spectrogram_1_ce1_assign_proc : process(ap_block_pp5_stage0_11001, ap_enable_reg_pp5_iter11)
    begin
        if (((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_enable_reg_pp5_iter11 = ap_const_logic_1))) then 
            spectrogram_1_ce1 <= ap_const_logic_1;
        else 
            spectrogram_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    spectrogram_1_d1 <= tmp_36_reg_2562;

    spectrogram_1_we1_assign_proc : process(ap_block_pp5_stage0_11001, trunc_ln97_reg_2495_pp5_iter10_reg, ap_enable_reg_pp5_iter11)
    begin
        if (((trunc_ln97_reg_2495_pp5_iter10_reg = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_enable_reg_pp5_iter11 = ap_const_logic_1))) then 
            spectrogram_1_we1 <= ap_const_logic_1;
        else 
            spectrogram_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    spectrogram_2_address1 <= zext_ln97_9_fu_2101_p1(13 - 1 downto 0);

    spectrogram_2_ce1_assign_proc : process(ap_block_pp5_stage0_11001, ap_enable_reg_pp5_iter11)
    begin
        if (((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_enable_reg_pp5_iter11 = ap_const_logic_1))) then 
            spectrogram_2_ce1 <= ap_const_logic_1;
        else 
            spectrogram_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    spectrogram_2_d1 <= tmp_36_reg_2562;

    spectrogram_2_we1_assign_proc : process(ap_block_pp5_stage0_11001, trunc_ln97_reg_2495_pp5_iter10_reg, ap_enable_reg_pp5_iter11)
    begin
        if (((trunc_ln97_reg_2495_pp5_iter10_reg = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_enable_reg_pp5_iter11 = ap_const_logic_1))) then 
            spectrogram_2_we1 <= ap_const_logic_1;
        else 
            spectrogram_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    spectrogram_3_address1 <= zext_ln97_9_fu_2101_p1(13 - 1 downto 0);

    spectrogram_3_ce1_assign_proc : process(ap_block_pp5_stage0_11001, ap_enable_reg_pp5_iter11)
    begin
        if (((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_enable_reg_pp5_iter11 = ap_const_logic_1))) then 
            spectrogram_3_ce1 <= ap_const_logic_1;
        else 
            spectrogram_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    spectrogram_3_d1 <= tmp_36_reg_2562;

    spectrogram_3_we1_assign_proc : process(ap_block_pp5_stage0_11001, trunc_ln97_reg_2495_pp5_iter10_reg, ap_enable_reg_pp5_iter11)
    begin
        if (((trunc_ln97_reg_2495_pp5_iter10_reg = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_enable_reg_pp5_iter11 = ap_const_logic_1))) then 
            spectrogram_3_we1 <= ap_const_logic_1;
        else 
            spectrogram_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_38_fu_1616_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(indices_0_q0),16));
    tmp_38_fu_1616_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(indices_1_q0),16));
    tmp_38_fu_1616_p3 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(indices_2_q0),16));
    tmp_38_fu_1616_p4 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(indices_3_q0),16));
    tmp_38_fu_1616_p5 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln50_reg_2174_pp1_iter1_reg),16));
    tmp_39_fu_1659_p9 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln50_1_reg_2214),16));
    tmp_40_fu_1822_p21 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1725_p2),16));
    tmp_56_fu_1394_p3 <= (select_ln34_1_reg_2129 & ap_const_lv7_0);
    tmp_57_fu_1405_p3 <= (select_ln34_1_reg_2129 & ap_const_lv5_0);
    tmp_58_fu_1522_p3 <= (select_ln50_1_reg_2166 & ap_const_lv7_0);
    tmp_59_fu_1537_p3 <= (select_ln50_1_reg_2166 & ap_const_lv5_0);
    tmp_60_fu_1554_p3 <= (select_ln50_1_reg_2166 & ap_const_lv9_0);
    tmp_61_fu_1737_p3 <= (select_ln62_1_reg_2280_pp2_iter10_reg & ap_const_lv9_0);
    tmp_62_fu_1748_p3 <= (select_ln62_1_reg_2280_pp2_iter10_reg & ap_const_lv7_0);
    tmp_63_fu_1884_p3 <= (i5_0_reg_1238 & ap_const_lv7_0);
    tmp_64_fu_1906_p3 <= (i5_0_reg_1238 & ap_const_lv9_0);
    trunc_ln40_fu_1360_p1 <= select_ln34_fu_1344_p3(2 - 1 downto 0);
    trunc_ln50_1_fu_1630_p1 <= tmp_38_fu_1616_p6(3 - 1 downto 0);
    trunc_ln50_fu_1502_p1 <= select_ln50_fu_1486_p3(2 - 1 downto 0);
    trunc_ln75_fu_1950_p1 <= j6_0_reg_1249(2 - 1 downto 0);
    trunc_ln83_fu_1982_p1 <= j7_0_reg_1260(2 - 1 downto 0);
    trunc_ln97_fu_2026_p1 <= j8_0_reg_1271(2 - 1 downto 0);
    zext_ln37_fu_1422_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln34_reg_2124),12));
    zext_ln40_1_fu_1412_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_57_fu_1405_p3),14));
    zext_ln40_2_fu_1431_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln40_1_fu_1425_p2),14));
    zext_ln40_3_fu_1445_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_89_reg_2142),14));
    zext_ln40_4_fu_1454_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln40_3_fu_1448_p2),64));
    zext_ln40_fu_1401_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_56_fu_1394_p3),14));
    zext_ln50_10_fu_1589_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln50_3_fu_1583_p2),64));
    zext_ln50_1_fu_1533_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_58_fu_1522_p3),14));
    zext_ln50_3_fu_1544_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_59_fu_1537_p3),14));
    zext_ln50_5_fu_1644_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln50_1_fu_1634_p4),64));
    zext_ln50_6_fu_1561_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_60_fu_1554_p3),16));
    zext_ln50_7_fu_1571_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln50_reg_2161),16));
    zext_ln50_8_fu_1681_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln50_2_reg_2189_pp1_iter3_reg),64));
    zext_ln50_9_fu_1580_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_90_reg_2179),14));
    zext_ln50_fu_1529_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_58_fu_1522_p3),16));
    zext_ln62_1_fu_1755_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_62_fu_1748_p3),16));
    zext_ln62_2_fu_1794_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln62_fu_1791_p1),64));
    zext_ln62_4_fu_1765_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln62_reg_2273_pp2_iter10_reg),16));
    zext_ln62_5_fu_1774_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln62_1_fu_1768_p2),64));
    zext_ln62_fu_1744_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_61_fu_1737_p3),16));
    zext_ln75_4_fu_1964_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_fu_1954_p4),64));
    zext_ln75_5_fu_1936_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j6_0_reg_1249),16));
    zext_ln75_6_fu_1945_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln75_2_fu_1940_p2),64));
    zext_ln75_fu_1914_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_64_fu_1906_p3),16));
    zext_ln83_fu_1996_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln1_fu_1986_p4),64));
    zext_ln97_2_fu_2040_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln2_fu_2030_p4),64));
    zext_ln97_4_fu_1880_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i5_0_reg_1238),14));
    zext_ln97_5_fu_1892_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_63_fu_1884_p3),16));
    zext_ln97_6_fu_1896_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_63_fu_1884_p3),14));
    zext_ln97_7_fu_2083_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln2_reg_2500_pp5_iter10_reg),14));
    zext_ln97_8_fu_2091_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln97_2_fu_2086_p2),64));
    zext_ln97_9_fu_2101_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln97_3_fu_2096_p2),64));
    zext_ln97_fu_2052_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln97_reg_2495),16));
end behav;
