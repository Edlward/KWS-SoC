// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pw_layer1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_stream_V_dout,
        in_stream_V_empty_n,
        in_stream_V_read,
        out_stream_V_din,
        out_stream_V_full_n,
        out_stream_V_write,
        pw_weight1_3_address0,
        pw_weight1_3_ce0,
        pw_weight1_3_q0,
        pw_weight1_0_address0,
        pw_weight1_0_ce0,
        pw_weight1_0_q0,
        pw_weight1_1_address0,
        pw_weight1_1_ce0,
        pw_weight1_1_q0,
        pw_weight1_2_address0,
        pw_weight1_2_ce0,
        pw_weight1_2_q0,
        bn_bias1_address0,
        bn_bias1_ce0,
        bn_bias1_q0
);

parameter    ap_ST_fsm_state1 = 16'd1;
parameter    ap_ST_fsm_pp0_stage0 = 16'd2;
parameter    ap_ST_fsm_state4 = 16'd4;
parameter    ap_ST_fsm_state5 = 16'd8;
parameter    ap_ST_fsm_state6 = 16'd16;
parameter    ap_ST_fsm_pp2_stage0 = 16'd32;
parameter    ap_ST_fsm_pp2_stage1 = 16'd64;
parameter    ap_ST_fsm_pp2_stage2 = 16'd128;
parameter    ap_ST_fsm_pp2_stage3 = 16'd256;
parameter    ap_ST_fsm_pp2_stage4 = 16'd512;
parameter    ap_ST_fsm_pp2_stage5 = 16'd1024;
parameter    ap_ST_fsm_pp2_stage6 = 16'd2048;
parameter    ap_ST_fsm_pp2_stage7 = 16'd4096;
parameter    ap_ST_fsm_state18 = 16'd8192;
parameter    ap_ST_fsm_pp3_stage0 = 16'd16384;
parameter    ap_ST_fsm_state22 = 16'd32768;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] in_stream_V_dout;
input   in_stream_V_empty_n;
output   in_stream_V_read;
output  [31:0] out_stream_V_din;
input   out_stream_V_full_n;
output   out_stream_V_write;
output  [3:0] pw_weight1_3_address0;
output   pw_weight1_3_ce0;
input  [31:0] pw_weight1_3_q0;
output  [3:0] pw_weight1_0_address0;
output   pw_weight1_0_ce0;
input  [31:0] pw_weight1_0_q0;
output  [3:0] pw_weight1_1_address0;
output   pw_weight1_1_ce0;
input  [31:0] pw_weight1_1_q0;
output  [3:0] pw_weight1_2_address0;
output   pw_weight1_2_ce0;
input  [31:0] pw_weight1_2_q0;
output  [5:0] bn_bias1_address0;
output   bn_bias1_ce0;
input  [31:0] bn_bias1_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg in_stream_V_read;
reg out_stream_V_write;
reg pw_weight1_3_ce0;
reg pw_weight1_0_ce0;
reg pw_weight1_1_ce0;
reg pw_weight1_2_ce0;
reg bn_bias1_ce0;

(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [8:0] x_11_0_address0;
reg    x_11_0_ce0;
reg    x_11_0_we0;
wire   [31:0] x_11_0_q0;
reg   [12:0] y_9_0_address0;
reg    y_9_0_ce0;
reg    y_9_0_we0;
reg   [31:0] y_9_0_d0;
wire   [31:0] y_9_0_q0;
reg   [12:0] y_9_1_address0;
reg    y_9_1_ce0;
reg    y_9_1_we0;
reg   [31:0] y_9_1_d0;
wire   [31:0] y_9_1_q0;
reg   [12:0] y_9_2_address0;
reg    y_9_2_ce0;
reg    y_9_2_we0;
reg   [31:0] y_9_2_d0;
wire   [31:0] y_9_2_q0;
reg   [12:0] y_9_3_address0;
reg    y_9_3_ce0;
reg    y_9_3_we0;
reg   [31:0] y_9_3_d0;
wire   [31:0] y_9_3_q0;
reg    in_stream_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln27_reg_1448;
reg    out_stream_V_blk_n;
reg    ap_enable_reg_pp3_iter2;
wire    ap_block_pp3_stage0;
reg   [0:0] icmp_ln61_reg_1633;
reg   [0:0] icmp_ln61_reg_1633_pp3_iter1_reg;
reg   [8:0] indvar_flatten_reg_384;
reg   [5:0] h_0_reg_395;
reg   [3:0] w_0_reg_406;
reg   [14:0] indvar_flatten42_reg_472;
reg   [5:0] ih1_0_reg_483;
reg   [9:0] indvar_flatten28_reg_494;
reg   [3:0] iw2_0_reg_505;
reg   [5:0] om3_0_reg_516;
reg   [14:0] indvar_flatten63_reg_527;
reg   [5:0] ih4_0_reg_538;
reg   [9:0] indvar_flatten49_reg_549;
reg   [3:0] iw5_0_reg_560;
reg   [5:0] om6_0_reg_571;
wire   [0:0] icmp_ln27_fu_607_p2;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [8:0] add_ln27_fu_613_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [3:0] select_ln32_fu_631_p3;
reg   [3:0] select_ln32_reg_1457;
wire   [5:0] select_ln32_1_fu_639_p3;
reg   [5:0] select_ln32_1_reg_1462;
wire   [3:0] w_fu_647_p2;
wire   [14:0] add_ln37_fu_693_p2;
wire    ap_CS_fsm_state5;
wire   [5:0] select_ln41_1_fu_719_p3;
wire   [0:0] icmp_ln37_fu_687_p2;
wire   [3:0] select_ln41_3_fu_787_p3;
wire   [5:0] om_fu_863_p2;
wire   [9:0] select_ln38_fu_875_p3;
wire   [0:0] icmp_ln48_fu_883_p2;
reg   [0:0] icmp_ln48_reg_1505;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state7_pp2_stage0_iter0;
wire    ap_block_state15_pp2_stage0_iter1;
wire    ap_block_pp2_stage0_11001;
wire   [14:0] add_ln48_fu_889_p2;
reg   [14:0] add_ln48_reg_1509;
reg    ap_enable_reg_pp2_iter0;
wire   [5:0] select_ln53_1_fu_915_p3;
reg   [5:0] select_ln53_1_reg_1514;
wire   [3:0] select_ln53_3_fu_983_p3;
reg   [3:0] select_ln53_3_reg_1519;
wire   [9:0] add_ln53_2_fu_995_p2;
reg   [9:0] add_ln53_2_reg_1524;
wire   [1:0] trunc_ln54_fu_1011_p1;
reg   [1:0] trunc_ln54_reg_1535;
reg   [1:0] trunc_ln54_reg_1535_pp2_iter1_reg;
wire   [3:0] lshr_ln9_fu_1015_p4;
reg   [3:0] lshr_ln9_reg_1543;
wire   [5:0] om_3_fu_1033_p2;
reg   [5:0] om_3_reg_1573;
wire   [9:0] select_ln49_fu_1045_p3;
reg   [9:0] select_ln49_reg_1578;
wire    ap_CS_fsm_pp2_stage1;
wire    ap_block_state8_pp2_stage1_iter0;
wire    ap_block_state16_pp2_stage1_iter1;
wire    ap_block_pp2_stage1_11001;
reg   [31:0] bn_bias1_load_reg_1593;
reg   [12:0] y_9_0_addr_1_reg_1598;
wire    ap_CS_fsm_pp2_stage3;
wire    ap_block_state10_pp2_stage3_iter0;
wire    ap_block_pp2_stage3_11001;
reg   [12:0] y_9_1_addr_1_reg_1603;
reg   [12:0] y_9_2_addr_1_reg_1608;
reg   [12:0] y_9_3_addr_1_reg_1613;
wire   [31:0] grp_fu_591_p2;
wire    ap_CS_fsm_pp2_stage4;
wire    ap_block_state11_pp2_stage4_iter0;
wire    ap_block_pp2_stage4_11001;
wire   [31:0] tmp_41_fu_1137_p6;
wire   [31:0] grp_fu_582_p2;
wire    ap_CS_fsm_pp2_stage7;
wire    ap_block_state14_pp2_stage7_iter0;
wire    ap_block_pp2_stage7_11001;
wire   [0:0] icmp_ln61_fu_1152_p2;
wire    ap_CS_fsm_pp3_stage0;
wire    ap_block_state19_pp3_stage0_iter0;
wire    ap_block_state20_pp3_stage0_iter1;
reg    ap_block_state21_pp3_stage0_iter2;
reg    ap_block_pp3_stage0_11001;
wire   [14:0] add_ln61_fu_1158_p2;
reg    ap_enable_reg_pp3_iter0;
wire   [5:0] select_ln65_4_fu_1184_p3;
reg   [5:0] select_ln65_4_reg_1642;
wire   [3:0] select_ln65_6_fu_1252_p3;
reg   [3:0] select_ln65_6_reg_1647;
wire   [1:0] trunc_ln65_fu_1296_p1;
reg   [1:0] trunc_ln65_reg_1652;
wire   [5:0] om_2_fu_1328_p2;
wire   [9:0] select_ln62_fu_1340_p3;
wire   [31:0] in_var_assign_fu_1351_p6;
reg   [31:0] in_var_assign_reg_1687;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_CS_fsm_state6;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state7;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp2_stage7_subdone;
wire    ap_block_state9_pp2_stage2_iter0;
wire    ap_block_state17_pp2_stage2_iter1;
wire    ap_block_pp2_stage2_subdone;
wire    ap_CS_fsm_pp2_stage2;
wire    ap_CS_fsm_state18;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state19;
reg    ap_enable_reg_pp3_iter1;
reg   [5:0] ap_phi_mux_h_0_phi_fu_399_p4;
reg   [14:0] indvar_flatten20_reg_417;
wire    ap_CS_fsm_state4;
reg   [5:0] ih_0_reg_428;
reg   [9:0] indvar_flatten6_reg_439;
reg   [3:0] iw_0_reg_450;
reg   [5:0] om_0_reg_461;
reg   [14:0] ap_phi_mux_indvar_flatten42_phi_fu_476_p4;
wire    ap_block_pp2_stage0;
reg   [5:0] ap_phi_mux_ih1_0_phi_fu_487_p4;
reg   [9:0] ap_phi_mux_indvar_flatten28_phi_fu_498_p4;
reg   [3:0] ap_phi_mux_iw2_0_phi_fu_509_p4;
reg   [5:0] ap_phi_mux_om3_0_phi_fu_520_p4;
reg   [5:0] ap_phi_mux_ih4_0_phi_fu_542_p4;
reg   [3:0] ap_phi_mux_iw5_0_phi_fu_564_p4;
wire   [63:0] zext_ln32_3_fu_682_p1;
wire   [63:0] zext_ln41_5_fu_855_p1;
wire   [63:0] zext_ln53_4_fu_1001_p1;
wire   [63:0] zext_ln54_1_fu_1025_p1;
wire   [63:0] zext_ln53_2_fu_1006_p1;
wire   [63:0] zext_ln54_3_fu_1126_p1;
wire    ap_block_pp2_stage3;
wire   [63:0] zext_ln65_9_fu_1320_p1;
reg    ap_block_pp3_stage0_01001;
wire   [1:0] trunc_ln41_fu_831_p1;
wire    ap_block_pp2_stage2_11001;
wire    ap_block_pp2_stage2;
reg   [31:0] grp_fu_582_p0;
reg   [31:0] grp_fu_582_p1;
wire    ap_block_pp2_stage4;
wire    ap_block_pp2_stage7;
wire   [31:0] grp_fu_591_p1;
wire    ap_block_pp2_stage1;
wire   [0:0] icmp_ln28_fu_625_p2;
wire   [5:0] h_fu_619_p2;
wire   [8:0] tmp_68_fu_656_p3;
wire   [9:0] zext_ln32_fu_653_p1;
wire   [9:0] zext_ln32_1_fu_663_p1;
wire   [9:0] add_ln32_fu_667_p2;
wire   [9:0] zext_ln32_2_fu_673_p1;
wire   [9:0] add_ln32_1_fu_676_p2;
wire   [0:0] icmp_ln38_fu_705_p2;
wire   [5:0] ih_fu_699_p2;
wire   [8:0] tmp_69_fu_731_p3;
wire   [9:0] zext_ln41_fu_727_p1;
wire   [9:0] zext_ln41_1_fu_739_p1;
wire   [0:0] icmp_ln39_fu_755_p2;
wire   [0:0] xor_ln41_fu_749_p2;
wire   [3:0] select_ln41_fu_711_p3;
wire   [0:0] and_ln41_fu_761_p2;
wire   [0:0] or_ln41_fu_773_p2;
wire   [3:0] iw_fu_767_p2;
wire   [9:0] add_ln41_fu_743_p2;
wire   [9:0] zext_ln41_2_fu_795_p1;
wire   [9:0] add_ln41_2_fu_799_p2;
wire   [11:0] tmp_64_fu_813_p3;
wire   [13:0] p_shl_cast_fu_805_p3;
wire   [13:0] zext_ln41_3_fu_821_p1;
wire   [5:0] select_ln41_2_fu_779_p3;
wire   [3:0] tmp_65_fu_835_p4;
wire   [13:0] sub_ln41_fu_825_p2;
wire   [13:0] zext_ln41_4_fu_845_p1;
wire   [13:0] add_ln41_3_fu_849_p2;
wire   [9:0] add_ln38_1_fu_869_p2;
wire   [0:0] icmp_ln49_fu_901_p2;
wire   [5:0] ih_7_fu_895_p2;
wire   [8:0] tmp_70_fu_927_p3;
wire   [9:0] zext_ln53_fu_923_p1;
wire   [9:0] zext_ln53_1_fu_935_p1;
wire   [0:0] icmp_ln50_fu_951_p2;
wire   [0:0] xor_ln53_fu_945_p2;
wire   [3:0] select_ln53_fu_907_p3;
wire   [0:0] and_ln53_fu_957_p2;
wire   [0:0] or_ln53_fu_969_p2;
wire   [3:0] iw_3_fu_963_p2;
wire   [9:0] add_ln53_fu_939_p2;
wire   [9:0] zext_ln53_3_fu_991_p1;
wire   [5:0] select_ln53_2_fu_975_p3;
wire   [9:0] add_ln49_1_fu_1039_p2;
wire   [0:0] icmp_ln13_fu_1053_p2;
wire   [0:0] icmp_ln13_1_fu_1066_p2;
wire   [31:0] select_ln13_fu_1058_p3;
wire   [0:0] icmp_ln13_2_fu_1079_p2;
wire   [31:0] select_ln13_1_fu_1071_p3;
wire   [11:0] tmp_66_fu_1100_p3;
wire   [13:0] p_shl10_cast_fu_1093_p3;
wire   [13:0] zext_ln54_2_fu_1107_p1;
wire   [13:0] sub_ln54_fu_1111_p2;
wire   [13:0] zext_ln1_fu_1117_p1;
wire   [13:0] add_ln54_fu_1120_p2;
wire   [31:0] tmp_41_fu_1137_p5;
wire   [0:0] icmp_ln62_fu_1170_p2;
wire   [5:0] ih_8_fu_1164_p2;
wire   [8:0] tmp_71_fu_1196_p3;
wire   [9:0] zext_ln65_fu_1192_p1;
wire   [9:0] zext_ln65_5_fu_1204_p1;
wire   [0:0] icmp_ln63_fu_1220_p2;
wire   [0:0] xor_ln65_fu_1214_p2;
wire   [3:0] select_ln65_fu_1176_p3;
wire   [0:0] and_ln65_fu_1226_p2;
wire   [0:0] or_ln65_fu_1238_p2;
wire   [3:0] iw_4_fu_1232_p2;
wire   [9:0] add_ln65_fu_1208_p2;
wire   [9:0] zext_ln65_6_fu_1260_p1;
wire   [9:0] add_ln65_2_fu_1264_p2;
wire   [11:0] tmp_67_fu_1278_p3;
wire   [13:0] p_shl12_cast_fu_1270_p3;
wire   [13:0] zext_ln65_7_fu_1286_p1;
wire   [5:0] select_ln65_5_fu_1244_p3;
wire   [3:0] tmp_72_fu_1300_p4;
wire   [13:0] sub_ln65_fu_1290_p2;
wire   [13:0] zext_ln65_8_fu_1310_p1;
wire   [13:0] add_ln65_3_fu_1314_p2;
wire   [9:0] add_ln62_1_fu_1334_p2;
wire   [31:0] in_var_assign_fu_1351_p5;
wire   [31:0] bitcast_ln236_fu_1367_p1;
wire   [7:0] tmp_43_fu_1370_p4;
wire   [22:0] trunc_ln236_fu_1380_p1;
wire   [0:0] icmp_ln236_16_fu_1390_p2;
wire   [0:0] icmp_ln236_fu_1384_p2;
wire   [0:0] or_ln236_fu_1396_p2;
wire   [0:0] grp_fu_597_p2;
wire   [0:0] grp_fu_602_p2;
wire   [0:0] and_ln236_fu_1402_p2;
wire   [0:0] and_ln238_fu_1408_p2;
wire   [0:0] xor_ln236_fu_1414_p2;
wire   [0:0] and_ln238_16_fu_1420_p2;
wire   [0:0] or_ln238_fu_1434_p2;
wire   [31:0] select_ln238_fu_1426_p3;
reg    grp_fu_597_ce;
reg    ap_block_pp3_stage0_00001;
reg    grp_fu_602_ce;
wire    ap_CS_fsm_state22;
reg   [15:0] ap_NS_fsm;
wire    ap_block_pp2_stage1_subdone;
wire    ap_block_pp2_stage3_subdone;
wire    ap_block_pp2_stage4_subdone;
wire    ap_block_state12_pp2_stage5_iter0;
wire    ap_block_pp2_stage5_subdone;
wire    ap_block_state13_pp2_stage6_iter0;
wire    ap_block_pp2_stage6_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;

// power-on initialization
initial begin
#0 ap_CS_fsm = 16'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
end

pw_layer1_x_11_0 #(
    .DataWidth( 32 ),
    .AddressRange( 414 ),
    .AddressWidth( 9 ))
x_11_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(x_11_0_address0),
    .ce0(x_11_0_ce0),
    .we0(x_11_0_we0),
    .d0(in_stream_V_dout),
    .q0(x_11_0_q0)
);

pw_layer1_y_9_0 #(
    .DataWidth( 32 ),
    .AddressRange( 4968 ),
    .AddressWidth( 13 ))
y_9_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(y_9_0_address0),
    .ce0(y_9_0_ce0),
    .we0(y_9_0_we0),
    .d0(y_9_0_d0),
    .q0(y_9_0_q0)
);

pw_layer1_y_9_0 #(
    .DataWidth( 32 ),
    .AddressRange( 4968 ),
    .AddressWidth( 13 ))
y_9_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(y_9_1_address0),
    .ce0(y_9_1_ce0),
    .we0(y_9_1_we0),
    .d0(y_9_1_d0),
    .q0(y_9_1_q0)
);

pw_layer1_y_9_0 #(
    .DataWidth( 32 ),
    .AddressRange( 4968 ),
    .AddressWidth( 13 ))
y_9_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(y_9_2_address0),
    .ce0(y_9_2_ce0),
    .we0(y_9_2_we0),
    .d0(y_9_2_d0),
    .q0(y_9_2_q0)
);

pw_layer1_y_9_0 #(
    .DataWidth( 32 ),
    .AddressRange( 4968 ),
    .AddressWidth( 13 ))
y_9_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(y_9_3_address0),
    .ce0(y_9_3_ce0),
    .we0(y_9_3_we0),
    .d0(y_9_3_d0),
    .q0(y_9_3_q0)
);

kws_fadd_32ns_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kws_fadd_32ns_32ndEe_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_582_p0),
    .din1(grp_fu_582_p1),
    .ce(1'b1),
    .dout(grp_fu_582_p2)
);

kws_fmul_32ns_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kws_fmul_32ns_32ncud_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(x_11_0_q0),
    .din1(grp_fu_591_p1),
    .ce(1'b1),
    .dout(grp_fu_591_p2)
);

kws_fcmp_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
kws_fcmp_32ns_32neOg_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(in_var_assign_fu_1351_p6),
    .din1(32'd0),
    .ce(grp_fu_597_ce),
    .opcode(5'd4),
    .dout(grp_fu_597_p2)
);

kws_fcmp_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
kws_fcmp_32ns_32neOg_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(in_var_assign_fu_1351_p6),
    .din1(32'd1086324736),
    .ce(grp_fu_602_ce),
    .opcode(5'd2),
    .dout(grp_fu_602_p2)
);

kws_mux_432_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kws_mux_432_32_1_1_U17(
    .din0(y_9_0_q0),
    .din1(y_9_1_q0),
    .din2(y_9_2_q0),
    .din3(y_9_3_q0),
    .din4(tmp_41_fu_1137_p5),
    .dout(tmp_41_fu_1137_p6)
);

kws_mux_432_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kws_mux_432_32_1_1_U18(
    .din0(y_9_0_q0),
    .din1(y_9_1_q0),
    .din2(y_9_2_q0),
    .din3(y_9_3_q0),
    .din4(in_var_assign_fu_1351_p5),
    .dout(in_var_assign_fu_1351_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state7) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp2_stage2_subdone) & (1'b1 == ap_CS_fsm_pp2_stage2)) | ((1'b0 == ap_block_pp2_stage7_subdone) & (1'b1 == ap_CS_fsm_pp2_stage7)))) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state19) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state18)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state19)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state19);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end else if ((1'b1 == ap_CS_fsm_state18)) begin
            ap_enable_reg_pp3_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln27_reg_1448 == 1'd0))) begin
        h_0_reg_395 <= select_ln32_1_reg_1462;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        h_0_reg_395 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ih1_0_reg_483 <= 6'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln48_reg_1505 == 1'd0))) begin
        ih1_0_reg_483 <= select_ln53_1_reg_1514;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        ih4_0_reg_538 <= 6'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln61_reg_1633 == 1'd0))) begin
        ih4_0_reg_538 <= select_ln65_4_reg_1642;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ih_0_reg_428 <= 6'd0;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln37_fu_687_p2 == 1'd0))) begin
        ih_0_reg_428 <= select_ln41_1_fu_719_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        indvar_flatten20_reg_417 <= 15'd0;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln37_fu_687_p2 == 1'd0))) begin
        indvar_flatten20_reg_417 <= add_ln37_fu_693_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        indvar_flatten28_reg_494 <= 10'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln48_reg_1505 == 1'd0))) begin
        indvar_flatten28_reg_494 <= select_ln49_reg_1578;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        indvar_flatten42_reg_472 <= 15'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln48_reg_1505 == 1'd0))) begin
        indvar_flatten42_reg_472 <= add_ln48_reg_1509;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        indvar_flatten49_reg_549 <= 10'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln61_fu_1152_p2 == 1'd0))) begin
        indvar_flatten49_reg_549 <= select_ln62_fu_1340_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        indvar_flatten63_reg_527 <= 15'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln61_fu_1152_p2 == 1'd0))) begin
        indvar_flatten63_reg_527 <= add_ln61_fu_1158_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        indvar_flatten6_reg_439 <= 10'd0;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln37_fu_687_p2 == 1'd0))) begin
        indvar_flatten6_reg_439 <= select_ln38_fu_875_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln27_fu_607_p2 == 1'd0))) begin
        indvar_flatten_reg_384 <= add_ln27_fu_613_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_384 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        iw2_0_reg_505 <= 4'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln48_reg_1505 == 1'd0))) begin
        iw2_0_reg_505 <= select_ln53_3_reg_1519;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        iw5_0_reg_560 <= 4'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln61_reg_1633 == 1'd0))) begin
        iw5_0_reg_560 <= select_ln65_6_reg_1647;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        iw_0_reg_450 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln37_fu_687_p2 == 1'd0))) begin
        iw_0_reg_450 <= select_ln41_3_fu_787_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        om3_0_reg_516 <= 6'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln48_reg_1505 == 1'd0))) begin
        om3_0_reg_516 <= om_3_reg_1573;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        om6_0_reg_571 <= 6'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln61_fu_1152_p2 == 1'd0))) begin
        om6_0_reg_571 <= om_2_fu_1328_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        om_0_reg_461 <= 6'd0;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln37_fu_687_p2 == 1'd0))) begin
        om_0_reg_461 <= om_fu_863_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln27_fu_607_p2 == 1'd0))) begin
        w_0_reg_406 <= w_fu_647_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        w_0_reg_406 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        add_ln48_reg_1509 <= add_ln48_fu_889_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln48_fu_883_p2 == 1'd0))) begin
        add_ln53_2_reg_1524 <= add_ln53_2_fu_995_p2;
        lshr_ln9_reg_1543 <= {{select_ln53_2_fu_975_p3[5:2]}};
        trunc_ln54_reg_1535 <= trunc_ln54_fu_1011_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1) & (icmp_ln48_reg_1505 == 1'd0))) begin
        bn_bias1_load_reg_1593 <= bn_bias1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln27_reg_1448 <= icmp_ln27_fu_607_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln48_reg_1505 <= icmp_ln48_fu_883_p2;
        trunc_ln54_reg_1535_pp2_iter1_reg <= trunc_ln54_reg_1535;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        icmp_ln61_reg_1633 <= icmp_ln61_fu_1152_p2;
        icmp_ln61_reg_1633_pp3_iter1_reg <= icmp_ln61_reg_1633;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln61_reg_1633 == 1'd0))) begin
        in_var_assign_reg_1687 <= in_var_assign_fu_1351_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln48_fu_883_p2 == 1'd0))) begin
        om_3_reg_1573 <= om_3_fu_1033_p2;
        select_ln49_reg_1578 <= select_ln49_fu_1045_p3;
        select_ln53_1_reg_1514 <= select_ln53_1_fu_915_p3;
        select_ln53_3_reg_1519 <= select_ln53_3_fu_983_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln27_fu_607_p2 == 1'd0))) begin
        select_ln32_1_reg_1462 <= select_ln32_1_fu_639_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln27_fu_607_p2 == 1'd0))) begin
        select_ln32_reg_1457 <= select_ln32_fu_631_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln61_fu_1152_p2 == 1'd0))) begin
        select_ln65_4_reg_1642 <= select_ln65_4_fu_1184_p3;
        select_ln65_6_reg_1647 <= select_ln65_6_fu_1252_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln61_fu_1152_p2 == 1'd0))) begin
        trunc_ln65_reg_1652 <= trunc_ln65_fu_1296_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage3_11001) & (1'b1 == ap_CS_fsm_pp2_stage3) & (icmp_ln48_reg_1505 == 1'd0))) begin
        y_9_0_addr_1_reg_1598 <= zext_ln54_3_fu_1126_p1;
        y_9_1_addr_1_reg_1603 <= zext_ln54_3_fu_1126_p1;
        y_9_2_addr_1_reg_1608 <= zext_ln54_3_fu_1126_p1;
        y_9_3_addr_1_reg_1613 <= zext_ln54_3_fu_1126_p1;
    end
end

always @ (*) begin
    if ((icmp_ln27_fu_607_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln48_fu_883_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state7 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state7 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln61_fu_1152_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state19 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state19 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln27_reg_1448 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_h_0_phi_fu_399_p4 = select_ln32_1_reg_1462;
    end else begin
        ap_phi_mux_h_0_phi_fu_399_p4 = h_0_reg_395;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln48_reg_1505 == 1'd0))) begin
        ap_phi_mux_ih1_0_phi_fu_487_p4 = select_ln53_1_reg_1514;
    end else begin
        ap_phi_mux_ih1_0_phi_fu_487_p4 = ih1_0_reg_483;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0) & (icmp_ln61_reg_1633 == 1'd0))) begin
        ap_phi_mux_ih4_0_phi_fu_542_p4 = select_ln65_4_reg_1642;
    end else begin
        ap_phi_mux_ih4_0_phi_fu_542_p4 = ih4_0_reg_538;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln48_reg_1505 == 1'd0))) begin
        ap_phi_mux_indvar_flatten28_phi_fu_498_p4 = select_ln49_reg_1578;
    end else begin
        ap_phi_mux_indvar_flatten28_phi_fu_498_p4 = indvar_flatten28_reg_494;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln48_reg_1505 == 1'd0))) begin
        ap_phi_mux_indvar_flatten42_phi_fu_476_p4 = add_ln48_reg_1509;
    end else begin
        ap_phi_mux_indvar_flatten42_phi_fu_476_p4 = indvar_flatten42_reg_472;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln48_reg_1505 == 1'd0))) begin
        ap_phi_mux_iw2_0_phi_fu_509_p4 = select_ln53_3_reg_1519;
    end else begin
        ap_phi_mux_iw2_0_phi_fu_509_p4 = iw2_0_reg_505;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0) & (icmp_ln61_reg_1633 == 1'd0))) begin
        ap_phi_mux_iw5_0_phi_fu_564_p4 = select_ln65_6_reg_1647;
    end else begin
        ap_phi_mux_iw5_0_phi_fu_564_p4 = iw5_0_reg_560;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln48_reg_1505 == 1'd0))) begin
        ap_phi_mux_om3_0_phi_fu_520_p4 = om_3_reg_1573;
    end else begin
        ap_phi_mux_om3_0_phi_fu_520_p4 = om3_0_reg_516;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        bn_bias1_ce0 = 1'b1;
    end else begin
        bn_bias1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp2_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp2_stage7) & (1'b1 == ap_CS_fsm_pp2_stage7))) begin
            grp_fu_582_p0 = grp_fu_582_p2;
        end else if (((1'b0 == ap_block_pp2_stage4) & (1'b1 == ap_CS_fsm_pp2_stage4))) begin
            grp_fu_582_p0 = tmp_41_fu_1137_p6;
        end else begin
            grp_fu_582_p0 = 'bx;
        end
    end else begin
        grp_fu_582_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp2_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp2_stage7) & (1'b1 == ap_CS_fsm_pp2_stage7))) begin
            grp_fu_582_p1 = bn_bias1_load_reg_1593;
        end else if (((1'b0 == ap_block_pp2_stage4) & (1'b1 == ap_CS_fsm_pp2_stage4))) begin
            grp_fu_582_p1 = grp_fu_591_p2;
        end else begin
            grp_fu_582_p1 = 'bx;
        end
    end else begin
        grp_fu_582_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        grp_fu_597_ce = 1'b1;
    end else begin
        grp_fu_597_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        grp_fu_602_ce = 1'b1;
    end else begin
        grp_fu_602_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln27_reg_1448 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        in_stream_V_blk_n = in_stream_V_empty_n;
    end else begin
        in_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln27_reg_1448 == 1'd0))) begin
        in_stream_V_read = 1'b1;
    end else begin
        in_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter2 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (icmp_ln61_reg_1633_pp3_iter1_reg == 1'd0))) begin
        out_stream_V_blk_n = out_stream_V_full_n;
    end else begin
        out_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln61_reg_1633_pp3_iter1_reg == 1'd0))) begin
        out_stream_V_write = 1'b1;
    end else begin
        out_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        pw_weight1_0_ce0 = 1'b1;
    end else begin
        pw_weight1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        pw_weight1_1_ce0 = 1'b1;
    end else begin
        pw_weight1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        pw_weight1_2_ce0 = 1'b1;
    end else begin
        pw_weight1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        pw_weight1_3_ce0 = 1'b1;
    end else begin
        pw_weight1_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        x_11_0_address0 = zext_ln53_4_fu_1001_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        x_11_0_address0 = zext_ln32_3_fu_682_p1;
    end else begin
        x_11_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        x_11_0_ce0 = 1'b1;
    end else begin
        x_11_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln27_reg_1448 == 1'd0))) begin
        x_11_0_we0 = 1'b1;
    end else begin
        x_11_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        y_9_0_address0 = zext_ln65_9_fu_1320_p1;
    end else if (((1'b0 == ap_block_pp2_stage2) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        y_9_0_address0 = y_9_0_addr_1_reg_1598;
    end else if (((1'b0 == ap_block_pp2_stage3) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        y_9_0_address0 = zext_ln54_3_fu_1126_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        y_9_0_address0 = zext_ln41_5_fu_855_p1;
    end else begin
        y_9_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((1'b0 == ap_block_pp2_stage2_11001) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp2_stage3_11001) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1)))) begin
        y_9_0_ce0 = 1'b1;
    end else begin
        y_9_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage2) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        y_9_0_d0 = grp_fu_582_p2;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        y_9_0_d0 = 32'd0;
    end else begin
        y_9_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage2_11001) & (trunc_ln54_reg_1535_pp2_iter1_reg == 2'd0) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((trunc_ln41_fu_831_p1 == 2'd0) & (1'b1 == ap_CS_fsm_state5) & (icmp_ln37_fu_687_p2 == 1'd0)))) begin
        y_9_0_we0 = 1'b1;
    end else begin
        y_9_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        y_9_1_address0 = zext_ln65_9_fu_1320_p1;
    end else if (((1'b0 == ap_block_pp2_stage2) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        y_9_1_address0 = y_9_1_addr_1_reg_1603;
    end else if (((1'b0 == ap_block_pp2_stage3) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        y_9_1_address0 = zext_ln54_3_fu_1126_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        y_9_1_address0 = zext_ln41_5_fu_855_p1;
    end else begin
        y_9_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((1'b0 == ap_block_pp2_stage2_11001) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp2_stage3_11001) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1)))) begin
        y_9_1_ce0 = 1'b1;
    end else begin
        y_9_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage2) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        y_9_1_d0 = grp_fu_582_p2;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        y_9_1_d0 = 32'd0;
    end else begin
        y_9_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage2_11001) & (trunc_ln54_reg_1535_pp2_iter1_reg == 2'd1) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((trunc_ln41_fu_831_p1 == 2'd1) & (1'b1 == ap_CS_fsm_state5) & (icmp_ln37_fu_687_p2 == 1'd0)))) begin
        y_9_1_we0 = 1'b1;
    end else begin
        y_9_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        y_9_2_address0 = zext_ln65_9_fu_1320_p1;
    end else if (((1'b0 == ap_block_pp2_stage2) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        y_9_2_address0 = y_9_2_addr_1_reg_1608;
    end else if (((1'b0 == ap_block_pp2_stage3) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        y_9_2_address0 = zext_ln54_3_fu_1126_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        y_9_2_address0 = zext_ln41_5_fu_855_p1;
    end else begin
        y_9_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((1'b0 == ap_block_pp2_stage2_11001) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp2_stage3_11001) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1)))) begin
        y_9_2_ce0 = 1'b1;
    end else begin
        y_9_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage2) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        y_9_2_d0 = grp_fu_582_p2;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        y_9_2_d0 = 32'd0;
    end else begin
        y_9_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage2_11001) & (trunc_ln54_reg_1535_pp2_iter1_reg == 2'd2) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((trunc_ln41_fu_831_p1 == 2'd2) & (1'b1 == ap_CS_fsm_state5) & (icmp_ln37_fu_687_p2 == 1'd0)))) begin
        y_9_2_we0 = 1'b1;
    end else begin
        y_9_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        y_9_3_address0 = zext_ln65_9_fu_1320_p1;
    end else if (((1'b0 == ap_block_pp2_stage2) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        y_9_3_address0 = y_9_3_addr_1_reg_1613;
    end else if (((1'b0 == ap_block_pp2_stage3) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        y_9_3_address0 = zext_ln54_3_fu_1126_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        y_9_3_address0 = zext_ln41_5_fu_855_p1;
    end else begin
        y_9_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((1'b0 == ap_block_pp2_stage2_11001) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp2_stage3_11001) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1)))) begin
        y_9_3_ce0 = 1'b1;
    end else begin
        y_9_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage2) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        y_9_3_d0 = grp_fu_582_p2;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        y_9_3_d0 = 32'd0;
    end else begin
        y_9_3_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage2_11001) & (trunc_ln54_reg_1535_pp2_iter1_reg == 2'd3) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((trunc_ln41_fu_831_p1 == 2'd3) & (1'b1 == ap_CS_fsm_state5) & (icmp_ln37_fu_687_p2 == 1'd0)))) begin
        y_9_3_we0 = 1'b1;
    end else begin
        y_9_3_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln27_fu_607_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln27_fu_607_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln37_fu_687_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln48_fu_883_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end else if (((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln48_fu_883_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage1 : begin
            if ((1'b0 == ap_block_pp2_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end
        end
        ap_ST_fsm_pp2_stage2 : begin
            if ((~((1'b0 == ap_block_pp2_stage2_subdone) & (ap_enable_reg_pp2_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1)) & (1'b0 == ap_block_pp2_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage3;
            end else if (((1'b0 == ap_block_pp2_stage2_subdone) & (ap_enable_reg_pp2_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage2;
            end
        end
        ap_ST_fsm_pp2_stage3 : begin
            if ((1'b0 == ap_block_pp2_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage3;
            end
        end
        ap_ST_fsm_pp2_stage4 : begin
            if ((1'b0 == ap_block_pp2_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage4;
            end
        end
        ap_ST_fsm_pp2_stage5 : begin
            if ((1'b0 == ap_block_pp2_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage5;
            end
        end
        ap_ST_fsm_pp2_stage6 : begin
            if ((1'b0 == ap_block_pp2_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage6;
            end
        end
        ap_ST_fsm_pp2_stage7 : begin
            if ((1'b0 == ap_block_pp2_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage7;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln61_fu_1152_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1)) & ~((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln61_fu_1152_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln27_fu_613_p2 = (indvar_flatten_reg_384 + 9'd1);

assign add_ln32_1_fu_676_p2 = (add_ln32_fu_667_p2 + zext_ln32_2_fu_673_p1);

assign add_ln32_fu_667_p2 = (zext_ln32_fu_653_p1 + zext_ln32_1_fu_663_p1);

assign add_ln37_fu_693_p2 = (indvar_flatten20_reg_417 + 15'd1);

assign add_ln38_1_fu_869_p2 = (indvar_flatten6_reg_439 + 10'd1);

assign add_ln41_2_fu_799_p2 = (add_ln41_fu_743_p2 + zext_ln41_2_fu_795_p1);

assign add_ln41_3_fu_849_p2 = (sub_ln41_fu_825_p2 + zext_ln41_4_fu_845_p1);

assign add_ln41_fu_743_p2 = (zext_ln41_fu_727_p1 + zext_ln41_1_fu_739_p1);

assign add_ln48_fu_889_p2 = (ap_phi_mux_indvar_flatten42_phi_fu_476_p4 + 15'd1);

assign add_ln49_1_fu_1039_p2 = (ap_phi_mux_indvar_flatten28_phi_fu_498_p4 + 10'd1);

assign add_ln53_2_fu_995_p2 = (add_ln53_fu_939_p2 + zext_ln53_3_fu_991_p1);

assign add_ln53_fu_939_p2 = (zext_ln53_fu_923_p1 + zext_ln53_1_fu_935_p1);

assign add_ln54_fu_1120_p2 = (sub_ln54_fu_1111_p2 + zext_ln1_fu_1117_p1);

assign add_ln61_fu_1158_p2 = (indvar_flatten63_reg_527 + 15'd1);

assign add_ln62_1_fu_1334_p2 = (10'd1 + indvar_flatten49_reg_549);

assign add_ln65_2_fu_1264_p2 = (add_ln65_fu_1208_p2 + zext_ln65_6_fu_1260_p1);

assign add_ln65_3_fu_1314_p2 = (sub_ln65_fu_1290_p2 + zext_ln65_8_fu_1310_p1);

assign add_ln65_fu_1208_p2 = (zext_ln65_fu_1192_p1 + zext_ln65_5_fu_1204_p1);

assign and_ln236_fu_1402_p2 = (or_ln236_fu_1396_p2 & grp_fu_597_p2);

assign and_ln238_16_fu_1420_p2 = (xor_ln236_fu_1414_p2 & and_ln238_fu_1408_p2);

assign and_ln238_fu_1408_p2 = (or_ln236_fu_1396_p2 & grp_fu_602_p2);

assign and_ln41_fu_761_p2 = (xor_ln41_fu_749_p2 & icmp_ln39_fu_755_p2);

assign and_ln53_fu_957_p2 = (xor_ln53_fu_945_p2 & icmp_ln50_fu_951_p2);

assign and_ln65_fu_1226_p2 = (xor_ln65_fu_1214_p2 & icmp_ln63_fu_1220_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp2_stage1 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp2_stage2 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp2_stage3 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp2_stage4 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp2_stage7 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((in_stream_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln27_reg_1448 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((in_stream_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln27_reg_1448 == 1'd0));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_00001 = ((out_stream_V_full_n == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln61_reg_1633_pp3_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp3_stage0_01001 = ((out_stream_V_full_n == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln61_reg_1633_pp3_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp3_stage0_11001 = ((out_stream_V_full_n == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln61_reg_1633_pp3_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = ((out_stream_V_full_n == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln61_reg_1633_pp3_iter1_reg == 1'd0));
end

assign ap_block_state10_pp2_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp2_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp2_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp2_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp2_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp2_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp2_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state21_pp3_stage0_iter2 = ((out_stream_V_full_n == 1'b0) & (icmp_ln61_reg_1633_pp3_iter1_reg == 1'd0));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((in_stream_V_empty_n == 1'b0) & (icmp_ln27_reg_1448 == 1'd0));
end

assign ap_block_state7_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp2_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp2_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign bitcast_ln236_fu_1367_p1 = in_var_assign_reg_1687;

assign bn_bias1_address0 = zext_ln53_2_fu_1006_p1;

assign grp_fu_591_p1 = ((icmp_ln13_2_fu_1079_p2[0:0] === 1'b1) ? pw_weight1_2_q0 : select_ln13_1_fu_1071_p3);

assign h_fu_619_p2 = (ap_phi_mux_h_0_phi_fu_399_p4 + 6'd1);

assign icmp_ln13_1_fu_1066_p2 = ((trunc_ln54_reg_1535 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln13_2_fu_1079_p2 = ((trunc_ln54_reg_1535 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln13_fu_1053_p2 = ((trunc_ln54_reg_1535 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln236_16_fu_1390_p2 = ((trunc_ln236_fu_1380_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln236_fu_1384_p2 = ((tmp_43_fu_1370_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln27_fu_607_p2 = ((indvar_flatten_reg_384 == 9'd414) ? 1'b1 : 1'b0);

assign icmp_ln28_fu_625_p2 = ((w_0_reg_406 == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln37_fu_687_p2 = ((indvar_flatten20_reg_417 == 15'd19872) ? 1'b1 : 1'b0);

assign icmp_ln38_fu_705_p2 = ((indvar_flatten6_reg_439 == 10'd432) ? 1'b1 : 1'b0);

assign icmp_ln39_fu_755_p2 = ((om_0_reg_461 == 6'd48) ? 1'b1 : 1'b0);

assign icmp_ln48_fu_883_p2 = ((ap_phi_mux_indvar_flatten42_phi_fu_476_p4 == 15'd19872) ? 1'b1 : 1'b0);

assign icmp_ln49_fu_901_p2 = ((ap_phi_mux_indvar_flatten28_phi_fu_498_p4 == 10'd432) ? 1'b1 : 1'b0);

assign icmp_ln50_fu_951_p2 = ((ap_phi_mux_om3_0_phi_fu_520_p4 == 6'd48) ? 1'b1 : 1'b0);

assign icmp_ln61_fu_1152_p2 = ((indvar_flatten63_reg_527 == 15'd19872) ? 1'b1 : 1'b0);

assign icmp_ln62_fu_1170_p2 = ((indvar_flatten49_reg_549 == 10'd432) ? 1'b1 : 1'b0);

assign icmp_ln63_fu_1220_p2 = ((om6_0_reg_571 == 6'd48) ? 1'b1 : 1'b0);

assign ih_7_fu_895_p2 = (6'd1 + ap_phi_mux_ih1_0_phi_fu_487_p4);

assign ih_8_fu_1164_p2 = (6'd1 + ap_phi_mux_ih4_0_phi_fu_542_p4);

assign ih_fu_699_p2 = (6'd1 + ih_0_reg_428);

assign in_var_assign_fu_1351_p5 = trunc_ln65_reg_1652;

assign iw_3_fu_963_p2 = (4'd1 + select_ln53_fu_907_p3);

assign iw_4_fu_1232_p2 = (4'd1 + select_ln65_fu_1176_p3);

assign iw_fu_767_p2 = (4'd1 + select_ln41_fu_711_p3);

assign lshr_ln9_fu_1015_p4 = {{select_ln53_2_fu_975_p3[5:2]}};

assign om_2_fu_1328_p2 = (6'd1 + select_ln65_5_fu_1244_p3);

assign om_3_fu_1033_p2 = (select_ln53_2_fu_975_p3 + 6'd1);

assign om_fu_863_p2 = (select_ln41_2_fu_779_p3 + 6'd1);

assign or_ln236_fu_1396_p2 = (icmp_ln236_fu_1384_p2 | icmp_ln236_16_fu_1390_p2);

assign or_ln238_fu_1434_p2 = (and_ln238_16_fu_1420_p2 | and_ln236_fu_1402_p2);

assign or_ln41_fu_773_p2 = (icmp_ln38_fu_705_p2 | and_ln41_fu_761_p2);

assign or_ln53_fu_969_p2 = (icmp_ln49_fu_901_p2 | and_ln53_fu_957_p2);

assign or_ln65_fu_1238_p2 = (icmp_ln62_fu_1170_p2 | and_ln65_fu_1226_p2);

assign out_stream_V_din = ((or_ln238_fu_1434_p2[0:0] === 1'b1) ? select_ln238_fu_1426_p3 : in_var_assign_reg_1687);

assign p_shl10_cast_fu_1093_p3 = {{add_ln53_2_reg_1524}, {4'd0}};

assign p_shl12_cast_fu_1270_p3 = {{add_ln65_2_fu_1264_p2}, {4'd0}};

assign p_shl_cast_fu_805_p3 = {{add_ln41_2_fu_799_p2}, {4'd0}};

assign pw_weight1_0_address0 = zext_ln54_1_fu_1025_p1;

assign pw_weight1_1_address0 = zext_ln54_1_fu_1025_p1;

assign pw_weight1_2_address0 = zext_ln54_1_fu_1025_p1;

assign pw_weight1_3_address0 = zext_ln54_1_fu_1025_p1;

assign select_ln13_1_fu_1071_p3 = ((icmp_ln13_1_fu_1066_p2[0:0] === 1'b1) ? pw_weight1_1_q0 : select_ln13_fu_1058_p3);

assign select_ln13_fu_1058_p3 = ((icmp_ln13_fu_1053_p2[0:0] === 1'b1) ? pw_weight1_0_q0 : pw_weight1_3_q0);

assign select_ln238_fu_1426_p3 = ((and_ln238_16_fu_1420_p2[0:0] === 1'b1) ? 32'd1086324736 : 32'd0);

assign select_ln32_1_fu_639_p3 = ((icmp_ln28_fu_625_p2[0:0] === 1'b1) ? h_fu_619_p2 : ap_phi_mux_h_0_phi_fu_399_p4);

assign select_ln32_fu_631_p3 = ((icmp_ln28_fu_625_p2[0:0] === 1'b1) ? 4'd0 : w_0_reg_406);

assign select_ln38_fu_875_p3 = ((icmp_ln38_fu_705_p2[0:0] === 1'b1) ? 10'd1 : add_ln38_1_fu_869_p2);

assign select_ln41_1_fu_719_p3 = ((icmp_ln38_fu_705_p2[0:0] === 1'b1) ? ih_fu_699_p2 : ih_0_reg_428);

assign select_ln41_2_fu_779_p3 = ((or_ln41_fu_773_p2[0:0] === 1'b1) ? 6'd0 : om_0_reg_461);

assign select_ln41_3_fu_787_p3 = ((and_ln41_fu_761_p2[0:0] === 1'b1) ? iw_fu_767_p2 : select_ln41_fu_711_p3);

assign select_ln41_fu_711_p3 = ((icmp_ln38_fu_705_p2[0:0] === 1'b1) ? 4'd0 : iw_0_reg_450);

assign select_ln49_fu_1045_p3 = ((icmp_ln49_fu_901_p2[0:0] === 1'b1) ? 10'd1 : add_ln49_1_fu_1039_p2);

assign select_ln53_1_fu_915_p3 = ((icmp_ln49_fu_901_p2[0:0] === 1'b1) ? ih_7_fu_895_p2 : ap_phi_mux_ih1_0_phi_fu_487_p4);

assign select_ln53_2_fu_975_p3 = ((or_ln53_fu_969_p2[0:0] === 1'b1) ? 6'd0 : ap_phi_mux_om3_0_phi_fu_520_p4);

assign select_ln53_3_fu_983_p3 = ((and_ln53_fu_957_p2[0:0] === 1'b1) ? iw_3_fu_963_p2 : select_ln53_fu_907_p3);

assign select_ln53_fu_907_p3 = ((icmp_ln49_fu_901_p2[0:0] === 1'b1) ? 4'd0 : ap_phi_mux_iw2_0_phi_fu_509_p4);

assign select_ln62_fu_1340_p3 = ((icmp_ln62_fu_1170_p2[0:0] === 1'b1) ? 10'd1 : add_ln62_1_fu_1334_p2);

assign select_ln65_4_fu_1184_p3 = ((icmp_ln62_fu_1170_p2[0:0] === 1'b1) ? ih_8_fu_1164_p2 : ap_phi_mux_ih4_0_phi_fu_542_p4);

assign select_ln65_5_fu_1244_p3 = ((or_ln65_fu_1238_p2[0:0] === 1'b1) ? 6'd0 : om6_0_reg_571);

assign select_ln65_6_fu_1252_p3 = ((and_ln65_fu_1226_p2[0:0] === 1'b1) ? iw_4_fu_1232_p2 : select_ln65_fu_1176_p3);

assign select_ln65_fu_1176_p3 = ((icmp_ln62_fu_1170_p2[0:0] === 1'b1) ? 4'd0 : ap_phi_mux_iw5_0_phi_fu_564_p4);

assign sub_ln41_fu_825_p2 = (p_shl_cast_fu_805_p3 - zext_ln41_3_fu_821_p1);

assign sub_ln54_fu_1111_p2 = (p_shl10_cast_fu_1093_p3 - zext_ln54_2_fu_1107_p1);

assign sub_ln65_fu_1290_p2 = (p_shl12_cast_fu_1270_p3 - zext_ln65_7_fu_1286_p1);

assign tmp_41_fu_1137_p5 = trunc_ln54_reg_1535;

assign tmp_43_fu_1370_p4 = {{bitcast_ln236_fu_1367_p1[30:23]}};

assign tmp_64_fu_813_p3 = {{add_ln41_2_fu_799_p2}, {2'd0}};

assign tmp_65_fu_835_p4 = {{select_ln41_2_fu_779_p3[5:2]}};

assign tmp_66_fu_1100_p3 = {{add_ln53_2_reg_1524}, {2'd0}};

assign tmp_67_fu_1278_p3 = {{add_ln65_2_fu_1264_p2}, {2'd0}};

assign tmp_68_fu_656_p3 = {{select_ln32_1_reg_1462}, {3'd0}};

assign tmp_69_fu_731_p3 = {{select_ln41_1_fu_719_p3}, {3'd0}};

assign tmp_70_fu_927_p3 = {{select_ln53_1_fu_915_p3}, {3'd0}};

assign tmp_71_fu_1196_p3 = {{select_ln65_4_fu_1184_p3}, {3'd0}};

assign tmp_72_fu_1300_p4 = {{select_ln65_5_fu_1244_p3[5:2]}};

assign trunc_ln236_fu_1380_p1 = bitcast_ln236_fu_1367_p1[22:0];

assign trunc_ln41_fu_831_p1 = select_ln41_2_fu_779_p3[1:0];

assign trunc_ln54_fu_1011_p1 = select_ln53_2_fu_975_p3[1:0];

assign trunc_ln65_fu_1296_p1 = select_ln65_5_fu_1244_p3[1:0];

assign w_fu_647_p2 = (select_ln32_fu_631_p3 + 4'd1);

assign xor_ln236_fu_1414_p2 = (1'd1 ^ and_ln236_fu_1402_p2);

assign xor_ln41_fu_749_p2 = (icmp_ln38_fu_705_p2 ^ 1'd1);

assign xor_ln53_fu_945_p2 = (icmp_ln49_fu_901_p2 ^ 1'd1);

assign xor_ln65_fu_1214_p2 = (icmp_ln62_fu_1170_p2 ^ 1'd1);

assign zext_ln1_fu_1117_p1 = lshr_ln9_reg_1543;

assign zext_ln32_1_fu_663_p1 = tmp_68_fu_656_p3;

assign zext_ln32_2_fu_673_p1 = select_ln32_reg_1457;

assign zext_ln32_3_fu_682_p1 = add_ln32_1_fu_676_p2;

assign zext_ln32_fu_653_p1 = select_ln32_1_reg_1462;

assign zext_ln41_1_fu_739_p1 = tmp_69_fu_731_p3;

assign zext_ln41_2_fu_795_p1 = select_ln41_3_fu_787_p3;

assign zext_ln41_3_fu_821_p1 = tmp_64_fu_813_p3;

assign zext_ln41_4_fu_845_p1 = tmp_65_fu_835_p4;

assign zext_ln41_5_fu_855_p1 = add_ln41_3_fu_849_p2;

assign zext_ln41_fu_727_p1 = select_ln41_1_fu_719_p3;

assign zext_ln53_1_fu_935_p1 = tmp_70_fu_927_p3;

assign zext_ln53_2_fu_1006_p1 = select_ln53_2_fu_975_p3;

assign zext_ln53_3_fu_991_p1 = select_ln53_3_fu_983_p3;

assign zext_ln53_4_fu_1001_p1 = add_ln53_2_fu_995_p2;

assign zext_ln53_fu_923_p1 = select_ln53_1_fu_915_p3;

assign zext_ln54_1_fu_1025_p1 = lshr_ln9_fu_1015_p4;

assign zext_ln54_2_fu_1107_p1 = tmp_66_fu_1100_p3;

assign zext_ln54_3_fu_1126_p1 = add_ln54_fu_1120_p2;

assign zext_ln65_5_fu_1204_p1 = tmp_71_fu_1196_p3;

assign zext_ln65_6_fu_1260_p1 = select_ln65_6_fu_1252_p3;

assign zext_ln65_7_fu_1286_p1 = tmp_67_fu_1278_p3;

assign zext_ln65_8_fu_1310_p1 = tmp_72_fu_1300_p4;

assign zext_ln65_9_fu_1320_p1 = add_ln65_3_fu_1314_p2;

assign zext_ln65_fu_1192_p1 = select_ln65_4_fu_1184_p3;

endmodule //pw_layer1
