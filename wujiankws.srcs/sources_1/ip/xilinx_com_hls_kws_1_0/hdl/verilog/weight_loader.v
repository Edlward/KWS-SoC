// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module weight_loader (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        weight_in_TDATA,
        weight_in_TVALID,
        weight_in_TREADY,
        weight_in_TLAST,
        dw_weight1_address0,
        dw_weight1_ce0,
        dw_weight1_we0,
        dw_weight1_d0,
        pw_weight1_0_address0,
        pw_weight1_0_ce0,
        pw_weight1_0_we0,
        pw_weight1_0_d0,
        pw_weight1_1_address0,
        pw_weight1_1_ce0,
        pw_weight1_1_we0,
        pw_weight1_1_d0,
        pw_weight1_2_address0,
        pw_weight1_2_ce0,
        pw_weight1_2_we0,
        pw_weight1_2_d0,
        pw_weight1_3_address0,
        pw_weight1_3_ce0,
        pw_weight1_3_we0,
        pw_weight1_3_d0,
        bn_bias1_address0,
        bn_bias1_ce0,
        bn_bias1_we0,
        bn_bias1_d0,
        dw_weight2_0_address1,
        dw_weight2_0_ce1,
        dw_weight2_0_we1,
        dw_weight2_0_d1,
        dw_weight2_1_address1,
        dw_weight2_1_ce1,
        dw_weight2_1_we1,
        dw_weight2_1_d1,
        dw_weight2_2_address1,
        dw_weight2_2_ce1,
        dw_weight2_2_we1,
        dw_weight2_2_d1,
        dw_weight2_3_address1,
        dw_weight2_3_ce1,
        dw_weight2_3_we1,
        dw_weight2_3_d1,
        pw_weight2_0_address0,
        pw_weight2_0_ce0,
        pw_weight2_0_we0,
        pw_weight2_0_d0,
        pw_weight2_1_address0,
        pw_weight2_1_ce0,
        pw_weight2_1_we0,
        pw_weight2_1_d0,
        pw_weight2_2_address0,
        pw_weight2_2_ce0,
        pw_weight2_2_we0,
        pw_weight2_2_d0,
        pw_weight2_3_address0,
        pw_weight2_3_ce0,
        pw_weight2_3_we0,
        pw_weight2_3_d0,
        bn_bias2_address0,
        bn_bias2_ce0,
        bn_bias2_we0,
        bn_bias2_d0,
        weights_rw_address1,
        weights_rw_ce1,
        weights_rw_we1,
        weights_rw_d1,
        bias_r_address0,
        bias_r_ce0,
        bias_r_we0,
        bias_r_d0,
        weights_zw_address1,
        weights_zw_ce1,
        weights_zw_we1,
        weights_zw_d1,
        bias_z_address0,
        bias_z_ce0,
        bias_z_we0,
        bias_z_d0,
        weights_hw_address1,
        weights_hw_ce1,
        weights_hw_we1,
        weights_hw_d1,
        bias_h_address0,
        bias_h_ce0,
        bias_h_we0,
        bias_h_d0,
        fc_weights1_address0,
        fc_weights1_ce0,
        fc_weights1_we0,
        fc_weights1_d0,
        fc_bias1_address0,
        fc_bias1_ce0,
        fc_bias1_we0,
        fc_bias1_d0,
        fc_weights2_address0,
        fc_weights2_ce0,
        fc_weights2_we0,
        fc_weights2_d0,
        fc_bias2_address0,
        fc_bias2_ce0,
        fc_bias2_we0,
        fc_bias2_d0,
        weights_ru_0_address1,
        weights_ru_0_ce1,
        weights_ru_0_we1,
        weights_ru_0_d1,
        weights_ru_1_address1,
        weights_ru_1_ce1,
        weights_ru_1_we1,
        weights_ru_1_d1,
        weights_ru_2_address1,
        weights_ru_2_ce1,
        weights_ru_2_we1,
        weights_ru_2_d1,
        weights_ru_3_address1,
        weights_ru_3_ce1,
        weights_ru_3_we1,
        weights_ru_3_d1,
        weights_zu_0_address1,
        weights_zu_0_ce1,
        weights_zu_0_we1,
        weights_zu_0_d1,
        weights_zu_1_address1,
        weights_zu_1_ce1,
        weights_zu_1_we1,
        weights_zu_1_d1,
        weights_zu_2_address1,
        weights_zu_2_ce1,
        weights_zu_2_we1,
        weights_zu_2_d1,
        weights_zu_3_address1,
        weights_zu_3_ce1,
        weights_zu_3_we1,
        weights_zu_3_d1,
        weights_hu_0_address1,
        weights_hu_0_ce1,
        weights_hu_0_we1,
        weights_hu_0_d1,
        weights_hu_1_address1,
        weights_hu_1_ce1,
        weights_hu_1_we1,
        weights_hu_1_d1,
        weights_hu_2_address1,
        weights_hu_2_ce1,
        weights_hu_2_we1,
        weights_hu_2_d1,
        weights_hu_3_address1,
        weights_hu_3_ce1,
        weights_hu_3_we1,
        weights_hu_3_d1
);

parameter    ap_ST_fsm_state1 = 39'd1;
parameter    ap_ST_fsm_state2 = 39'd2;
parameter    ap_ST_fsm_state3 = 39'd4;
parameter    ap_ST_fsm_state4 = 39'd8;
parameter    ap_ST_fsm_state5 = 39'd16;
parameter    ap_ST_fsm_state6 = 39'd32;
parameter    ap_ST_fsm_state7 = 39'd64;
parameter    ap_ST_fsm_state8 = 39'd128;
parameter    ap_ST_fsm_state9 = 39'd256;
parameter    ap_ST_fsm_state10 = 39'd512;
parameter    ap_ST_fsm_state11 = 39'd1024;
parameter    ap_ST_fsm_state12 = 39'd2048;
parameter    ap_ST_fsm_state13 = 39'd4096;
parameter    ap_ST_fsm_state14 = 39'd8192;
parameter    ap_ST_fsm_state15 = 39'd16384;
parameter    ap_ST_fsm_state16 = 39'd32768;
parameter    ap_ST_fsm_state17 = 39'd65536;
parameter    ap_ST_fsm_state18 = 39'd131072;
parameter    ap_ST_fsm_state19 = 39'd262144;
parameter    ap_ST_fsm_state20 = 39'd524288;
parameter    ap_ST_fsm_state21 = 39'd1048576;
parameter    ap_ST_fsm_state22 = 39'd2097152;
parameter    ap_ST_fsm_state23 = 39'd4194304;
parameter    ap_ST_fsm_state24 = 39'd8388608;
parameter    ap_ST_fsm_state25 = 39'd16777216;
parameter    ap_ST_fsm_state26 = 39'd33554432;
parameter    ap_ST_fsm_state27 = 39'd67108864;
parameter    ap_ST_fsm_state28 = 39'd134217728;
parameter    ap_ST_fsm_state29 = 39'd268435456;
parameter    ap_ST_fsm_state30 = 39'd536870912;
parameter    ap_ST_fsm_state31 = 39'd1073741824;
parameter    ap_ST_fsm_state32 = 39'd2147483648;
parameter    ap_ST_fsm_state33 = 39'd4294967296;
parameter    ap_ST_fsm_state34 = 39'd8589934592;
parameter    ap_ST_fsm_state35 = 39'd17179869184;
parameter    ap_ST_fsm_state36 = 39'd34359738368;
parameter    ap_ST_fsm_state37 = 39'd68719476736;
parameter    ap_ST_fsm_state38 = 39'd137438953472;
parameter    ap_ST_fsm_state39 = 39'd274877906944;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] weight_in_TDATA;
input   weight_in_TVALID;
output   weight_in_TREADY;
input   weight_in_TLAST;
output  [2:0] dw_weight1_address0;
output   dw_weight1_ce0;
output   dw_weight1_we0;
output  [31:0] dw_weight1_d0;
output  [3:0] pw_weight1_0_address0;
output   pw_weight1_0_ce0;
output   pw_weight1_0_we0;
output  [31:0] pw_weight1_0_d0;
output  [3:0] pw_weight1_1_address0;
output   pw_weight1_1_ce0;
output   pw_weight1_1_we0;
output  [31:0] pw_weight1_1_d0;
output  [3:0] pw_weight1_2_address0;
output   pw_weight1_2_ce0;
output   pw_weight1_2_we0;
output  [31:0] pw_weight1_2_d0;
output  [3:0] pw_weight1_3_address0;
output   pw_weight1_3_ce0;
output   pw_weight1_3_we0;
output  [31:0] pw_weight1_3_d0;
output  [5:0] bn_bias1_address0;
output   bn_bias1_ce0;
output   bn_bias1_we0;
output  [31:0] bn_bias1_d0;
output  [6:0] dw_weight2_0_address1;
output   dw_weight2_0_ce1;
output   dw_weight2_0_we1;
output  [31:0] dw_weight2_0_d1;
output  [6:0] dw_weight2_1_address1;
output   dw_weight2_1_ce1;
output   dw_weight2_1_we1;
output  [31:0] dw_weight2_1_d1;
output  [6:0] dw_weight2_2_address1;
output   dw_weight2_2_ce1;
output   dw_weight2_2_we1;
output  [31:0] dw_weight2_2_d1;
output  [6:0] dw_weight2_3_address1;
output   dw_weight2_3_ce1;
output   dw_weight2_3_we1;
output  [31:0] dw_weight2_3_d1;
output  [9:0] pw_weight2_0_address0;
output   pw_weight2_0_ce0;
output   pw_weight2_0_we0;
output  [31:0] pw_weight2_0_d0;
output  [9:0] pw_weight2_1_address0;
output   pw_weight2_1_ce0;
output   pw_weight2_1_we0;
output  [31:0] pw_weight2_1_d0;
output  [9:0] pw_weight2_2_address0;
output   pw_weight2_2_ce0;
output   pw_weight2_2_we0;
output  [31:0] pw_weight2_2_d0;
output  [9:0] pw_weight2_3_address0;
output   pw_weight2_3_ce0;
output   pw_weight2_3_we0;
output  [31:0] pw_weight2_3_d0;
output  [5:0] bn_bias2_address0;
output   bn_bias2_ce0;
output   bn_bias2_we0;
output  [31:0] bn_bias2_d0;
output  [10:0] weights_rw_address1;
output   weights_rw_ce1;
output   weights_rw_we1;
output  [31:0] weights_rw_d1;
output  [5:0] bias_r_address0;
output   bias_r_ce0;
output   bias_r_we0;
output  [31:0] bias_r_d0;
output  [10:0] weights_zw_address1;
output   weights_zw_ce1;
output   weights_zw_we1;
output  [31:0] weights_zw_d1;
output  [5:0] bias_z_address0;
output   bias_z_ce0;
output   bias_z_we0;
output  [31:0] bias_z_d0;
output  [10:0] weights_hw_address1;
output   weights_hw_ce1;
output   weights_hw_we1;
output  [31:0] weights_hw_d1;
output  [5:0] bias_h_address0;
output   bias_h_ce0;
output   bias_h_we0;
output  [31:0] bias_h_d0;
output  [11:0] fc_weights1_address0;
output   fc_weights1_ce0;
output   fc_weights1_we0;
output  [31:0] fc_weights1_d0;
output  [5:0] fc_bias1_address0;
output   fc_bias1_ce0;
output   fc_bias1_we0;
output  [31:0] fc_bias1_d0;
output  [9:0] fc_weights2_address0;
output   fc_weights2_ce0;
output   fc_weights2_we0;
output  [31:0] fc_weights2_d0;
output  [3:0] fc_bias2_address0;
output   fc_bias2_ce0;
output   fc_bias2_we0;
output  [31:0] fc_bias2_d0;
output  [11:0] weights_ru_0_address1;
output   weights_ru_0_ce1;
output   weights_ru_0_we1;
output  [31:0] weights_ru_0_d1;
output  [11:0] weights_ru_1_address1;
output   weights_ru_1_ce1;
output   weights_ru_1_we1;
output  [31:0] weights_ru_1_d1;
output  [11:0] weights_ru_2_address1;
output   weights_ru_2_ce1;
output   weights_ru_2_we1;
output  [31:0] weights_ru_2_d1;
output  [11:0] weights_ru_3_address1;
output   weights_ru_3_ce1;
output   weights_ru_3_we1;
output  [31:0] weights_ru_3_d1;
output  [11:0] weights_zu_0_address1;
output   weights_zu_0_ce1;
output   weights_zu_0_we1;
output  [31:0] weights_zu_0_d1;
output  [11:0] weights_zu_1_address1;
output   weights_zu_1_ce1;
output   weights_zu_1_we1;
output  [31:0] weights_zu_1_d1;
output  [11:0] weights_zu_2_address1;
output   weights_zu_2_ce1;
output   weights_zu_2_we1;
output  [31:0] weights_zu_2_d1;
output  [11:0] weights_zu_3_address1;
output   weights_zu_3_ce1;
output   weights_zu_3_we1;
output  [31:0] weights_zu_3_d1;
output  [11:0] weights_hu_0_address1;
output   weights_hu_0_ce1;
output   weights_hu_0_we1;
output  [31:0] weights_hu_0_d1;
output  [11:0] weights_hu_1_address1;
output   weights_hu_1_ce1;
output   weights_hu_1_we1;
output  [31:0] weights_hu_1_d1;
output  [11:0] weights_hu_2_address1;
output   weights_hu_2_ce1;
output   weights_hu_2_we1;
output  [31:0] weights_hu_2_d1;
output  [11:0] weights_hu_3_address1;
output   weights_hu_3_ce1;
output   weights_hu_3_we1;
output  [31:0] weights_hu_3_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg weight_in_TREADY;
reg dw_weight1_ce0;
reg dw_weight1_we0;
reg pw_weight1_0_ce0;
reg pw_weight1_0_we0;
reg pw_weight1_1_ce0;
reg pw_weight1_1_we0;
reg pw_weight1_2_ce0;
reg pw_weight1_2_we0;
reg pw_weight1_3_ce0;
reg pw_weight1_3_we0;
reg bn_bias1_ce0;
reg bn_bias1_we0;
reg dw_weight2_0_ce1;
reg dw_weight2_0_we1;
reg dw_weight2_1_ce1;
reg dw_weight2_1_we1;
reg dw_weight2_2_ce1;
reg dw_weight2_2_we1;
reg dw_weight2_3_ce1;
reg dw_weight2_3_we1;
reg pw_weight2_0_ce0;
reg pw_weight2_0_we0;
reg pw_weight2_1_ce0;
reg pw_weight2_1_we0;
reg pw_weight2_2_ce0;
reg pw_weight2_2_we0;
reg pw_weight2_3_ce0;
reg pw_weight2_3_we0;
reg bn_bias2_ce0;
reg bn_bias2_we0;
reg weights_rw_ce1;
reg weights_rw_we1;
reg bias_r_ce0;
reg bias_r_we0;
reg weights_zw_ce1;
reg weights_zw_we1;
reg bias_z_ce0;
reg bias_z_we0;
reg weights_hw_ce1;
reg weights_hw_we1;
reg bias_h_ce0;
reg bias_h_we0;
reg fc_weights1_ce0;
reg fc_weights1_we0;
reg fc_bias1_ce0;
reg fc_bias1_we0;
reg fc_weights2_ce0;
reg fc_weights2_we0;
reg fc_bias2_ce0;
reg fc_bias2_we0;
reg weights_ru_0_ce1;
reg weights_ru_0_we1;
reg weights_ru_1_ce1;
reg weights_ru_1_we1;
reg weights_ru_2_ce1;
reg weights_ru_2_we1;
reg weights_ru_3_ce1;
reg weights_ru_3_we1;
reg weights_zu_0_ce1;
reg weights_zu_0_we1;
reg weights_zu_1_ce1;
reg weights_zu_1_we1;
reg weights_zu_2_ce1;
reg weights_zu_2_we1;
reg weights_zu_3_ce1;
reg weights_zu_3_we1;
reg weights_hu_0_ce1;
reg weights_hu_0_we1;
reg weights_hu_1_ce1;
reg weights_hu_1_we1;
reg weights_hu_2_ce1;
reg weights_hu_2_we1;
reg weights_hu_3_ce1;
reg weights_hu_3_we1;

(* fsm_encoding = "none" *) reg   [38:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    weight_in_TDATA_blk_n;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln35_fu_1353_p2;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln45_fu_1426_p2;
wire    ap_CS_fsm_state6;
wire   [0:0] icmp_ln53_fu_1460_p2;
wire    ap_CS_fsm_state8;
wire   [0:0] icmp_ln60_fu_1477_p2;
wire    ap_CS_fsm_state10;
wire   [0:0] icmp_ln71_fu_1667_p2;
wire    ap_CS_fsm_state12;
wire   [0:0] icmp_ln80_fu_1775_p2;
wire    ap_CS_fsm_state14;
wire   [0:0] icmp_ln88_fu_1792_p2;
wire    ap_CS_fsm_state16;
wire   [0:0] icmp_ln97_fu_1900_p2;
wire    ap_CS_fsm_state18;
wire   [0:0] icmp_ln106_fu_1991_p2;
wire    ap_CS_fsm_state20;
wire   [0:0] icmp_ln114_fu_2008_p2;
wire    ap_CS_fsm_state22;
wire   [0:0] icmp_ln123_fu_2116_p2;
wire    ap_CS_fsm_state24;
wire   [0:0] icmp_ln132_fu_2207_p2;
wire    ap_CS_fsm_state26;
wire   [0:0] icmp_ln140_fu_2224_p2;
wire    ap_CS_fsm_state28;
wire   [0:0] icmp_ln149_fu_2332_p2;
wire    ap_CS_fsm_state30;
wire   [0:0] icmp_ln158_fu_2423_p2;
wire    ap_CS_fsm_state32;
wire   [0:0] icmp_ln166_fu_2440_p2;
wire    ap_CS_fsm_state34;
wire   [0:0] icmp_ln176_fu_2513_p2;
wire    ap_CS_fsm_state36;
wire   [0:0] icmp_ln184_fu_2530_p2;
wire    ap_CS_fsm_state38;
wire   [0:0] icmp_ln193_fu_2617_p2;
wire   [3:0] add_ln35_fu_1359_p2;
reg    ap_block_state2;
wire   [2:0] select_ln39_1_fu_1385_p3;
wire   [1:0] j_fu_1420_p2;
wire   [5:0] add_ln45_fu_1432_p2;
reg    ap_block_state4;
wire   [5:0] i_1_fu_1466_p2;
reg    ap_block_state6;
wire   [8:0] add_ln60_fu_1483_p2;
reg    ap_block_state8;
wire   [2:0] select_ln65_1_fu_1509_p3;
wire   [1:0] select_ln65_3_fu_1567_p3;
wire   [5:0] k_fu_1647_p2;
wire   [7:0] select_ln61_fu_1659_p3;
wire   [11:0] add_ln71_fu_1673_p2;
reg    ap_block_state10;
wire   [5:0] select_ln75_1_fu_1699_p3;
wire   [5:0] j_2_fu_1769_p2;
wire   [5:0] i_6_fu_1781_p2;
reg    ap_block_state12;
wire   [13:0] add_ln88_fu_1798_p2;
reg    ap_block_state14;
wire   [8:0] select_ln92_1_fu_1824_p3;
wire   [5:0] j_4_fu_1894_p2;
wire   [10:0] add_ln97_fu_1906_p2;
reg    ap_block_state16;
wire   [5:0] select_ln101_1_fu_1932_p3;
wire   [5:0] j_3_fu_1985_p2;
wire   [5:0] i_11_fu_1997_p2;
reg    ap_block_state18;
wire   [13:0] add_ln114_fu_2014_p2;
reg    ap_block_state20;
wire   [8:0] select_ln118_1_fu_2040_p3;
wire   [5:0] j_6_fu_2110_p2;
wire   [10:0] add_ln123_fu_2122_p2;
reg    ap_block_state22;
wire   [5:0] select_ln127_1_fu_2148_p3;
wire   [5:0] j_5_fu_2201_p2;
wire   [5:0] i_16_fu_2213_p2;
reg    ap_block_state24;
wire   [13:0] add_ln140_fu_2230_p2;
reg    ap_block_state26;
wire   [8:0] select_ln144_1_fu_2256_p3;
wire   [5:0] j_8_fu_2326_p2;
wire   [10:0] add_ln149_fu_2338_p2;
reg    ap_block_state28;
wire   [5:0] select_ln153_1_fu_2364_p3;
wire   [5:0] j_7_fu_2417_p2;
wire   [5:0] i_21_fu_2429_p2;
reg    ap_block_state30;
wire   [11:0] add_ln166_fu_2446_p2;
reg    ap_block_state32;
wire   [5:0] select_ln170_1_fu_2472_p3;
wire   [6:0] j_9_fu_2507_p2;
wire   [6:0] i_24_fu_2519_p2;
reg    ap_block_state34;
wire   [9:0] add_ln184_fu_2536_p2;
reg    ap_block_state36;
wire   [6:0] select_ln188_1_fu_2562_p3;
wire   [3:0] j_10_fu_2611_p2;
wire   [3:0] i_27_fu_2623_p2;
reg    ap_block_state38;
reg   [3:0] indvar_flatten_reg_839;
reg   [2:0] i_0_reg_850;
reg   [1:0] j_0_reg_861;
reg   [5:0] j2_0_0_reg_872;
wire    ap_CS_fsm_state3;
reg   [5:0] i3_0_reg_883;
wire    ap_CS_fsm_state5;
reg   [8:0] indvar_flatten20_reg_894;
wire    ap_CS_fsm_state7;
reg   [2:0] i4_0_reg_905;
reg   [7:0] indvar_flatten6_reg_916;
reg   [1:0] j5_0_reg_927;
reg   [5:0] k_0_reg_938;
reg   [11:0] indvar_flatten27_reg_949;
wire    ap_CS_fsm_state9;
reg   [5:0] i6_0_reg_960;
reg   [5:0] j7_0_reg_971;
reg   [5:0] i8_0_reg_982;
wire    ap_CS_fsm_state11;
reg   [13:0] indvar_flatten34_reg_993;
wire    ap_CS_fsm_state13;
reg   [8:0] i9_0_reg_1004;
reg   [5:0] j10_0_reg_1015;
reg   [10:0] indvar_flatten41_reg_1026;
wire    ap_CS_fsm_state15;
reg   [5:0] i11_0_reg_1037;
reg   [5:0] j12_0_reg_1048;
reg   [5:0] i13_0_reg_1059;
wire    ap_CS_fsm_state17;
reg   [13:0] indvar_flatten48_reg_1070;
wire    ap_CS_fsm_state19;
reg   [8:0] i14_0_reg_1081;
reg   [5:0] j15_0_reg_1092;
reg   [10:0] indvar_flatten55_reg_1103;
wire    ap_CS_fsm_state21;
reg   [5:0] i16_0_reg_1114;
reg   [5:0] j17_0_reg_1125;
reg   [5:0] i18_0_reg_1136;
wire    ap_CS_fsm_state23;
reg   [13:0] indvar_flatten62_reg_1147;
wire    ap_CS_fsm_state25;
reg   [8:0] i19_0_reg_1158;
reg   [5:0] j20_0_reg_1169;
reg   [10:0] indvar_flatten69_reg_1180;
wire    ap_CS_fsm_state27;
reg   [5:0] i21_0_reg_1191;
reg   [5:0] j22_0_reg_1202;
reg   [5:0] i23_0_reg_1213;
wire    ap_CS_fsm_state29;
reg   [11:0] indvar_flatten76_reg_1224;
wire    ap_CS_fsm_state31;
reg   [5:0] i24_0_reg_1235;
reg   [6:0] j25_0_reg_1246;
reg   [6:0] i26_0_reg_1257;
wire    ap_CS_fsm_state33;
reg   [9:0] indvar_flatten83_reg_1268;
wire    ap_CS_fsm_state35;
reg   [6:0] i27_0_reg_1279;
reg   [3:0] j28_0_reg_1290;
reg   [3:0] i29_0_reg_1301;
wire    ap_CS_fsm_state37;
wire   [63:0] zext_ln39_1_fu_1415_p1;
wire   [63:0] zext_ln48_fu_1452_p1;
wire   [63:0] zext_ln56_fu_1472_p1;
wire   [63:0] zext_ln65_4_fu_1639_p1;
wire  signed [63:0] sext_ln75_fu_1761_p1;
wire   [63:0] zext_ln83_fu_1787_p1;
wire   [63:0] zext_ln92_3_fu_1886_p1;
wire   [63:0] zext_ln101_3_fu_1980_p1;
wire   [63:0] zext_ln109_fu_2003_p1;
wire   [63:0] zext_ln118_3_fu_2102_p1;
wire   [63:0] zext_ln127_3_fu_2196_p1;
wire   [63:0] zext_ln135_fu_2219_p1;
wire   [63:0] zext_ln144_3_fu_2318_p1;
wire   [63:0] zext_ln153_3_fu_2412_p1;
wire   [63:0] zext_ln161_fu_2435_p1;
wire   [63:0] zext_ln170_1_fu_2502_p1;
wire   [63:0] zext_ln179_fu_2525_p1;
wire  signed [63:0] sext_ln188_fu_2606_p1;
wire   [63:0] zext_ln196_fu_2629_p1;
wire   [1:0] trunc_ln48_fu_1438_p1;
wire   [1:0] trunc_ln65_1_fu_1615_p1;
wire   [1:0] trunc_ln75_fu_1707_p1;
wire   [1:0] trunc_ln92_fu_1862_p1;
wire   [1:0] trunc_ln118_fu_2078_p1;
wire   [1:0] trunc_ln144_fu_2294_p1;
wire   [0:0] icmp_ln36_fu_1371_p2;
wire   [2:0] i_fu_1365_p2;
wire   [3:0] tmp_18_fu_1393_p3;
wire   [1:0] select_ln39_fu_1377_p3;
wire   [4:0] zext_ln39_fu_1405_p1;
wire   [4:0] zext_ln36_fu_1401_p1;
wire   [4:0] add_ln39_fu_1409_p2;
wire   [3:0] lshr_ln_fu_1442_p4;
wire   [0:0] icmp_ln61_fu_1495_p2;
wire   [2:0] i_3_fu_1489_p2;
wire   [3:0] tmp_19_fu_1517_p3;
wire   [0:0] icmp_ln62_fu_1535_p2;
wire   [0:0] xor_ln65_fu_1529_p2;
wire   [1:0] select_ln65_fu_1501_p3;
wire   [0:0] and_ln65_fu_1541_p2;
wire   [0:0] or_ln65_fu_1553_p2;
wire   [1:0] j_11_fu_1547_p2;
wire   [4:0] zext_ln65_1_fu_1575_p1;
wire   [4:0] zext_ln65_fu_1525_p1;
wire   [4:0] add_ln65_fu_1579_p2;
wire   [3:0] trunc_ln65_fu_1585_p1;
wire   [6:0] tmp_20_fu_1597_p3;
wire   [7:0] p_shl_cast_fu_1589_p3;
wire   [7:0] zext_ln65_2_fu_1605_p1;
wire   [5:0] select_ln65_2_fu_1559_p3;
wire   [3:0] tmp_21_fu_1619_p4;
wire   [7:0] zext_ln65_3_fu_1629_p1;
wire   [7:0] sub_ln65_fu_1609_p2;
wire   [7:0] add_ln65_1_fu_1633_p2;
wire   [7:0] add_ln61_1_fu_1653_p2;
wire   [0:0] icmp_ln72_fu_1685_p2;
wire   [5:0] i_5_fu_1679_p2;
wire   [3:0] zext_ln75_1_mid2_v_fu_1711_p4;
wire   [9:0] tmp_22_fu_1721_p3;
wire   [7:0] tmp_23_fu_1733_p3;
wire   [10:0] zext_ln75_fu_1729_p1;
wire   [10:0] zext_ln75_1_fu_1741_p1;
wire   [5:0] select_ln75_fu_1691_p3;
wire   [10:0] zext_ln75_2_fu_1751_p1;
wire   [10:0] sub_ln75_fu_1745_p2;
wire   [10:0] add_ln75_fu_1755_p2;
wire   [0:0] icmp_ln89_fu_1810_p2;
wire   [8:0] i_8_fu_1804_p2;
wire   [11:0] tmp_24_fu_1832_p3;
wire   [9:0] tmp_25_fu_1844_p3;
wire   [12:0] zext_ln92_fu_1840_p1;
wire   [12:0] zext_ln92_1_fu_1852_p1;
wire   [5:0] select_ln92_fu_1816_p3;
wire   [3:0] tmp_39_fu_1866_p4;
wire   [12:0] zext_ln92_2_fu_1876_p1;
wire   [12:0] add_ln92_fu_1856_p2;
wire   [12:0] add_ln92_1_fu_1880_p2;
wire   [0:0] icmp_ln98_fu_1918_p2;
wire   [5:0] i_10_fu_1912_p2;
wire   [10:0] tmp_26_fu_1940_p3;
wire   [8:0] tmp_27_fu_1952_p3;
wire   [11:0] zext_ln101_1_fu_1960_p1;
wire   [11:0] zext_ln101_fu_1948_p1;
wire   [5:0] select_ln101_fu_1924_p3;
wire   [11:0] add_ln101_fu_1964_p2;
wire   [11:0] zext_ln101_2_fu_1970_p1;
wire   [11:0] add_ln101_1_fu_1974_p2;
wire   [0:0] icmp_ln115_fu_2026_p2;
wire   [8:0] i_13_fu_2020_p2;
wire   [11:0] tmp_28_fu_2048_p3;
wire   [9:0] tmp_29_fu_2060_p3;
wire   [12:0] zext_ln118_fu_2056_p1;
wire   [12:0] zext_ln118_1_fu_2068_p1;
wire   [5:0] select_ln118_fu_2032_p3;
wire   [3:0] tmp_40_fu_2082_p4;
wire   [12:0] zext_ln118_2_fu_2092_p1;
wire   [12:0] add_ln118_fu_2072_p2;
wire   [12:0] add_ln118_1_fu_2096_p2;
wire   [0:0] icmp_ln124_fu_2134_p2;
wire   [5:0] i_15_fu_2128_p2;
wire   [10:0] tmp_30_fu_2156_p3;
wire   [8:0] tmp_31_fu_2168_p3;
wire   [11:0] zext_ln127_1_fu_2176_p1;
wire   [11:0] zext_ln127_fu_2164_p1;
wire   [5:0] select_ln127_fu_2140_p3;
wire   [11:0] add_ln127_fu_2180_p2;
wire   [11:0] zext_ln127_2_fu_2186_p1;
wire   [11:0] add_ln127_1_fu_2190_p2;
wire   [0:0] icmp_ln141_fu_2242_p2;
wire   [8:0] i_18_fu_2236_p2;
wire   [11:0] tmp_32_fu_2264_p3;
wire   [9:0] tmp_33_fu_2276_p3;
wire   [12:0] zext_ln144_fu_2272_p1;
wire   [12:0] zext_ln144_1_fu_2284_p1;
wire   [5:0] select_ln144_fu_2248_p3;
wire   [3:0] tmp_41_fu_2298_p4;
wire   [12:0] zext_ln144_2_fu_2308_p1;
wire   [12:0] add_ln144_fu_2288_p2;
wire   [12:0] add_ln144_1_fu_2312_p2;
wire   [0:0] icmp_ln150_fu_2350_p2;
wire   [5:0] i_20_fu_2344_p2;
wire   [10:0] tmp_34_fu_2372_p3;
wire   [8:0] tmp_35_fu_2384_p3;
wire   [11:0] zext_ln153_1_fu_2392_p1;
wire   [11:0] zext_ln153_fu_2380_p1;
wire   [5:0] select_ln153_fu_2356_p3;
wire   [11:0] add_ln153_fu_2396_p2;
wire   [11:0] zext_ln153_2_fu_2402_p1;
wire   [11:0] add_ln153_1_fu_2406_p2;
wire   [0:0] icmp_ln167_fu_2458_p2;
wire   [5:0] i_23_fu_2452_p2;
wire   [11:0] tmp_36_fu_2480_p3;
wire   [6:0] select_ln170_fu_2464_p3;
wire   [12:0] zext_ln170_fu_2492_p1;
wire   [12:0] zext_ln167_fu_2488_p1;
wire   [12:0] add_ln170_fu_2496_p2;
wire   [0:0] icmp_ln185_fu_2548_p2;
wire   [6:0] i_26_fu_2542_p2;
wire   [8:0] tmp_38_fu_2578_p3;
wire   [10:0] tmp_37_fu_2570_p3;
wire   [10:0] zext_ln188_fu_2586_p1;
wire   [3:0] select_ln188_fu_2554_p3;
wire   [10:0] sub_ln188_fu_2590_p2;
wire   [10:0] zext_ln188_1_fu_2596_p1;
wire   [10:0] add_ln188_fu_2600_p2;
wire    ap_CS_fsm_state39;
reg   [38:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 39'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        i11_0_reg_1037 <= 6'd0;
    end else if ((~((icmp_ln97_fu_1900_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln97_fu_1900_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
        i11_0_reg_1037 <= select_ln101_1_fu_1932_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        i13_0_reg_1059 <= 6'd0;
    end else if ((~((icmp_ln106_fu_1991_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln106_fu_1991_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        i13_0_reg_1059 <= i_11_fu_1997_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        i14_0_reg_1081 <= 9'd0;
    end else if ((~((icmp_ln114_fu_2008_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln114_fu_2008_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        i14_0_reg_1081 <= select_ln118_1_fu_2040_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        i16_0_reg_1114 <= 6'd0;
    end else if ((~((icmp_ln123_fu_2116_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln123_fu_2116_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        i16_0_reg_1114 <= select_ln127_1_fu_2148_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        i18_0_reg_1136 <= 6'd0;
    end else if ((~((icmp_ln132_fu_2207_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln132_fu_2207_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
        i18_0_reg_1136 <= i_16_fu_2213_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        i19_0_reg_1158 <= 9'd0;
    end else if ((~((icmp_ln140_fu_2224_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln140_fu_2224_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state26))) begin
        i19_0_reg_1158 <= select_ln144_1_fu_2256_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        i21_0_reg_1191 <= 6'd0;
    end else if ((~((icmp_ln149_fu_2332_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln149_fu_2332_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state28))) begin
        i21_0_reg_1191 <= select_ln153_1_fu_2364_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        i23_0_reg_1213 <= 6'd0;
    end else if ((~((icmp_ln158_fu_2423_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln158_fu_2423_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state30))) begin
        i23_0_reg_1213 <= i_21_fu_2429_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        i24_0_reg_1235 <= 6'd0;
    end else if ((~((icmp_ln166_fu_2440_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln166_fu_2440_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state32))) begin
        i24_0_reg_1235 <= select_ln170_1_fu_2472_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        i26_0_reg_1257 <= 7'd0;
    end else if ((~((icmp_ln176_fu_2513_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln176_fu_2513_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state34))) begin
        i26_0_reg_1257 <= i_24_fu_2519_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        i27_0_reg_1279 <= 7'd0;
    end else if ((~((icmp_ln184_fu_2530_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln184_fu_2530_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state36))) begin
        i27_0_reg_1279 <= select_ln188_1_fu_2562_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        i29_0_reg_1301 <= 4'd0;
    end else if ((~((icmp_ln193_fu_2617_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln193_fu_2617_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state38))) begin
        i29_0_reg_1301 <= i_27_fu_2623_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        i3_0_reg_883 <= 6'd0;
    end else if ((~((icmp_ln53_fu_1460_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln53_fu_1460_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        i3_0_reg_883 <= i_1_fu_1466_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        i4_0_reg_905 <= 3'd0;
    end else if ((~((icmp_ln60_fu_1477_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln60_fu_1477_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        i4_0_reg_905 <= select_ln65_1_fu_1509_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        i6_0_reg_960 <= 6'd0;
    end else if ((~((icmp_ln71_fu_1667_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln71_fu_1667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        i6_0_reg_960 <= select_ln75_1_fu_1699_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        i8_0_reg_982 <= 6'd0;
    end else if ((~((icmp_ln80_fu_1775_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln80_fu_1775_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        i8_0_reg_982 <= i_6_fu_1781_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        i9_0_reg_1004 <= 9'd0;
    end else if ((~((icmp_ln88_fu_1792_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln88_fu_1792_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        i9_0_reg_1004 <= select_ln92_1_fu_1824_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln35_fu_1353_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln35_fu_1353_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_0_reg_850 <= select_ln39_1_fu_1385_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_850 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        indvar_flatten20_reg_894 <= 9'd0;
    end else if ((~((icmp_ln60_fu_1477_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln60_fu_1477_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        indvar_flatten20_reg_894 <= add_ln60_fu_1483_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        indvar_flatten27_reg_949 <= 12'd0;
    end else if ((~((icmp_ln71_fu_1667_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln71_fu_1667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        indvar_flatten27_reg_949 <= add_ln71_fu_1673_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        indvar_flatten34_reg_993 <= 14'd0;
    end else if ((~((icmp_ln88_fu_1792_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln88_fu_1792_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        indvar_flatten34_reg_993 <= add_ln88_fu_1798_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        indvar_flatten41_reg_1026 <= 11'd0;
    end else if ((~((icmp_ln97_fu_1900_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln97_fu_1900_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
        indvar_flatten41_reg_1026 <= add_ln97_fu_1906_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        indvar_flatten48_reg_1070 <= 14'd0;
    end else if ((~((icmp_ln114_fu_2008_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln114_fu_2008_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        indvar_flatten48_reg_1070 <= add_ln114_fu_2014_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        indvar_flatten55_reg_1103 <= 11'd0;
    end else if ((~((icmp_ln123_fu_2116_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln123_fu_2116_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        indvar_flatten55_reg_1103 <= add_ln123_fu_2122_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        indvar_flatten62_reg_1147 <= 14'd0;
    end else if ((~((icmp_ln140_fu_2224_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln140_fu_2224_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state26))) begin
        indvar_flatten62_reg_1147 <= add_ln140_fu_2230_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        indvar_flatten69_reg_1180 <= 11'd0;
    end else if ((~((icmp_ln149_fu_2332_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln149_fu_2332_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state28))) begin
        indvar_flatten69_reg_1180 <= add_ln149_fu_2338_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        indvar_flatten6_reg_916 <= 8'd0;
    end else if ((~((icmp_ln60_fu_1477_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln60_fu_1477_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        indvar_flatten6_reg_916 <= select_ln61_fu_1659_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        indvar_flatten76_reg_1224 <= 12'd0;
    end else if ((~((icmp_ln166_fu_2440_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln166_fu_2440_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state32))) begin
        indvar_flatten76_reg_1224 <= add_ln166_fu_2446_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        indvar_flatten83_reg_1268 <= 10'd0;
    end else if ((~((icmp_ln184_fu_2530_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln184_fu_2530_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state36))) begin
        indvar_flatten83_reg_1268 <= add_ln184_fu_2536_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln35_fu_1353_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln35_fu_1353_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten_reg_839 <= add_ln35_fu_1359_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_839 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        j10_0_reg_1015 <= 6'd0;
    end else if ((~((icmp_ln88_fu_1792_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln88_fu_1792_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        j10_0_reg_1015 <= j_4_fu_1894_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        j12_0_reg_1048 <= 6'd0;
    end else if ((~((icmp_ln97_fu_1900_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln97_fu_1900_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
        j12_0_reg_1048 <= j_3_fu_1985_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        j15_0_reg_1092 <= 6'd0;
    end else if ((~((icmp_ln114_fu_2008_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln114_fu_2008_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        j15_0_reg_1092 <= j_6_fu_2110_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        j17_0_reg_1125 <= 6'd0;
    end else if ((~((icmp_ln123_fu_2116_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln123_fu_2116_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        j17_0_reg_1125 <= j_5_fu_2201_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        j20_0_reg_1169 <= 6'd0;
    end else if ((~((icmp_ln140_fu_2224_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln140_fu_2224_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state26))) begin
        j20_0_reg_1169 <= j_8_fu_2326_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        j22_0_reg_1202 <= 6'd0;
    end else if ((~((icmp_ln149_fu_2332_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln149_fu_2332_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state28))) begin
        j22_0_reg_1202 <= j_7_fu_2417_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        j25_0_reg_1246 <= 7'd0;
    end else if ((~((icmp_ln166_fu_2440_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln166_fu_2440_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state32))) begin
        j25_0_reg_1246 <= j_9_fu_2507_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        j28_0_reg_1290 <= 4'd0;
    end else if ((~((icmp_ln184_fu_2530_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln184_fu_2530_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state36))) begin
        j28_0_reg_1290 <= j_10_fu_2611_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        j2_0_0_reg_872 <= 6'd0;
    end else if ((~((icmp_ln45_fu_1426_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln45_fu_1426_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        j2_0_0_reg_872 <= add_ln45_fu_1432_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        j5_0_reg_927 <= 2'd0;
    end else if ((~((icmp_ln60_fu_1477_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln60_fu_1477_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        j5_0_reg_927 <= select_ln65_3_fu_1567_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        j7_0_reg_971 <= 6'd0;
    end else if ((~((icmp_ln71_fu_1667_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln71_fu_1667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        j7_0_reg_971 <= j_2_fu_1769_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln35_fu_1353_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln35_fu_1353_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_0_reg_861 <= j_fu_1420_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        j_0_reg_861 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        k_0_reg_938 <= 6'd0;
    end else if ((~((icmp_ln60_fu_1477_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln60_fu_1477_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        k_0_reg_938 <= k_fu_1647_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln158_fu_2423_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state30))) begin
        bias_h_ce0 = 1'b1;
    end else begin
        bias_h_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln158_fu_2423_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln158_fu_2423_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state30))) begin
        bias_h_we0 = 1'b1;
    end else begin
        bias_h_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln106_fu_1991_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state18))) begin
        bias_r_ce0 = 1'b1;
    end else begin
        bias_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln106_fu_1991_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln106_fu_1991_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        bias_r_we0 = 1'b1;
    end else begin
        bias_r_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln132_fu_2207_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state24))) begin
        bias_z_ce0 = 1'b1;
    end else begin
        bias_z_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln132_fu_2207_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln132_fu_2207_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
        bias_z_we0 = 1'b1;
    end else begin
        bias_z_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln53_fu_1460_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
        bn_bias1_ce0 = 1'b1;
    end else begin
        bn_bias1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln53_fu_1460_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln53_fu_1460_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        bn_bias1_we0 = 1'b1;
    end else begin
        bn_bias1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln80_fu_1775_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state12))) begin
        bn_bias2_ce0 = 1'b1;
    end else begin
        bn_bias2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln80_fu_1775_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln80_fu_1775_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        bn_bias2_we0 = 1'b1;
    end else begin
        bn_bias2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln35_fu_1353_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        dw_weight1_ce0 = 1'b1;
    end else begin
        dw_weight1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln35_fu_1353_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln35_fu_1353_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        dw_weight1_we0 = 1'b1;
    end else begin
        dw_weight1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln60_fu_1477_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state8))) begin
        dw_weight2_0_ce1 = 1'b1;
    end else begin
        dw_weight2_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln60_fu_1477_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (trunc_ln65_1_fu_1615_p1 == 2'd0) & (icmp_ln60_fu_1477_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        dw_weight2_0_we1 = 1'b1;
    end else begin
        dw_weight2_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln60_fu_1477_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state8))) begin
        dw_weight2_1_ce1 = 1'b1;
    end else begin
        dw_weight2_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln60_fu_1477_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (trunc_ln65_1_fu_1615_p1 == 2'd1) & (icmp_ln60_fu_1477_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        dw_weight2_1_we1 = 1'b1;
    end else begin
        dw_weight2_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln60_fu_1477_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state8))) begin
        dw_weight2_2_ce1 = 1'b1;
    end else begin
        dw_weight2_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln60_fu_1477_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (trunc_ln65_1_fu_1615_p1 == 2'd2) & (icmp_ln60_fu_1477_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        dw_weight2_2_we1 = 1'b1;
    end else begin
        dw_weight2_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln60_fu_1477_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state8))) begin
        dw_weight2_3_ce1 = 1'b1;
    end else begin
        dw_weight2_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln60_fu_1477_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (trunc_ln65_1_fu_1615_p1 == 2'd3) & (icmp_ln60_fu_1477_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        dw_weight2_3_we1 = 1'b1;
    end else begin
        dw_weight2_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln176_fu_2513_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state34))) begin
        fc_bias1_ce0 = 1'b1;
    end else begin
        fc_bias1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln176_fu_2513_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln176_fu_2513_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state34))) begin
        fc_bias1_we0 = 1'b1;
    end else begin
        fc_bias1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln193_fu_2617_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state38))) begin
        fc_bias2_ce0 = 1'b1;
    end else begin
        fc_bias2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln193_fu_2617_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln193_fu_2617_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state38))) begin
        fc_bias2_we0 = 1'b1;
    end else begin
        fc_bias2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln166_fu_2440_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state32))) begin
        fc_weights1_ce0 = 1'b1;
    end else begin
        fc_weights1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln166_fu_2440_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln166_fu_2440_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state32))) begin
        fc_weights1_we0 = 1'b1;
    end else begin
        fc_weights1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln184_fu_2530_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state36))) begin
        fc_weights2_ce0 = 1'b1;
    end else begin
        fc_weights2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln184_fu_2530_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln184_fu_2530_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state36))) begin
        fc_weights2_we0 = 1'b1;
    end else begin
        fc_weights2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln45_fu_1426_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        pw_weight1_0_ce0 = 1'b1;
    end else begin
        pw_weight1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln45_fu_1426_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (trunc_ln48_fu_1438_p1 == 2'd0) & (icmp_ln45_fu_1426_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        pw_weight1_0_we0 = 1'b1;
    end else begin
        pw_weight1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln45_fu_1426_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        pw_weight1_1_ce0 = 1'b1;
    end else begin
        pw_weight1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln45_fu_1426_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (trunc_ln48_fu_1438_p1 == 2'd1) & (icmp_ln45_fu_1426_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        pw_weight1_1_we0 = 1'b1;
    end else begin
        pw_weight1_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln45_fu_1426_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        pw_weight1_2_ce0 = 1'b1;
    end else begin
        pw_weight1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln45_fu_1426_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (trunc_ln48_fu_1438_p1 == 2'd2) & (icmp_ln45_fu_1426_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        pw_weight1_2_we0 = 1'b1;
    end else begin
        pw_weight1_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln45_fu_1426_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        pw_weight1_3_ce0 = 1'b1;
    end else begin
        pw_weight1_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln45_fu_1426_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (trunc_ln48_fu_1438_p1 == 2'd3) & (icmp_ln45_fu_1426_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        pw_weight1_3_we0 = 1'b1;
    end else begin
        pw_weight1_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln71_fu_1667_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state10))) begin
        pw_weight2_0_ce0 = 1'b1;
    end else begin
        pw_weight2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln71_fu_1667_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (trunc_ln75_fu_1707_p1 == 2'd0) & (icmp_ln71_fu_1667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        pw_weight2_0_we0 = 1'b1;
    end else begin
        pw_weight2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln71_fu_1667_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state10))) begin
        pw_weight2_1_ce0 = 1'b1;
    end else begin
        pw_weight2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln71_fu_1667_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (trunc_ln75_fu_1707_p1 == 2'd1) & (icmp_ln71_fu_1667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        pw_weight2_1_we0 = 1'b1;
    end else begin
        pw_weight2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln71_fu_1667_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state10))) begin
        pw_weight2_2_ce0 = 1'b1;
    end else begin
        pw_weight2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln71_fu_1667_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (trunc_ln75_fu_1707_p1 == 2'd2) & (icmp_ln71_fu_1667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        pw_weight2_2_we0 = 1'b1;
    end else begin
        pw_weight2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln71_fu_1667_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state10))) begin
        pw_weight2_3_ce0 = 1'b1;
    end else begin
        pw_weight2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln71_fu_1667_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (trunc_ln75_fu_1707_p1 == 2'd3) & (icmp_ln71_fu_1667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        pw_weight2_3_we0 = 1'b1;
    end else begin
        pw_weight2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln193_fu_2617_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state38)) | ((icmp_ln184_fu_2530_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state36)) | ((icmp_ln176_fu_2513_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state34)) | ((icmp_ln166_fu_2440_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state32)) | ((icmp_ln158_fu_2423_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state30)) | ((icmp_ln149_fu_2332_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state28)) | ((icmp_ln140_fu_2224_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state26)) | ((icmp_ln132_fu_2207_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24)) | ((icmp_ln123_fu_2116_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22)) | ((icmp_ln114_fu_2008_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20)) | ((icmp_ln106_fu_1991_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18)) | ((icmp_ln97_fu_1900_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16)) | ((icmp_ln88_fu_1792_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14)) | ((icmp_ln80_fu_1775_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12)) | ((icmp_ln71_fu_1667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10)) | ((icmp_ln60_fu_1477_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8)) | ((icmp_ln53_fu_1460_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6)) | ((icmp_ln45_fu_1426_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((icmp_ln35_fu_1353_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        weight_in_TDATA_blk_n = weight_in_TVALID;
    end else begin
        weight_in_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((icmp_ln193_fu_2617_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln193_fu_2617_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state38)) | (~((icmp_ln184_fu_2530_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln184_fu_2530_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state36)) | (~((icmp_ln176_fu_2513_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln176_fu_2513_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state34)) | (~((icmp_ln166_fu_2440_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln166_fu_2440_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state32)) | (~((icmp_ln158_fu_2423_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln158_fu_2423_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state30)) | (~((icmp_ln149_fu_2332_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln149_fu_2332_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state28)) | (~((icmp_ln140_fu_2224_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln140_fu_2224_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state26)) | (~((icmp_ln132_fu_2207_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln132_fu_2207_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24)) | (~((icmp_ln123_fu_2116_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln123_fu_2116_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22)) | (~((icmp_ln114_fu_2008_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln114_fu_2008_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20)) | (~((icmp_ln106_fu_1991_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln106_fu_1991_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18)) | (~((icmp_ln97_fu_1900_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln97_fu_1900_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16)) | (~((icmp_ln88_fu_1792_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln88_fu_1792_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14)) | (~((icmp_ln80_fu_1775_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln80_fu_1775_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12)) | (~((icmp_ln71_fu_1667_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln71_fu_1667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10)) | (~((icmp_ln60_fu_1477_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln60_fu_1477_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8)) | (~((icmp_ln53_fu_1460_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln53_fu_1460_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6)) | (~((icmp_ln45_fu_1426_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln45_fu_1426_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | (~((icmp_ln35_fu_1353_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln35_fu_1353_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        weight_in_TREADY = 1'b1;
    end else begin
        weight_in_TREADY = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln140_fu_2224_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state26))) begin
        weights_hu_0_ce1 = 1'b1;
    end else begin
        weights_hu_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln140_fu_2224_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (trunc_ln144_fu_2294_p1 == 2'd0) & (icmp_ln140_fu_2224_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state26))) begin
        weights_hu_0_we1 = 1'b1;
    end else begin
        weights_hu_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln140_fu_2224_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state26))) begin
        weights_hu_1_ce1 = 1'b1;
    end else begin
        weights_hu_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln140_fu_2224_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (trunc_ln144_fu_2294_p1 == 2'd1) & (icmp_ln140_fu_2224_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state26))) begin
        weights_hu_1_we1 = 1'b1;
    end else begin
        weights_hu_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln140_fu_2224_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state26))) begin
        weights_hu_2_ce1 = 1'b1;
    end else begin
        weights_hu_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln140_fu_2224_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (trunc_ln144_fu_2294_p1 == 2'd2) & (icmp_ln140_fu_2224_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state26))) begin
        weights_hu_2_we1 = 1'b1;
    end else begin
        weights_hu_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln140_fu_2224_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state26))) begin
        weights_hu_3_ce1 = 1'b1;
    end else begin
        weights_hu_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln140_fu_2224_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (trunc_ln144_fu_2294_p1 == 2'd3) & (icmp_ln140_fu_2224_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state26))) begin
        weights_hu_3_we1 = 1'b1;
    end else begin
        weights_hu_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln149_fu_2332_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state28))) begin
        weights_hw_ce1 = 1'b1;
    end else begin
        weights_hw_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln149_fu_2332_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln149_fu_2332_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state28))) begin
        weights_hw_we1 = 1'b1;
    end else begin
        weights_hw_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln88_fu_1792_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state14))) begin
        weights_ru_0_ce1 = 1'b1;
    end else begin
        weights_ru_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln88_fu_1792_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (trunc_ln92_fu_1862_p1 == 2'd0) & (icmp_ln88_fu_1792_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        weights_ru_0_we1 = 1'b1;
    end else begin
        weights_ru_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln88_fu_1792_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state14))) begin
        weights_ru_1_ce1 = 1'b1;
    end else begin
        weights_ru_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln88_fu_1792_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (trunc_ln92_fu_1862_p1 == 2'd1) & (icmp_ln88_fu_1792_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        weights_ru_1_we1 = 1'b1;
    end else begin
        weights_ru_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln88_fu_1792_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state14))) begin
        weights_ru_2_ce1 = 1'b1;
    end else begin
        weights_ru_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln88_fu_1792_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (trunc_ln92_fu_1862_p1 == 2'd2) & (icmp_ln88_fu_1792_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        weights_ru_2_we1 = 1'b1;
    end else begin
        weights_ru_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln88_fu_1792_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state14))) begin
        weights_ru_3_ce1 = 1'b1;
    end else begin
        weights_ru_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln88_fu_1792_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (trunc_ln92_fu_1862_p1 == 2'd3) & (icmp_ln88_fu_1792_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        weights_ru_3_we1 = 1'b1;
    end else begin
        weights_ru_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln97_fu_1900_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state16))) begin
        weights_rw_ce1 = 1'b1;
    end else begin
        weights_rw_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln97_fu_1900_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln97_fu_1900_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
        weights_rw_we1 = 1'b1;
    end else begin
        weights_rw_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln114_fu_2008_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state20))) begin
        weights_zu_0_ce1 = 1'b1;
    end else begin
        weights_zu_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln114_fu_2008_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (trunc_ln118_fu_2078_p1 == 2'd0) & (icmp_ln114_fu_2008_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        weights_zu_0_we1 = 1'b1;
    end else begin
        weights_zu_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln114_fu_2008_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state20))) begin
        weights_zu_1_ce1 = 1'b1;
    end else begin
        weights_zu_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln114_fu_2008_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (trunc_ln118_fu_2078_p1 == 2'd1) & (icmp_ln114_fu_2008_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        weights_zu_1_we1 = 1'b1;
    end else begin
        weights_zu_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln114_fu_2008_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state20))) begin
        weights_zu_2_ce1 = 1'b1;
    end else begin
        weights_zu_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln114_fu_2008_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (trunc_ln118_fu_2078_p1 == 2'd2) & (icmp_ln114_fu_2008_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        weights_zu_2_we1 = 1'b1;
    end else begin
        weights_zu_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln114_fu_2008_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state20))) begin
        weights_zu_3_ce1 = 1'b1;
    end else begin
        weights_zu_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln114_fu_2008_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (trunc_ln118_fu_2078_p1 == 2'd3) & (icmp_ln114_fu_2008_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        weights_zu_3_we1 = 1'b1;
    end else begin
        weights_zu_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln123_fu_2116_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state22))) begin
        weights_zw_ce1 = 1'b1;
    end else begin
        weights_zw_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln123_fu_2116_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln123_fu_2116_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        weights_zw_we1 = 1'b1;
    end else begin
        weights_zw_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((icmp_ln35_fu_1353_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln35_fu_1353_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if ((~((icmp_ln35_fu_1353_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln35_fu_1353_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if ((~((icmp_ln45_fu_1426_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln45_fu_1426_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else if ((~((icmp_ln45_fu_1426_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln45_fu_1426_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if ((~((icmp_ln53_fu_1460_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln53_fu_1460_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else if ((~((icmp_ln53_fu_1460_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln53_fu_1460_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if ((~((icmp_ln60_fu_1477_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln60_fu_1477_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else if ((~((icmp_ln60_fu_1477_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln60_fu_1477_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if ((~((icmp_ln71_fu_1667_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln71_fu_1667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else if ((~((icmp_ln71_fu_1667_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln71_fu_1667_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if ((~((icmp_ln80_fu_1775_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln80_fu_1775_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else if ((~((icmp_ln80_fu_1775_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln80_fu_1775_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if ((~((icmp_ln88_fu_1792_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln88_fu_1792_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else if ((~((icmp_ln88_fu_1792_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln88_fu_1792_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if ((~((icmp_ln97_fu_1900_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln97_fu_1900_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else if ((~((icmp_ln97_fu_1900_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln97_fu_1900_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if ((~((icmp_ln106_fu_1991_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln106_fu_1991_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else if ((~((icmp_ln106_fu_1991_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln106_fu_1991_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            if ((~((icmp_ln114_fu_2008_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln114_fu_2008_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else if ((~((icmp_ln114_fu_2008_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln114_fu_2008_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            if ((~((icmp_ln123_fu_2116_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln123_fu_2116_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else if ((~((icmp_ln123_fu_2116_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln123_fu_2116_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            if ((~((icmp_ln132_fu_2207_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln132_fu_2207_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else if ((~((icmp_ln132_fu_2207_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln132_fu_2207_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            if ((~((icmp_ln140_fu_2224_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln140_fu_2224_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else if ((~((icmp_ln140_fu_2224_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln140_fu_2224_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            if ((~((icmp_ln149_fu_2332_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln149_fu_2332_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else if ((~((icmp_ln149_fu_2332_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln149_fu_2332_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            if ((~((icmp_ln158_fu_2423_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln158_fu_2423_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state30))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else if ((~((icmp_ln158_fu_2423_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln158_fu_2423_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state30))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            if ((~((icmp_ln166_fu_2440_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln166_fu_2440_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else if ((~((icmp_ln166_fu_2440_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln166_fu_2440_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            if ((~((icmp_ln176_fu_2513_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln176_fu_2513_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state34))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else if ((~((icmp_ln176_fu_2513_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln176_fu_2513_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state34))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            if ((~((icmp_ln184_fu_2530_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln184_fu_2530_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state36))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else if ((~((icmp_ln184_fu_2530_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln184_fu_2530_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state36))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            if ((~((icmp_ln193_fu_2617_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln193_fu_2617_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state38))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else if ((~((icmp_ln193_fu_2617_p2 == 1'd0) & (weight_in_TVALID == 1'b0)) & (icmp_ln193_fu_2617_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state38))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln101_1_fu_1974_p2 = (add_ln101_fu_1964_p2 + zext_ln101_2_fu_1970_p1);

assign add_ln101_fu_1964_p2 = (zext_ln101_1_fu_1960_p1 + zext_ln101_fu_1948_p1);

assign add_ln114_fu_2014_p2 = (indvar_flatten48_reg_1070 + 14'd1);

assign add_ln118_1_fu_2096_p2 = (zext_ln118_2_fu_2092_p1 + add_ln118_fu_2072_p2);

assign add_ln118_fu_2072_p2 = (zext_ln118_fu_2056_p1 + zext_ln118_1_fu_2068_p1);

assign add_ln123_fu_2122_p2 = (indvar_flatten55_reg_1103 + 11'd1);

assign add_ln127_1_fu_2190_p2 = (add_ln127_fu_2180_p2 + zext_ln127_2_fu_2186_p1);

assign add_ln127_fu_2180_p2 = (zext_ln127_1_fu_2176_p1 + zext_ln127_fu_2164_p1);

assign add_ln140_fu_2230_p2 = (indvar_flatten62_reg_1147 + 14'd1);

assign add_ln144_1_fu_2312_p2 = (zext_ln144_2_fu_2308_p1 + add_ln144_fu_2288_p2);

assign add_ln144_fu_2288_p2 = (zext_ln144_fu_2272_p1 + zext_ln144_1_fu_2284_p1);

assign add_ln149_fu_2338_p2 = (indvar_flatten69_reg_1180 + 11'd1);

assign add_ln153_1_fu_2406_p2 = (add_ln153_fu_2396_p2 + zext_ln153_2_fu_2402_p1);

assign add_ln153_fu_2396_p2 = (zext_ln153_1_fu_2392_p1 + zext_ln153_fu_2380_p1);

assign add_ln166_fu_2446_p2 = (indvar_flatten76_reg_1224 + 12'd1);

assign add_ln170_fu_2496_p2 = (zext_ln170_fu_2492_p1 + zext_ln167_fu_2488_p1);

assign add_ln184_fu_2536_p2 = (indvar_flatten83_reg_1268 + 10'd1);

assign add_ln188_fu_2600_p2 = (sub_ln188_fu_2590_p2 + zext_ln188_1_fu_2596_p1);

assign add_ln35_fu_1359_p2 = (indvar_flatten_reg_839 + 4'd1);

assign add_ln39_fu_1409_p2 = (zext_ln39_fu_1405_p1 + zext_ln36_fu_1401_p1);

assign add_ln45_fu_1432_p2 = (j2_0_0_reg_872 + 6'd1);

assign add_ln60_fu_1483_p2 = (indvar_flatten20_reg_894 + 9'd1);

assign add_ln61_1_fu_1653_p2 = (indvar_flatten6_reg_916 + 8'd1);

assign add_ln65_1_fu_1633_p2 = (zext_ln65_3_fu_1629_p1 + sub_ln65_fu_1609_p2);

assign add_ln65_fu_1579_p2 = (zext_ln65_1_fu_1575_p1 + zext_ln65_fu_1525_p1);

assign add_ln71_fu_1673_p2 = (indvar_flatten27_reg_949 + 12'd1);

assign add_ln75_fu_1755_p2 = (zext_ln75_2_fu_1751_p1 + sub_ln75_fu_1745_p2);

assign add_ln88_fu_1798_p2 = (indvar_flatten34_reg_993 + 14'd1);

assign add_ln92_1_fu_1880_p2 = (zext_ln92_2_fu_1876_p1 + add_ln92_fu_1856_p2);

assign add_ln92_fu_1856_p2 = (zext_ln92_fu_1840_p1 + zext_ln92_1_fu_1852_p1);

assign add_ln97_fu_1906_p2 = (indvar_flatten41_reg_1026 + 11'd1);

assign and_ln65_fu_1541_p2 = (xor_ln65_fu_1529_p2 & icmp_ln62_fu_1535_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state10 = ((icmp_ln71_fu_1667_p2 == 1'd0) & (weight_in_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state12 = ((icmp_ln80_fu_1775_p2 == 1'd0) & (weight_in_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state14 = ((icmp_ln88_fu_1792_p2 == 1'd0) & (weight_in_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state16 = ((icmp_ln97_fu_1900_p2 == 1'd0) & (weight_in_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state18 = ((icmp_ln106_fu_1991_p2 == 1'd0) & (weight_in_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state2 = ((icmp_ln35_fu_1353_p2 == 1'd0) & (weight_in_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state20 = ((icmp_ln114_fu_2008_p2 == 1'd0) & (weight_in_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state22 = ((icmp_ln123_fu_2116_p2 == 1'd0) & (weight_in_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state24 = ((icmp_ln132_fu_2207_p2 == 1'd0) & (weight_in_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state26 = ((icmp_ln140_fu_2224_p2 == 1'd0) & (weight_in_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state28 = ((icmp_ln149_fu_2332_p2 == 1'd0) & (weight_in_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state30 = ((icmp_ln158_fu_2423_p2 == 1'd0) & (weight_in_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state32 = ((icmp_ln166_fu_2440_p2 == 1'd0) & (weight_in_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state34 = ((icmp_ln176_fu_2513_p2 == 1'd0) & (weight_in_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state36 = ((icmp_ln184_fu_2530_p2 == 1'd0) & (weight_in_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state38 = ((icmp_ln193_fu_2617_p2 == 1'd0) & (weight_in_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state4 = ((icmp_ln45_fu_1426_p2 == 1'd0) & (weight_in_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state6 = ((icmp_ln53_fu_1460_p2 == 1'd0) & (weight_in_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state8 = ((icmp_ln60_fu_1477_p2 == 1'd0) & (weight_in_TVALID == 1'b0));
end

assign bias_h_address0 = zext_ln161_fu_2435_p1;

assign bias_h_d0 = weight_in_TDATA;

assign bias_r_address0 = zext_ln109_fu_2003_p1;

assign bias_r_d0 = weight_in_TDATA;

assign bias_z_address0 = zext_ln135_fu_2219_p1;

assign bias_z_d0 = weight_in_TDATA;

assign bn_bias1_address0 = zext_ln56_fu_1472_p1;

assign bn_bias1_d0 = weight_in_TDATA;

assign bn_bias2_address0 = zext_ln83_fu_1787_p1;

assign bn_bias2_d0 = weight_in_TDATA;

assign dw_weight1_address0 = zext_ln39_1_fu_1415_p1;

assign dw_weight1_d0 = weight_in_TDATA;

assign dw_weight2_0_address1 = zext_ln65_4_fu_1639_p1;

assign dw_weight2_0_d1 = weight_in_TDATA;

assign dw_weight2_1_address1 = zext_ln65_4_fu_1639_p1;

assign dw_weight2_1_d1 = weight_in_TDATA;

assign dw_weight2_2_address1 = zext_ln65_4_fu_1639_p1;

assign dw_weight2_2_d1 = weight_in_TDATA;

assign dw_weight2_3_address1 = zext_ln65_4_fu_1639_p1;

assign dw_weight2_3_d1 = weight_in_TDATA;

assign fc_bias1_address0 = zext_ln179_fu_2525_p1;

assign fc_bias1_d0 = weight_in_TDATA;

assign fc_bias2_address0 = zext_ln196_fu_2629_p1;

assign fc_bias2_d0 = weight_in_TDATA;

assign fc_weights1_address0 = zext_ln170_1_fu_2502_p1;

assign fc_weights1_d0 = weight_in_TDATA;

assign fc_weights2_address0 = sext_ln188_fu_2606_p1;

assign fc_weights2_d0 = weight_in_TDATA;

assign i_10_fu_1912_p2 = (i11_0_reg_1037 + 6'd1);

assign i_11_fu_1997_p2 = (i13_0_reg_1059 + 6'd1);

assign i_13_fu_2020_p2 = (9'd1 + i14_0_reg_1081);

assign i_15_fu_2128_p2 = (i16_0_reg_1114 + 6'd1);

assign i_16_fu_2213_p2 = (i18_0_reg_1136 + 6'd1);

assign i_18_fu_2236_p2 = (9'd1 + i19_0_reg_1158);

assign i_1_fu_1466_p2 = (i3_0_reg_883 + 6'd1);

assign i_20_fu_2344_p2 = (i21_0_reg_1191 + 6'd1);

assign i_21_fu_2429_p2 = (i23_0_reg_1213 + 6'd1);

assign i_23_fu_2452_p2 = (i24_0_reg_1235 + 6'd1);

assign i_24_fu_2519_p2 = (i26_0_reg_1257 + 7'd1);

assign i_26_fu_2542_p2 = (i27_0_reg_1279 + 7'd1);

assign i_27_fu_2623_p2 = (i29_0_reg_1301 + 4'd1);

assign i_3_fu_1489_p2 = (3'd1 + i4_0_reg_905);

assign i_5_fu_1679_p2 = (6'd1 + i6_0_reg_960);

assign i_6_fu_1781_p2 = (i8_0_reg_982 + 6'd1);

assign i_8_fu_1804_p2 = (9'd1 + i9_0_reg_1004);

assign i_fu_1365_p2 = (i_0_reg_850 + 3'd1);

assign icmp_ln106_fu_1991_p2 = ((i13_0_reg_1059 == 6'd40) ? 1'b1 : 1'b0);

assign icmp_ln114_fu_2008_p2 = ((indvar_flatten48_reg_1070 == 14'd15360) ? 1'b1 : 1'b0);

assign icmp_ln115_fu_2026_p2 = ((j15_0_reg_1092 == 6'd40) ? 1'b1 : 1'b0);

assign icmp_ln123_fu_2116_p2 = ((indvar_flatten55_reg_1103 == 11'd1600) ? 1'b1 : 1'b0);

assign icmp_ln124_fu_2134_p2 = ((j17_0_reg_1125 == 6'd40) ? 1'b1 : 1'b0);

assign icmp_ln132_fu_2207_p2 = ((i18_0_reg_1136 == 6'd40) ? 1'b1 : 1'b0);

assign icmp_ln140_fu_2224_p2 = ((indvar_flatten62_reg_1147 == 14'd15360) ? 1'b1 : 1'b0);

assign icmp_ln141_fu_2242_p2 = ((j20_0_reg_1169 == 6'd40) ? 1'b1 : 1'b0);

assign icmp_ln149_fu_2332_p2 = ((indvar_flatten69_reg_1180 == 11'd1600) ? 1'b1 : 1'b0);

assign icmp_ln150_fu_2350_p2 = ((j22_0_reg_1202 == 6'd40) ? 1'b1 : 1'b0);

assign icmp_ln158_fu_2423_p2 = ((i23_0_reg_1213 == 6'd40) ? 1'b1 : 1'b0);

assign icmp_ln166_fu_2440_p2 = ((indvar_flatten76_reg_1224 == 12'd2560) ? 1'b1 : 1'b0);

assign icmp_ln167_fu_2458_p2 = ((j25_0_reg_1246 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln176_fu_2513_p2 = ((i26_0_reg_1257 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln184_fu_2530_p2 = ((indvar_flatten83_reg_1268 == 10'd768) ? 1'b1 : 1'b0);

assign icmp_ln185_fu_2548_p2 = ((j28_0_reg_1290 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln193_fu_2617_p2 = ((i29_0_reg_1301 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln35_fu_1353_p2 = ((indvar_flatten_reg_839 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln36_fu_1371_p2 = ((j_0_reg_861 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln45_fu_1426_p2 = ((j2_0_0_reg_872 == 6'd48) ? 1'b1 : 1'b0);

assign icmp_ln53_fu_1460_p2 = ((i3_0_reg_883 == 6'd48) ? 1'b1 : 1'b0);

assign icmp_ln60_fu_1477_p2 = ((indvar_flatten20_reg_894 == 9'd384) ? 1'b1 : 1'b0);

assign icmp_ln61_fu_1495_p2 = ((indvar_flatten6_reg_916 == 8'd96) ? 1'b1 : 1'b0);

assign icmp_ln62_fu_1535_p2 = ((k_0_reg_938 == 6'd48) ? 1'b1 : 1'b0);

assign icmp_ln71_fu_1667_p2 = ((indvar_flatten27_reg_949 == 12'd2304) ? 1'b1 : 1'b0);

assign icmp_ln72_fu_1685_p2 = ((j7_0_reg_971 == 6'd48) ? 1'b1 : 1'b0);

assign icmp_ln80_fu_1775_p2 = ((i8_0_reg_982 == 6'd48) ? 1'b1 : 1'b0);

assign icmp_ln88_fu_1792_p2 = ((indvar_flatten34_reg_993 == 14'd15360) ? 1'b1 : 1'b0);

assign icmp_ln89_fu_1810_p2 = ((j10_0_reg_1015 == 6'd40) ? 1'b1 : 1'b0);

assign icmp_ln97_fu_1900_p2 = ((indvar_flatten41_reg_1026 == 11'd1600) ? 1'b1 : 1'b0);

assign icmp_ln98_fu_1918_p2 = ((j12_0_reg_1048 == 6'd40) ? 1'b1 : 1'b0);

assign j_10_fu_2611_p2 = (select_ln188_fu_2554_p3 + 4'd1);

assign j_11_fu_1547_p2 = (2'd1 + select_ln65_fu_1501_p3);

assign j_2_fu_1769_p2 = (select_ln75_fu_1691_p3 + 6'd1);

assign j_3_fu_1985_p2 = (select_ln101_fu_1924_p3 + 6'd1);

assign j_4_fu_1894_p2 = (select_ln92_fu_1816_p3 + 6'd1);

assign j_5_fu_2201_p2 = (select_ln127_fu_2140_p3 + 6'd1);

assign j_6_fu_2110_p2 = (select_ln118_fu_2032_p3 + 6'd1);

assign j_7_fu_2417_p2 = (select_ln153_fu_2356_p3 + 6'd1);

assign j_8_fu_2326_p2 = (select_ln144_fu_2248_p3 + 6'd1);

assign j_9_fu_2507_p2 = (select_ln170_fu_2464_p3 + 7'd1);

assign j_fu_1420_p2 = (select_ln39_fu_1377_p3 + 2'd1);

assign k_fu_1647_p2 = (select_ln65_2_fu_1559_p3 + 6'd1);

assign lshr_ln_fu_1442_p4 = {{j2_0_0_reg_872[5:2]}};

assign or_ln65_fu_1553_p2 = (icmp_ln61_fu_1495_p2 | and_ln65_fu_1541_p2);

assign p_shl_cast_fu_1589_p3 = {{trunc_ln65_fu_1585_p1}, {4'd0}};

assign pw_weight1_0_address0 = zext_ln48_fu_1452_p1;

assign pw_weight1_0_d0 = weight_in_TDATA;

assign pw_weight1_1_address0 = zext_ln48_fu_1452_p1;

assign pw_weight1_1_d0 = weight_in_TDATA;

assign pw_weight1_2_address0 = zext_ln48_fu_1452_p1;

assign pw_weight1_2_d0 = weight_in_TDATA;

assign pw_weight1_3_address0 = zext_ln48_fu_1452_p1;

assign pw_weight1_3_d0 = weight_in_TDATA;

assign pw_weight2_0_address0 = sext_ln75_fu_1761_p1;

assign pw_weight2_0_d0 = weight_in_TDATA;

assign pw_weight2_1_address0 = sext_ln75_fu_1761_p1;

assign pw_weight2_1_d0 = weight_in_TDATA;

assign pw_weight2_2_address0 = sext_ln75_fu_1761_p1;

assign pw_weight2_2_d0 = weight_in_TDATA;

assign pw_weight2_3_address0 = sext_ln75_fu_1761_p1;

assign pw_weight2_3_d0 = weight_in_TDATA;

assign select_ln101_1_fu_1932_p3 = ((icmp_ln98_fu_1918_p2[0:0] === 1'b1) ? i_10_fu_1912_p2 : i11_0_reg_1037);

assign select_ln101_fu_1924_p3 = ((icmp_ln98_fu_1918_p2[0:0] === 1'b1) ? 6'd0 : j12_0_reg_1048);

assign select_ln118_1_fu_2040_p3 = ((icmp_ln115_fu_2026_p2[0:0] === 1'b1) ? i_13_fu_2020_p2 : i14_0_reg_1081);

assign select_ln118_fu_2032_p3 = ((icmp_ln115_fu_2026_p2[0:0] === 1'b1) ? 6'd0 : j15_0_reg_1092);

assign select_ln127_1_fu_2148_p3 = ((icmp_ln124_fu_2134_p2[0:0] === 1'b1) ? i_15_fu_2128_p2 : i16_0_reg_1114);

assign select_ln127_fu_2140_p3 = ((icmp_ln124_fu_2134_p2[0:0] === 1'b1) ? 6'd0 : j17_0_reg_1125);

assign select_ln144_1_fu_2256_p3 = ((icmp_ln141_fu_2242_p2[0:0] === 1'b1) ? i_18_fu_2236_p2 : i19_0_reg_1158);

assign select_ln144_fu_2248_p3 = ((icmp_ln141_fu_2242_p2[0:0] === 1'b1) ? 6'd0 : j20_0_reg_1169);

assign select_ln153_1_fu_2364_p3 = ((icmp_ln150_fu_2350_p2[0:0] === 1'b1) ? i_20_fu_2344_p2 : i21_0_reg_1191);

assign select_ln153_fu_2356_p3 = ((icmp_ln150_fu_2350_p2[0:0] === 1'b1) ? 6'd0 : j22_0_reg_1202);

assign select_ln170_1_fu_2472_p3 = ((icmp_ln167_fu_2458_p2[0:0] === 1'b1) ? i_23_fu_2452_p2 : i24_0_reg_1235);

assign select_ln170_fu_2464_p3 = ((icmp_ln167_fu_2458_p2[0:0] === 1'b1) ? 7'd0 : j25_0_reg_1246);

assign select_ln188_1_fu_2562_p3 = ((icmp_ln185_fu_2548_p2[0:0] === 1'b1) ? i_26_fu_2542_p2 : i27_0_reg_1279);

assign select_ln188_fu_2554_p3 = ((icmp_ln185_fu_2548_p2[0:0] === 1'b1) ? 4'd0 : j28_0_reg_1290);

assign select_ln39_1_fu_1385_p3 = ((icmp_ln36_fu_1371_p2[0:0] === 1'b1) ? i_fu_1365_p2 : i_0_reg_850);

assign select_ln39_fu_1377_p3 = ((icmp_ln36_fu_1371_p2[0:0] === 1'b1) ? 2'd0 : j_0_reg_861);

assign select_ln61_fu_1659_p3 = ((icmp_ln61_fu_1495_p2[0:0] === 1'b1) ? 8'd1 : add_ln61_1_fu_1653_p2);

assign select_ln65_1_fu_1509_p3 = ((icmp_ln61_fu_1495_p2[0:0] === 1'b1) ? i_3_fu_1489_p2 : i4_0_reg_905);

assign select_ln65_2_fu_1559_p3 = ((or_ln65_fu_1553_p2[0:0] === 1'b1) ? 6'd0 : k_0_reg_938);

assign select_ln65_3_fu_1567_p3 = ((and_ln65_fu_1541_p2[0:0] === 1'b1) ? j_11_fu_1547_p2 : select_ln65_fu_1501_p3);

assign select_ln65_fu_1501_p3 = ((icmp_ln61_fu_1495_p2[0:0] === 1'b1) ? 2'd0 : j5_0_reg_927);

assign select_ln75_1_fu_1699_p3 = ((icmp_ln72_fu_1685_p2[0:0] === 1'b1) ? i_5_fu_1679_p2 : i6_0_reg_960);

assign select_ln75_fu_1691_p3 = ((icmp_ln72_fu_1685_p2[0:0] === 1'b1) ? 6'd0 : j7_0_reg_971);

assign select_ln92_1_fu_1824_p3 = ((icmp_ln89_fu_1810_p2[0:0] === 1'b1) ? i_8_fu_1804_p2 : i9_0_reg_1004);

assign select_ln92_fu_1816_p3 = ((icmp_ln89_fu_1810_p2[0:0] === 1'b1) ? 6'd0 : j10_0_reg_1015);

assign sext_ln188_fu_2606_p1 = $signed(add_ln188_fu_2600_p2);

assign sext_ln75_fu_1761_p1 = $signed(add_ln75_fu_1755_p2);

assign sub_ln188_fu_2590_p2 = (tmp_37_fu_2570_p3 - zext_ln188_fu_2586_p1);

assign sub_ln65_fu_1609_p2 = (p_shl_cast_fu_1589_p3 - zext_ln65_2_fu_1605_p1);

assign sub_ln75_fu_1745_p2 = (zext_ln75_fu_1729_p1 - zext_ln75_1_fu_1741_p1);

assign tmp_18_fu_1393_p3 = {{select_ln39_1_fu_1385_p3}, {1'd0}};

assign tmp_19_fu_1517_p3 = {{select_ln65_1_fu_1509_p3}, {1'd0}};

assign tmp_20_fu_1597_p3 = {{add_ln65_fu_1579_p2}, {2'd0}};

assign tmp_21_fu_1619_p4 = {{select_ln65_2_fu_1559_p3[5:2]}};

assign tmp_22_fu_1721_p3 = {{zext_ln75_1_mid2_v_fu_1711_p4}, {6'd0}};

assign tmp_23_fu_1733_p3 = {{zext_ln75_1_mid2_v_fu_1711_p4}, {4'd0}};

assign tmp_24_fu_1832_p3 = {{select_ln92_1_fu_1824_p3}, {3'd0}};

assign tmp_25_fu_1844_p3 = {{select_ln92_1_fu_1824_p3}, {1'd0}};

assign tmp_26_fu_1940_p3 = {{select_ln101_1_fu_1932_p3}, {5'd0}};

assign tmp_27_fu_1952_p3 = {{select_ln101_1_fu_1932_p3}, {3'd0}};

assign tmp_28_fu_2048_p3 = {{select_ln118_1_fu_2040_p3}, {3'd0}};

assign tmp_29_fu_2060_p3 = {{select_ln118_1_fu_2040_p3}, {1'd0}};

assign tmp_30_fu_2156_p3 = {{select_ln127_1_fu_2148_p3}, {5'd0}};

assign tmp_31_fu_2168_p3 = {{select_ln127_1_fu_2148_p3}, {3'd0}};

assign tmp_32_fu_2264_p3 = {{select_ln144_1_fu_2256_p3}, {3'd0}};

assign tmp_33_fu_2276_p3 = {{select_ln144_1_fu_2256_p3}, {1'd0}};

assign tmp_34_fu_2372_p3 = {{select_ln153_1_fu_2364_p3}, {5'd0}};

assign tmp_35_fu_2384_p3 = {{select_ln153_1_fu_2364_p3}, {3'd0}};

assign tmp_36_fu_2480_p3 = {{select_ln170_1_fu_2472_p3}, {6'd0}};

assign tmp_37_fu_2570_p3 = {{select_ln188_1_fu_2562_p3}, {4'd0}};

assign tmp_38_fu_2578_p3 = {{select_ln188_1_fu_2562_p3}, {2'd0}};

assign tmp_39_fu_1866_p4 = {{select_ln92_fu_1816_p3[5:2]}};

assign tmp_40_fu_2082_p4 = {{select_ln118_fu_2032_p3[5:2]}};

assign tmp_41_fu_2298_p4 = {{select_ln144_fu_2248_p3[5:2]}};

assign trunc_ln118_fu_2078_p1 = select_ln118_fu_2032_p3[1:0];

assign trunc_ln144_fu_2294_p1 = select_ln144_fu_2248_p3[1:0];

assign trunc_ln48_fu_1438_p1 = j2_0_0_reg_872[1:0];

assign trunc_ln65_1_fu_1615_p1 = select_ln65_2_fu_1559_p3[1:0];

assign trunc_ln65_fu_1585_p1 = add_ln65_fu_1579_p2[3:0];

assign trunc_ln75_fu_1707_p1 = select_ln75_1_fu_1699_p3[1:0];

assign trunc_ln92_fu_1862_p1 = select_ln92_fu_1816_p3[1:0];

assign weights_hu_0_address1 = zext_ln144_3_fu_2318_p1;

assign weights_hu_0_d1 = weight_in_TDATA;

assign weights_hu_1_address1 = zext_ln144_3_fu_2318_p1;

assign weights_hu_1_d1 = weight_in_TDATA;

assign weights_hu_2_address1 = zext_ln144_3_fu_2318_p1;

assign weights_hu_2_d1 = weight_in_TDATA;

assign weights_hu_3_address1 = zext_ln144_3_fu_2318_p1;

assign weights_hu_3_d1 = weight_in_TDATA;

assign weights_hw_address1 = zext_ln153_3_fu_2412_p1;

assign weights_hw_d1 = weight_in_TDATA;

assign weights_ru_0_address1 = zext_ln92_3_fu_1886_p1;

assign weights_ru_0_d1 = weight_in_TDATA;

assign weights_ru_1_address1 = zext_ln92_3_fu_1886_p1;

assign weights_ru_1_d1 = weight_in_TDATA;

assign weights_ru_2_address1 = zext_ln92_3_fu_1886_p1;

assign weights_ru_2_d1 = weight_in_TDATA;

assign weights_ru_3_address1 = zext_ln92_3_fu_1886_p1;

assign weights_ru_3_d1 = weight_in_TDATA;

assign weights_rw_address1 = zext_ln101_3_fu_1980_p1;

assign weights_rw_d1 = weight_in_TDATA;

assign weights_zu_0_address1 = zext_ln118_3_fu_2102_p1;

assign weights_zu_0_d1 = weight_in_TDATA;

assign weights_zu_1_address1 = zext_ln118_3_fu_2102_p1;

assign weights_zu_1_d1 = weight_in_TDATA;

assign weights_zu_2_address1 = zext_ln118_3_fu_2102_p1;

assign weights_zu_2_d1 = weight_in_TDATA;

assign weights_zu_3_address1 = zext_ln118_3_fu_2102_p1;

assign weights_zu_3_d1 = weight_in_TDATA;

assign weights_zw_address1 = zext_ln127_3_fu_2196_p1;

assign weights_zw_d1 = weight_in_TDATA;

assign xor_ln65_fu_1529_p2 = (icmp_ln61_fu_1495_p2 ^ 1'd1);

assign zext_ln101_1_fu_1960_p1 = tmp_27_fu_1952_p3;

assign zext_ln101_2_fu_1970_p1 = select_ln101_fu_1924_p3;

assign zext_ln101_3_fu_1980_p1 = add_ln101_1_fu_1974_p2;

assign zext_ln101_fu_1948_p1 = tmp_26_fu_1940_p3;

assign zext_ln109_fu_2003_p1 = i13_0_reg_1059;

assign zext_ln118_1_fu_2068_p1 = tmp_29_fu_2060_p3;

assign zext_ln118_2_fu_2092_p1 = tmp_40_fu_2082_p4;

assign zext_ln118_3_fu_2102_p1 = add_ln118_1_fu_2096_p2;

assign zext_ln118_fu_2056_p1 = tmp_28_fu_2048_p3;

assign zext_ln127_1_fu_2176_p1 = tmp_31_fu_2168_p3;

assign zext_ln127_2_fu_2186_p1 = select_ln127_fu_2140_p3;

assign zext_ln127_3_fu_2196_p1 = add_ln127_1_fu_2190_p2;

assign zext_ln127_fu_2164_p1 = tmp_30_fu_2156_p3;

assign zext_ln135_fu_2219_p1 = i18_0_reg_1136;

assign zext_ln144_1_fu_2284_p1 = tmp_33_fu_2276_p3;

assign zext_ln144_2_fu_2308_p1 = tmp_41_fu_2298_p4;

assign zext_ln144_3_fu_2318_p1 = add_ln144_1_fu_2312_p2;

assign zext_ln144_fu_2272_p1 = tmp_32_fu_2264_p3;

assign zext_ln153_1_fu_2392_p1 = tmp_35_fu_2384_p3;

assign zext_ln153_2_fu_2402_p1 = select_ln153_fu_2356_p3;

assign zext_ln153_3_fu_2412_p1 = add_ln153_1_fu_2406_p2;

assign zext_ln153_fu_2380_p1 = tmp_34_fu_2372_p3;

assign zext_ln161_fu_2435_p1 = i23_0_reg_1213;

assign zext_ln167_fu_2488_p1 = tmp_36_fu_2480_p3;

assign zext_ln170_1_fu_2502_p1 = add_ln170_fu_2496_p2;

assign zext_ln170_fu_2492_p1 = select_ln170_fu_2464_p3;

assign zext_ln179_fu_2525_p1 = i26_0_reg_1257;

assign zext_ln188_1_fu_2596_p1 = select_ln188_fu_2554_p3;

assign zext_ln188_fu_2586_p1 = tmp_38_fu_2578_p3;

assign zext_ln196_fu_2629_p1 = i29_0_reg_1301;

assign zext_ln36_fu_1401_p1 = tmp_18_fu_1393_p3;

assign zext_ln39_1_fu_1415_p1 = add_ln39_fu_1409_p2;

assign zext_ln39_fu_1405_p1 = select_ln39_fu_1377_p3;

assign zext_ln48_fu_1452_p1 = lshr_ln_fu_1442_p4;

assign zext_ln56_fu_1472_p1 = i3_0_reg_883;

assign zext_ln65_1_fu_1575_p1 = select_ln65_3_fu_1567_p3;

assign zext_ln65_2_fu_1605_p1 = tmp_20_fu_1597_p3;

assign zext_ln65_3_fu_1629_p1 = tmp_21_fu_1619_p4;

assign zext_ln65_4_fu_1639_p1 = add_ln65_1_fu_1633_p2;

assign zext_ln65_fu_1525_p1 = tmp_19_fu_1517_p3;

assign zext_ln75_1_fu_1741_p1 = tmp_23_fu_1733_p3;

assign zext_ln75_1_mid2_v_fu_1711_p4 = {{select_ln75_1_fu_1699_p3[5:2]}};

assign zext_ln75_2_fu_1751_p1 = select_ln75_fu_1691_p3;

assign zext_ln75_fu_1729_p1 = tmp_22_fu_1721_p3;

assign zext_ln83_fu_1787_p1 = i8_0_reg_982;

assign zext_ln92_1_fu_1852_p1 = tmp_25_fu_1844_p3;

assign zext_ln92_2_fu_1876_p1 = tmp_39_fu_1866_p4;

assign zext_ln92_3_fu_1886_p1 = add_ln92_1_fu_1880_p2;

assign zext_ln92_fu_1840_p1 = tmp_24_fu_1832_p3;

endmodule //weight_loader
