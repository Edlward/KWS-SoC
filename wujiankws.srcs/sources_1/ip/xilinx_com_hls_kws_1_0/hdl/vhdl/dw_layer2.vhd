-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dw_layer2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_stream_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    in_stream_V_empty_n : IN STD_LOGIC;
    in_stream_V_read : OUT STD_LOGIC;
    out_stream_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_stream_V_full_n : IN STD_LOGIC;
    out_stream_V_write : OUT STD_LOGIC;
    dw_weight2_0_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    dw_weight2_0_ce0 : OUT STD_LOGIC;
    dw_weight2_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    dw_weight2_1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    dw_weight2_1_ce0 : OUT STD_LOGIC;
    dw_weight2_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    dw_weight2_2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    dw_weight2_2_ce0 : OUT STD_LOGIC;
    dw_weight2_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    dw_weight2_3_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    dw_weight2_3_ce0 : OUT STD_LOGIC;
    dw_weight2_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of dw_layer2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000010";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000100";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (12 downto 0) := "0000000001000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (12 downto 0) := "0000000010000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000100000";
    constant ap_ST_fsm_pp2_stage1 : STD_LOGIC_VECTOR (12 downto 0) := "0000001000000";
    constant ap_ST_fsm_pp2_stage2 : STD_LOGIC_VECTOR (12 downto 0) := "0000010000000";
    constant ap_ST_fsm_pp2_stage3 : STD_LOGIC_VECTOR (12 downto 0) := "0000100000000";
    constant ap_ST_fsm_pp2_stage4 : STD_LOGIC_VECTOR (12 downto 0) := "0001000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (12 downto 0) := "0010000000000";
    constant ap_ST_fsm_pp3_stage0 : STD_LOGIC_VECTOR (12 downto 0) := "0100000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (12 downto 0) := "1000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv15_4DA0 : STD_LOGIC_VECTOR (14 downto 0) := "100110110100000";
    constant ap_const_lv15_1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv10_1B0 : STD_LOGIC_VECTOR (9 downto 0) := "0110110000";
    constant ap_const_lv6_30 : STD_LOGIC_VECTOR (5 downto 0) := "110000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv15_4080 : STD_LOGIC_VECTOR (14 downto 0) := "100000010000000";
    constant ap_const_lv10_180 : STD_LOGIC_VECTOR (9 downto 0) := "0110000000";
    constant ap_const_lv18_20400 : STD_LOGIC_VECTOR (17 downto 0) := "100000010000000000";
    constant ap_const_lv18_1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv17_8100 : STD_LOGIC_VECTOR (16 downto 0) := "01000000100000000";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal y_6_0_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal y_6_0_ce0 : STD_LOGIC;
    signal y_6_0_we0 : STD_LOGIC;
    signal y_6_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_6_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_6_1_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal y_6_1_ce0 : STD_LOGIC;
    signal y_6_1_we0 : STD_LOGIC;
    signal y_6_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_6_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_6_2_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal y_6_2_ce0 : STD_LOGIC;
    signal y_6_2_we0 : STD_LOGIC;
    signal y_6_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_6_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_6_3_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal y_6_3_ce0 : STD_LOGIC;
    signal y_6_3_we0 : STD_LOGIC;
    signal y_6_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_6_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_7_0_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal x_7_0_ce0 : STD_LOGIC;
    signal x_7_0_we0 : STD_LOGIC;
    signal x_7_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_7_1_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal x_7_1_ce0 : STD_LOGIC;
    signal x_7_1_we0 : STD_LOGIC;
    signal x_7_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_7_2_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal x_7_2_ce0 : STD_LOGIC;
    signal x_7_2_we0 : STD_LOGIC;
    signal x_7_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_7_3_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal x_7_3_ce0 : STD_LOGIC;
    signal x_7_3_we0 : STD_LOGIC;
    signal x_7_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_stream_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln33_reg_1955 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_stream_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp3_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage0 : signal is "none";
    signal ap_enable_reg_pp3_iter1 : STD_LOGIC := '0';
    signal ap_block_pp3_stage0 : BOOLEAN;
    signal icmp_ln65_reg_2173 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten13_reg_457 : STD_LOGIC_VECTOR (14 downto 0);
    signal h_0_reg_468 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten_reg_479 : STD_LOGIC_VECTOR (9 downto 0);
    signal w_0_reg_490 : STD_LOGIC_VECTOR (3 downto 0);
    signal d_0_reg_501 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten135_reg_567 : STD_LOGIC_VECTOR (17 downto 0);
    signal kh_0_reg_578 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten91_reg_589 : STD_LOGIC_VECTOR (16 downto 0);
    signal kw_0_reg_600 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten59_reg_611 : STD_LOGIC_VECTOR (14 downto 0);
    signal oh1_0_reg_622 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten41_reg_633 : STD_LOGIC_VECTOR (9 downto 0);
    signal ow2_0_reg_644 : STD_LOGIC_VECTOR (3 downto 0);
    signal id3_0_reg_655 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten156_reg_666 : STD_LOGIC_VECTOR (14 downto 0);
    signal oh4_0_reg_677 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten142_reg_688 : STD_LOGIC_VECTOR (9 downto 0);
    signal ow5_0_reg_699 : STD_LOGIC_VECTOR (3 downto 0);
    signal id6_0_reg_710 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln33_fu_733_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal add_ln33_fu_739_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal select_ln38_1_fu_765_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln38_1_reg_1964 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln38_3_fu_811_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln38_3_reg_1971 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln38_fu_819_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln38_reg_1977 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_269_reg_1981 : STD_LOGIC_VECTOR (3 downto 0);
    signal d_fu_833_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln34_fu_845_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln43_fu_931_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal select_ln47_1_fu_957_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln43_fu_925_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln47_3_fu_1015_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal id_fu_1091_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln44_fu_1103_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln52_fu_1131_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_reg_2027 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_block_state7_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state12_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal add_ln52_fu_1137_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln52_reg_2031 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal select_ln52_1_fu_1163_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln52_1_reg_2036 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln53_4_fu_1269_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln53_4_reg_2041 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln58_4_fu_1391_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln58_4_reg_2046 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln58_8_fu_1481_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln58_8_reg_2052 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln58_5_fu_1543_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln58_5_reg_2058 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln58_5_reg_2058_pp2_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln58_17_fu_1557_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln58_17_reg_2063 : STD_LOGIC_VECTOR (13 downto 0);
    signal id_2_fu_1593_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal id_2_reg_2108 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln55_fu_1605_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln55_reg_2113 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln54_fu_1619_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln54_reg_2118 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln53_7_fu_1633_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln53_7_reg_2123 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln58_10_fu_1641_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln58_10_reg_2128 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp2_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage1 : signal is "none";
    signal ap_block_state8_pp2_stage1_iter0 : BOOLEAN;
    signal ap_block_state13_pp2_stage1_iter1 : BOOLEAN;
    signal ap_block_pp2_stage1_11001 : BOOLEAN;
    signal tmp_229_fu_1644_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_230_fu_1659_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_6_0_addr_1_reg_2143 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_pp2_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage4 : signal is "none";
    signal ap_block_state11_pp2_stage4_iter0 : BOOLEAN;
    signal ap_block_pp2_stage4_11001 : BOOLEAN;
    signal y_6_1_addr_1_reg_2148 : STD_LOGIC_VECTOR (12 downto 0);
    signal y_6_2_addr_1_reg_2153 : STD_LOGIC_VECTOR (12 downto 0);
    signal y_6_3_addr_1_reg_2158 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_729_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_2163 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_228_fu_1737_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln65_fu_1751_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state17_pp3_stage0_iter0 : BOOLEAN;
    signal ap_block_state18_pp3_stage0_iter1 : BOOLEAN;
    signal ap_block_pp3_stage0_11001 : BOOLEAN;
    signal add_ln65_fu_1757_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_enable_reg_pp3_iter0 : STD_LOGIC := '0';
    signal select_ln69_1_fu_1783_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln69_1_reg_2182 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln69_3_fu_1841_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln69_3_reg_2187 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln69_fu_1885_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln69_reg_2192 : STD_LOGIC_VECTOR (1 downto 0);
    signal id_1_fu_1917_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln66_fu_1929_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state7 : STD_LOGIC;
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal ap_block_pp2_stage4_subdone : BOOLEAN;
    signal ap_block_state10_pp2_stage3_iter0 : BOOLEAN;
    signal ap_block_state15_pp2_stage3_iter1 : BOOLEAN;
    signal ap_block_pp2_stage3_subdone : BOOLEAN;
    signal ap_CS_fsm_pp2_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage3 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_block_pp3_stage0_subdone : BOOLEAN;
    signal ap_condition_pp3_exit_iter0_state17 : STD_LOGIC;
    signal ap_phi_mux_h_0_phi_fu_472_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_mux_w_0_phi_fu_494_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten34_reg_512 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal oh_0_reg_523 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten20_reg_534 : STD_LOGIC_VECTOR (9 downto 0);
    signal ow_0_reg_545 : STD_LOGIC_VECTOR (3 downto 0);
    signal id_0_reg_556 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_mux_indvar_flatten135_phi_fu_571_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal ap_phi_mux_kh_0_phi_fu_582_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_indvar_flatten91_phi_fu_593_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_phi_mux_kw_0_phi_fu_604_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_mux_indvar_flatten59_phi_fu_615_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_phi_mux_oh1_0_phi_fu_626_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_mux_indvar_flatten41_phi_fu_637_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_mux_ow2_0_phi_fu_648_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_mux_id3_0_phi_fu_659_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_mux_oh4_0_phi_fu_681_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_mux_ow5_0_phi_fu_703_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln38_5_fu_917_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln47_4_fu_1083_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln58_19_fu_1571_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln58_20_fu_1585_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln58_21_fu_1729_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp2_stage4 : BOOLEAN;
    signal zext_ln69_5_fu_1909_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal outprepare_fu_1940_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp3_stage0_01001 : BOOLEAN;
    signal trunc_ln47_fu_1059_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp2_stage3_11001 : BOOLEAN;
    signal grp_fu_721_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp2_stage3 : BOOLEAN;
    signal ap_block_pp2_stage1 : BOOLEAN;
    signal icmp_ln34_fu_751_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal h_fu_745_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln35_fu_779_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln38_fu_773_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln38_fu_757_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln38_fu_785_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln38_fu_797_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal w_fu_791_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln38_2_fu_803_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln34_1_fu_839_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_267_fu_856_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln38_fu_853_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln38_1_fu_863_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln38_fu_867_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln38_2_fu_873_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln38_2_fu_876_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_fu_890_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl_cast_fu_882_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln38_3_fu_898_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln38_fu_902_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln38_4_fu_908_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln38_3_fu_911_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln44_fu_943_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal oh_fu_937_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_270_fu_965_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln45_fu_983_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln47_fu_977_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln47_fu_949_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln47_fu_989_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln47_fu_1001_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ow_fu_995_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln47_1_fu_1023_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln47_fu_973_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln47_fu_1027_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_271_fu_1041_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl15_cast_fu_1033_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln47_2_fu_1049_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln47_2_fu_1007_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_272_fu_1063_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln47_3_fu_1073_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln47_fu_1053_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln47_1_fu_1077_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln44_2_fu_1097_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln52_fu_1111_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln53_fu_1115_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln53_fu_1149_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal kh_fu_1143_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_273_fu_1175_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln52_3_fu_1187_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln58_fu_1119_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln58_1_fu_1125_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln56_fu_1213_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln52_fu_1207_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln55_fu_1225_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln54_fu_1237_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln52_fu_1155_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln52_2_fu_1243_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln53_fu_1255_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal kw_fu_1249_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln52_2_fu_1183_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln53_7_fu_1285_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln58_5_fu_1289_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln58_fu_1295_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_274_fu_1307_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl17_cast_fu_1299_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln58_fu_1315_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln52_1_fu_1171_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln52_2_fu_1191_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln53_6_fu_1281_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln52_3_fu_1199_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal xor_ln53_fu_1341_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln52_fu_1219_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln53_1_fu_1347_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln52_1_fu_1231_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln53_fu_1261_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal and_ln53_1_fu_1359_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_fu_1371_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_2_fu_1377_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal oh_4_fu_1365_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln58_6_fu_1399_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln53_5_fu_1325_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln58_5_fu_1405_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_276_fu_1417_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln58_13_fu_1413_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln58_14_fu_1425_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln53_5_fu_1277_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln53_6_fu_1333_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln53_fu_1353_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln58_fu_1443_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln58_fu_1383_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln58_fu_1449_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_3_fu_1461_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_4_fu_1467_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ow_1_fu_1455_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln58_9_fu_1489_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln58_6_fu_1435_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln58_9_fu_1495_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln58_7_fu_1429_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln58_16_fu_1503_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln58_10_fu_1507_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln58_3_fu_1513_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln58_4_fu_1525_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl22_cast_fu_1517_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl23_cast_fu_1529_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln58_7_fu_1473_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_277_fu_1547_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal sub_ln58_fu_1319_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln58_18_fu_1561_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln58_11_fu_1565_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln58_4_fu_1537_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln58_12_fu_1579_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln55_1_fu_1599_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln54_1_fu_1613_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln53_3_fu_1627_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_275_fu_1674_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln58_12_fu_1681_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln58_15_fu_1685_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln58_8_fu_1688_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln58_1_fu_1694_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln58_2_fu_1706_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl20_cast_fu_1698_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl21_cast_fu_1710_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln58_3_fu_1718_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln58_13_fu_1724_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln66_fu_1769_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal oh_3_fu_1763_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_278_fu_1791_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln67_fu_1809_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln69_fu_1803_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln69_fu_1775_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln69_fu_1815_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln69_fu_1827_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ow_2_fu_1821_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln69_1_fu_1849_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln69_fu_1799_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln69_fu_1853_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_279_fu_1867_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl24_cast_fu_1859_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln69_3_fu_1875_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln69_2_fu_1833_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_280_fu_1889_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln69_4_fu_1899_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln69_fu_1879_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln69_1_fu_1903_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln66_1_fu_1923_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal outprepare_fu_1940_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_block_pp2_stage1_subdone : BOOLEAN;
    signal ap_block_state9_pp2_stage2_iter0 : BOOLEAN;
    signal ap_block_state14_pp2_stage2_iter1 : BOOLEAN;
    signal ap_block_pp2_stage2_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;
    signal ap_idle_pp3 : STD_LOGIC;
    signal ap_enable_pp3 : STD_LOGIC;

    component kws_fadd_32ns_32ndEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component kws_fmul_32ns_32ncud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component kws_mux_432_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dw_layer2_y_6_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component pw_layer1_y_9_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    y_6_0_U : component dw_layer2_y_6_0
    generic map (
        DataWidth => 32,
        AddressRange => 4128,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => y_6_0_address0,
        ce0 => y_6_0_ce0,
        we0 => y_6_0_we0,
        d0 => y_6_0_d0,
        q0 => y_6_0_q0);

    y_6_1_U : component dw_layer2_y_6_0
    generic map (
        DataWidth => 32,
        AddressRange => 4128,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => y_6_1_address0,
        ce0 => y_6_1_ce0,
        we0 => y_6_1_we0,
        d0 => y_6_1_d0,
        q0 => y_6_1_q0);

    y_6_2_U : component dw_layer2_y_6_0
    generic map (
        DataWidth => 32,
        AddressRange => 4128,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => y_6_2_address0,
        ce0 => y_6_2_ce0,
        we0 => y_6_2_we0,
        d0 => y_6_2_d0,
        q0 => y_6_2_q0);

    y_6_3_U : component dw_layer2_y_6_0
    generic map (
        DataWidth => 32,
        AddressRange => 4128,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => y_6_3_address0,
        ce0 => y_6_3_ce0,
        we0 => y_6_3_we0,
        d0 => y_6_3_d0,
        q0 => y_6_3_q0);

    x_7_0_U : component pw_layer1_y_9_0
    generic map (
        DataWidth => 32,
        AddressRange => 4968,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => x_7_0_address0,
        ce0 => x_7_0_ce0,
        we0 => x_7_0_we0,
        d0 => in_stream_V_dout,
        q0 => x_7_0_q0);

    x_7_1_U : component pw_layer1_y_9_0
    generic map (
        DataWidth => 32,
        AddressRange => 4968,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => x_7_1_address0,
        ce0 => x_7_1_ce0,
        we0 => x_7_1_we0,
        d0 => in_stream_V_dout,
        q0 => x_7_1_q0);

    x_7_2_U : component pw_layer1_y_9_0
    generic map (
        DataWidth => 32,
        AddressRange => 4968,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => x_7_2_address0,
        ce0 => x_7_2_ce0,
        we0 => x_7_2_we0,
        d0 => in_stream_V_dout,
        q0 => x_7_2_q0);

    x_7_3_U : component pw_layer1_y_9_0
    generic map (
        DataWidth => 32,
        AddressRange => 4968,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => x_7_3_address0,
        ce0 => x_7_3_ce0,
        we0 => x_7_3_we0,
        d0 => in_stream_V_dout,
        q0 => x_7_3_q0);

    kws_fadd_32ns_32ndEe_U31 : component kws_fadd_32ns_32ndEe
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_228_fu_1737_p6,
        din1 => tmp_s_reg_2163,
        ce => ap_const_logic_1,
        dout => grp_fu_721_p2);

    kws_fmul_32ns_32ncud_U32 : component kws_fmul_32ns_32ncud
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_229_fu_1644_p6,
        din1 => tmp_230_fu_1659_p6,
        ce => ap_const_logic_1,
        dout => grp_fu_729_p2);

    kws_mux_432_32_1_1_U33 : component kws_mux_432_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => x_7_0_q0,
        din1 => x_7_1_q0,
        din2 => x_7_2_q0,
        din3 => x_7_3_q0,
        din4 => zext_ln58_10_fu_1641_p1,
        dout => tmp_229_fu_1644_p6);

    kws_mux_432_32_1_1_U34 : component kws_mux_432_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => dw_weight2_0_q0,
        din1 => dw_weight2_1_q0,
        din2 => dw_weight2_2_q0,
        din3 => dw_weight2_3_q0,
        din4 => zext_ln58_10_fu_1641_p1,
        dout => tmp_230_fu_1659_p6);

    kws_mux_432_32_1_1_U35 : component kws_mux_432_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => y_6_0_q0,
        din1 => y_6_1_q0,
        din2 => y_6_2_q0,
        din3 => y_6_3_q0,
        din4 => zext_ln58_10_reg_2128,
        dout => tmp_228_fu_1737_p6);

    kws_mux_432_32_1_1_U36 : component kws_mux_432_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => y_6_0_q0,
        din1 => y_6_1_q0,
        din2 => y_6_2_q0,
        din3 => y_6_3_q0,
        din4 => outprepare_fu_1940_p5,
        dout => outprepare_fu_1940_p6);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state7) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp2_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3)) or ((ap_const_boolean_0 = ap_block_pp2_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4)))) then 
                    ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp3_exit_iter0_state17) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp3_exit_iter0_state17))) then 
                    ap_enable_reg_pp3_iter1 <= (ap_const_logic_1 xor ap_condition_pp3_exit_iter0_state17);
                elsif ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                    ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    d_0_reg_501_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln33_fu_733_p2 = ap_const_lv1_0))) then 
                d_0_reg_501 <= d_fu_833_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                d_0_reg_501 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    h_0_reg_468_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln33_reg_1955 = ap_const_lv1_0))) then 
                h_0_reg_468 <= select_ln38_1_reg_1964;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                h_0_reg_468 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    id3_0_reg_655_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                id3_0_reg_655 <= ap_const_lv6_0;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln52_reg_2027 = ap_const_lv1_0))) then 
                id3_0_reg_655 <= id_2_reg_2108;
            end if; 
        end if;
    end process;

    id6_0_reg_710_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                id6_0_reg_710 <= ap_const_lv6_0;
            elsif (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (icmp_ln65_fu_1751_p2 = ap_const_lv1_0))) then 
                id6_0_reg_710 <= id_1_fu_1917_p2;
            end if; 
        end if;
    end process;

    id_0_reg_556_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                id_0_reg_556 <= ap_const_lv6_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln43_fu_925_p2 = ap_const_lv1_0))) then 
                id_0_reg_556 <= id_fu_1091_p2;
            end if; 
        end if;
    end process;

    indvar_flatten135_reg_567_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                indvar_flatten135_reg_567 <= ap_const_lv18_0;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln52_reg_2027 = ap_const_lv1_0))) then 
                indvar_flatten135_reg_567 <= add_ln52_reg_2031;
            end if; 
        end if;
    end process;

    indvar_flatten13_reg_457_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln33_fu_733_p2 = ap_const_lv1_0))) then 
                indvar_flatten13_reg_457 <= add_ln33_fu_739_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten13_reg_457 <= ap_const_lv15_0;
            end if; 
        end if;
    end process;

    indvar_flatten142_reg_688_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                indvar_flatten142_reg_688 <= ap_const_lv10_0;
            elsif (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (icmp_ln65_fu_1751_p2 = ap_const_lv1_0))) then 
                indvar_flatten142_reg_688 <= select_ln66_fu_1929_p3;
            end if; 
        end if;
    end process;

    indvar_flatten156_reg_666_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                indvar_flatten156_reg_666 <= ap_const_lv15_0;
            elsif (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (icmp_ln65_fu_1751_p2 = ap_const_lv1_0))) then 
                indvar_flatten156_reg_666 <= add_ln65_fu_1757_p2;
            end if; 
        end if;
    end process;

    indvar_flatten20_reg_534_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                indvar_flatten20_reg_534 <= ap_const_lv10_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln43_fu_925_p2 = ap_const_lv1_0))) then 
                indvar_flatten20_reg_534 <= select_ln44_fu_1103_p3;
            end if; 
        end if;
    end process;

    indvar_flatten34_reg_512_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                indvar_flatten34_reg_512 <= ap_const_lv15_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln43_fu_925_p2 = ap_const_lv1_0))) then 
                indvar_flatten34_reg_512 <= add_ln43_fu_931_p2;
            end if; 
        end if;
    end process;

    indvar_flatten41_reg_633_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                indvar_flatten41_reg_633 <= ap_const_lv10_0;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln52_reg_2027 = ap_const_lv1_0))) then 
                indvar_flatten41_reg_633 <= select_ln55_reg_2113;
            end if; 
        end if;
    end process;

    indvar_flatten59_reg_611_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                indvar_flatten59_reg_611 <= ap_const_lv15_0;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln52_reg_2027 = ap_const_lv1_0))) then 
                indvar_flatten59_reg_611 <= select_ln54_reg_2118;
            end if; 
        end if;
    end process;

    indvar_flatten91_reg_589_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                indvar_flatten91_reg_589 <= ap_const_lv17_0;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln52_reg_2027 = ap_const_lv1_0))) then 
                indvar_flatten91_reg_589 <= select_ln53_7_reg_2123;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_479_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln33_fu_733_p2 = ap_const_lv1_0))) then 
                indvar_flatten_reg_479 <= select_ln34_fu_845_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten_reg_479 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    kh_0_reg_578_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                kh_0_reg_578 <= ap_const_lv3_0;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln52_reg_2027 = ap_const_lv1_0))) then 
                kh_0_reg_578 <= select_ln52_1_reg_2036;
            end if; 
        end if;
    end process;

    kw_0_reg_600_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                kw_0_reg_600 <= ap_const_lv2_0;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln52_reg_2027 = ap_const_lv1_0))) then 
                kw_0_reg_600 <= select_ln53_4_reg_2041;
            end if; 
        end if;
    end process;

    oh1_0_reg_622_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                oh1_0_reg_622 <= ap_const_lv6_0;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln52_reg_2027 = ap_const_lv1_0))) then 
                oh1_0_reg_622 <= select_ln58_4_reg_2046;
            end if; 
        end if;
    end process;

    oh4_0_reg_677_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                oh4_0_reg_677 <= ap_const_lv6_0;
            elsif (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (icmp_ln65_reg_2173 = ap_const_lv1_0))) then 
                oh4_0_reg_677 <= select_ln69_1_reg_2182;
            end if; 
        end if;
    end process;

    oh_0_reg_523_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                oh_0_reg_523 <= ap_const_lv6_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln43_fu_925_p2 = ap_const_lv1_0))) then 
                oh_0_reg_523 <= select_ln47_1_fu_957_p3;
            end if; 
        end if;
    end process;

    ow2_0_reg_644_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                ow2_0_reg_644 <= ap_const_lv4_0;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln52_reg_2027 = ap_const_lv1_0))) then 
                ow2_0_reg_644 <= select_ln58_8_reg_2052;
            end if; 
        end if;
    end process;

    ow5_0_reg_699_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                ow5_0_reg_699 <= ap_const_lv4_0;
            elsif (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (icmp_ln65_reg_2173 = ap_const_lv1_0))) then 
                ow5_0_reg_699 <= select_ln69_3_reg_2187;
            end if; 
        end if;
    end process;

    ow_0_reg_545_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                ow_0_reg_545 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln43_fu_925_p2 = ap_const_lv1_0))) then 
                ow_0_reg_545 <= select_ln47_3_fu_1015_p3;
            end if; 
        end if;
    end process;

    w_0_reg_490_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln33_reg_1955 = ap_const_lv1_0))) then 
                w_0_reg_490 <= select_ln38_3_reg_1971;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                w_0_reg_490 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                add_ln52_reg_2031 <= add_ln52_fu_1137_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln33_reg_1955 <= icmp_ln33_fu_733_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                icmp_ln52_reg_2027 <= icmp_ln52_fu_1131_p2;
                trunc_ln58_5_reg_2058_pp2_iter1_reg <= trunc_ln58_5_reg_2058;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                icmp_ln65_reg_2173 <= icmp_ln65_fu_1751_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln52_fu_1131_p2 = ap_const_lv1_0))) then
                id_2_reg_2108 <= id_2_fu_1593_p2;
                select_ln52_1_reg_2036 <= select_ln52_1_fu_1163_p3;
                select_ln53_4_reg_2041 <= select_ln53_4_fu_1269_p3;
                select_ln53_7_reg_2123 <= select_ln53_7_fu_1633_p3;
                select_ln54_reg_2118 <= select_ln54_fu_1619_p3;
                select_ln55_reg_2113 <= select_ln55_fu_1605_p3;
                select_ln58_4_reg_2046 <= select_ln58_4_fu_1391_p3;
                select_ln58_8_reg_2052 <= select_ln58_8_fu_1481_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln33_fu_733_p2 = ap_const_lv1_0))) then
                select_ln38_1_reg_1964 <= select_ln38_1_fu_765_p3;
                select_ln38_3_reg_1971 <= select_ln38_3_fu_811_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (icmp_ln65_fu_1751_p2 = ap_const_lv1_0))) then
                select_ln69_1_reg_2182 <= select_ln69_1_fu_1783_p3;
                select_ln69_3_reg_2187 <= select_ln69_3_fu_1841_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln33_fu_733_p2 = ap_const_lv1_0))) then
                tmp_269_reg_1981 <= select_ln38_2_fu_803_p3(5 downto 2);
                trunc_ln38_reg_1977 <= trunc_ln38_fu_819_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4) and (icmp_ln52_reg_2027 = ap_const_lv1_0))) then
                tmp_s_reg_2163 <= grp_fu_729_p2;
                y_6_0_addr_1_reg_2143 <= zext_ln58_21_fu_1729_p1(13 - 1 downto 0);
                y_6_1_addr_1_reg_2148 <= zext_ln58_21_fu_1729_p1(13 - 1 downto 0);
                y_6_2_addr_1_reg_2153 <= zext_ln58_21_fu_1729_p1(13 - 1 downto 0);
                y_6_3_addr_1_reg_2158 <= zext_ln58_21_fu_1729_p1(13 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln52_fu_1131_p2 = ap_const_lv1_0))) then
                trunc_ln58_5_reg_2058 <= trunc_ln58_5_fu_1543_p1;
                    zext_ln58_17_reg_2063(3 downto 0) <= zext_ln58_17_fu_1557_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (icmp_ln65_fu_1751_p2 = ap_const_lv1_0))) then
                trunc_ln69_reg_2192 <= trunc_ln69_fu_1885_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (icmp_ln52_reg_2027 = ap_const_lv1_0))) then
                    zext_ln58_10_reg_2128(1 downto 0) <= zext_ln58_10_fu_1641_p1(1 downto 0);
            end if;
        end if;
    end process;
    zext_ln58_17_reg_2063(13 downto 4) <= "0000000000";
    zext_ln58_10_reg_2128(31 downto 2) <= "000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, icmp_ln33_fu_733_p2, ap_enable_reg_pp0_iter0, ap_CS_fsm_state5, icmp_ln43_fu_925_p2, icmp_ln52_fu_1131_p2, ap_enable_reg_pp2_iter0, icmp_ln65_fu_1751_p2, ap_enable_reg_pp3_iter0, ap_block_pp0_stage0_subdone, ap_block_pp2_stage0_subdone, ap_enable_reg_pp2_iter1, ap_block_pp2_stage4_subdone, ap_block_pp2_stage3_subdone, ap_CS_fsm_pp2_stage3, ap_block_pp3_stage0_subdone, ap_block_pp2_stage1_subdone, ap_block_pp2_stage2_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln33_fu_733_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln33_fu_733_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln43_fu_925_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
            when ap_ST_fsm_pp2_stage0 => 
                if ((not(((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (icmp_ln52_fu_1131_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage1;
                elsif (((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (icmp_ln52_fu_1131_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_pp2_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp2_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage1;
                end if;
            when ap_ST_fsm_pp2_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp2_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage2;
                end if;
            when ap_ST_fsm_pp2_stage3 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp2_stage3_subdone) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp2_stage3_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage4;
                elsif (((ap_const_boolean_0 = ap_block_pp2_stage3_subdone) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage3;
                end if;
            when ap_ST_fsm_pp2_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp2_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage4;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
            when ap_ST_fsm_pp3_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (icmp_ln65_fu_1751_p2 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (icmp_ln65_fu_1751_p2 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                end if;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXX";
        end case;
    end process;
    add_ln33_fu_739_p2 <= std_logic_vector(unsigned(indvar_flatten13_reg_457) + unsigned(ap_const_lv15_1));
    add_ln34_1_fu_839_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_479) + unsigned(ap_const_lv10_1));
    add_ln38_2_fu_876_p2 <= std_logic_vector(unsigned(add_ln38_fu_867_p2) + unsigned(zext_ln38_2_fu_873_p1));
    add_ln38_3_fu_911_p2 <= std_logic_vector(unsigned(sub_ln38_fu_902_p2) + unsigned(zext_ln38_4_fu_908_p1));
    add_ln38_fu_867_p2 <= std_logic_vector(unsigned(zext_ln38_fu_853_p1) + unsigned(zext_ln38_1_fu_863_p1));
    add_ln43_fu_931_p2 <= std_logic_vector(unsigned(indvar_flatten34_reg_512) + unsigned(ap_const_lv15_1));
    add_ln44_2_fu_1097_p2 <= std_logic_vector(unsigned(indvar_flatten20_reg_534) + unsigned(ap_const_lv10_1));
    add_ln47_1_fu_1077_p2 <= std_logic_vector(unsigned(zext_ln47_3_fu_1073_p1) + unsigned(sub_ln47_fu_1053_p2));
    add_ln47_fu_1027_p2 <= std_logic_vector(unsigned(zext_ln47_1_fu_1023_p1) + unsigned(zext_ln47_fu_973_p1));
    add_ln52_fu_1137_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten135_phi_fu_571_p4) + unsigned(ap_const_lv18_1));
    add_ln53_3_fu_1627_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten91_phi_fu_593_p4) + unsigned(ap_const_lv17_1));
    add_ln54_1_fu_1613_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten59_phi_fu_615_p4) + unsigned(ap_const_lv15_1));
    add_ln55_1_fu_1599_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten41_phi_fu_637_p4) + unsigned(ap_const_lv10_1));
    add_ln58_10_fu_1507_p2 <= std_logic_vector(unsigned(add_ln58_7_fu_1429_p2) + unsigned(zext_ln58_16_fu_1503_p1));
    add_ln58_11_fu_1565_p2 <= std_logic_vector(unsigned(sub_ln58_fu_1319_p2) + unsigned(zext_ln58_18_fu_1561_p1));
    add_ln58_12_fu_1579_p2 <= std_logic_vector(unsigned(sub_ln58_4_fu_1537_p2) + unsigned(zext_ln58_17_fu_1557_p1));
    add_ln58_13_fu_1724_p2 <= std_logic_vector(unsigned(sub_ln58_3_fu_1718_p2) + unsigned(zext_ln58_17_reg_2063));
    add_ln58_1_fu_1125_p2 <= std_logic_vector(unsigned(ap_phi_mux_ow2_0_phi_fu_648_p4) + unsigned(zext_ln53_fu_1115_p1));
    add_ln58_5_fu_1289_p2 <= std_logic_vector(unsigned(zext_ln52_2_fu_1183_p1) + unsigned(zext_ln53_7_fu_1285_p1));
    add_ln58_6_fu_1399_p2 <= std_logic_vector(unsigned(oh_4_fu_1365_p2) + unsigned(zext_ln52_1_fu_1171_p1));
    add_ln58_7_fu_1429_p2 <= std_logic_vector(unsigned(zext_ln58_13_fu_1413_p1) + unsigned(zext_ln58_14_fu_1425_p1));
    add_ln58_8_fu_1688_p2 <= std_logic_vector(unsigned(zext_ln58_12_fu_1681_p1) + unsigned(zext_ln58_15_fu_1685_p1));
    add_ln58_9_fu_1489_p2 <= std_logic_vector(unsigned(ow_1_fu_1455_p2) + unsigned(zext_ln53_5_fu_1277_p1));
    add_ln58_fu_1119_p2 <= std_logic_vector(unsigned(ap_phi_mux_oh1_0_phi_fu_626_p4) + unsigned(zext_ln52_fu_1111_p1));
    add_ln65_fu_1757_p2 <= std_logic_vector(unsigned(indvar_flatten156_reg_666) + unsigned(ap_const_lv15_1));
    add_ln66_1_fu_1923_p2 <= std_logic_vector(unsigned(ap_const_lv10_1) + unsigned(indvar_flatten142_reg_688));
    add_ln69_1_fu_1903_p2 <= std_logic_vector(unsigned(zext_ln69_4_fu_1899_p1) + unsigned(sub_ln69_fu_1879_p2));
    add_ln69_fu_1853_p2 <= std_logic_vector(unsigned(zext_ln69_1_fu_1849_p1) + unsigned(zext_ln69_fu_1799_p1));
    and_ln38_fu_785_p2 <= (xor_ln38_fu_773_p2 and icmp_ln35_fu_779_p2);
    and_ln47_fu_989_p2 <= (xor_ln47_fu_977_p2 and icmp_ln45_fu_983_p2);
    and_ln52_1_fu_1231_p2 <= (xor_ln52_fu_1207_p2 and icmp_ln55_fu_1225_p2);
    and_ln52_2_fu_1243_p2 <= (xor_ln52_fu_1207_p2 and icmp_ln54_fu_1237_p2);
    and_ln52_fu_1219_p2 <= (xor_ln52_fu_1207_p2 and icmp_ln56_fu_1213_p2);
    and_ln53_1_fu_1359_p2 <= (or_ln53_1_fu_1347_p2 and and_ln52_1_fu_1231_p2);
    and_ln53_fu_1353_p2 <= (or_ln53_1_fu_1347_p2 and and_ln52_fu_1219_p2);
    and_ln58_fu_1449_p2 <= (xor_ln58_fu_1443_p2 and and_ln53_fu_1353_p2);
    and_ln69_fu_1815_p2 <= (xor_ln69_fu_1803_p2 and icmp_ln67_fu_1809_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(5);
    ap_CS_fsm_pp2_stage1 <= ap_CS_fsm(6);
    ap_CS_fsm_pp2_stage3 <= ap_CS_fsm(8);
    ap_CS_fsm_pp2_stage4 <= ap_CS_fsm(9);
    ap_CS_fsm_pp3_stage0 <= ap_CS_fsm(11);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state16 <= ap_CS_fsm(10);
    ap_CS_fsm_state19 <= ap_CS_fsm(12);
    ap_CS_fsm_state4 <= ap_CS_fsm(2);
    ap_CS_fsm_state5 <= ap_CS_fsm(3);
    ap_CS_fsm_state6 <= ap_CS_fsm(4);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(in_stream_V_empty_n, ap_enable_reg_pp0_iter1, icmp_ln33_reg_1955)
    begin
                ap_block_pp0_stage0_11001 <= ((in_stream_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln33_reg_1955 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(in_stream_V_empty_n, ap_enable_reg_pp0_iter1, icmp_ln33_reg_1955)
    begin
                ap_block_pp0_stage0_subdone <= ((in_stream_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln33_reg_1955 = ap_const_lv1_0));
    end process;

        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp3_stage0_01001_assign_proc : process(out_stream_V_full_n, ap_enable_reg_pp3_iter1, icmp_ln65_reg_2173)
    begin
                ap_block_pp3_stage0_01001 <= ((out_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (icmp_ln65_reg_2173 = ap_const_lv1_0));
    end process;


    ap_block_pp3_stage0_11001_assign_proc : process(out_stream_V_full_n, ap_enable_reg_pp3_iter1, icmp_ln65_reg_2173)
    begin
                ap_block_pp3_stage0_11001 <= ((out_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (icmp_ln65_reg_2173 = ap_const_lv1_0));
    end process;


    ap_block_pp3_stage0_subdone_assign_proc : process(out_stream_V_full_n, ap_enable_reg_pp3_iter1, icmp_ln65_reg_2173)
    begin
                ap_block_pp3_stage0_subdone <= ((out_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (icmp_ln65_reg_2173 = ap_const_lv1_0));
    end process;

        ap_block_state10_pp2_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp2_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp2_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp2_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp2_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp2_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp3_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state18_pp3_stage0_iter1_assign_proc : process(out_stream_V_full_n, icmp_ln65_reg_2173)
    begin
                ap_block_state18_pp3_stage0_iter1 <= ((out_stream_V_full_n = ap_const_logic_0) and (icmp_ln65_reg_2173 = ap_const_lv1_0));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(in_stream_V_empty_n, icmp_ln33_reg_1955)
    begin
                ap_block_state3_pp0_stage0_iter1 <= ((in_stream_V_empty_n = ap_const_logic_0) and (icmp_ln33_reg_1955 = ap_const_lv1_0));
    end process;

        ap_block_state7_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp2_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp2_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln33_fu_733_p2)
    begin
        if ((icmp_ln33_fu_733_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_exit_iter0_state7_assign_proc : process(icmp_ln52_fu_1131_p2)
    begin
        if ((icmp_ln52_fu_1131_p2 = ap_const_lv1_1)) then 
            ap_condition_pp2_exit_iter0_state7 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp3_exit_iter0_state17_assign_proc : process(icmp_ln65_fu_1751_p2)
    begin
        if ((icmp_ln65_fu_1751_p2 = ap_const_lv1_1)) then 
            ap_condition_pp3_exit_iter0_state17 <= ap_const_logic_1;
        else 
            ap_condition_pp3_exit_iter0_state17 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);
    ap_enable_pp3 <= (ap_idle_pp3 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp3_assign_proc : process(ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter0)
    begin
        if (((ap_enable_reg_pp3_iter0 = ap_const_logic_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0))) then 
            ap_idle_pp3 <= ap_const_logic_1;
        else 
            ap_idle_pp3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_h_0_phi_fu_472_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln33_reg_1955, h_0_reg_468, select_ln38_1_reg_1964)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln33_reg_1955 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_h_0_phi_fu_472_p4 <= select_ln38_1_reg_1964;
        else 
            ap_phi_mux_h_0_phi_fu_472_p4 <= h_0_reg_468;
        end if; 
    end process;


    ap_phi_mux_id3_0_phi_fu_659_p4_assign_proc : process(id3_0_reg_655, icmp_ln52_reg_2027, ap_CS_fsm_pp2_stage0, id_2_reg_2108, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln52_reg_2027 = ap_const_lv1_0))) then 
            ap_phi_mux_id3_0_phi_fu_659_p4 <= id_2_reg_2108;
        else 
            ap_phi_mux_id3_0_phi_fu_659_p4 <= id3_0_reg_655;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten135_phi_fu_571_p4_assign_proc : process(indvar_flatten135_reg_567, icmp_ln52_reg_2027, ap_CS_fsm_pp2_stage0, add_ln52_reg_2031, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln52_reg_2027 = ap_const_lv1_0))) then 
            ap_phi_mux_indvar_flatten135_phi_fu_571_p4 <= add_ln52_reg_2031;
        else 
            ap_phi_mux_indvar_flatten135_phi_fu_571_p4 <= indvar_flatten135_reg_567;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten41_phi_fu_637_p4_assign_proc : process(indvar_flatten41_reg_633, icmp_ln52_reg_2027, ap_CS_fsm_pp2_stage0, select_ln55_reg_2113, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln52_reg_2027 = ap_const_lv1_0))) then 
            ap_phi_mux_indvar_flatten41_phi_fu_637_p4 <= select_ln55_reg_2113;
        else 
            ap_phi_mux_indvar_flatten41_phi_fu_637_p4 <= indvar_flatten41_reg_633;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten59_phi_fu_615_p4_assign_proc : process(indvar_flatten59_reg_611, icmp_ln52_reg_2027, ap_CS_fsm_pp2_stage0, select_ln54_reg_2118, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln52_reg_2027 = ap_const_lv1_0))) then 
            ap_phi_mux_indvar_flatten59_phi_fu_615_p4 <= select_ln54_reg_2118;
        else 
            ap_phi_mux_indvar_flatten59_phi_fu_615_p4 <= indvar_flatten59_reg_611;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten91_phi_fu_593_p4_assign_proc : process(indvar_flatten91_reg_589, icmp_ln52_reg_2027, ap_CS_fsm_pp2_stage0, select_ln53_7_reg_2123, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln52_reg_2027 = ap_const_lv1_0))) then 
            ap_phi_mux_indvar_flatten91_phi_fu_593_p4 <= select_ln53_7_reg_2123;
        else 
            ap_phi_mux_indvar_flatten91_phi_fu_593_p4 <= indvar_flatten91_reg_589;
        end if; 
    end process;


    ap_phi_mux_kh_0_phi_fu_582_p4_assign_proc : process(kh_0_reg_578, icmp_ln52_reg_2027, ap_CS_fsm_pp2_stage0, select_ln52_1_reg_2036, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln52_reg_2027 = ap_const_lv1_0))) then 
            ap_phi_mux_kh_0_phi_fu_582_p4 <= select_ln52_1_reg_2036;
        else 
            ap_phi_mux_kh_0_phi_fu_582_p4 <= kh_0_reg_578;
        end if; 
    end process;


    ap_phi_mux_kw_0_phi_fu_604_p4_assign_proc : process(kw_0_reg_600, icmp_ln52_reg_2027, ap_CS_fsm_pp2_stage0, select_ln53_4_reg_2041, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln52_reg_2027 = ap_const_lv1_0))) then 
            ap_phi_mux_kw_0_phi_fu_604_p4 <= select_ln53_4_reg_2041;
        else 
            ap_phi_mux_kw_0_phi_fu_604_p4 <= kw_0_reg_600;
        end if; 
    end process;


    ap_phi_mux_oh1_0_phi_fu_626_p4_assign_proc : process(oh1_0_reg_622, icmp_ln52_reg_2027, ap_CS_fsm_pp2_stage0, select_ln58_4_reg_2046, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln52_reg_2027 = ap_const_lv1_0))) then 
            ap_phi_mux_oh1_0_phi_fu_626_p4 <= select_ln58_4_reg_2046;
        else 
            ap_phi_mux_oh1_0_phi_fu_626_p4 <= oh1_0_reg_622;
        end if; 
    end process;


    ap_phi_mux_oh4_0_phi_fu_681_p4_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0, icmp_ln65_reg_2173, oh4_0_reg_677, select_ln69_1_reg_2182)
    begin
        if (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (icmp_ln65_reg_2173 = ap_const_lv1_0))) then 
            ap_phi_mux_oh4_0_phi_fu_681_p4 <= select_ln69_1_reg_2182;
        else 
            ap_phi_mux_oh4_0_phi_fu_681_p4 <= oh4_0_reg_677;
        end if; 
    end process;


    ap_phi_mux_ow2_0_phi_fu_648_p4_assign_proc : process(ow2_0_reg_644, icmp_ln52_reg_2027, ap_CS_fsm_pp2_stage0, select_ln58_8_reg_2052, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln52_reg_2027 = ap_const_lv1_0))) then 
            ap_phi_mux_ow2_0_phi_fu_648_p4 <= select_ln58_8_reg_2052;
        else 
            ap_phi_mux_ow2_0_phi_fu_648_p4 <= ow2_0_reg_644;
        end if; 
    end process;


    ap_phi_mux_ow5_0_phi_fu_703_p4_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0, icmp_ln65_reg_2173, ow5_0_reg_699, select_ln69_3_reg_2187)
    begin
        if (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (icmp_ln65_reg_2173 = ap_const_lv1_0))) then 
            ap_phi_mux_ow5_0_phi_fu_703_p4 <= select_ln69_3_reg_2187;
        else 
            ap_phi_mux_ow5_0_phi_fu_703_p4 <= ow5_0_reg_699;
        end if; 
    end process;


    ap_phi_mux_w_0_phi_fu_494_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln33_reg_1955, w_0_reg_490, select_ln38_3_reg_1971)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln33_reg_1955 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_w_0_phi_fu_494_p4 <= select_ln38_3_reg_1971;
        else 
            ap_phi_mux_w_0_phi_fu_494_p4 <= w_0_reg_490;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    d_fu_833_p2 <= std_logic_vector(unsigned(select_ln38_2_fu_803_p3) + unsigned(ap_const_lv6_1));
    dw_weight2_0_address0 <= zext_ln58_19_fu_1571_p1(7 - 1 downto 0);

    dw_weight2_0_ce0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            dw_weight2_0_ce0 <= ap_const_logic_1;
        else 
            dw_weight2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dw_weight2_1_address0 <= zext_ln58_19_fu_1571_p1(7 - 1 downto 0);

    dw_weight2_1_ce0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            dw_weight2_1_ce0 <= ap_const_logic_1;
        else 
            dw_weight2_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dw_weight2_2_address0 <= zext_ln58_19_fu_1571_p1(7 - 1 downto 0);

    dw_weight2_2_ce0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            dw_weight2_2_ce0 <= ap_const_logic_1;
        else 
            dw_weight2_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dw_weight2_3_address0 <= zext_ln58_19_fu_1571_p1(7 - 1 downto 0);

    dw_weight2_3_ce0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            dw_weight2_3_ce0 <= ap_const_logic_1;
        else 
            dw_weight2_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    h_fu_745_p2 <= std_logic_vector(unsigned(ap_const_lv6_1) + unsigned(ap_phi_mux_h_0_phi_fu_472_p4));
    icmp_ln33_fu_733_p2 <= "1" when (indvar_flatten13_reg_457 = ap_const_lv15_4DA0) else "0";
    icmp_ln34_fu_751_p2 <= "1" when (indvar_flatten_reg_479 = ap_const_lv10_1B0) else "0";
    icmp_ln35_fu_779_p2 <= "1" when (d_0_reg_501 = ap_const_lv6_30) else "0";
    icmp_ln43_fu_925_p2 <= "1" when (indvar_flatten34_reg_512 = ap_const_lv15_4080) else "0";
    icmp_ln44_fu_943_p2 <= "1" when (indvar_flatten20_reg_534 = ap_const_lv10_180) else "0";
    icmp_ln45_fu_983_p2 <= "1" when (id_0_reg_556 = ap_const_lv6_30) else "0";
    icmp_ln52_fu_1131_p2 <= "1" when (ap_phi_mux_indvar_flatten135_phi_fu_571_p4 = ap_const_lv18_20400) else "0";
    icmp_ln53_fu_1149_p2 <= "1" when (ap_phi_mux_indvar_flatten91_phi_fu_593_p4 = ap_const_lv17_8100) else "0";
    icmp_ln54_fu_1237_p2 <= "1" when (ap_phi_mux_indvar_flatten59_phi_fu_615_p4 = ap_const_lv15_4080) else "0";
    icmp_ln55_fu_1225_p2 <= "1" when (ap_phi_mux_indvar_flatten41_phi_fu_637_p4 = ap_const_lv10_180) else "0";
    icmp_ln56_fu_1213_p2 <= "1" when (ap_phi_mux_id3_0_phi_fu_659_p4 = ap_const_lv6_30) else "0";
    icmp_ln65_fu_1751_p2 <= "1" when (indvar_flatten156_reg_666 = ap_const_lv15_4080) else "0";
    icmp_ln66_fu_1769_p2 <= "1" when (indvar_flatten142_reg_688 = ap_const_lv10_180) else "0";
    icmp_ln67_fu_1809_p2 <= "1" when (id6_0_reg_710 = ap_const_lv6_30) else "0";
    id_1_fu_1917_p2 <= std_logic_vector(unsigned(ap_const_lv6_1) + unsigned(select_ln69_2_fu_1833_p3));
    id_2_fu_1593_p2 <= std_logic_vector(unsigned(select_ln58_7_fu_1473_p3) + unsigned(ap_const_lv6_1));
    id_fu_1091_p2 <= std_logic_vector(unsigned(select_ln47_2_fu_1007_p3) + unsigned(ap_const_lv6_1));

    in_stream_V_blk_n_assign_proc : process(in_stream_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln33_reg_1955)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln33_reg_1955 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            in_stream_V_blk_n <= in_stream_V_empty_n;
        else 
            in_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_stream_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln33_reg_1955, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln33_reg_1955 = ap_const_lv1_0))) then 
            in_stream_V_read <= ap_const_logic_1;
        else 
            in_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;

    kh_fu_1143_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(ap_phi_mux_kh_0_phi_fu_582_p4));
    kw_fu_1249_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) + unsigned(select_ln52_fu_1155_p3));
    oh_3_fu_1763_p2 <= std_logic_vector(unsigned(ap_const_lv6_1) + unsigned(ap_phi_mux_oh4_0_phi_fu_681_p4));
    oh_4_fu_1365_p2 <= std_logic_vector(unsigned(ap_const_lv6_1) + unsigned(select_ln53_fu_1261_p3));
    oh_fu_937_p2 <= std_logic_vector(unsigned(ap_const_lv6_1) + unsigned(oh_0_reg_523));
    or_ln38_fu_797_p2 <= (icmp_ln34_fu_751_p2 or and_ln38_fu_785_p2);
    or_ln47_fu_1001_p2 <= (icmp_ln44_fu_943_p2 or and_ln47_fu_989_p2);
    or_ln53_1_fu_1347_p2 <= (xor_ln53_fu_1341_p2 or icmp_ln53_fu_1149_p2);
    or_ln53_fu_1255_p2 <= (icmp_ln53_fu_1149_p2 or and_ln52_2_fu_1243_p2);
    or_ln58_2_fu_1377_p2 <= (or_ln58_fu_1371_p2 or icmp_ln53_fu_1149_p2);
    or_ln58_3_fu_1461_p2 <= (and_ln58_fu_1449_p2 or and_ln53_1_fu_1359_p2);
    or_ln58_4_fu_1467_p2 <= (or_ln58_3_fu_1461_p2 or or_ln53_fu_1255_p2);
    or_ln58_fu_1371_p2 <= (and_ln53_1_fu_1359_p2 or and_ln52_2_fu_1243_p2);
    or_ln69_fu_1827_p2 <= (icmp_ln66_fu_1769_p2 or and_ln69_fu_1815_p2);

    out_stream_V_blk_n_assign_proc : process(out_stream_V_full_n, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0, icmp_ln65_reg_2173)
    begin
        if (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (icmp_ln65_reg_2173 = ap_const_lv1_0))) then 
            out_stream_V_blk_n <= out_stream_V_full_n;
        else 
            out_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_stream_V_din <= outprepare_fu_1940_p6;

    out_stream_V_write_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, icmp_ln65_reg_2173, ap_block_pp3_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (icmp_ln65_reg_2173 = ap_const_lv1_0))) then 
            out_stream_V_write <= ap_const_logic_1;
        else 
            out_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;

    outprepare_fu_1940_p5 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln69_reg_2192),32));
    ow_1_fu_1455_p2 <= std_logic_vector(unsigned(ap_const_lv4_1) + unsigned(select_ln58_fu_1383_p3));
    ow_2_fu_1821_p2 <= std_logic_vector(unsigned(ap_const_lv4_1) + unsigned(select_ln69_fu_1775_p3));
    ow_fu_995_p2 <= std_logic_vector(unsigned(ap_const_lv4_1) + unsigned(select_ln47_fu_949_p3));
    p_shl15_cast_fu_1033_p3 <= (add_ln47_fu_1027_p2 & ap_const_lv4_0);
    p_shl17_cast_fu_1299_p3 <= (trunc_ln58_fu_1295_p1 & ap_const_lv4_0);
    p_shl20_cast_fu_1698_p3 <= (trunc_ln58_1_fu_1694_p1 & ap_const_lv4_0);
    p_shl21_cast_fu_1710_p3 <= (trunc_ln58_2_fu_1706_p1 & ap_const_lv2_0);
    p_shl22_cast_fu_1517_p3 <= (trunc_ln58_3_fu_1513_p1 & ap_const_lv4_0);
    p_shl23_cast_fu_1529_p3 <= (trunc_ln58_4_fu_1525_p1 & ap_const_lv2_0);
    p_shl24_cast_fu_1859_p3 <= (add_ln69_fu_1853_p2 & ap_const_lv4_0);
    p_shl_cast_fu_882_p3 <= (add_ln38_2_fu_876_p2 & ap_const_lv4_0);
    select_ln34_fu_845_p3 <= 
        ap_const_lv10_1 when (icmp_ln34_fu_751_p2(0) = '1') else 
        add_ln34_1_fu_839_p2;
    select_ln38_1_fu_765_p3 <= 
        h_fu_745_p2 when (icmp_ln34_fu_751_p2(0) = '1') else 
        ap_phi_mux_h_0_phi_fu_472_p4;
    select_ln38_2_fu_803_p3 <= 
        ap_const_lv6_0 when (or_ln38_fu_797_p2(0) = '1') else 
        d_0_reg_501;
    select_ln38_3_fu_811_p3 <= 
        w_fu_791_p2 when (and_ln38_fu_785_p2(0) = '1') else 
        select_ln38_fu_757_p3;
    select_ln38_fu_757_p3 <= 
        ap_const_lv4_0 when (icmp_ln34_fu_751_p2(0) = '1') else 
        ap_phi_mux_w_0_phi_fu_494_p4;
    select_ln44_fu_1103_p3 <= 
        ap_const_lv10_1 when (icmp_ln44_fu_943_p2(0) = '1') else 
        add_ln44_2_fu_1097_p2;
    select_ln47_1_fu_957_p3 <= 
        oh_fu_937_p2 when (icmp_ln44_fu_943_p2(0) = '1') else 
        oh_0_reg_523;
    select_ln47_2_fu_1007_p3 <= 
        ap_const_lv6_0 when (or_ln47_fu_1001_p2(0) = '1') else 
        id_0_reg_556;
    select_ln47_3_fu_1015_p3 <= 
        ow_fu_995_p2 when (and_ln47_fu_989_p2(0) = '1') else 
        select_ln47_fu_949_p3;
    select_ln47_fu_949_p3 <= 
        ap_const_lv4_0 when (icmp_ln44_fu_943_p2(0) = '1') else 
        ow_0_reg_545;
    select_ln52_1_fu_1163_p3 <= 
        kh_fu_1143_p2 when (icmp_ln53_fu_1149_p2(0) = '1') else 
        ap_phi_mux_kh_0_phi_fu_582_p4;
    select_ln52_2_fu_1191_p3 <= 
        zext_ln52_3_fu_1187_p1 when (icmp_ln53_fu_1149_p2(0) = '1') else 
        add_ln58_fu_1119_p2;
    select_ln52_3_fu_1199_p3 <= 
        ap_const_lv4_0 when (icmp_ln53_fu_1149_p2(0) = '1') else 
        add_ln58_1_fu_1125_p2;
    select_ln52_fu_1155_p3 <= 
        ap_const_lv2_0 when (icmp_ln53_fu_1149_p2(0) = '1') else 
        ap_phi_mux_kw_0_phi_fu_604_p4;
    select_ln53_4_fu_1269_p3 <= 
        kw_fu_1249_p2 when (and_ln52_2_fu_1243_p2(0) = '1') else 
        select_ln52_fu_1155_p3;
    select_ln53_5_fu_1325_p3 <= 
        zext_ln52_1_fu_1171_p1 when (and_ln52_2_fu_1243_p2(0) = '1') else 
        select_ln52_2_fu_1191_p3;
    select_ln53_6_fu_1333_p3 <= 
        zext_ln53_6_fu_1281_p1 when (and_ln52_2_fu_1243_p2(0) = '1') else 
        select_ln52_3_fu_1199_p3;
    select_ln53_7_fu_1633_p3 <= 
        ap_const_lv17_1 when (icmp_ln53_fu_1149_p2(0) = '1') else 
        add_ln53_3_fu_1627_p2;
    select_ln53_fu_1261_p3 <= 
        ap_const_lv6_0 when (or_ln53_fu_1255_p2(0) = '1') else 
        ap_phi_mux_oh1_0_phi_fu_626_p4;
    select_ln54_fu_1619_p3 <= 
        ap_const_lv15_1 when (or_ln53_fu_1255_p2(0) = '1') else 
        add_ln54_1_fu_1613_p2;
    select_ln55_fu_1605_p3 <= 
        ap_const_lv10_1 when (or_ln58_2_fu_1377_p2(0) = '1') else 
        add_ln55_1_fu_1599_p2;
    select_ln58_4_fu_1391_p3 <= 
        oh_4_fu_1365_p2 when (and_ln53_1_fu_1359_p2(0) = '1') else 
        select_ln53_fu_1261_p3;
    select_ln58_5_fu_1405_p3 <= 
        add_ln58_6_fu_1399_p2 when (and_ln53_1_fu_1359_p2(0) = '1') else 
        select_ln53_5_fu_1325_p3;
    select_ln58_6_fu_1435_p3 <= 
        zext_ln53_5_fu_1277_p1 when (and_ln53_1_fu_1359_p2(0) = '1') else 
        select_ln53_6_fu_1333_p3;
    select_ln58_7_fu_1473_p3 <= 
        ap_const_lv6_0 when (or_ln58_4_fu_1467_p2(0) = '1') else 
        ap_phi_mux_id3_0_phi_fu_659_p4;
    select_ln58_8_fu_1481_p3 <= 
        ow_1_fu_1455_p2 when (and_ln58_fu_1449_p2(0) = '1') else 
        select_ln58_fu_1383_p3;
    select_ln58_9_fu_1495_p3 <= 
        add_ln58_9_fu_1489_p2 when (and_ln58_fu_1449_p2(0) = '1') else 
        select_ln58_6_fu_1435_p3;
    select_ln58_fu_1383_p3 <= 
        ap_const_lv4_0 when (or_ln58_2_fu_1377_p2(0) = '1') else 
        ap_phi_mux_ow2_0_phi_fu_648_p4;
    select_ln66_fu_1929_p3 <= 
        ap_const_lv10_1 when (icmp_ln66_fu_1769_p2(0) = '1') else 
        add_ln66_1_fu_1923_p2;
    select_ln69_1_fu_1783_p3 <= 
        oh_3_fu_1763_p2 when (icmp_ln66_fu_1769_p2(0) = '1') else 
        ap_phi_mux_oh4_0_phi_fu_681_p4;
    select_ln69_2_fu_1833_p3 <= 
        ap_const_lv6_0 when (or_ln69_fu_1827_p2(0) = '1') else 
        id6_0_reg_710;
    select_ln69_3_fu_1841_p3 <= 
        ow_2_fu_1821_p2 when (and_ln69_fu_1815_p2(0) = '1') else 
        select_ln69_fu_1775_p3;
    select_ln69_fu_1775_p3 <= 
        ap_const_lv4_0 when (icmp_ln66_fu_1769_p2(0) = '1') else 
        ap_phi_mux_ow5_0_phi_fu_703_p4;
    sub_ln38_fu_902_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_882_p3) - unsigned(zext_ln38_3_fu_898_p1));
    sub_ln47_fu_1053_p2 <= std_logic_vector(unsigned(p_shl15_cast_fu_1033_p3) - unsigned(zext_ln47_2_fu_1049_p1));
    sub_ln58_3_fu_1718_p2 <= std_logic_vector(unsigned(p_shl20_cast_fu_1698_p3) - unsigned(p_shl21_cast_fu_1710_p3));
    sub_ln58_4_fu_1537_p2 <= std_logic_vector(unsigned(p_shl22_cast_fu_1517_p3) - unsigned(p_shl23_cast_fu_1529_p3));
    sub_ln58_fu_1319_p2 <= std_logic_vector(unsigned(p_shl17_cast_fu_1299_p3) - unsigned(zext_ln58_fu_1315_p1));
    sub_ln69_fu_1879_p2 <= std_logic_vector(unsigned(p_shl24_cast_fu_1859_p3) - unsigned(zext_ln69_3_fu_1875_p1));
    tmp_267_fu_856_p3 <= (select_ln38_1_reg_1964 & ap_const_lv3_0);
    tmp_270_fu_965_p3 <= (select_ln47_1_fu_957_p3 & ap_const_lv3_0);
    tmp_271_fu_1041_p3 <= (add_ln47_fu_1027_p2 & ap_const_lv2_0);
    tmp_272_fu_1063_p4 <= select_ln47_2_fu_1007_p3(5 downto 2);
    tmp_273_fu_1175_p3 <= (select_ln52_1_fu_1163_p3 & ap_const_lv1_0);
    tmp_274_fu_1307_p3 <= (add_ln58_5_fu_1289_p2 & ap_const_lv2_0);
    tmp_275_fu_1674_p3 <= (select_ln58_4_reg_2046 & ap_const_lv3_0);
    tmp_276_fu_1417_p3 <= (select_ln58_5_fu_1405_p3 & ap_const_lv3_0);
    tmp_277_fu_1547_p4 <= select_ln58_7_fu_1473_p3(5 downto 2);
    tmp_278_fu_1791_p3 <= (select_ln69_1_fu_1783_p3 & ap_const_lv3_0);
    tmp_279_fu_1867_p3 <= (add_ln69_fu_1853_p2 & ap_const_lv2_0);
    tmp_280_fu_1889_p4 <= select_ln69_2_fu_1833_p3(5 downto 2);
    tmp_fu_890_p3 <= (add_ln38_2_fu_876_p2 & ap_const_lv2_0);
    trunc_ln38_fu_819_p1 <= select_ln38_2_fu_803_p3(2 - 1 downto 0);
    trunc_ln47_fu_1059_p1 <= select_ln47_2_fu_1007_p3(2 - 1 downto 0);
    trunc_ln58_1_fu_1694_p1 <= add_ln58_8_fu_1688_p2(10 - 1 downto 0);
    trunc_ln58_2_fu_1706_p1 <= add_ln58_8_fu_1688_p2(12 - 1 downto 0);
    trunc_ln58_3_fu_1513_p1 <= add_ln58_10_fu_1507_p2(10 - 1 downto 0);
    trunc_ln58_4_fu_1525_p1 <= add_ln58_10_fu_1507_p2(12 - 1 downto 0);
    trunc_ln58_5_fu_1543_p1 <= select_ln58_7_fu_1473_p3(2 - 1 downto 0);
    trunc_ln58_fu_1295_p1 <= add_ln58_5_fu_1289_p2(4 - 1 downto 0);
    trunc_ln69_fu_1885_p1 <= select_ln69_2_fu_1833_p3(2 - 1 downto 0);
    w_fu_791_p2 <= std_logic_vector(unsigned(ap_const_lv4_1) + unsigned(select_ln38_fu_757_p3));

    x_7_0_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_block_pp2_stage0, zext_ln38_5_fu_917_p1, zext_ln58_20_fu_1585_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            x_7_0_address0 <= zext_ln58_20_fu_1585_p1(13 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            x_7_0_address0 <= zext_ln38_5_fu_917_p1(13 - 1 downto 0);
        else 
            x_7_0_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    x_7_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            x_7_0_ce0 <= ap_const_logic_1;
        else 
            x_7_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    x_7_0_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln38_reg_1977)
    begin
        if (((trunc_ln38_reg_1977 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            x_7_0_we0 <= ap_const_logic_1;
        else 
            x_7_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    x_7_1_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_block_pp2_stage0, zext_ln38_5_fu_917_p1, zext_ln58_20_fu_1585_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            x_7_1_address0 <= zext_ln58_20_fu_1585_p1(13 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            x_7_1_address0 <= zext_ln38_5_fu_917_p1(13 - 1 downto 0);
        else 
            x_7_1_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    x_7_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            x_7_1_ce0 <= ap_const_logic_1;
        else 
            x_7_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    x_7_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln38_reg_1977)
    begin
        if (((trunc_ln38_reg_1977 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            x_7_1_we0 <= ap_const_logic_1;
        else 
            x_7_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    x_7_2_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_block_pp2_stage0, zext_ln38_5_fu_917_p1, zext_ln58_20_fu_1585_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            x_7_2_address0 <= zext_ln58_20_fu_1585_p1(13 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            x_7_2_address0 <= zext_ln38_5_fu_917_p1(13 - 1 downto 0);
        else 
            x_7_2_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    x_7_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            x_7_2_ce0 <= ap_const_logic_1;
        else 
            x_7_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    x_7_2_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln38_reg_1977)
    begin
        if (((trunc_ln38_reg_1977 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            x_7_2_we0 <= ap_const_logic_1;
        else 
            x_7_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    x_7_3_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_block_pp2_stage0, zext_ln38_5_fu_917_p1, zext_ln58_20_fu_1585_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            x_7_3_address0 <= zext_ln58_20_fu_1585_p1(13 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            x_7_3_address0 <= zext_ln38_5_fu_917_p1(13 - 1 downto 0);
        else 
            x_7_3_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    x_7_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            x_7_3_ce0 <= ap_const_logic_1;
        else 
            x_7_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    x_7_3_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln38_reg_1977)
    begin
        if (((trunc_ln38_reg_1977 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            x_7_3_we0 <= ap_const_logic_1;
        else 
            x_7_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln38_fu_773_p2 <= (icmp_ln34_fu_751_p2 xor ap_const_lv1_1);
    xor_ln47_fu_977_p2 <= (icmp_ln44_fu_943_p2 xor ap_const_lv1_1);
    xor_ln52_fu_1207_p2 <= (icmp_ln53_fu_1149_p2 xor ap_const_lv1_1);
    xor_ln53_fu_1341_p2 <= (icmp_ln54_fu_1237_p2 xor ap_const_lv1_1);
    xor_ln58_fu_1443_p2 <= (ap_const_lv1_1 xor and_ln53_1_fu_1359_p2);
    xor_ln69_fu_1803_p2 <= (icmp_ln66_fu_1769_p2 xor ap_const_lv1_1);

    y_6_0_address0_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0, ap_CS_fsm_state5, ap_enable_reg_pp2_iter0, y_6_0_addr_1_reg_2143, ap_CS_fsm_pp2_stage4, ap_enable_reg_pp3_iter0, ap_enable_reg_pp2_iter1, ap_CS_fsm_pp2_stage3, zext_ln47_4_fu_1083_p1, zext_ln58_21_fu_1729_p1, ap_block_pp2_stage4, zext_ln69_5_fu_1909_p1, ap_block_pp2_stage3)
    begin
        if (((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            y_6_0_address0 <= zext_ln69_5_fu_1909_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1))) then 
            y_6_0_address0 <= y_6_0_addr_1_reg_2143;
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then 
            y_6_0_address0 <= zext_ln58_21_fu_1729_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            y_6_0_address0 <= zext_ln47_4_fu_1083_p1(13 - 1 downto 0);
        else 
            y_6_0_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    y_6_0_ce0_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_CS_fsm_state5, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage4, ap_block_pp2_stage4_11001, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter0, ap_enable_reg_pp2_iter1, ap_CS_fsm_pp2_stage3, ap_block_pp2_stage3_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)))) then 
            y_6_0_ce0 <= ap_const_logic_1;
        else 
            y_6_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    y_6_0_d0_assign_proc : process(ap_CS_fsm_state5, ap_enable_reg_pp2_iter1, ap_CS_fsm_pp2_stage3, grp_fu_721_p2, ap_block_pp2_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1))) then 
            y_6_0_d0 <= grp_fu_721_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            y_6_0_d0 <= ap_const_lv32_0;
        else 
            y_6_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    y_6_0_we0_assign_proc : process(ap_CS_fsm_state5, icmp_ln43_fu_925_p2, trunc_ln58_5_reg_2058_pp2_iter1_reg, ap_enable_reg_pp2_iter1, ap_CS_fsm_pp2_stage3, trunc_ln47_fu_1059_p1, ap_block_pp2_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (trunc_ln58_5_reg_2058_pp2_iter1_reg = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1)) or ((trunc_ln47_fu_1059_p1 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln43_fu_925_p2 = ap_const_lv1_0)))) then 
            y_6_0_we0 <= ap_const_logic_1;
        else 
            y_6_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    y_6_1_address0_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0, ap_CS_fsm_state5, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage4, y_6_1_addr_1_reg_2148, ap_enable_reg_pp3_iter0, ap_enable_reg_pp2_iter1, ap_CS_fsm_pp2_stage3, zext_ln47_4_fu_1083_p1, zext_ln58_21_fu_1729_p1, ap_block_pp2_stage4, zext_ln69_5_fu_1909_p1, ap_block_pp2_stage3)
    begin
        if (((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            y_6_1_address0 <= zext_ln69_5_fu_1909_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1))) then 
            y_6_1_address0 <= y_6_1_addr_1_reg_2148;
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then 
            y_6_1_address0 <= zext_ln58_21_fu_1729_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            y_6_1_address0 <= zext_ln47_4_fu_1083_p1(13 - 1 downto 0);
        else 
            y_6_1_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    y_6_1_ce0_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_CS_fsm_state5, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage4, ap_block_pp2_stage4_11001, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter0, ap_enable_reg_pp2_iter1, ap_CS_fsm_pp2_stage3, ap_block_pp2_stage3_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)))) then 
            y_6_1_ce0 <= ap_const_logic_1;
        else 
            y_6_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    y_6_1_d0_assign_proc : process(ap_CS_fsm_state5, ap_enable_reg_pp2_iter1, ap_CS_fsm_pp2_stage3, grp_fu_721_p2, ap_block_pp2_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1))) then 
            y_6_1_d0 <= grp_fu_721_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            y_6_1_d0 <= ap_const_lv32_0;
        else 
            y_6_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    y_6_1_we0_assign_proc : process(ap_CS_fsm_state5, icmp_ln43_fu_925_p2, trunc_ln58_5_reg_2058_pp2_iter1_reg, ap_enable_reg_pp2_iter1, ap_CS_fsm_pp2_stage3, trunc_ln47_fu_1059_p1, ap_block_pp2_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (trunc_ln58_5_reg_2058_pp2_iter1_reg = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1)) or ((trunc_ln47_fu_1059_p1 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln43_fu_925_p2 = ap_const_lv1_0)))) then 
            y_6_1_we0 <= ap_const_logic_1;
        else 
            y_6_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    y_6_2_address0_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0, ap_CS_fsm_state5, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage4, y_6_2_addr_1_reg_2153, ap_enable_reg_pp3_iter0, ap_enable_reg_pp2_iter1, ap_CS_fsm_pp2_stage3, zext_ln47_4_fu_1083_p1, zext_ln58_21_fu_1729_p1, ap_block_pp2_stage4, zext_ln69_5_fu_1909_p1, ap_block_pp2_stage3)
    begin
        if (((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            y_6_2_address0 <= zext_ln69_5_fu_1909_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1))) then 
            y_6_2_address0 <= y_6_2_addr_1_reg_2153;
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then 
            y_6_2_address0 <= zext_ln58_21_fu_1729_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            y_6_2_address0 <= zext_ln47_4_fu_1083_p1(13 - 1 downto 0);
        else 
            y_6_2_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    y_6_2_ce0_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_CS_fsm_state5, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage4, ap_block_pp2_stage4_11001, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter0, ap_enable_reg_pp2_iter1, ap_CS_fsm_pp2_stage3, ap_block_pp2_stage3_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)))) then 
            y_6_2_ce0 <= ap_const_logic_1;
        else 
            y_6_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    y_6_2_d0_assign_proc : process(ap_CS_fsm_state5, ap_enable_reg_pp2_iter1, ap_CS_fsm_pp2_stage3, grp_fu_721_p2, ap_block_pp2_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1))) then 
            y_6_2_d0 <= grp_fu_721_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            y_6_2_d0 <= ap_const_lv32_0;
        else 
            y_6_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    y_6_2_we0_assign_proc : process(ap_CS_fsm_state5, icmp_ln43_fu_925_p2, trunc_ln58_5_reg_2058_pp2_iter1_reg, ap_enable_reg_pp2_iter1, ap_CS_fsm_pp2_stage3, trunc_ln47_fu_1059_p1, ap_block_pp2_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (trunc_ln58_5_reg_2058_pp2_iter1_reg = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1)) or ((trunc_ln47_fu_1059_p1 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln43_fu_925_p2 = ap_const_lv1_0)))) then 
            y_6_2_we0 <= ap_const_logic_1;
        else 
            y_6_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    y_6_3_address0_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0, ap_CS_fsm_state5, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage4, y_6_3_addr_1_reg_2158, ap_enable_reg_pp3_iter0, ap_enable_reg_pp2_iter1, ap_CS_fsm_pp2_stage3, zext_ln47_4_fu_1083_p1, zext_ln58_21_fu_1729_p1, ap_block_pp2_stage4, zext_ln69_5_fu_1909_p1, ap_block_pp2_stage3)
    begin
        if (((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            y_6_3_address0 <= zext_ln69_5_fu_1909_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1))) then 
            y_6_3_address0 <= y_6_3_addr_1_reg_2158;
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then 
            y_6_3_address0 <= zext_ln58_21_fu_1729_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            y_6_3_address0 <= zext_ln47_4_fu_1083_p1(13 - 1 downto 0);
        else 
            y_6_3_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    y_6_3_ce0_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_CS_fsm_state5, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage4, ap_block_pp2_stage4_11001, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter0, ap_enable_reg_pp2_iter1, ap_CS_fsm_pp2_stage3, ap_block_pp2_stage3_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)))) then 
            y_6_3_ce0 <= ap_const_logic_1;
        else 
            y_6_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    y_6_3_d0_assign_proc : process(ap_CS_fsm_state5, ap_enable_reg_pp2_iter1, ap_CS_fsm_pp2_stage3, grp_fu_721_p2, ap_block_pp2_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1))) then 
            y_6_3_d0 <= grp_fu_721_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            y_6_3_d0 <= ap_const_lv32_0;
        else 
            y_6_3_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    y_6_3_we0_assign_proc : process(ap_CS_fsm_state5, icmp_ln43_fu_925_p2, trunc_ln58_5_reg_2058_pp2_iter1_reg, ap_enable_reg_pp2_iter1, ap_CS_fsm_pp2_stage3, trunc_ln47_fu_1059_p1, ap_block_pp2_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (trunc_ln58_5_reg_2058_pp2_iter1_reg = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1)) or ((trunc_ln47_fu_1059_p1 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln43_fu_925_p2 = ap_const_lv1_0)))) then 
            y_6_3_we0 <= ap_const_logic_1;
        else 
            y_6_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln38_1_fu_863_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_267_fu_856_p3),10));
    zext_ln38_2_fu_873_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln38_3_reg_1971),10));
    zext_ln38_3_fu_898_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_890_p3),14));
    zext_ln38_4_fu_908_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_269_reg_1981),14));
    zext_ln38_5_fu_917_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln38_3_fu_911_p2),64));
    zext_ln38_fu_853_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln38_1_reg_1964),10));
    zext_ln47_1_fu_1023_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln47_3_fu_1015_p3),10));
    zext_ln47_2_fu_1049_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_271_fu_1041_p3),14));
    zext_ln47_3_fu_1073_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_272_fu_1063_p4),14));
    zext_ln47_4_fu_1083_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln47_1_fu_1077_p2),64));
    zext_ln47_fu_973_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_270_fu_965_p3),10));
    zext_ln52_1_fu_1171_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln52_1_fu_1163_p3),6));
    zext_ln52_2_fu_1183_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_273_fu_1175_p3),5));
    zext_ln52_3_fu_1187_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(kh_fu_1143_p2),6));
    zext_ln52_fu_1111_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_kh_0_phi_fu_582_p4),6));
    zext_ln53_5_fu_1277_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln53_4_fu_1269_p3),4));
    zext_ln53_6_fu_1281_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(kw_fu_1249_p2),4));
    zext_ln53_7_fu_1285_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln53_4_fu_1269_p3),5));
    zext_ln53_fu_1115_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_kw_0_phi_fu_604_p4),4));
    zext_ln58_10_fu_1641_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln58_5_reg_2058),32));
    zext_ln58_12_fu_1681_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_275_fu_1674_p3),64));
    zext_ln58_13_fu_1413_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln58_5_fu_1405_p3),64));
    zext_ln58_14_fu_1425_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_276_fu_1417_p3),64));
    zext_ln58_15_fu_1685_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln58_8_reg_2052),64));
    zext_ln58_16_fu_1503_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln58_9_fu_1495_p3),64));
    zext_ln58_17_fu_1557_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_277_fu_1547_p4),14));
    zext_ln58_18_fu_1561_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_277_fu_1547_p4),8));
    zext_ln58_19_fu_1571_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln58_11_fu_1565_p2),64));
    zext_ln58_20_fu_1585_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln58_12_fu_1579_p2),64));
    zext_ln58_21_fu_1729_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln58_13_fu_1724_p2),64));
    zext_ln58_fu_1315_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_274_fu_1307_p3),8));
    zext_ln69_1_fu_1849_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln69_3_fu_1841_p3),10));
    zext_ln69_3_fu_1875_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_279_fu_1867_p3),14));
    zext_ln69_4_fu_1899_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_280_fu_1889_p4),14));
    zext_ln69_5_fu_1909_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln69_1_fu_1903_p2),64));
    zext_ln69_fu_1799_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_278_fu_1791_p3),10));
end behav;
