-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity weight_loader is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    weight_in_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    weight_in_TVALID : IN STD_LOGIC;
    weight_in_TREADY : OUT STD_LOGIC;
    weight_in_TLAST : IN STD_LOGIC;
    dw_weight1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    dw_weight1_ce0 : OUT STD_LOGIC;
    dw_weight1_we0 : OUT STD_LOGIC;
    dw_weight1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pw_weight1_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    pw_weight1_0_ce0 : OUT STD_LOGIC;
    pw_weight1_0_we0 : OUT STD_LOGIC;
    pw_weight1_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pw_weight1_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    pw_weight1_1_ce0 : OUT STD_LOGIC;
    pw_weight1_1_we0 : OUT STD_LOGIC;
    pw_weight1_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pw_weight1_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    pw_weight1_2_ce0 : OUT STD_LOGIC;
    pw_weight1_2_we0 : OUT STD_LOGIC;
    pw_weight1_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pw_weight1_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    pw_weight1_3_ce0 : OUT STD_LOGIC;
    pw_weight1_3_we0 : OUT STD_LOGIC;
    pw_weight1_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    bn_bias1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    bn_bias1_ce0 : OUT STD_LOGIC;
    bn_bias1_we0 : OUT STD_LOGIC;
    bn_bias1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    dw_weight2_0_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    dw_weight2_0_ce1 : OUT STD_LOGIC;
    dw_weight2_0_we1 : OUT STD_LOGIC;
    dw_weight2_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    dw_weight2_1_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    dw_weight2_1_ce1 : OUT STD_LOGIC;
    dw_weight2_1_we1 : OUT STD_LOGIC;
    dw_weight2_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    dw_weight2_2_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    dw_weight2_2_ce1 : OUT STD_LOGIC;
    dw_weight2_2_we1 : OUT STD_LOGIC;
    dw_weight2_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    dw_weight2_3_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    dw_weight2_3_ce1 : OUT STD_LOGIC;
    dw_weight2_3_we1 : OUT STD_LOGIC;
    dw_weight2_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pw_weight2_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pw_weight2_0_ce0 : OUT STD_LOGIC;
    pw_weight2_0_we0 : OUT STD_LOGIC;
    pw_weight2_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pw_weight2_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pw_weight2_1_ce0 : OUT STD_LOGIC;
    pw_weight2_1_we0 : OUT STD_LOGIC;
    pw_weight2_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pw_weight2_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pw_weight2_2_ce0 : OUT STD_LOGIC;
    pw_weight2_2_we0 : OUT STD_LOGIC;
    pw_weight2_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pw_weight2_3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    pw_weight2_3_ce0 : OUT STD_LOGIC;
    pw_weight2_3_we0 : OUT STD_LOGIC;
    pw_weight2_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    bn_bias2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    bn_bias2_ce0 : OUT STD_LOGIC;
    bn_bias2_we0 : OUT STD_LOGIC;
    bn_bias2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    weights_rw_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    weights_rw_ce1 : OUT STD_LOGIC;
    weights_rw_we1 : OUT STD_LOGIC;
    weights_rw_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    bias_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    bias_r_ce0 : OUT STD_LOGIC;
    bias_r_we0 : OUT STD_LOGIC;
    bias_r_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    weights_zw_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    weights_zw_ce1 : OUT STD_LOGIC;
    weights_zw_we1 : OUT STD_LOGIC;
    weights_zw_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    bias_z_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    bias_z_ce0 : OUT STD_LOGIC;
    bias_z_we0 : OUT STD_LOGIC;
    bias_z_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    weights_hw_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    weights_hw_ce1 : OUT STD_LOGIC;
    weights_hw_we1 : OUT STD_LOGIC;
    weights_hw_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    bias_h_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    bias_h_ce0 : OUT STD_LOGIC;
    bias_h_we0 : OUT STD_LOGIC;
    bias_h_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    fc_weights1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    fc_weights1_ce0 : OUT STD_LOGIC;
    fc_weights1_we0 : OUT STD_LOGIC;
    fc_weights1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    fc_bias1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    fc_bias1_ce0 : OUT STD_LOGIC;
    fc_bias1_we0 : OUT STD_LOGIC;
    fc_bias1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    fc_weights2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    fc_weights2_ce0 : OUT STD_LOGIC;
    fc_weights2_we0 : OUT STD_LOGIC;
    fc_weights2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    fc_bias2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    fc_bias2_ce0 : OUT STD_LOGIC;
    fc_bias2_we0 : OUT STD_LOGIC;
    fc_bias2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    weights_ru_0_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weights_ru_0_ce1 : OUT STD_LOGIC;
    weights_ru_0_we1 : OUT STD_LOGIC;
    weights_ru_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    weights_ru_1_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weights_ru_1_ce1 : OUT STD_LOGIC;
    weights_ru_1_we1 : OUT STD_LOGIC;
    weights_ru_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    weights_ru_2_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weights_ru_2_ce1 : OUT STD_LOGIC;
    weights_ru_2_we1 : OUT STD_LOGIC;
    weights_ru_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    weights_ru_3_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weights_ru_3_ce1 : OUT STD_LOGIC;
    weights_ru_3_we1 : OUT STD_LOGIC;
    weights_ru_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    weights_zu_0_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weights_zu_0_ce1 : OUT STD_LOGIC;
    weights_zu_0_we1 : OUT STD_LOGIC;
    weights_zu_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    weights_zu_1_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weights_zu_1_ce1 : OUT STD_LOGIC;
    weights_zu_1_we1 : OUT STD_LOGIC;
    weights_zu_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    weights_zu_2_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weights_zu_2_ce1 : OUT STD_LOGIC;
    weights_zu_2_we1 : OUT STD_LOGIC;
    weights_zu_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    weights_zu_3_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weights_zu_3_ce1 : OUT STD_LOGIC;
    weights_zu_3_we1 : OUT STD_LOGIC;
    weights_zu_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    weights_hu_0_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weights_hu_0_ce1 : OUT STD_LOGIC;
    weights_hu_0_we1 : OUT STD_LOGIC;
    weights_hu_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    weights_hu_1_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weights_hu_1_ce1 : OUT STD_LOGIC;
    weights_hu_1_we1 : OUT STD_LOGIC;
    weights_hu_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    weights_hu_2_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weights_hu_2_ce1 : OUT STD_LOGIC;
    weights_hu_2_we1 : OUT STD_LOGIC;
    weights_hu_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    weights_hu_3_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weights_hu_3_ce1 : OUT STD_LOGIC;
    weights_hu_3_we1 : OUT STD_LOGIC;
    weights_hu_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of weight_loader is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (38 downto 0) := "000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (38 downto 0) := "000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (38 downto 0) := "000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (38 downto 0) := "000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (38 downto 0) := "000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (38 downto 0) := "000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (38 downto 0) := "000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (38 downto 0) := "000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (38 downto 0) := "000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (38 downto 0) := "001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (38 downto 0) := "010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (38 downto 0) := "100000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv6_30 : STD_LOGIC_VECTOR (5 downto 0) := "110000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv9_180 : STD_LOGIC_VECTOR (8 downto 0) := "110000000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv8_60 : STD_LOGIC_VECTOR (7 downto 0) := "01100000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv12_900 : STD_LOGIC_VECTOR (11 downto 0) := "100100000000";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv14_3C00 : STD_LOGIC_VECTOR (13 downto 0) := "11110000000000";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv6_28 : STD_LOGIC_VECTOR (5 downto 0) := "101000";
    constant ap_const_lv11_640 : STD_LOGIC_VECTOR (10 downto 0) := "11001000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv12_A00 : STD_LOGIC_VECTOR (11 downto 0) := "101000000000";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv10_300 : STD_LOGIC_VECTOR (9 downto 0) := "1100000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal weight_in_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln35_fu_1353_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal icmp_ln45_fu_1426_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal icmp_ln53_fu_1460_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal icmp_ln60_fu_1477_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal icmp_ln71_fu_1667_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal icmp_ln80_fu_1775_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal icmp_ln88_fu_1792_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal icmp_ln97_fu_1900_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal icmp_ln106_fu_1991_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal icmp_ln114_fu_2008_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal icmp_ln123_fu_2116_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal icmp_ln132_fu_2207_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal icmp_ln140_fu_2224_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal icmp_ln149_fu_2332_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal icmp_ln158_fu_2423_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal icmp_ln166_fu_2440_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal icmp_ln176_fu_2513_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal icmp_ln184_fu_2530_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal icmp_ln193_fu_2617_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln35_fu_1359_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_state2 : BOOLEAN;
    signal select_ln39_1_fu_1385_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_fu_1420_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln45_fu_1432_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_state4 : BOOLEAN;
    signal i_1_fu_1466_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_state6 : BOOLEAN;
    signal add_ln60_fu_1483_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_state8 : BOOLEAN;
    signal select_ln65_1_fu_1509_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln65_3_fu_1567_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal k_fu_1647_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln61_fu_1659_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln71_fu_1673_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_state10 : BOOLEAN;
    signal select_ln75_1_fu_1699_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_2_fu_1769_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_6_fu_1781_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_state12 : BOOLEAN;
    signal add_ln88_fu_1798_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_block_state14 : BOOLEAN;
    signal select_ln92_1_fu_1824_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_4_fu_1894_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln97_fu_1906_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state16 : BOOLEAN;
    signal select_ln101_1_fu_1932_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_3_fu_1985_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_11_fu_1997_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_state18 : BOOLEAN;
    signal add_ln114_fu_2014_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_block_state20 : BOOLEAN;
    signal select_ln118_1_fu_2040_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_6_fu_2110_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln123_fu_2122_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state22 : BOOLEAN;
    signal select_ln127_1_fu_2148_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_5_fu_2201_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_16_fu_2213_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_state24 : BOOLEAN;
    signal add_ln140_fu_2230_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_block_state26 : BOOLEAN;
    signal select_ln144_1_fu_2256_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_8_fu_2326_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln149_fu_2338_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state28 : BOOLEAN;
    signal select_ln153_1_fu_2364_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_7_fu_2417_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_21_fu_2429_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_state30 : BOOLEAN;
    signal add_ln166_fu_2446_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_state32 : BOOLEAN;
    signal select_ln170_1_fu_2472_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_9_fu_2507_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_24_fu_2519_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_state34 : BOOLEAN;
    signal add_ln184_fu_2536_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_state36 : BOOLEAN;
    signal select_ln188_1_fu_2562_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal j_10_fu_2611_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_27_fu_2623_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_state38 : BOOLEAN;
    signal indvar_flatten_reg_839 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_0_reg_850 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_0_reg_861 : STD_LOGIC_VECTOR (1 downto 0);
    signal j2_0_0_reg_872 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal i3_0_reg_883 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal indvar_flatten20_reg_894 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal i4_0_reg_905 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten6_reg_916 : STD_LOGIC_VECTOR (7 downto 0);
    signal j5_0_reg_927 : STD_LOGIC_VECTOR (1 downto 0);
    signal k_0_reg_938 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten27_reg_949 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal i6_0_reg_960 : STD_LOGIC_VECTOR (5 downto 0);
    signal j7_0_reg_971 : STD_LOGIC_VECTOR (5 downto 0);
    signal i8_0_reg_982 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal indvar_flatten34_reg_993 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal i9_0_reg_1004 : STD_LOGIC_VECTOR (8 downto 0);
    signal j10_0_reg_1015 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten41_reg_1026 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal i11_0_reg_1037 : STD_LOGIC_VECTOR (5 downto 0);
    signal j12_0_reg_1048 : STD_LOGIC_VECTOR (5 downto 0);
    signal i13_0_reg_1059 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal indvar_flatten48_reg_1070 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal i14_0_reg_1081 : STD_LOGIC_VECTOR (8 downto 0);
    signal j15_0_reg_1092 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten55_reg_1103 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal i16_0_reg_1114 : STD_LOGIC_VECTOR (5 downto 0);
    signal j17_0_reg_1125 : STD_LOGIC_VECTOR (5 downto 0);
    signal i18_0_reg_1136 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal indvar_flatten62_reg_1147 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal i19_0_reg_1158 : STD_LOGIC_VECTOR (8 downto 0);
    signal j20_0_reg_1169 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten69_reg_1180 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal i21_0_reg_1191 : STD_LOGIC_VECTOR (5 downto 0);
    signal j22_0_reg_1202 : STD_LOGIC_VECTOR (5 downto 0);
    signal i23_0_reg_1213 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal indvar_flatten76_reg_1224 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal i24_0_reg_1235 : STD_LOGIC_VECTOR (5 downto 0);
    signal j25_0_reg_1246 : STD_LOGIC_VECTOR (6 downto 0);
    signal i26_0_reg_1257 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal indvar_flatten83_reg_1268 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal i27_0_reg_1279 : STD_LOGIC_VECTOR (6 downto 0);
    signal j28_0_reg_1290 : STD_LOGIC_VECTOR (3 downto 0);
    signal i29_0_reg_1301 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal zext_ln39_1_fu_1415_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln48_fu_1452_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln56_fu_1472_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln65_4_fu_1639_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln75_fu_1761_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln83_fu_1787_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln92_3_fu_1886_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln101_3_fu_1980_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln109_fu_2003_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln118_3_fu_2102_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln127_3_fu_2196_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln135_fu_2219_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln144_3_fu_2318_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln153_3_fu_2412_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln161_fu_2435_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln170_1_fu_2502_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln179_fu_2525_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln188_fu_2606_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln196_fu_2629_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln48_fu_1438_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln65_1_fu_1615_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln75_fu_1707_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln92_fu_1862_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln118_fu_2078_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln144_fu_2294_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln36_fu_1371_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_1365_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_18_fu_1393_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln39_fu_1377_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln39_fu_1405_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln36_fu_1401_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln39_fu_1409_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal lshr_ln_fu_1442_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln61_fu_1495_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_3_fu_1489_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_19_fu_1517_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln62_fu_1535_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln65_fu_1529_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_fu_1501_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln65_fu_1541_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln65_fu_1553_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_11_fu_1547_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln65_1_fu_1575_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln65_fu_1525_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln65_fu_1579_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln65_fu_1585_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_20_fu_1597_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl_cast_fu_1589_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln65_2_fu_1605_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln65_2_fu_1559_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_21_fu_1619_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln65_3_fu_1629_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln65_fu_1609_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln65_1_fu_1633_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln61_1_fu_1653_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln72_fu_1685_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_5_fu_1679_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln75_1_mid2_v_fu_1711_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_22_fu_1721_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_23_fu_1733_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln75_fu_1729_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln75_1_fu_1741_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln75_fu_1691_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln75_2_fu_1751_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln75_fu_1745_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln75_fu_1755_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln89_fu_1810_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_8_fu_1804_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_24_fu_1832_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_25_fu_1844_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln92_fu_1840_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln92_1_fu_1852_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln92_fu_1816_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_39_fu_1866_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln92_2_fu_1876_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln92_fu_1856_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln92_1_fu_1880_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln98_fu_1918_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_10_fu_1912_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_26_fu_1940_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_27_fu_1952_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln101_1_fu_1960_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln101_fu_1948_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln101_fu_1924_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln101_fu_1964_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln101_2_fu_1970_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln101_1_fu_1974_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln115_fu_2026_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_13_fu_2020_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_28_fu_2048_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_29_fu_2060_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln118_fu_2056_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln118_1_fu_2068_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln118_fu_2032_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_40_fu_2082_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln118_2_fu_2092_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln118_fu_2072_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln118_1_fu_2096_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln124_fu_2134_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_15_fu_2128_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_30_fu_2156_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_31_fu_2168_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln127_1_fu_2176_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln127_fu_2164_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln127_fu_2140_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln127_fu_2180_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln127_2_fu_2186_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln127_1_fu_2190_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln141_fu_2242_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_18_fu_2236_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_32_fu_2264_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_33_fu_2276_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln144_fu_2272_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln144_1_fu_2284_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln144_fu_2248_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_41_fu_2298_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln144_2_fu_2308_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln144_fu_2288_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln144_1_fu_2312_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln150_fu_2350_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_20_fu_2344_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_34_fu_2372_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_35_fu_2384_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln153_1_fu_2392_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln153_fu_2380_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln153_fu_2356_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln153_fu_2396_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln153_2_fu_2402_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln153_1_fu_2406_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln167_fu_2458_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_23_fu_2452_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_36_fu_2480_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln170_fu_2464_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln170_fu_2492_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln167_fu_2488_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln170_fu_2496_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln185_fu_2548_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_26_fu_2542_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_38_fu_2578_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_37_fu_2570_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln188_fu_2586_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln188_fu_2554_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal sub_ln188_fu_2590_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln188_1_fu_2596_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln188_fu_2600_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (38 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    i11_0_reg_1037_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                i11_0_reg_1037 <= ap_const_lv6_0;
            elsif ((not(((icmp_ln97_fu_1900_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln97_fu_1900_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                i11_0_reg_1037 <= select_ln101_1_fu_1932_p3;
            end if; 
        end if;
    end process;

    i13_0_reg_1059_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                i13_0_reg_1059 <= ap_const_lv6_0;
            elsif ((not(((icmp_ln106_fu_1991_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln106_fu_1991_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                i13_0_reg_1059 <= i_11_fu_1997_p2;
            end if; 
        end if;
    end process;

    i14_0_reg_1081_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                i14_0_reg_1081 <= ap_const_lv9_0;
            elsif ((not(((icmp_ln114_fu_2008_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln114_fu_2008_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                i14_0_reg_1081 <= select_ln118_1_fu_2040_p3;
            end if; 
        end if;
    end process;

    i16_0_reg_1114_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
                i16_0_reg_1114 <= ap_const_lv6_0;
            elsif ((not(((icmp_ln123_fu_2116_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln123_fu_2116_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
                i16_0_reg_1114 <= select_ln127_1_fu_2148_p3;
            end if; 
        end if;
    end process;

    i18_0_reg_1136_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
                i18_0_reg_1136 <= ap_const_lv6_0;
            elsif ((not(((icmp_ln132_fu_2207_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln132_fu_2207_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
                i18_0_reg_1136 <= i_16_fu_2213_p2;
            end if; 
        end if;
    end process;

    i19_0_reg_1158_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                i19_0_reg_1158 <= ap_const_lv9_0;
            elsif ((not(((icmp_ln140_fu_2224_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln140_fu_2224_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                i19_0_reg_1158 <= select_ln144_1_fu_2256_p3;
            end if; 
        end if;
    end process;

    i21_0_reg_1191_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
                i21_0_reg_1191 <= ap_const_lv6_0;
            elsif ((not(((icmp_ln149_fu_2332_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln149_fu_2332_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state28))) then 
                i21_0_reg_1191 <= select_ln153_1_fu_2364_p3;
            end if; 
        end if;
    end process;

    i23_0_reg_1213_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
                i23_0_reg_1213 <= ap_const_lv6_0;
            elsif ((not(((icmp_ln158_fu_2423_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln158_fu_2423_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state30))) then 
                i23_0_reg_1213 <= i_21_fu_2429_p2;
            end if; 
        end if;
    end process;

    i24_0_reg_1235_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
                i24_0_reg_1235 <= ap_const_lv6_0;
            elsif ((not(((icmp_ln166_fu_2440_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln166_fu_2440_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state32))) then 
                i24_0_reg_1235 <= select_ln170_1_fu_2472_p3;
            end if; 
        end if;
    end process;

    i26_0_reg_1257_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
                i26_0_reg_1257 <= ap_const_lv7_0;
            elsif ((not(((icmp_ln176_fu_2513_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln176_fu_2513_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state34))) then 
                i26_0_reg_1257 <= i_24_fu_2519_p2;
            end if; 
        end if;
    end process;

    i27_0_reg_1279_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
                i27_0_reg_1279 <= ap_const_lv7_0;
            elsif ((not(((icmp_ln184_fu_2530_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln184_fu_2530_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state36))) then 
                i27_0_reg_1279 <= select_ln188_1_fu_2562_p3;
            end if; 
        end if;
    end process;

    i29_0_reg_1301_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
                i29_0_reg_1301 <= ap_const_lv4_0;
            elsif ((not(((icmp_ln193_fu_2617_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln193_fu_2617_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state38))) then 
                i29_0_reg_1301 <= i_27_fu_2623_p2;
            end if; 
        end if;
    end process;

    i3_0_reg_883_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                i3_0_reg_883 <= ap_const_lv6_0;
            elsif ((not(((icmp_ln53_fu_1460_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln53_fu_1460_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                i3_0_reg_883 <= i_1_fu_1466_p2;
            end if; 
        end if;
    end process;

    i4_0_reg_905_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                i4_0_reg_905 <= ap_const_lv3_0;
            elsif ((not(((icmp_ln60_fu_1477_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln60_fu_1477_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                i4_0_reg_905 <= select_ln65_1_fu_1509_p3;
            end if; 
        end if;
    end process;

    i6_0_reg_960_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                i6_0_reg_960 <= ap_const_lv6_0;
            elsif ((not(((icmp_ln71_fu_1667_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln71_fu_1667_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                i6_0_reg_960 <= select_ln75_1_fu_1699_p3;
            end if; 
        end if;
    end process;

    i8_0_reg_982_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                i8_0_reg_982 <= ap_const_lv6_0;
            elsif ((not(((icmp_ln80_fu_1775_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln80_fu_1775_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                i8_0_reg_982 <= i_6_fu_1781_p2;
            end if; 
        end if;
    end process;

    i9_0_reg_1004_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                i9_0_reg_1004 <= ap_const_lv9_0;
            elsif ((not(((icmp_ln88_fu_1792_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln88_fu_1792_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
                i9_0_reg_1004 <= select_ln92_1_fu_1824_p3;
            end if; 
        end if;
    end process;

    i_0_reg_850_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((icmp_ln35_fu_1353_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln35_fu_1353_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i_0_reg_850 <= select_ln39_1_fu_1385_p3;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_0_reg_850 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    indvar_flatten20_reg_894_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                indvar_flatten20_reg_894 <= ap_const_lv9_0;
            elsif ((not(((icmp_ln60_fu_1477_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln60_fu_1477_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                indvar_flatten20_reg_894 <= add_ln60_fu_1483_p2;
            end if; 
        end if;
    end process;

    indvar_flatten27_reg_949_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                indvar_flatten27_reg_949 <= ap_const_lv12_0;
            elsif ((not(((icmp_ln71_fu_1667_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln71_fu_1667_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                indvar_flatten27_reg_949 <= add_ln71_fu_1673_p2;
            end if; 
        end if;
    end process;

    indvar_flatten34_reg_993_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                indvar_flatten34_reg_993 <= ap_const_lv14_0;
            elsif ((not(((icmp_ln88_fu_1792_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln88_fu_1792_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
                indvar_flatten34_reg_993 <= add_ln88_fu_1798_p2;
            end if; 
        end if;
    end process;

    indvar_flatten41_reg_1026_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                indvar_flatten41_reg_1026 <= ap_const_lv11_0;
            elsif ((not(((icmp_ln97_fu_1900_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln97_fu_1900_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                indvar_flatten41_reg_1026 <= add_ln97_fu_1906_p2;
            end if; 
        end if;
    end process;

    indvar_flatten48_reg_1070_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                indvar_flatten48_reg_1070 <= ap_const_lv14_0;
            elsif ((not(((icmp_ln114_fu_2008_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln114_fu_2008_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                indvar_flatten48_reg_1070 <= add_ln114_fu_2014_p2;
            end if; 
        end if;
    end process;

    indvar_flatten55_reg_1103_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
                indvar_flatten55_reg_1103 <= ap_const_lv11_0;
            elsif ((not(((icmp_ln123_fu_2116_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln123_fu_2116_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
                indvar_flatten55_reg_1103 <= add_ln123_fu_2122_p2;
            end if; 
        end if;
    end process;

    indvar_flatten62_reg_1147_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                indvar_flatten62_reg_1147 <= ap_const_lv14_0;
            elsif ((not(((icmp_ln140_fu_2224_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln140_fu_2224_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                indvar_flatten62_reg_1147 <= add_ln140_fu_2230_p2;
            end if; 
        end if;
    end process;

    indvar_flatten69_reg_1180_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
                indvar_flatten69_reg_1180 <= ap_const_lv11_0;
            elsif ((not(((icmp_ln149_fu_2332_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln149_fu_2332_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state28))) then 
                indvar_flatten69_reg_1180 <= add_ln149_fu_2338_p2;
            end if; 
        end if;
    end process;

    indvar_flatten6_reg_916_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                indvar_flatten6_reg_916 <= ap_const_lv8_0;
            elsif ((not(((icmp_ln60_fu_1477_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln60_fu_1477_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                indvar_flatten6_reg_916 <= select_ln61_fu_1659_p3;
            end if; 
        end if;
    end process;

    indvar_flatten76_reg_1224_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
                indvar_flatten76_reg_1224 <= ap_const_lv12_0;
            elsif ((not(((icmp_ln166_fu_2440_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln166_fu_2440_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state32))) then 
                indvar_flatten76_reg_1224 <= add_ln166_fu_2446_p2;
            end if; 
        end if;
    end process;

    indvar_flatten83_reg_1268_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
                indvar_flatten83_reg_1268 <= ap_const_lv10_0;
            elsif ((not(((icmp_ln184_fu_2530_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln184_fu_2530_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state36))) then 
                indvar_flatten83_reg_1268 <= add_ln184_fu_2536_p2;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_839_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((icmp_ln35_fu_1353_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln35_fu_1353_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                indvar_flatten_reg_839 <= add_ln35_fu_1359_p2;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_839 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    j10_0_reg_1015_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                j10_0_reg_1015 <= ap_const_lv6_0;
            elsif ((not(((icmp_ln88_fu_1792_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln88_fu_1792_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
                j10_0_reg_1015 <= j_4_fu_1894_p2;
            end if; 
        end if;
    end process;

    j12_0_reg_1048_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                j12_0_reg_1048 <= ap_const_lv6_0;
            elsif ((not(((icmp_ln97_fu_1900_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln97_fu_1900_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                j12_0_reg_1048 <= j_3_fu_1985_p2;
            end if; 
        end if;
    end process;

    j15_0_reg_1092_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                j15_0_reg_1092 <= ap_const_lv6_0;
            elsif ((not(((icmp_ln114_fu_2008_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln114_fu_2008_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                j15_0_reg_1092 <= j_6_fu_2110_p2;
            end if; 
        end if;
    end process;

    j17_0_reg_1125_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
                j17_0_reg_1125 <= ap_const_lv6_0;
            elsif ((not(((icmp_ln123_fu_2116_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln123_fu_2116_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
                j17_0_reg_1125 <= j_5_fu_2201_p2;
            end if; 
        end if;
    end process;

    j20_0_reg_1169_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                j20_0_reg_1169 <= ap_const_lv6_0;
            elsif ((not(((icmp_ln140_fu_2224_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln140_fu_2224_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                j20_0_reg_1169 <= j_8_fu_2326_p2;
            end if; 
        end if;
    end process;

    j22_0_reg_1202_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
                j22_0_reg_1202 <= ap_const_lv6_0;
            elsif ((not(((icmp_ln149_fu_2332_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln149_fu_2332_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state28))) then 
                j22_0_reg_1202 <= j_7_fu_2417_p2;
            end if; 
        end if;
    end process;

    j25_0_reg_1246_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
                j25_0_reg_1246 <= ap_const_lv7_0;
            elsif ((not(((icmp_ln166_fu_2440_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln166_fu_2440_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state32))) then 
                j25_0_reg_1246 <= j_9_fu_2507_p2;
            end if; 
        end if;
    end process;

    j28_0_reg_1290_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
                j28_0_reg_1290 <= ap_const_lv4_0;
            elsif ((not(((icmp_ln184_fu_2530_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln184_fu_2530_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state36))) then 
                j28_0_reg_1290 <= j_10_fu_2611_p2;
            end if; 
        end if;
    end process;

    j2_0_0_reg_872_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                j2_0_0_reg_872 <= ap_const_lv6_0;
            elsif ((not(((icmp_ln45_fu_1426_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln45_fu_1426_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                j2_0_0_reg_872 <= add_ln45_fu_1432_p2;
            end if; 
        end if;
    end process;

    j5_0_reg_927_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                j5_0_reg_927 <= ap_const_lv2_0;
            elsif ((not(((icmp_ln60_fu_1477_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln60_fu_1477_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                j5_0_reg_927 <= select_ln65_3_fu_1567_p3;
            end if; 
        end if;
    end process;

    j7_0_reg_971_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                j7_0_reg_971 <= ap_const_lv6_0;
            elsif ((not(((icmp_ln71_fu_1667_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln71_fu_1667_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                j7_0_reg_971 <= j_2_fu_1769_p2;
            end if; 
        end if;
    end process;

    j_0_reg_861_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((icmp_ln35_fu_1353_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln35_fu_1353_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                j_0_reg_861 <= j_fu_1420_p2;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                j_0_reg_861 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    k_0_reg_938_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                k_0_reg_938 <= ap_const_lv6_0;
            elsif ((not(((icmp_ln60_fu_1477_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln60_fu_1477_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                k_0_reg_938 <= k_fu_1647_p2;
            end if; 
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, weight_in_TVALID, ap_CS_fsm_state2, icmp_ln35_fu_1353_p2, ap_CS_fsm_state4, icmp_ln45_fu_1426_p2, ap_CS_fsm_state6, icmp_ln53_fu_1460_p2, ap_CS_fsm_state8, icmp_ln60_fu_1477_p2, ap_CS_fsm_state10, icmp_ln71_fu_1667_p2, ap_CS_fsm_state12, icmp_ln80_fu_1775_p2, ap_CS_fsm_state14, icmp_ln88_fu_1792_p2, ap_CS_fsm_state16, icmp_ln97_fu_1900_p2, ap_CS_fsm_state18, icmp_ln106_fu_1991_p2, ap_CS_fsm_state20, icmp_ln114_fu_2008_p2, ap_CS_fsm_state22, icmp_ln123_fu_2116_p2, ap_CS_fsm_state24, icmp_ln132_fu_2207_p2, ap_CS_fsm_state26, icmp_ln140_fu_2224_p2, ap_CS_fsm_state28, icmp_ln149_fu_2332_p2, ap_CS_fsm_state30, icmp_ln158_fu_2423_p2, ap_CS_fsm_state32, icmp_ln166_fu_2440_p2, ap_CS_fsm_state34, icmp_ln176_fu_2513_p2, ap_CS_fsm_state36, icmp_ln184_fu_2530_p2, ap_CS_fsm_state38, icmp_ln193_fu_2617_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((not(((icmp_ln35_fu_1353_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln35_fu_1353_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif ((not(((icmp_ln35_fu_1353_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln35_fu_1353_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if ((not(((icmp_ln45_fu_1426_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln45_fu_1426_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                elsif ((not(((icmp_ln45_fu_1426_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln45_fu_1426_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if ((not(((icmp_ln53_fu_1460_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln53_fu_1460_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                elsif ((not(((icmp_ln53_fu_1460_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln53_fu_1460_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if ((not(((icmp_ln60_fu_1477_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln60_fu_1477_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                elsif ((not(((icmp_ln60_fu_1477_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln60_fu_1477_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if ((not(((icmp_ln71_fu_1667_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln71_fu_1667_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                elsif ((not(((icmp_ln71_fu_1667_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln71_fu_1667_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if ((not(((icmp_ln80_fu_1775_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln80_fu_1775_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                elsif ((not(((icmp_ln80_fu_1775_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln80_fu_1775_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                if ((not(((icmp_ln88_fu_1792_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln88_fu_1792_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                elsif ((not(((icmp_ln88_fu_1792_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln88_fu_1792_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                if ((not(((icmp_ln97_fu_1900_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln97_fu_1900_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                elsif ((not(((icmp_ln97_fu_1900_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln97_fu_1900_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                if ((not(((icmp_ln106_fu_1991_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln106_fu_1991_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                elsif ((not(((icmp_ln106_fu_1991_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln106_fu_1991_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                if ((not(((icmp_ln114_fu_2008_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln114_fu_2008_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                elsif ((not(((icmp_ln114_fu_2008_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln114_fu_2008_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                if ((not(((icmp_ln123_fu_2116_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln123_fu_2116_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                elsif ((not(((icmp_ln123_fu_2116_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln123_fu_2116_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                if ((not(((icmp_ln132_fu_2207_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln132_fu_2207_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state24))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                elsif ((not(((icmp_ln132_fu_2207_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln132_fu_2207_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                if ((not(((icmp_ln140_fu_2224_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln140_fu_2224_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                elsif ((not(((icmp_ln140_fu_2224_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln140_fu_2224_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                if ((not(((icmp_ln149_fu_2332_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln149_fu_2332_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state28))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                elsif ((not(((icmp_ln149_fu_2332_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln149_fu_2332_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state28))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                if ((not(((icmp_ln158_fu_2423_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln158_fu_2423_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state30))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                elsif ((not(((icmp_ln158_fu_2423_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln158_fu_2423_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state30))) then
                    ap_NS_fsm <= ap_ST_fsm_state31;
                else
                    ap_NS_fsm <= ap_ST_fsm_state30;
                end if;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                if ((not(((icmp_ln166_fu_2440_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln166_fu_2440_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state32))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                elsif ((not(((icmp_ln166_fu_2440_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln166_fu_2440_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state32))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_state32;
                end if;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                if ((not(((icmp_ln176_fu_2513_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln176_fu_2513_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state34))) then
                    ap_NS_fsm <= ap_ST_fsm_state34;
                elsif ((not(((icmp_ln176_fu_2513_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln176_fu_2513_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state34))) then
                    ap_NS_fsm <= ap_ST_fsm_state35;
                else
                    ap_NS_fsm <= ap_ST_fsm_state34;
                end if;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                if ((not(((icmp_ln184_fu_2530_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln184_fu_2530_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state36))) then
                    ap_NS_fsm <= ap_ST_fsm_state36;
                elsif ((not(((icmp_ln184_fu_2530_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln184_fu_2530_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state36))) then
                    ap_NS_fsm <= ap_ST_fsm_state37;
                else
                    ap_NS_fsm <= ap_ST_fsm_state36;
                end if;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                if ((not(((icmp_ln193_fu_2617_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln193_fu_2617_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state38))) then
                    ap_NS_fsm <= ap_ST_fsm_state38;
                elsif ((not(((icmp_ln193_fu_2617_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln193_fu_2617_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state38))) then
                    ap_NS_fsm <= ap_ST_fsm_state39;
                else
                    ap_NS_fsm <= ap_ST_fsm_state38;
                end if;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln101_1_fu_1974_p2 <= std_logic_vector(unsigned(add_ln101_fu_1964_p2) + unsigned(zext_ln101_2_fu_1970_p1));
    add_ln101_fu_1964_p2 <= std_logic_vector(unsigned(zext_ln101_1_fu_1960_p1) + unsigned(zext_ln101_fu_1948_p1));
    add_ln114_fu_2014_p2 <= std_logic_vector(unsigned(indvar_flatten48_reg_1070) + unsigned(ap_const_lv14_1));
    add_ln118_1_fu_2096_p2 <= std_logic_vector(unsigned(zext_ln118_2_fu_2092_p1) + unsigned(add_ln118_fu_2072_p2));
    add_ln118_fu_2072_p2 <= std_logic_vector(unsigned(zext_ln118_fu_2056_p1) + unsigned(zext_ln118_1_fu_2068_p1));
    add_ln123_fu_2122_p2 <= std_logic_vector(unsigned(indvar_flatten55_reg_1103) + unsigned(ap_const_lv11_1));
    add_ln127_1_fu_2190_p2 <= std_logic_vector(unsigned(add_ln127_fu_2180_p2) + unsigned(zext_ln127_2_fu_2186_p1));
    add_ln127_fu_2180_p2 <= std_logic_vector(unsigned(zext_ln127_1_fu_2176_p1) + unsigned(zext_ln127_fu_2164_p1));
    add_ln140_fu_2230_p2 <= std_logic_vector(unsigned(indvar_flatten62_reg_1147) + unsigned(ap_const_lv14_1));
    add_ln144_1_fu_2312_p2 <= std_logic_vector(unsigned(zext_ln144_2_fu_2308_p1) + unsigned(add_ln144_fu_2288_p2));
    add_ln144_fu_2288_p2 <= std_logic_vector(unsigned(zext_ln144_fu_2272_p1) + unsigned(zext_ln144_1_fu_2284_p1));
    add_ln149_fu_2338_p2 <= std_logic_vector(unsigned(indvar_flatten69_reg_1180) + unsigned(ap_const_lv11_1));
    add_ln153_1_fu_2406_p2 <= std_logic_vector(unsigned(add_ln153_fu_2396_p2) + unsigned(zext_ln153_2_fu_2402_p1));
    add_ln153_fu_2396_p2 <= std_logic_vector(unsigned(zext_ln153_1_fu_2392_p1) + unsigned(zext_ln153_fu_2380_p1));
    add_ln166_fu_2446_p2 <= std_logic_vector(unsigned(indvar_flatten76_reg_1224) + unsigned(ap_const_lv12_1));
    add_ln170_fu_2496_p2 <= std_logic_vector(unsigned(zext_ln170_fu_2492_p1) + unsigned(zext_ln167_fu_2488_p1));
    add_ln184_fu_2536_p2 <= std_logic_vector(unsigned(indvar_flatten83_reg_1268) + unsigned(ap_const_lv10_1));
    add_ln188_fu_2600_p2 <= std_logic_vector(unsigned(sub_ln188_fu_2590_p2) + unsigned(zext_ln188_1_fu_2596_p1));
    add_ln35_fu_1359_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_839) + unsigned(ap_const_lv4_1));
    add_ln39_fu_1409_p2 <= std_logic_vector(unsigned(zext_ln39_fu_1405_p1) + unsigned(zext_ln36_fu_1401_p1));
    add_ln45_fu_1432_p2 <= std_logic_vector(unsigned(j2_0_0_reg_872) + unsigned(ap_const_lv6_1));
    add_ln60_fu_1483_p2 <= std_logic_vector(unsigned(indvar_flatten20_reg_894) + unsigned(ap_const_lv9_1));
    add_ln61_1_fu_1653_p2 <= std_logic_vector(unsigned(indvar_flatten6_reg_916) + unsigned(ap_const_lv8_1));
    add_ln65_1_fu_1633_p2 <= std_logic_vector(unsigned(zext_ln65_3_fu_1629_p1) + unsigned(sub_ln65_fu_1609_p2));
    add_ln65_fu_1579_p2 <= std_logic_vector(unsigned(zext_ln65_1_fu_1575_p1) + unsigned(zext_ln65_fu_1525_p1));
    add_ln71_fu_1673_p2 <= std_logic_vector(unsigned(indvar_flatten27_reg_949) + unsigned(ap_const_lv12_1));
    add_ln75_fu_1755_p2 <= std_logic_vector(unsigned(zext_ln75_2_fu_1751_p1) + unsigned(sub_ln75_fu_1745_p2));
    add_ln88_fu_1798_p2 <= std_logic_vector(unsigned(indvar_flatten34_reg_993) + unsigned(ap_const_lv14_1));
    add_ln92_1_fu_1880_p2 <= std_logic_vector(unsigned(zext_ln92_2_fu_1876_p1) + unsigned(add_ln92_fu_1856_p2));
    add_ln92_fu_1856_p2 <= std_logic_vector(unsigned(zext_ln92_fu_1840_p1) + unsigned(zext_ln92_1_fu_1852_p1));
    add_ln97_fu_1906_p2 <= std_logic_vector(unsigned(indvar_flatten41_reg_1026) + unsigned(ap_const_lv11_1));
    and_ln65_fu_1541_p2 <= (xor_ln65_fu_1529_p2 and icmp_ln62_fu_1535_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state10_assign_proc : process(weight_in_TVALID, icmp_ln71_fu_1667_p2)
    begin
                ap_block_state10 <= ((icmp_ln71_fu_1667_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0));
    end process;


    ap_block_state12_assign_proc : process(weight_in_TVALID, icmp_ln80_fu_1775_p2)
    begin
                ap_block_state12 <= ((icmp_ln80_fu_1775_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0));
    end process;


    ap_block_state14_assign_proc : process(weight_in_TVALID, icmp_ln88_fu_1792_p2)
    begin
                ap_block_state14 <= ((icmp_ln88_fu_1792_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0));
    end process;


    ap_block_state16_assign_proc : process(weight_in_TVALID, icmp_ln97_fu_1900_p2)
    begin
                ap_block_state16 <= ((icmp_ln97_fu_1900_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0));
    end process;


    ap_block_state18_assign_proc : process(weight_in_TVALID, icmp_ln106_fu_1991_p2)
    begin
                ap_block_state18 <= ((icmp_ln106_fu_1991_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0));
    end process;


    ap_block_state2_assign_proc : process(weight_in_TVALID, icmp_ln35_fu_1353_p2)
    begin
                ap_block_state2 <= ((icmp_ln35_fu_1353_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0));
    end process;


    ap_block_state20_assign_proc : process(weight_in_TVALID, icmp_ln114_fu_2008_p2)
    begin
                ap_block_state20 <= ((icmp_ln114_fu_2008_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0));
    end process;


    ap_block_state22_assign_proc : process(weight_in_TVALID, icmp_ln123_fu_2116_p2)
    begin
                ap_block_state22 <= ((icmp_ln123_fu_2116_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0));
    end process;


    ap_block_state24_assign_proc : process(weight_in_TVALID, icmp_ln132_fu_2207_p2)
    begin
                ap_block_state24 <= ((icmp_ln132_fu_2207_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0));
    end process;


    ap_block_state26_assign_proc : process(weight_in_TVALID, icmp_ln140_fu_2224_p2)
    begin
                ap_block_state26 <= ((icmp_ln140_fu_2224_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0));
    end process;


    ap_block_state28_assign_proc : process(weight_in_TVALID, icmp_ln149_fu_2332_p2)
    begin
                ap_block_state28 <= ((icmp_ln149_fu_2332_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0));
    end process;


    ap_block_state30_assign_proc : process(weight_in_TVALID, icmp_ln158_fu_2423_p2)
    begin
                ap_block_state30 <= ((icmp_ln158_fu_2423_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0));
    end process;


    ap_block_state32_assign_proc : process(weight_in_TVALID, icmp_ln166_fu_2440_p2)
    begin
                ap_block_state32 <= ((icmp_ln166_fu_2440_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0));
    end process;


    ap_block_state34_assign_proc : process(weight_in_TVALID, icmp_ln176_fu_2513_p2)
    begin
                ap_block_state34 <= ((icmp_ln176_fu_2513_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0));
    end process;


    ap_block_state36_assign_proc : process(weight_in_TVALID, icmp_ln184_fu_2530_p2)
    begin
                ap_block_state36 <= ((icmp_ln184_fu_2530_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0));
    end process;


    ap_block_state38_assign_proc : process(weight_in_TVALID, icmp_ln193_fu_2617_p2)
    begin
                ap_block_state38 <= ((icmp_ln193_fu_2617_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0));
    end process;


    ap_block_state4_assign_proc : process(weight_in_TVALID, icmp_ln45_fu_1426_p2)
    begin
                ap_block_state4 <= ((icmp_ln45_fu_1426_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0));
    end process;


    ap_block_state6_assign_proc : process(weight_in_TVALID, icmp_ln53_fu_1460_p2)
    begin
                ap_block_state6 <= ((icmp_ln53_fu_1460_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0));
    end process;


    ap_block_state8_assign_proc : process(weight_in_TVALID, icmp_ln60_fu_1477_p2)
    begin
                ap_block_state8 <= ((icmp_ln60_fu_1477_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state39)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state39) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bias_h_address0 <= zext_ln161_fu_2435_p1(6 - 1 downto 0);

    bias_h_ce0_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state30, icmp_ln158_fu_2423_p2)
    begin
        if ((not(((icmp_ln158_fu_2423_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            bias_h_ce0 <= ap_const_logic_1;
        else 
            bias_h_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    bias_h_d0 <= weight_in_TDATA;

    bias_h_we0_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state30, icmp_ln158_fu_2423_p2)
    begin
        if ((not(((icmp_ln158_fu_2423_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln158_fu_2423_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            bias_h_we0 <= ap_const_logic_1;
        else 
            bias_h_we0 <= ap_const_logic_0;
        end if; 
    end process;

    bias_r_address0 <= zext_ln109_fu_2003_p1(6 - 1 downto 0);

    bias_r_ce0_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state18, icmp_ln106_fu_1991_p2)
    begin
        if ((not(((icmp_ln106_fu_1991_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            bias_r_ce0 <= ap_const_logic_1;
        else 
            bias_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    bias_r_d0 <= weight_in_TDATA;

    bias_r_we0_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state18, icmp_ln106_fu_1991_p2)
    begin
        if ((not(((icmp_ln106_fu_1991_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln106_fu_1991_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            bias_r_we0 <= ap_const_logic_1;
        else 
            bias_r_we0 <= ap_const_logic_0;
        end if; 
    end process;

    bias_z_address0 <= zext_ln135_fu_2219_p1(6 - 1 downto 0);

    bias_z_ce0_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state24, icmp_ln132_fu_2207_p2)
    begin
        if ((not(((icmp_ln132_fu_2207_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
            bias_z_ce0 <= ap_const_logic_1;
        else 
            bias_z_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    bias_z_d0 <= weight_in_TDATA;

    bias_z_we0_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state24, icmp_ln132_fu_2207_p2)
    begin
        if ((not(((icmp_ln132_fu_2207_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln132_fu_2207_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
            bias_z_we0 <= ap_const_logic_1;
        else 
            bias_z_we0 <= ap_const_logic_0;
        end if; 
    end process;

    bn_bias1_address0 <= zext_ln56_fu_1472_p1(6 - 1 downto 0);

    bn_bias1_ce0_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state6, icmp_ln53_fu_1460_p2)
    begin
        if ((not(((icmp_ln53_fu_1460_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            bn_bias1_ce0 <= ap_const_logic_1;
        else 
            bn_bias1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    bn_bias1_d0 <= weight_in_TDATA;

    bn_bias1_we0_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state6, icmp_ln53_fu_1460_p2)
    begin
        if ((not(((icmp_ln53_fu_1460_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln53_fu_1460_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            bn_bias1_we0 <= ap_const_logic_1;
        else 
            bn_bias1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    bn_bias2_address0 <= zext_ln83_fu_1787_p1(6 - 1 downto 0);

    bn_bias2_ce0_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state12, icmp_ln80_fu_1775_p2)
    begin
        if ((not(((icmp_ln80_fu_1775_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            bn_bias2_ce0 <= ap_const_logic_1;
        else 
            bn_bias2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    bn_bias2_d0 <= weight_in_TDATA;

    bn_bias2_we0_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state12, icmp_ln80_fu_1775_p2)
    begin
        if ((not(((icmp_ln80_fu_1775_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln80_fu_1775_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            bn_bias2_we0 <= ap_const_logic_1;
        else 
            bn_bias2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    dw_weight1_address0 <= zext_ln39_1_fu_1415_p1(3 - 1 downto 0);

    dw_weight1_ce0_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state2, icmp_ln35_fu_1353_p2)
    begin
        if ((not(((icmp_ln35_fu_1353_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            dw_weight1_ce0 <= ap_const_logic_1;
        else 
            dw_weight1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dw_weight1_d0 <= weight_in_TDATA;

    dw_weight1_we0_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state2, icmp_ln35_fu_1353_p2)
    begin
        if ((not(((icmp_ln35_fu_1353_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln35_fu_1353_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            dw_weight1_we0 <= ap_const_logic_1;
        else 
            dw_weight1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    dw_weight2_0_address1 <= zext_ln65_4_fu_1639_p1(7 - 1 downto 0);

    dw_weight2_0_ce1_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state8, icmp_ln60_fu_1477_p2)
    begin
        if ((not(((icmp_ln60_fu_1477_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            dw_weight2_0_ce1 <= ap_const_logic_1;
        else 
            dw_weight2_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    dw_weight2_0_d1 <= weight_in_TDATA;

    dw_weight2_0_we1_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state8, icmp_ln60_fu_1477_p2, trunc_ln65_1_fu_1615_p1)
    begin
        if ((not(((icmp_ln60_fu_1477_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (trunc_ln65_1_fu_1615_p1 = ap_const_lv2_0) and (icmp_ln60_fu_1477_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            dw_weight2_0_we1 <= ap_const_logic_1;
        else 
            dw_weight2_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    dw_weight2_1_address1 <= zext_ln65_4_fu_1639_p1(7 - 1 downto 0);

    dw_weight2_1_ce1_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state8, icmp_ln60_fu_1477_p2)
    begin
        if ((not(((icmp_ln60_fu_1477_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            dw_weight2_1_ce1 <= ap_const_logic_1;
        else 
            dw_weight2_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    dw_weight2_1_d1 <= weight_in_TDATA;

    dw_weight2_1_we1_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state8, icmp_ln60_fu_1477_p2, trunc_ln65_1_fu_1615_p1)
    begin
        if ((not(((icmp_ln60_fu_1477_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (trunc_ln65_1_fu_1615_p1 = ap_const_lv2_1) and (icmp_ln60_fu_1477_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            dw_weight2_1_we1 <= ap_const_logic_1;
        else 
            dw_weight2_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    dw_weight2_2_address1 <= zext_ln65_4_fu_1639_p1(7 - 1 downto 0);

    dw_weight2_2_ce1_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state8, icmp_ln60_fu_1477_p2)
    begin
        if ((not(((icmp_ln60_fu_1477_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            dw_weight2_2_ce1 <= ap_const_logic_1;
        else 
            dw_weight2_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    dw_weight2_2_d1 <= weight_in_TDATA;

    dw_weight2_2_we1_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state8, icmp_ln60_fu_1477_p2, trunc_ln65_1_fu_1615_p1)
    begin
        if ((not(((icmp_ln60_fu_1477_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (trunc_ln65_1_fu_1615_p1 = ap_const_lv2_2) and (icmp_ln60_fu_1477_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            dw_weight2_2_we1 <= ap_const_logic_1;
        else 
            dw_weight2_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    dw_weight2_3_address1 <= zext_ln65_4_fu_1639_p1(7 - 1 downto 0);

    dw_weight2_3_ce1_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state8, icmp_ln60_fu_1477_p2)
    begin
        if ((not(((icmp_ln60_fu_1477_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            dw_weight2_3_ce1 <= ap_const_logic_1;
        else 
            dw_weight2_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    dw_weight2_3_d1 <= weight_in_TDATA;

    dw_weight2_3_we1_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state8, icmp_ln60_fu_1477_p2, trunc_ln65_1_fu_1615_p1)
    begin
        if ((not(((icmp_ln60_fu_1477_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (trunc_ln65_1_fu_1615_p1 = ap_const_lv2_3) and (icmp_ln60_fu_1477_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            dw_weight2_3_we1 <= ap_const_logic_1;
        else 
            dw_weight2_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    fc_bias1_address0 <= zext_ln179_fu_2525_p1(6 - 1 downto 0);

    fc_bias1_ce0_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state34, icmp_ln176_fu_2513_p2)
    begin
        if ((not(((icmp_ln176_fu_2513_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state34))) then 
            fc_bias1_ce0 <= ap_const_logic_1;
        else 
            fc_bias1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    fc_bias1_d0 <= weight_in_TDATA;

    fc_bias1_we0_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state34, icmp_ln176_fu_2513_p2)
    begin
        if ((not(((icmp_ln176_fu_2513_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln176_fu_2513_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state34))) then 
            fc_bias1_we0 <= ap_const_logic_1;
        else 
            fc_bias1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    fc_bias2_address0 <= zext_ln196_fu_2629_p1(4 - 1 downto 0);

    fc_bias2_ce0_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state38, icmp_ln193_fu_2617_p2)
    begin
        if ((not(((icmp_ln193_fu_2617_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state38))) then 
            fc_bias2_ce0 <= ap_const_logic_1;
        else 
            fc_bias2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    fc_bias2_d0 <= weight_in_TDATA;

    fc_bias2_we0_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state38, icmp_ln193_fu_2617_p2)
    begin
        if ((not(((icmp_ln193_fu_2617_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln193_fu_2617_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state38))) then 
            fc_bias2_we0 <= ap_const_logic_1;
        else 
            fc_bias2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    fc_weights1_address0 <= zext_ln170_1_fu_2502_p1(12 - 1 downto 0);

    fc_weights1_ce0_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state32, icmp_ln166_fu_2440_p2)
    begin
        if ((not(((icmp_ln166_fu_2440_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state32))) then 
            fc_weights1_ce0 <= ap_const_logic_1;
        else 
            fc_weights1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    fc_weights1_d0 <= weight_in_TDATA;

    fc_weights1_we0_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state32, icmp_ln166_fu_2440_p2)
    begin
        if ((not(((icmp_ln166_fu_2440_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln166_fu_2440_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state32))) then 
            fc_weights1_we0 <= ap_const_logic_1;
        else 
            fc_weights1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    fc_weights2_address0 <= sext_ln188_fu_2606_p1(10 - 1 downto 0);

    fc_weights2_ce0_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state36, icmp_ln184_fu_2530_p2)
    begin
        if ((not(((icmp_ln184_fu_2530_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            fc_weights2_ce0 <= ap_const_logic_1;
        else 
            fc_weights2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    fc_weights2_d0 <= weight_in_TDATA;

    fc_weights2_we0_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state36, icmp_ln184_fu_2530_p2)
    begin
        if ((not(((icmp_ln184_fu_2530_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln184_fu_2530_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            fc_weights2_we0 <= ap_const_logic_1;
        else 
            fc_weights2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    i_10_fu_1912_p2 <= std_logic_vector(unsigned(i11_0_reg_1037) + unsigned(ap_const_lv6_1));
    i_11_fu_1997_p2 <= std_logic_vector(unsigned(i13_0_reg_1059) + unsigned(ap_const_lv6_1));
    i_13_fu_2020_p2 <= std_logic_vector(unsigned(ap_const_lv9_1) + unsigned(i14_0_reg_1081));
    i_15_fu_2128_p2 <= std_logic_vector(unsigned(i16_0_reg_1114) + unsigned(ap_const_lv6_1));
    i_16_fu_2213_p2 <= std_logic_vector(unsigned(i18_0_reg_1136) + unsigned(ap_const_lv6_1));
    i_18_fu_2236_p2 <= std_logic_vector(unsigned(ap_const_lv9_1) + unsigned(i19_0_reg_1158));
    i_1_fu_1466_p2 <= std_logic_vector(unsigned(i3_0_reg_883) + unsigned(ap_const_lv6_1));
    i_20_fu_2344_p2 <= std_logic_vector(unsigned(i21_0_reg_1191) + unsigned(ap_const_lv6_1));
    i_21_fu_2429_p2 <= std_logic_vector(unsigned(i23_0_reg_1213) + unsigned(ap_const_lv6_1));
    i_23_fu_2452_p2 <= std_logic_vector(unsigned(i24_0_reg_1235) + unsigned(ap_const_lv6_1));
    i_24_fu_2519_p2 <= std_logic_vector(unsigned(i26_0_reg_1257) + unsigned(ap_const_lv7_1));
    i_26_fu_2542_p2 <= std_logic_vector(unsigned(i27_0_reg_1279) + unsigned(ap_const_lv7_1));
    i_27_fu_2623_p2 <= std_logic_vector(unsigned(i29_0_reg_1301) + unsigned(ap_const_lv4_1));
    i_3_fu_1489_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(i4_0_reg_905));
    i_5_fu_1679_p2 <= std_logic_vector(unsigned(ap_const_lv6_1) + unsigned(i6_0_reg_960));
    i_6_fu_1781_p2 <= std_logic_vector(unsigned(i8_0_reg_982) + unsigned(ap_const_lv6_1));
    i_8_fu_1804_p2 <= std_logic_vector(unsigned(ap_const_lv9_1) + unsigned(i9_0_reg_1004));
    i_fu_1365_p2 <= std_logic_vector(unsigned(i_0_reg_850) + unsigned(ap_const_lv3_1));
    icmp_ln106_fu_1991_p2 <= "1" when (i13_0_reg_1059 = ap_const_lv6_28) else "0";
    icmp_ln114_fu_2008_p2 <= "1" when (indvar_flatten48_reg_1070 = ap_const_lv14_3C00) else "0";
    icmp_ln115_fu_2026_p2 <= "1" when (j15_0_reg_1092 = ap_const_lv6_28) else "0";
    icmp_ln123_fu_2116_p2 <= "1" when (indvar_flatten55_reg_1103 = ap_const_lv11_640) else "0";
    icmp_ln124_fu_2134_p2 <= "1" when (j17_0_reg_1125 = ap_const_lv6_28) else "0";
    icmp_ln132_fu_2207_p2 <= "1" when (i18_0_reg_1136 = ap_const_lv6_28) else "0";
    icmp_ln140_fu_2224_p2 <= "1" when (indvar_flatten62_reg_1147 = ap_const_lv14_3C00) else "0";
    icmp_ln141_fu_2242_p2 <= "1" when (j20_0_reg_1169 = ap_const_lv6_28) else "0";
    icmp_ln149_fu_2332_p2 <= "1" when (indvar_flatten69_reg_1180 = ap_const_lv11_640) else "0";
    icmp_ln150_fu_2350_p2 <= "1" when (j22_0_reg_1202 = ap_const_lv6_28) else "0";
    icmp_ln158_fu_2423_p2 <= "1" when (i23_0_reg_1213 = ap_const_lv6_28) else "0";
    icmp_ln166_fu_2440_p2 <= "1" when (indvar_flatten76_reg_1224 = ap_const_lv12_A00) else "0";
    icmp_ln167_fu_2458_p2 <= "1" when (j25_0_reg_1246 = ap_const_lv7_40) else "0";
    icmp_ln176_fu_2513_p2 <= "1" when (i26_0_reg_1257 = ap_const_lv7_40) else "0";
    icmp_ln184_fu_2530_p2 <= "1" when (indvar_flatten83_reg_1268 = ap_const_lv10_300) else "0";
    icmp_ln185_fu_2548_p2 <= "1" when (j28_0_reg_1290 = ap_const_lv4_C) else "0";
    icmp_ln193_fu_2617_p2 <= "1" when (i29_0_reg_1301 = ap_const_lv4_C) else "0";
    icmp_ln35_fu_1353_p2 <= "1" when (indvar_flatten_reg_839 = ap_const_lv4_8) else "0";
    icmp_ln36_fu_1371_p2 <= "1" when (j_0_reg_861 = ap_const_lv2_2) else "0";
    icmp_ln45_fu_1426_p2 <= "1" when (j2_0_0_reg_872 = ap_const_lv6_30) else "0";
    icmp_ln53_fu_1460_p2 <= "1" when (i3_0_reg_883 = ap_const_lv6_30) else "0";
    icmp_ln60_fu_1477_p2 <= "1" when (indvar_flatten20_reg_894 = ap_const_lv9_180) else "0";
    icmp_ln61_fu_1495_p2 <= "1" when (indvar_flatten6_reg_916 = ap_const_lv8_60) else "0";
    icmp_ln62_fu_1535_p2 <= "1" when (k_0_reg_938 = ap_const_lv6_30) else "0";
    icmp_ln71_fu_1667_p2 <= "1" when (indvar_flatten27_reg_949 = ap_const_lv12_900) else "0";
    icmp_ln72_fu_1685_p2 <= "1" when (j7_0_reg_971 = ap_const_lv6_30) else "0";
    icmp_ln80_fu_1775_p2 <= "1" when (i8_0_reg_982 = ap_const_lv6_30) else "0";
    icmp_ln88_fu_1792_p2 <= "1" when (indvar_flatten34_reg_993 = ap_const_lv14_3C00) else "0";
    icmp_ln89_fu_1810_p2 <= "1" when (j10_0_reg_1015 = ap_const_lv6_28) else "0";
    icmp_ln97_fu_1900_p2 <= "1" when (indvar_flatten41_reg_1026 = ap_const_lv11_640) else "0";
    icmp_ln98_fu_1918_p2 <= "1" when (j12_0_reg_1048 = ap_const_lv6_28) else "0";
    j_10_fu_2611_p2 <= std_logic_vector(unsigned(select_ln188_fu_2554_p3) + unsigned(ap_const_lv4_1));
    j_11_fu_1547_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) + unsigned(select_ln65_fu_1501_p3));
    j_2_fu_1769_p2 <= std_logic_vector(unsigned(select_ln75_fu_1691_p3) + unsigned(ap_const_lv6_1));
    j_3_fu_1985_p2 <= std_logic_vector(unsigned(select_ln101_fu_1924_p3) + unsigned(ap_const_lv6_1));
    j_4_fu_1894_p2 <= std_logic_vector(unsigned(select_ln92_fu_1816_p3) + unsigned(ap_const_lv6_1));
    j_5_fu_2201_p2 <= std_logic_vector(unsigned(select_ln127_fu_2140_p3) + unsigned(ap_const_lv6_1));
    j_6_fu_2110_p2 <= std_logic_vector(unsigned(select_ln118_fu_2032_p3) + unsigned(ap_const_lv6_1));
    j_7_fu_2417_p2 <= std_logic_vector(unsigned(select_ln153_fu_2356_p3) + unsigned(ap_const_lv6_1));
    j_8_fu_2326_p2 <= std_logic_vector(unsigned(select_ln144_fu_2248_p3) + unsigned(ap_const_lv6_1));
    j_9_fu_2507_p2 <= std_logic_vector(unsigned(select_ln170_fu_2464_p3) + unsigned(ap_const_lv7_1));
    j_fu_1420_p2 <= std_logic_vector(unsigned(select_ln39_fu_1377_p3) + unsigned(ap_const_lv2_1));
    k_fu_1647_p2 <= std_logic_vector(unsigned(select_ln65_2_fu_1559_p3) + unsigned(ap_const_lv6_1));
    lshr_ln_fu_1442_p4 <= j2_0_0_reg_872(5 downto 2);
    or_ln65_fu_1553_p2 <= (icmp_ln61_fu_1495_p2 or and_ln65_fu_1541_p2);
    p_shl_cast_fu_1589_p3 <= (trunc_ln65_fu_1585_p1 & ap_const_lv4_0);
    pw_weight1_0_address0 <= zext_ln48_fu_1452_p1(4 - 1 downto 0);

    pw_weight1_0_ce0_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state4, icmp_ln45_fu_1426_p2)
    begin
        if ((not(((icmp_ln45_fu_1426_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            pw_weight1_0_ce0 <= ap_const_logic_1;
        else 
            pw_weight1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pw_weight1_0_d0 <= weight_in_TDATA;

    pw_weight1_0_we0_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state4, icmp_ln45_fu_1426_p2, trunc_ln48_fu_1438_p1)
    begin
        if ((not(((icmp_ln45_fu_1426_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (trunc_ln48_fu_1438_p1 = ap_const_lv2_0) and (icmp_ln45_fu_1426_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            pw_weight1_0_we0 <= ap_const_logic_1;
        else 
            pw_weight1_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pw_weight1_1_address0 <= zext_ln48_fu_1452_p1(4 - 1 downto 0);

    pw_weight1_1_ce0_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state4, icmp_ln45_fu_1426_p2)
    begin
        if ((not(((icmp_ln45_fu_1426_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            pw_weight1_1_ce0 <= ap_const_logic_1;
        else 
            pw_weight1_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pw_weight1_1_d0 <= weight_in_TDATA;

    pw_weight1_1_we0_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state4, icmp_ln45_fu_1426_p2, trunc_ln48_fu_1438_p1)
    begin
        if ((not(((icmp_ln45_fu_1426_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (trunc_ln48_fu_1438_p1 = ap_const_lv2_1) and (icmp_ln45_fu_1426_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            pw_weight1_1_we0 <= ap_const_logic_1;
        else 
            pw_weight1_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pw_weight1_2_address0 <= zext_ln48_fu_1452_p1(4 - 1 downto 0);

    pw_weight1_2_ce0_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state4, icmp_ln45_fu_1426_p2)
    begin
        if ((not(((icmp_ln45_fu_1426_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            pw_weight1_2_ce0 <= ap_const_logic_1;
        else 
            pw_weight1_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pw_weight1_2_d0 <= weight_in_TDATA;

    pw_weight1_2_we0_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state4, icmp_ln45_fu_1426_p2, trunc_ln48_fu_1438_p1)
    begin
        if ((not(((icmp_ln45_fu_1426_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (trunc_ln48_fu_1438_p1 = ap_const_lv2_2) and (icmp_ln45_fu_1426_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            pw_weight1_2_we0 <= ap_const_logic_1;
        else 
            pw_weight1_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pw_weight1_3_address0 <= zext_ln48_fu_1452_p1(4 - 1 downto 0);

    pw_weight1_3_ce0_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state4, icmp_ln45_fu_1426_p2)
    begin
        if ((not(((icmp_ln45_fu_1426_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            pw_weight1_3_ce0 <= ap_const_logic_1;
        else 
            pw_weight1_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pw_weight1_3_d0 <= weight_in_TDATA;

    pw_weight1_3_we0_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state4, icmp_ln45_fu_1426_p2, trunc_ln48_fu_1438_p1)
    begin
        if ((not(((icmp_ln45_fu_1426_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (trunc_ln48_fu_1438_p1 = ap_const_lv2_3) and (icmp_ln45_fu_1426_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            pw_weight1_3_we0 <= ap_const_logic_1;
        else 
            pw_weight1_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pw_weight2_0_address0 <= sext_ln75_fu_1761_p1(10 - 1 downto 0);

    pw_weight2_0_ce0_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state10, icmp_ln71_fu_1667_p2)
    begin
        if ((not(((icmp_ln71_fu_1667_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            pw_weight2_0_ce0 <= ap_const_logic_1;
        else 
            pw_weight2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pw_weight2_0_d0 <= weight_in_TDATA;

    pw_weight2_0_we0_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state10, icmp_ln71_fu_1667_p2, trunc_ln75_fu_1707_p1)
    begin
        if ((not(((icmp_ln71_fu_1667_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (trunc_ln75_fu_1707_p1 = ap_const_lv2_0) and (icmp_ln71_fu_1667_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            pw_weight2_0_we0 <= ap_const_logic_1;
        else 
            pw_weight2_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pw_weight2_1_address0 <= sext_ln75_fu_1761_p1(10 - 1 downto 0);

    pw_weight2_1_ce0_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state10, icmp_ln71_fu_1667_p2)
    begin
        if ((not(((icmp_ln71_fu_1667_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            pw_weight2_1_ce0 <= ap_const_logic_1;
        else 
            pw_weight2_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pw_weight2_1_d0 <= weight_in_TDATA;

    pw_weight2_1_we0_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state10, icmp_ln71_fu_1667_p2, trunc_ln75_fu_1707_p1)
    begin
        if ((not(((icmp_ln71_fu_1667_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (trunc_ln75_fu_1707_p1 = ap_const_lv2_1) and (icmp_ln71_fu_1667_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            pw_weight2_1_we0 <= ap_const_logic_1;
        else 
            pw_weight2_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pw_weight2_2_address0 <= sext_ln75_fu_1761_p1(10 - 1 downto 0);

    pw_weight2_2_ce0_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state10, icmp_ln71_fu_1667_p2)
    begin
        if ((not(((icmp_ln71_fu_1667_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            pw_weight2_2_ce0 <= ap_const_logic_1;
        else 
            pw_weight2_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pw_weight2_2_d0 <= weight_in_TDATA;

    pw_weight2_2_we0_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state10, icmp_ln71_fu_1667_p2, trunc_ln75_fu_1707_p1)
    begin
        if ((not(((icmp_ln71_fu_1667_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (trunc_ln75_fu_1707_p1 = ap_const_lv2_2) and (icmp_ln71_fu_1667_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            pw_weight2_2_we0 <= ap_const_logic_1;
        else 
            pw_weight2_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pw_weight2_3_address0 <= sext_ln75_fu_1761_p1(10 - 1 downto 0);

    pw_weight2_3_ce0_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state10, icmp_ln71_fu_1667_p2)
    begin
        if ((not(((icmp_ln71_fu_1667_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            pw_weight2_3_ce0 <= ap_const_logic_1;
        else 
            pw_weight2_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pw_weight2_3_d0 <= weight_in_TDATA;

    pw_weight2_3_we0_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state10, icmp_ln71_fu_1667_p2, trunc_ln75_fu_1707_p1)
    begin
        if ((not(((icmp_ln71_fu_1667_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (trunc_ln75_fu_1707_p1 = ap_const_lv2_3) and (icmp_ln71_fu_1667_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            pw_weight2_3_we0 <= ap_const_logic_1;
        else 
            pw_weight2_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln101_1_fu_1932_p3 <= 
        i_10_fu_1912_p2 when (icmp_ln98_fu_1918_p2(0) = '1') else 
        i11_0_reg_1037;
    select_ln101_fu_1924_p3 <= 
        ap_const_lv6_0 when (icmp_ln98_fu_1918_p2(0) = '1') else 
        j12_0_reg_1048;
    select_ln118_1_fu_2040_p3 <= 
        i_13_fu_2020_p2 when (icmp_ln115_fu_2026_p2(0) = '1') else 
        i14_0_reg_1081;
    select_ln118_fu_2032_p3 <= 
        ap_const_lv6_0 when (icmp_ln115_fu_2026_p2(0) = '1') else 
        j15_0_reg_1092;
    select_ln127_1_fu_2148_p3 <= 
        i_15_fu_2128_p2 when (icmp_ln124_fu_2134_p2(0) = '1') else 
        i16_0_reg_1114;
    select_ln127_fu_2140_p3 <= 
        ap_const_lv6_0 when (icmp_ln124_fu_2134_p2(0) = '1') else 
        j17_0_reg_1125;
    select_ln144_1_fu_2256_p3 <= 
        i_18_fu_2236_p2 when (icmp_ln141_fu_2242_p2(0) = '1') else 
        i19_0_reg_1158;
    select_ln144_fu_2248_p3 <= 
        ap_const_lv6_0 when (icmp_ln141_fu_2242_p2(0) = '1') else 
        j20_0_reg_1169;
    select_ln153_1_fu_2364_p3 <= 
        i_20_fu_2344_p2 when (icmp_ln150_fu_2350_p2(0) = '1') else 
        i21_0_reg_1191;
    select_ln153_fu_2356_p3 <= 
        ap_const_lv6_0 when (icmp_ln150_fu_2350_p2(0) = '1') else 
        j22_0_reg_1202;
    select_ln170_1_fu_2472_p3 <= 
        i_23_fu_2452_p2 when (icmp_ln167_fu_2458_p2(0) = '1') else 
        i24_0_reg_1235;
    select_ln170_fu_2464_p3 <= 
        ap_const_lv7_0 when (icmp_ln167_fu_2458_p2(0) = '1') else 
        j25_0_reg_1246;
    select_ln188_1_fu_2562_p3 <= 
        i_26_fu_2542_p2 when (icmp_ln185_fu_2548_p2(0) = '1') else 
        i27_0_reg_1279;
    select_ln188_fu_2554_p3 <= 
        ap_const_lv4_0 when (icmp_ln185_fu_2548_p2(0) = '1') else 
        j28_0_reg_1290;
    select_ln39_1_fu_1385_p3 <= 
        i_fu_1365_p2 when (icmp_ln36_fu_1371_p2(0) = '1') else 
        i_0_reg_850;
    select_ln39_fu_1377_p3 <= 
        ap_const_lv2_0 when (icmp_ln36_fu_1371_p2(0) = '1') else 
        j_0_reg_861;
    select_ln61_fu_1659_p3 <= 
        ap_const_lv8_1 when (icmp_ln61_fu_1495_p2(0) = '1') else 
        add_ln61_1_fu_1653_p2;
    select_ln65_1_fu_1509_p3 <= 
        i_3_fu_1489_p2 when (icmp_ln61_fu_1495_p2(0) = '1') else 
        i4_0_reg_905;
    select_ln65_2_fu_1559_p3 <= 
        ap_const_lv6_0 when (or_ln65_fu_1553_p2(0) = '1') else 
        k_0_reg_938;
    select_ln65_3_fu_1567_p3 <= 
        j_11_fu_1547_p2 when (and_ln65_fu_1541_p2(0) = '1') else 
        select_ln65_fu_1501_p3;
    select_ln65_fu_1501_p3 <= 
        ap_const_lv2_0 when (icmp_ln61_fu_1495_p2(0) = '1') else 
        j5_0_reg_927;
    select_ln75_1_fu_1699_p3 <= 
        i_5_fu_1679_p2 when (icmp_ln72_fu_1685_p2(0) = '1') else 
        i6_0_reg_960;
    select_ln75_fu_1691_p3 <= 
        ap_const_lv6_0 when (icmp_ln72_fu_1685_p2(0) = '1') else 
        j7_0_reg_971;
    select_ln92_1_fu_1824_p3 <= 
        i_8_fu_1804_p2 when (icmp_ln89_fu_1810_p2(0) = '1') else 
        i9_0_reg_1004;
    select_ln92_fu_1816_p3 <= 
        ap_const_lv6_0 when (icmp_ln89_fu_1810_p2(0) = '1') else 
        j10_0_reg_1015;
        sext_ln188_fu_2606_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln188_fu_2600_p2),64));

        sext_ln75_fu_1761_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln75_fu_1755_p2),64));

    sub_ln188_fu_2590_p2 <= std_logic_vector(unsigned(tmp_37_fu_2570_p3) - unsigned(zext_ln188_fu_2586_p1));
    sub_ln65_fu_1609_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_1589_p3) - unsigned(zext_ln65_2_fu_1605_p1));
    sub_ln75_fu_1745_p2 <= std_logic_vector(unsigned(zext_ln75_fu_1729_p1) - unsigned(zext_ln75_1_fu_1741_p1));
    tmp_18_fu_1393_p3 <= (select_ln39_1_fu_1385_p3 & ap_const_lv1_0);
    tmp_19_fu_1517_p3 <= (select_ln65_1_fu_1509_p3 & ap_const_lv1_0);
    tmp_20_fu_1597_p3 <= (add_ln65_fu_1579_p2 & ap_const_lv2_0);
    tmp_21_fu_1619_p4 <= select_ln65_2_fu_1559_p3(5 downto 2);
    tmp_22_fu_1721_p3 <= (zext_ln75_1_mid2_v_fu_1711_p4 & ap_const_lv6_0);
    tmp_23_fu_1733_p3 <= (zext_ln75_1_mid2_v_fu_1711_p4 & ap_const_lv4_0);
    tmp_24_fu_1832_p3 <= (select_ln92_1_fu_1824_p3 & ap_const_lv3_0);
    tmp_25_fu_1844_p3 <= (select_ln92_1_fu_1824_p3 & ap_const_lv1_0);
    tmp_26_fu_1940_p3 <= (select_ln101_1_fu_1932_p3 & ap_const_lv5_0);
    tmp_27_fu_1952_p3 <= (select_ln101_1_fu_1932_p3 & ap_const_lv3_0);
    tmp_28_fu_2048_p3 <= (select_ln118_1_fu_2040_p3 & ap_const_lv3_0);
    tmp_29_fu_2060_p3 <= (select_ln118_1_fu_2040_p3 & ap_const_lv1_0);
    tmp_30_fu_2156_p3 <= (select_ln127_1_fu_2148_p3 & ap_const_lv5_0);
    tmp_31_fu_2168_p3 <= (select_ln127_1_fu_2148_p3 & ap_const_lv3_0);
    tmp_32_fu_2264_p3 <= (select_ln144_1_fu_2256_p3 & ap_const_lv3_0);
    tmp_33_fu_2276_p3 <= (select_ln144_1_fu_2256_p3 & ap_const_lv1_0);
    tmp_34_fu_2372_p3 <= (select_ln153_1_fu_2364_p3 & ap_const_lv5_0);
    tmp_35_fu_2384_p3 <= (select_ln153_1_fu_2364_p3 & ap_const_lv3_0);
    tmp_36_fu_2480_p3 <= (select_ln170_1_fu_2472_p3 & ap_const_lv6_0);
    tmp_37_fu_2570_p3 <= (select_ln188_1_fu_2562_p3 & ap_const_lv4_0);
    tmp_38_fu_2578_p3 <= (select_ln188_1_fu_2562_p3 & ap_const_lv2_0);
    tmp_39_fu_1866_p4 <= select_ln92_fu_1816_p3(5 downto 2);
    tmp_40_fu_2082_p4 <= select_ln118_fu_2032_p3(5 downto 2);
    tmp_41_fu_2298_p4 <= select_ln144_fu_2248_p3(5 downto 2);
    trunc_ln118_fu_2078_p1 <= select_ln118_fu_2032_p3(2 - 1 downto 0);
    trunc_ln144_fu_2294_p1 <= select_ln144_fu_2248_p3(2 - 1 downto 0);
    trunc_ln48_fu_1438_p1 <= j2_0_0_reg_872(2 - 1 downto 0);
    trunc_ln65_1_fu_1615_p1 <= select_ln65_2_fu_1559_p3(2 - 1 downto 0);
    trunc_ln65_fu_1585_p1 <= add_ln65_fu_1579_p2(4 - 1 downto 0);
    trunc_ln75_fu_1707_p1 <= select_ln75_1_fu_1699_p3(2 - 1 downto 0);
    trunc_ln92_fu_1862_p1 <= select_ln92_fu_1816_p3(2 - 1 downto 0);

    weight_in_TDATA_blk_n_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state2, icmp_ln35_fu_1353_p2, ap_CS_fsm_state4, icmp_ln45_fu_1426_p2, ap_CS_fsm_state6, icmp_ln53_fu_1460_p2, ap_CS_fsm_state8, icmp_ln60_fu_1477_p2, ap_CS_fsm_state10, icmp_ln71_fu_1667_p2, ap_CS_fsm_state12, icmp_ln80_fu_1775_p2, ap_CS_fsm_state14, icmp_ln88_fu_1792_p2, ap_CS_fsm_state16, icmp_ln97_fu_1900_p2, ap_CS_fsm_state18, icmp_ln106_fu_1991_p2, ap_CS_fsm_state20, icmp_ln114_fu_2008_p2, ap_CS_fsm_state22, icmp_ln123_fu_2116_p2, ap_CS_fsm_state24, icmp_ln132_fu_2207_p2, ap_CS_fsm_state26, icmp_ln140_fu_2224_p2, ap_CS_fsm_state28, icmp_ln149_fu_2332_p2, ap_CS_fsm_state30, icmp_ln158_fu_2423_p2, ap_CS_fsm_state32, icmp_ln166_fu_2440_p2, ap_CS_fsm_state34, icmp_ln176_fu_2513_p2, ap_CS_fsm_state36, icmp_ln184_fu_2530_p2, ap_CS_fsm_state38, icmp_ln193_fu_2617_p2)
    begin
        if ((((icmp_ln193_fu_2617_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((icmp_ln184_fu_2530_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((icmp_ln176_fu_2513_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state34)) or ((icmp_ln166_fu_2440_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((icmp_ln158_fu_2423_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((icmp_ln149_fu_2332_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((icmp_ln140_fu_2224_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((icmp_ln132_fu_2207_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state24)) or ((icmp_ln123_fu_2116_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((icmp_ln114_fu_2008_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20)) or ((icmp_ln106_fu_1991_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((icmp_ln97_fu_1900_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((icmp_ln88_fu_1792_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((icmp_ln80_fu_1775_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((icmp_ln71_fu_1667_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((icmp_ln60_fu_1477_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((icmp_ln53_fu_1460_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((icmp_ln45_fu_1426_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((icmp_ln35_fu_1353_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            weight_in_TDATA_blk_n <= weight_in_TVALID;
        else 
            weight_in_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    weight_in_TREADY_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state2, icmp_ln35_fu_1353_p2, ap_CS_fsm_state4, icmp_ln45_fu_1426_p2, ap_CS_fsm_state6, icmp_ln53_fu_1460_p2, ap_CS_fsm_state8, icmp_ln60_fu_1477_p2, ap_CS_fsm_state10, icmp_ln71_fu_1667_p2, ap_CS_fsm_state12, icmp_ln80_fu_1775_p2, ap_CS_fsm_state14, icmp_ln88_fu_1792_p2, ap_CS_fsm_state16, icmp_ln97_fu_1900_p2, ap_CS_fsm_state18, icmp_ln106_fu_1991_p2, ap_CS_fsm_state20, icmp_ln114_fu_2008_p2, ap_CS_fsm_state22, icmp_ln123_fu_2116_p2, ap_CS_fsm_state24, icmp_ln132_fu_2207_p2, ap_CS_fsm_state26, icmp_ln140_fu_2224_p2, ap_CS_fsm_state28, icmp_ln149_fu_2332_p2, ap_CS_fsm_state30, icmp_ln158_fu_2423_p2, ap_CS_fsm_state32, icmp_ln166_fu_2440_p2, ap_CS_fsm_state34, icmp_ln176_fu_2513_p2, ap_CS_fsm_state36, icmp_ln184_fu_2530_p2, ap_CS_fsm_state38, icmp_ln193_fu_2617_p2)
    begin
        if (((not(((icmp_ln193_fu_2617_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln193_fu_2617_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state38)) or (not(((icmp_ln184_fu_2530_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln184_fu_2530_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state36)) or (not(((icmp_ln176_fu_2513_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln176_fu_2513_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state34)) or (not(((icmp_ln166_fu_2440_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln166_fu_2440_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state32)) or (not(((icmp_ln158_fu_2423_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln158_fu_2423_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state30)) or (not(((icmp_ln149_fu_2332_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln149_fu_2332_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state28)) or (not(((icmp_ln140_fu_2224_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln140_fu_2224_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26)) or (not(((icmp_ln132_fu_2207_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln132_fu_2207_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state24)) or (not(((icmp_ln123_fu_2116_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln123_fu_2116_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22)) or (not(((icmp_ln114_fu_2008_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln114_fu_2008_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20)) or (not(((icmp_ln106_fu_1991_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln106_fu_1991_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18)) or (not(((icmp_ln97_fu_1900_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln97_fu_1900_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16)) or (not(((icmp_ln88_fu_1792_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln88_fu_1792_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14)) or (not(((icmp_ln80_fu_1775_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln80_fu_1775_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12)) or (not(((icmp_ln71_fu_1667_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln71_fu_1667_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10)) or (not(((icmp_ln60_fu_1477_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln60_fu_1477_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((icmp_ln53_fu_1460_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln53_fu_1460_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((icmp_ln45_fu_1426_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln45_fu_1426_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((icmp_ln35_fu_1353_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln35_fu_1353_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            weight_in_TREADY <= ap_const_logic_1;
        else 
            weight_in_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    weights_hu_0_address1 <= zext_ln144_3_fu_2318_p1(12 - 1 downto 0);

    weights_hu_0_ce1_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state26, icmp_ln140_fu_2224_p2)
    begin
        if ((not(((icmp_ln140_fu_2224_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            weights_hu_0_ce1 <= ap_const_logic_1;
        else 
            weights_hu_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    weights_hu_0_d1 <= weight_in_TDATA;

    weights_hu_0_we1_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state26, icmp_ln140_fu_2224_p2, trunc_ln144_fu_2294_p1)
    begin
        if ((not(((icmp_ln140_fu_2224_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (trunc_ln144_fu_2294_p1 = ap_const_lv2_0) and (icmp_ln140_fu_2224_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            weights_hu_0_we1 <= ap_const_logic_1;
        else 
            weights_hu_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    weights_hu_1_address1 <= zext_ln144_3_fu_2318_p1(12 - 1 downto 0);

    weights_hu_1_ce1_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state26, icmp_ln140_fu_2224_p2)
    begin
        if ((not(((icmp_ln140_fu_2224_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            weights_hu_1_ce1 <= ap_const_logic_1;
        else 
            weights_hu_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    weights_hu_1_d1 <= weight_in_TDATA;

    weights_hu_1_we1_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state26, icmp_ln140_fu_2224_p2, trunc_ln144_fu_2294_p1)
    begin
        if ((not(((icmp_ln140_fu_2224_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (trunc_ln144_fu_2294_p1 = ap_const_lv2_1) and (icmp_ln140_fu_2224_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            weights_hu_1_we1 <= ap_const_logic_1;
        else 
            weights_hu_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    weights_hu_2_address1 <= zext_ln144_3_fu_2318_p1(12 - 1 downto 0);

    weights_hu_2_ce1_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state26, icmp_ln140_fu_2224_p2)
    begin
        if ((not(((icmp_ln140_fu_2224_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            weights_hu_2_ce1 <= ap_const_logic_1;
        else 
            weights_hu_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    weights_hu_2_d1 <= weight_in_TDATA;

    weights_hu_2_we1_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state26, icmp_ln140_fu_2224_p2, trunc_ln144_fu_2294_p1)
    begin
        if ((not(((icmp_ln140_fu_2224_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (trunc_ln144_fu_2294_p1 = ap_const_lv2_2) and (icmp_ln140_fu_2224_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            weights_hu_2_we1 <= ap_const_logic_1;
        else 
            weights_hu_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    weights_hu_3_address1 <= zext_ln144_3_fu_2318_p1(12 - 1 downto 0);

    weights_hu_3_ce1_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state26, icmp_ln140_fu_2224_p2)
    begin
        if ((not(((icmp_ln140_fu_2224_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            weights_hu_3_ce1 <= ap_const_logic_1;
        else 
            weights_hu_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    weights_hu_3_d1 <= weight_in_TDATA;

    weights_hu_3_we1_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state26, icmp_ln140_fu_2224_p2, trunc_ln144_fu_2294_p1)
    begin
        if ((not(((icmp_ln140_fu_2224_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (trunc_ln144_fu_2294_p1 = ap_const_lv2_3) and (icmp_ln140_fu_2224_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            weights_hu_3_we1 <= ap_const_logic_1;
        else 
            weights_hu_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    weights_hw_address1 <= zext_ln153_3_fu_2412_p1(11 - 1 downto 0);

    weights_hw_ce1_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state28, icmp_ln149_fu_2332_p2)
    begin
        if ((not(((icmp_ln149_fu_2332_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            weights_hw_ce1 <= ap_const_logic_1;
        else 
            weights_hw_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    weights_hw_d1 <= weight_in_TDATA;

    weights_hw_we1_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state28, icmp_ln149_fu_2332_p2)
    begin
        if ((not(((icmp_ln149_fu_2332_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln149_fu_2332_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            weights_hw_we1 <= ap_const_logic_1;
        else 
            weights_hw_we1 <= ap_const_logic_0;
        end if; 
    end process;

    weights_ru_0_address1 <= zext_ln92_3_fu_1886_p1(12 - 1 downto 0);

    weights_ru_0_ce1_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state14, icmp_ln88_fu_1792_p2)
    begin
        if ((not(((icmp_ln88_fu_1792_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            weights_ru_0_ce1 <= ap_const_logic_1;
        else 
            weights_ru_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    weights_ru_0_d1 <= weight_in_TDATA;

    weights_ru_0_we1_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state14, icmp_ln88_fu_1792_p2, trunc_ln92_fu_1862_p1)
    begin
        if ((not(((icmp_ln88_fu_1792_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (trunc_ln92_fu_1862_p1 = ap_const_lv2_0) and (icmp_ln88_fu_1792_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            weights_ru_0_we1 <= ap_const_logic_1;
        else 
            weights_ru_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    weights_ru_1_address1 <= zext_ln92_3_fu_1886_p1(12 - 1 downto 0);

    weights_ru_1_ce1_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state14, icmp_ln88_fu_1792_p2)
    begin
        if ((not(((icmp_ln88_fu_1792_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            weights_ru_1_ce1 <= ap_const_logic_1;
        else 
            weights_ru_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    weights_ru_1_d1 <= weight_in_TDATA;

    weights_ru_1_we1_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state14, icmp_ln88_fu_1792_p2, trunc_ln92_fu_1862_p1)
    begin
        if ((not(((icmp_ln88_fu_1792_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (trunc_ln92_fu_1862_p1 = ap_const_lv2_1) and (icmp_ln88_fu_1792_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            weights_ru_1_we1 <= ap_const_logic_1;
        else 
            weights_ru_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    weights_ru_2_address1 <= zext_ln92_3_fu_1886_p1(12 - 1 downto 0);

    weights_ru_2_ce1_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state14, icmp_ln88_fu_1792_p2)
    begin
        if ((not(((icmp_ln88_fu_1792_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            weights_ru_2_ce1 <= ap_const_logic_1;
        else 
            weights_ru_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    weights_ru_2_d1 <= weight_in_TDATA;

    weights_ru_2_we1_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state14, icmp_ln88_fu_1792_p2, trunc_ln92_fu_1862_p1)
    begin
        if ((not(((icmp_ln88_fu_1792_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (trunc_ln92_fu_1862_p1 = ap_const_lv2_2) and (icmp_ln88_fu_1792_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            weights_ru_2_we1 <= ap_const_logic_1;
        else 
            weights_ru_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    weights_ru_3_address1 <= zext_ln92_3_fu_1886_p1(12 - 1 downto 0);

    weights_ru_3_ce1_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state14, icmp_ln88_fu_1792_p2)
    begin
        if ((not(((icmp_ln88_fu_1792_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            weights_ru_3_ce1 <= ap_const_logic_1;
        else 
            weights_ru_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    weights_ru_3_d1 <= weight_in_TDATA;

    weights_ru_3_we1_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state14, icmp_ln88_fu_1792_p2, trunc_ln92_fu_1862_p1)
    begin
        if ((not(((icmp_ln88_fu_1792_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (trunc_ln92_fu_1862_p1 = ap_const_lv2_3) and (icmp_ln88_fu_1792_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            weights_ru_3_we1 <= ap_const_logic_1;
        else 
            weights_ru_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    weights_rw_address1 <= zext_ln101_3_fu_1980_p1(11 - 1 downto 0);

    weights_rw_ce1_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state16, icmp_ln97_fu_1900_p2)
    begin
        if ((not(((icmp_ln97_fu_1900_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            weights_rw_ce1 <= ap_const_logic_1;
        else 
            weights_rw_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    weights_rw_d1 <= weight_in_TDATA;

    weights_rw_we1_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state16, icmp_ln97_fu_1900_p2)
    begin
        if ((not(((icmp_ln97_fu_1900_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln97_fu_1900_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            weights_rw_we1 <= ap_const_logic_1;
        else 
            weights_rw_we1 <= ap_const_logic_0;
        end if; 
    end process;

    weights_zu_0_address1 <= zext_ln118_3_fu_2102_p1(12 - 1 downto 0);

    weights_zu_0_ce1_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state20, icmp_ln114_fu_2008_p2)
    begin
        if ((not(((icmp_ln114_fu_2008_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            weights_zu_0_ce1 <= ap_const_logic_1;
        else 
            weights_zu_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    weights_zu_0_d1 <= weight_in_TDATA;

    weights_zu_0_we1_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state20, icmp_ln114_fu_2008_p2, trunc_ln118_fu_2078_p1)
    begin
        if ((not(((icmp_ln114_fu_2008_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (trunc_ln118_fu_2078_p1 = ap_const_lv2_0) and (icmp_ln114_fu_2008_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            weights_zu_0_we1 <= ap_const_logic_1;
        else 
            weights_zu_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    weights_zu_1_address1 <= zext_ln118_3_fu_2102_p1(12 - 1 downto 0);

    weights_zu_1_ce1_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state20, icmp_ln114_fu_2008_p2)
    begin
        if ((not(((icmp_ln114_fu_2008_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            weights_zu_1_ce1 <= ap_const_logic_1;
        else 
            weights_zu_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    weights_zu_1_d1 <= weight_in_TDATA;

    weights_zu_1_we1_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state20, icmp_ln114_fu_2008_p2, trunc_ln118_fu_2078_p1)
    begin
        if ((not(((icmp_ln114_fu_2008_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (trunc_ln118_fu_2078_p1 = ap_const_lv2_1) and (icmp_ln114_fu_2008_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            weights_zu_1_we1 <= ap_const_logic_1;
        else 
            weights_zu_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    weights_zu_2_address1 <= zext_ln118_3_fu_2102_p1(12 - 1 downto 0);

    weights_zu_2_ce1_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state20, icmp_ln114_fu_2008_p2)
    begin
        if ((not(((icmp_ln114_fu_2008_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            weights_zu_2_ce1 <= ap_const_logic_1;
        else 
            weights_zu_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    weights_zu_2_d1 <= weight_in_TDATA;

    weights_zu_2_we1_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state20, icmp_ln114_fu_2008_p2, trunc_ln118_fu_2078_p1)
    begin
        if ((not(((icmp_ln114_fu_2008_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (trunc_ln118_fu_2078_p1 = ap_const_lv2_2) and (icmp_ln114_fu_2008_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            weights_zu_2_we1 <= ap_const_logic_1;
        else 
            weights_zu_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    weights_zu_3_address1 <= zext_ln118_3_fu_2102_p1(12 - 1 downto 0);

    weights_zu_3_ce1_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state20, icmp_ln114_fu_2008_p2)
    begin
        if ((not(((icmp_ln114_fu_2008_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            weights_zu_3_ce1 <= ap_const_logic_1;
        else 
            weights_zu_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    weights_zu_3_d1 <= weight_in_TDATA;

    weights_zu_3_we1_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state20, icmp_ln114_fu_2008_p2, trunc_ln118_fu_2078_p1)
    begin
        if ((not(((icmp_ln114_fu_2008_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (trunc_ln118_fu_2078_p1 = ap_const_lv2_3) and (icmp_ln114_fu_2008_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            weights_zu_3_we1 <= ap_const_logic_1;
        else 
            weights_zu_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    weights_zw_address1 <= zext_ln127_3_fu_2196_p1(11 - 1 downto 0);

    weights_zw_ce1_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state22, icmp_ln123_fu_2116_p2)
    begin
        if ((not(((icmp_ln123_fu_2116_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            weights_zw_ce1 <= ap_const_logic_1;
        else 
            weights_zw_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    weights_zw_d1 <= weight_in_TDATA;

    weights_zw_we1_assign_proc : process(weight_in_TVALID, ap_CS_fsm_state22, icmp_ln123_fu_2116_p2)
    begin
        if ((not(((icmp_ln123_fu_2116_p2 = ap_const_lv1_0) and (weight_in_TVALID = ap_const_logic_0))) and (icmp_ln123_fu_2116_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            weights_zw_we1 <= ap_const_logic_1;
        else 
            weights_zw_we1 <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln65_fu_1529_p2 <= (icmp_ln61_fu_1495_p2 xor ap_const_lv1_1);
    zext_ln101_1_fu_1960_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_27_fu_1952_p3),12));
    zext_ln101_2_fu_1970_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln101_fu_1924_p3),12));
    zext_ln101_3_fu_1980_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln101_1_fu_1974_p2),64));
    zext_ln101_fu_1948_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_26_fu_1940_p3),12));
    zext_ln109_fu_2003_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i13_0_reg_1059),64));
    zext_ln118_1_fu_2068_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_29_fu_2060_p3),13));
    zext_ln118_2_fu_2092_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_40_fu_2082_p4),13));
    zext_ln118_3_fu_2102_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln118_1_fu_2096_p2),64));
    zext_ln118_fu_2056_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_28_fu_2048_p3),13));
    zext_ln127_1_fu_2176_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_31_fu_2168_p3),12));
    zext_ln127_2_fu_2186_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln127_fu_2140_p3),12));
    zext_ln127_3_fu_2196_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln127_1_fu_2190_p2),64));
    zext_ln127_fu_2164_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_30_fu_2156_p3),12));
    zext_ln135_fu_2219_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i18_0_reg_1136),64));
    zext_ln144_1_fu_2284_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_33_fu_2276_p3),13));
    zext_ln144_2_fu_2308_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_41_fu_2298_p4),13));
    zext_ln144_3_fu_2318_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln144_1_fu_2312_p2),64));
    zext_ln144_fu_2272_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_32_fu_2264_p3),13));
    zext_ln153_1_fu_2392_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_35_fu_2384_p3),12));
    zext_ln153_2_fu_2402_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln153_fu_2356_p3),12));
    zext_ln153_3_fu_2412_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln153_1_fu_2406_p2),64));
    zext_ln153_fu_2380_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_34_fu_2372_p3),12));
    zext_ln161_fu_2435_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i23_0_reg_1213),64));
    zext_ln167_fu_2488_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_36_fu_2480_p3),13));
    zext_ln170_1_fu_2502_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln170_fu_2496_p2),64));
    zext_ln170_fu_2492_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln170_fu_2464_p3),13));
    zext_ln179_fu_2525_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i26_0_reg_1257),64));
    zext_ln188_1_fu_2596_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln188_fu_2554_p3),11));
    zext_ln188_fu_2586_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_38_fu_2578_p3),11));
    zext_ln196_fu_2629_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i29_0_reg_1301),64));
    zext_ln36_fu_1401_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_18_fu_1393_p3),5));
    zext_ln39_1_fu_1415_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln39_fu_1409_p2),64));
    zext_ln39_fu_1405_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln39_fu_1377_p3),5));
    zext_ln48_fu_1452_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_fu_1442_p4),64));
    zext_ln56_fu_1472_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i3_0_reg_883),64));
    zext_ln65_1_fu_1575_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln65_3_fu_1567_p3),5));
    zext_ln65_2_fu_1605_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_20_fu_1597_p3),8));
    zext_ln65_3_fu_1629_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_21_fu_1619_p4),8));
    zext_ln65_4_fu_1639_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln65_1_fu_1633_p2),64));
    zext_ln65_fu_1525_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_19_fu_1517_p3),5));
    zext_ln75_1_fu_1741_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_23_fu_1733_p3),11));
    zext_ln75_1_mid2_v_fu_1711_p4 <= select_ln75_1_fu_1699_p3(5 downto 2);
    zext_ln75_2_fu_1751_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln75_fu_1691_p3),11));
    zext_ln75_fu_1729_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_22_fu_1721_p3),11));
    zext_ln83_fu_1787_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i8_0_reg_982),64));
    zext_ln92_1_fu_1852_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_25_fu_1844_p3),13));
    zext_ln92_2_fu_1876_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_39_fu_1866_p4),13));
    zext_ln92_3_fu_1886_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln92_1_fu_1880_p2),64));
    zext_ln92_fu_1840_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_24_fu_1832_p3),13));
end behav;
